SUMMARY="A readline/libedit replacement with syntax highlighting, and BSD licensed"
DESCRIPTION="A small, portable GNU readline replacement for Linux, Windows and MacOS which is \
capable of handling UTF-8 characters. Unlike GNU readline, which is GPL, this library uses a BSD \
license and can be used in any kind of program.

Origin

This replxx implementation is based on the work by ArangoDB Team and Salvatore Sanfilippo and \
10gen Inc. The goal is to create a zero-config, BSD licensed, readline replacement usable in \
Apache2 or BSD licensed programs.

Features

* single-line and multi-line editing mode with the usual key bindings implemented
* history handling
* completion
* syntax highlighting
* hints
* BSD license source code
* Only uses a subset of VT100 escapes (ANSI.SYS compatible)
* UTF8 aware
* support for Linux, MacOS and Windows. (Haiku too!)"
HOMEPAGE="https://github.com/AmokHuginnsson/replxx"
COPYRIGHT="2017-2018, Marcin Konarski
	2010, Salvatore Sanfilippo
	2010, Pieter Noordhuis
	"
LICENSE="BSD (2-clause)"
REVISION="1"
srcGitRev="1f149bfe20bf6e49c1afd4154eaf0032c8c2fda2"
SOURCE_URI="https://github.com/AmokHuginnsson/replxx/archive/$srcGitRev.tar.gz"
SOURCE_DIR="replxx-$srcGitRev"
CHECKSUM_SHA256="ee6d6c92efd060717c884f10293f32692bec17a2956d10cfcedfee5618c9a5ab"
#SOURCE_URI="https://github.com/AmokHuginnsson/replxx/archive/refs/tags/release-$portVersion.tar.gz"
#SOURCE_DIR="replxx-release-$portVersion"
#CHECKSUM_SHA256="a22988b2184e1d256e2d111b5749e16ffb1accbf757c7b248226d73c426844c4"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="0.0.4"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	replxx$secondaryArchSuffix = $portVersion
	lib:libreplxx$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	replxx${secondaryArchSuffix}_devel = $portVersion
	devel:libreplxx$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	replxx$secondaryArchSuffix == $portVersion base
	"

PROVIDES_examples="
	replxx${secondaryArchSuffix}_examples = $portVersion
	cmd:replxx_example_c_api
	cmd:replxx_example_cxx_api
	"
REQUIRES_examples="
	haiku$secondaryArchSuffix
	replxx$secondaryArchSuffix == $portVersion base
	"
SUMMARY_examples="Small example programs showing replxx line-editing features"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

# Disabled as:
# 1. tests only run if ./build/debug/{replxx-example-c-api,replxx-example-cxx-api} are present.
#    (not there if using -DCMAKE_BUILD_TYPE=Release).
# 2. I don't want to package pexpect just for this.
# 3. pexpect is broken on Haiku, so all tests fail anyway.
#TEST_REQUIRES="
#	cmd:python3.10
#	pexpect_python310
#	"

BUILD()
{
	mkdir -p build && cd build

	cmake $cmakeDirArgs .. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_SHARED_LIBS=YES

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	# remove static library
	rm -f $libDir/libreplxx.a

	prepareInstalledDevelLib libreplxx
	fixPkgconfig

	# Examples
	mkdir -p $binDir
	cp replxx-example-c* $binDir
	packageEntries examples \
		$binDir

	# devel package
	packageEntries devel \
		$developDir
}

#TEST()
#{
#	python3 tests.py
#}
