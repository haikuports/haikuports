SUMMARY="Userspace interface to kernel Direct Rendering Module services"
DESCRIPTION="a userspace library for accessing the Direct Rendering \
Manager (DRM). DRM is a framework to manage *Graphics Processing Units* \
(GPUs) designed to support the needs of complex graphics \
devices, usually containing programmable pipelines well suited \
to 3D graphics acceleration. Furthermore, DRM is responsible for \
memory management, interrupt handling and DMA to provide a uniform \
interface to applications.

libdrm is a low-level library, typically used by graphics drivers such as \
the Mesa drivers, the X drivers, libva and similar projects."
HOMEPAGE="https://dri.freedesktop.org"
COPYRIGHT="
		1998-2003 VIA Technologies, Inc.
		1999 Precision Insight
		2000 VA Linux Systems, Inc
		2000 Gareth Hughes
		2001-2003 S3 Graphics, Inc.
		2002 Frank C. Earl
		2002-2003 Leif Delgass
		2002, 2003, 2006, 2007-2008 Tungsten Graphics, Inc.
		2004  Felix Kuehling
		2005 Eric Anholt
		2007 Dave Airlie
		2007 Jakob Bornecrantz
		2007-2008, 2011 Intel Corporation
		2009-2015 VMware, Inc.
		2008, 2013 Red Hat
		2014-2015 Broadcom
		2014 Advanced Micro Devices, Inc.
		"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://dri.freedesktop.org/libdrm/libdrm-${portVersion}.tar.xz"
CHECKSUM_SHA256="629352e08c1fe84862ca046598d8a08ce14d26ab25ee1f4704f993d074cb7f26"
SOURCE_DIR="libdrm-${portVersion}"
PATCHES="libdrm-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion=2.4.0
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	libdrm$secondaryArchSuffix = $portVersion
	lib:libdrm$secondaryArchSuffix = $libVersionCompat
	lib:libdrm_amdgpu$secondaryArchSuffix = 1.0.0 
	lib:libdrm_intel$secondaryArchSuffix = 1.0.0
	lib:libdrm_nouveau$secondaryArchSuffix = 2.0.0
	lib:libdrm_radeon$secondaryArchSuffix = 1.0.1
	cmd:amdgpu_stress$secondaryArchSuffix
	cmd:drmdevice$secondaryArchSuffix
	cmd:kms_steal_crtc$secondaryArchSuffix
	cmd:kms_universal_planes$secondaryArchSuffix
	cmd:modeprint$secondaryArchSuffix
	cmd:modetest$secondaryArchSuffix
	cmd:proptest$secondaryArchSuffix
	cmd:vbltest$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	libdrm${secondaryArchSuffix}_devel = $portVersion
	devel:libdrm$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	libdrm$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	python3$secondaryArchSuffix
	cmd:ninja
	cmd:meson
	cmd:gcc$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage libdrm$secondaryArchSuffix \
	"$libDir"/libdrm.so.$libVersion 

BUILD()
{
	if [ -n "$secondaryArchSuffix" ]; then
		export HAIKU_SECONDARY_ARCH="$effectiveTargetArchitecture"
	fi

	mkdir -p build
	meson build -Dnouveau=false -Dintel=false \
		-Dinstall-test-programs=true \
		--buildtype=debugoptimized \
		--prefix=$prefix \
			--bindir=$binDir \
       		--libdir=$libDir \
		--includedir=$includeDir
	ninja -C build $jobArgs
}

INSTALL()
{
	ninja -C build install

	# Do a little cleanup
	rm -rf $prefix/share

	# Set some nice version info
#	appVersion=${portVersion//\./ }
#	setversion "$libDir/libGL.so" -app $appVersion -long "Haiku OpenGL kit"

	prepareInstalledDevelLibs \
		libdrm
	fixPkgconfig

	# devel package
	packageEntries devel \
		$developDir

}

TEST()
{
	ninja -C build test
}
