SUMMARY="Small, Free and Fast Subset of OpenGL"
DESCRIPTION="TinyGL is intended to be a very small implementation of a subset \
of OpenGL * for embedded systems or games. It is a software only \
implementation. Only the main OpenGL calls are implemented.

The main strength of TinyGL is that it is fast and simple because it has not \
to be exactly compatible with OpenGL. In particular, the texture mapping and \
the geometrical transformations are very fast. TinyGL is a lot faster than \
Mesa or the software Solaris OpenWin OpenGL implementation for the VReng \
Virtual Reality engine for example.

The main features of TinyGL are:
* Header compatible with OpenGL (the headers are adapted from the very good \
Mesa by Brian Paul et al.)
* Zlib-like licence for easy integration in commercial designs (read the \
LICENCE file).
* Subset of GLX for easy testing with X Window.
* GLX like API (NGLX) to use it with NanoX in Microwindows.
* Subset of BGLView under BeOS (thank to Peder Blekken).
* OpenGL like lightening.
* Limited support of OpenGL 1.1 arrays.
* Complete OpenGL selection mode handling for object picking.
* 16 bit Z buffer. 16 bit RGB display. High speed dithering to paletted 8 \
bits if needed. High speed convertion to 24 or 32 bits.
* Fast Gouraud shadding optimized for 16 bit RGB.
* Fast texture mapping capabilities, with perspective correction and texture \
objects.
* 32 bit float only arithmetic.
* Very small: compiled code size of about 40 kB on x86.
* C sources for GCC on 32/64 bit architectures.

It has been tested succesfully on x86-Linux and sparc-Solaris."
HOMEPAGE="https://bellard.org/TinyGL/"
COPYRIGHT="1997-2002 Fabrice Bellard"
LICENSE="Zlib"
REVISION="2"
SOURCE_URI="https://bellard.org/TinyGL/TinyGL-0.4.tar.gz"
CHECKSUM_SHA256="8856da9f71d7c838da6c6746f7e8d93b65e0ca21f1ad24f834b46680c5f85de4"
SOURCE_DIR="TinyGL"
PATCHES="tinygl-$portVersion.patchset"

ARCHITECTURES="x86_gcc2"
SECONDARY_ARCHITECTURES=""

PROVIDES="
	tinygl = $portVersion
	devel:libglview = $portVersion
	devel:libtinygl = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc
	cmd:make
	"

BUILD()
{
	make $jobArgs
}

INSTALL()
{
	mkdir -p $developLibDir
	mkdir -p $includeDir/TinyGL

	cp lib/*.a $developLibDir
	cp -r include/* $includeDir/TinyGL
}
