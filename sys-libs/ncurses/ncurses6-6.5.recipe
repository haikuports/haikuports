SUMMARY="New curses library"
DESCRIPTION="The Ncurses (new curses) library is a free software emulation of \
curses in System V Release 4.0, and more. It uses Terminfo format, supports \
pads and color and multiple highlights and forms characters and function-key \
mapping, and has all the other SYSV-curses enhancements over BSD Curses.

The ncurses code was developed under GNU/Linux. It has been in use for some \
time with OpenBSD as the system curses library, and on FreeBSD and NetBSD as \
an external package. It should port easily to any ANSI/POSIX-conforming UNIX. \
It has even been ported to OS/2 Warp!

The distribution includes the library and support utilities, including a \
terminfo compiler tic, a decompiler infocmp, clear, tput, tset, and a \
termcap conversion tool captoinfo. Full manual pages are provided for the \
library and tools."
HOMEPAGE="https://invisible-island.net/ncurses/"
COPYRIGHT="2018-2023,2024 Thomas E. Dickey
	1998-2017,2018 Free Software Foundation, Inc."
LICENSE="MIT"
REVISION="2"
srcVersion=${portVersion//./_}
SOURCE_URI="https://github.com/ThomasDickey/ncurses-snapshots/archive/refs/tags/v$srcVersion.tar.gz"
CHECKSUM_SHA256="1600526b279b0acf42432fe31f6dfa3824a4da4262168bf8b3637660ff8c07c7"
SOURCE_DIR="ncurses-snapshots-$srcVersion"
PATCHES="ncurses-6.5.patchset"

ARCHITECTURES="all"
SECONDARY_ARCHITECTURES="x86"

libVersion="6.5.0"
libVersionCompat="$libVersion compat >= 6"
portVersionCompat="$portVersion compat >= 6"

PROVIDES="
	ncurses6$secondaryArchSuffix = $portVersion
	lib:libform$secondaryArchSuffix = $libVersionCompat
	lib:libformw$secondaryArchSuffix = $libVersionCompat
	lib:libmenu$secondaryArchSuffix = $libVersionCompat
	lib:libmenuw$secondaryArchSuffix = $libVersionCompat
	lib:libncurses$secondaryArchSuffix = $libVersionCompat
	lib:libncursesw$secondaryArchSuffix = $libVersionCompat
	lib:libncurses++$secondaryArchSuffix = $libVersionCompat
	lib:libncurses++w$secondaryArchSuffix = $libVersionCompat
	lib:libpanel$secondaryArchSuffix = $libVersionCompat
	lib:libpanelw$secondaryArchSuffix = $libVersionCompat
	"
if [ -z "$secondaryArchSuffix" ]; then
	PROVIDES="$PROVIDES
		cmd:captoinfo = $portVersionCompat
		cmd:clear = $portVersionCompat
		cmd:infocmp = $portVersionCompat
		cmd:infotocap = $portVersionCompat
		cmd:reset = $portVersionCompat
		cmd:tabs = $portVersionCompat
		cmd:tic = $portVersionCompat
		cmd:toe = $portVersionCompat
		cmd:tput = $portVersionCompat
		cmd:tset = $portVersionCompat
		"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	ncurses6${secondaryArchSuffix}_devel = $portVersion
	cmd:ncursesw6_config${secondaryArchSuffix} = $portVersion
	devel:libform$secondaryArchSuffix = $libVersionCompat
	devel:libformw$secondaryArchSuffix = $libVersionCompat
	devel:libmenu$secondaryArchSuffix = $libVersionCompat
	devel:libmenuw$secondaryArchSuffix = $libVersionCompat
	devel:libncurses$secondaryArchSuffix = $libVersionCompat
	devel:libncursesw$secondaryArchSuffix = $libVersionCompat
	devel:libncurses++$secondaryArchSuffix = $libVersionCompat
	devel:libncurses++w$secondaryArchSuffix = $libVersionCompat
	devel:libpanel$secondaryArchSuffix = $libVersionCompat
	devel:libpanelw$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	ncurses6$secondaryArchSuffix == $portVersion base
	"
CONFLICTS_devel="
	ncurses${secondaryArchSuffix}_devel
	"

BUILD_REQUIRES="
	"
BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:gcc$secondaryArchSuffix
	cmd:grep
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:sed
	"

PATCH()
{
	if [ "$effectiveTargetArchitecture" = x86_gcc2 ]; then
		sed -i 's/=stdc++/=stdc++.r4/' aclocal.m4 configure
	fi
}

BUILD()
{
	# For the secondary architecture we don't want the programs nor the
	# terminfo DB. The main package will depend on the primary package which
	# provides all this.
	local configureArgs
	if [ -n "$secondaryArchSuffix" ]; then
		configureArgs="--without-progs"
	fi

	runConfigure \
		--omit-dirs "dataRootDir docDir" ./configure \
		--disable-relink \
		--disable-root-access \
		--disable-root-environ \
		--disable-setuid-environ \
		--disable-static \
		--enable-hard-tabs \
		--enable-pc-files \
		--enable-symlinks \
		--enable-termcap \
		--with-libtool \
		--without-ada \
		--without-tests \
		--with-pkg-config-libdir=$developLibDir/pkgconfig \
		$configureArgs
	make $jobArgs
}

INSTALL()
{
	make install

	# remove libtool files
	rm $libDir/lib*.la

	# prepare develop/lib
	prepareInstalledDevelLibs \
		libformw libmenuw libncursesw libncurses++w libpanelw
	fixPkgconfig

	# fix ncursesw6-config
	fixDevelopLibDirReferences $binDir/ncursesw6-config

	cd $developLibDir
	for lib in form menu ncurses ncurses++ panel; do
		ln -sn lib${lib}w.so lib${lib}.so
		ln -sn ${lib}w.pc pkgconfig/${lib}.pc
	done
	cd -; cd $libDir
	for lib in form menu ncurses ncurses++ panel; do
		ln -sn lib${lib}w.so.6 lib${lib}.so.6
	done
	cd -

	# devel package
	packageEntries devel \
		$binDir/ncursesw6-config \
		$developDir \
		$manDir/man3

	# For the secondary architecture package clean up stuff we don't need, since
	# we make it depend on the primary architecture package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir
		rm -rf $documentationDir
	fi
}
