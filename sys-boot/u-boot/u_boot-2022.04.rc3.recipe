SUMMARY="Boot loader for embedded boards"
DESCRIPTION="boot loader for embedded boards based on PowerPC, ARM, MIPS and several other \
processors, which can be installed in a boot ROM and used to \
initialize and test the hardware or to download and run application code.

The development of U-Boot is closely related to Linux: some parts of \
the source code originate in the Linux source tree, we have some \
header files in common, and special provision has been made to \
support booting of Linux images.

Some attention has been paid to make this software easily \
configurable and extendable. For instance, all monitor commands are \
implemented with the same call interface, so that it's very easy to \
add new commands. Also, instead of permanently adding rarely used \
code (for instance hardware test utilities) to the monitor, you can \
load and run it dynamically."
HOMEPAGE="https://www.denx.de/wiki/U-Boot"
COPYRIGHT="2000-2022 Wolfgang Denk, DENX Software Engineering"
LICENSE="GNU GPL v2"
SOURCE_URI="https://ftp.denx.de/pub/u-boot/u-boot-2022.04-rc3.tar.bz2"
SOURCE_DIR="u-boot-2022.04-rc3"
CHECKSUM_SHA256="4731da5228dc35827a9d9ebc8f541b01aa6af36c27be24e10aff06e596bee2de"
REVISION="1"

ARCHITECTURES="any"

PROVIDES="
	u_boot$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	"

# The package is "any" because the result is only binaries. However, on gcc2 systems, we still need
# to build it using a modern compiler and set of libraries.
if [ "$targetArchitecture" = x86_gcc2 ]; then
	hostArchSuffix="_x86"
else
	hostArchSuffix="$secondaryArchSuffix"
fi

BUILD_REQUIRES="
	haiku${hostArchSuffix}_devel
	devel:libssl$hostArchSuffix
	setuptools_python3
	"
BUILD_PREREQUIRES="
	cmd:arm_none_eabi_gcc
	cmd:awk
	cmd:bison
	cmd:cmp
	cmd:find
	cmd:flex
	cmd:gcc$hostArchSuffix
	cmd:make
	cmd:python3
	cmd:swig
	cmd:xargs
	"

BUILD()
{
	export PATH=/bin/x86:$PATH
	export HOME=/tmp
	# TODO figure out how to add more boards. Are out-of-tree builds possible?
	CROSS_COMPILE=arm-none-eabi- make mk802ii_defconfig
	CROSS_COMPILE=arm-none-eabi- make $jobArgs
}

INSTALL()
{
	mkdir -p $dataDir/platform_loaders
	cp u-boot-sunxi-with-spl.bin $dataDir/platform_loaders/
}
