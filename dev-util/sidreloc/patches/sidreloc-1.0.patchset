From 36d432f70e6f9689ef8b8711ae6452f51626c918 Mon Sep 17 00:00:00 2001
From: Gabriele Baldassarre <gabriele@gabrielebaldassarre.com>
Date: Tue, 26 May 2020 08:17:32 +0000
Subject: Added missing AT headers and undefn in Haiku


diff --git a/reloc.h b/reloc.h
index bc18e52..ff9930c 100644
--- a/reloc.h
+++ b/reloc.h
@@ -1,10 +1,16 @@
 #ifndef __RELOC_H
 #define __RELOC_H
 
+#ifdef HAVE_CONFIG_H
+# include <config.h>
+#endif
+
 #include <stdint.h>
 #include <assert.h>
 
+#ifndef HAVE_CONFIG_H
 #define RELEASE "1.0"
+#endif
 
 /* Represent bytes as 8-bit values tagged with meta-information. */
 /* List nodes (struct source) are arena-allocated; no need to track the references. */
diff --git a/sidreloc.c b/sidreloc.c
index 7714af5..b3da872 100644
--- a/sidreloc.c
+++ b/sidreloc.c
@@ -20,15 +20,22 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
+#include "reloc.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <stdint.h>
 #include <string.h>
-#include <err.h>
 #include <getopt.h>
 #include <math.h>
 
-#include "reloc.h"
+#ifdef HAVE_ERR_H
+#include <err.h>
+#endif
+
+#ifndef HAVE_ERR
+#include <errno.h>
+#endif
 
 struct sidheader {
 	uint8_t			rsid;
@@ -817,3 +824,26 @@ int main(int argc, char **argv) {
 
 	return RET_SUCCESS | exitbits;
 }
+
+#ifndef HAVE_ERRX
+/*  Some posix has not this standard, function (for ex. Haiku)
+	so, we define a roughly equivalente */
+static void errx(int eval, const char *fmt, ...){
+	fprintf(stderr,"%s: ", "sidreloc");
+	fprintf(stderr,fmt, ...);
+	fprintf(stderr,"\n");
+	exit(eval);
+}
+#endif
+
+#ifndef HAVE_ERR
+/*  Some posix has not this standard, function (for ex. Haiku)
+	so, we define a roughly equivalente */
+static void err(int eval, const char *fmt, ...){
+	fprintf(stderr, " %s: ", "sidreloc");
+	fprintf(stderr, fmt, ...);
+	fprintf(stderr, ": %s\n", strerror(errno));
+	exit(eval);
+}
+#endif
+
diff --git a/solver.c b/solver.c
index 7b9fcb6..5323add 100644
--- a/solver.c
+++ b/solver.c
@@ -20,15 +20,19 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
+#include "reloc.h"
+
 #include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <stdint.h>
 #include <string.h>
+
+#ifdef HAVE_ERR_H
 #include <err.h>
-#include <getopt.h>
+#endif
 
-#include "reloc.h"
+#include <getopt.h>
 
 #define HASHSIZE 8192
 
-- 
2.26.0


From 849e109c93bbe773fe12e2cd46a83e3c2682b5c2 Mon Sep 17 00:00:00 2001
From: Gabriele Baldassarre <gabriele@gabrielebaldassarre.com>
Date: Tue, 26 May 2020 09:00:53 +0000
Subject: Defined variadic equivalent functions to err*


diff --git a/sidreloc.c b/sidreloc.c
index b3da872..0763d63 100644
--- a/sidreloc.c
+++ b/sidreloc.c
@@ -34,6 +34,7 @@
 #endif
 
 #ifndef HAVE_ERR
+#include <stdarg.h>
 #include <errno.h>
 #endif
 
@@ -80,6 +81,34 @@ static int nmi_reported;
 
 static struct core oldcore, newcore;
 
+#ifndef HAVE_ERRX
+/*  Some posix haven't this error function (for ex. Haiku)
+	so, we define a rough equivalent */
+static void errx(int eval, const char *fmt, ...){
+	va_list arglist;
+   	va_start(arglist, fmt);
+	fprintf(stderr,"%s: ", "sidreloc");
+	vfprintf(stderr,fmt, arglist);
+	fprintf(stderr,"\n");
+	va_end(arglist);
+	exit(eval);
+}
+#endif
+
+#ifndef HAVE_ERR
+/*  Some posix haven't this error function (for ex. Haiku)
+	so, we define a rough equivalent */
+static void err(int eval, const char *fmt, ...){
+	va_list arglist;
+   	va_start(arglist, fmt);
+   	fprintf(stderr, " %s: ", "sidreloc");
+	vfprintf(stderr, fmt, arglist);
+	fprintf(stderr, ": %s\n", strerror(errno));
+   	va_end(arglist);
+	exit(eval);
+}
+#endif
+
 static int readheader(struct sidheader *head, uint8_t *data, int filesize) {
 	if(filesize <= 0x80) return 1;
 	if(data[0] == 'P') {
@@ -825,25 +854,3 @@ int main(int argc, char **argv) {
 	return RET_SUCCESS | exitbits;
 }
 
-#ifndef HAVE_ERRX
-/*  Some posix has not this standard, function (for ex. Haiku)
-	so, we define a roughly equivalente */
-static void errx(int eval, const char *fmt, ...){
-	fprintf(stderr,"%s: ", "sidreloc");
-	fprintf(stderr,fmt, ...);
-	fprintf(stderr,"\n");
-	exit(eval);
-}
-#endif
-
-#ifndef HAVE_ERR
-/*  Some posix has not this standard, function (for ex. Haiku)
-	so, we define a roughly equivalente */
-static void err(int eval, const char *fmt, ...){
-	fprintf(stderr, " %s: ", "sidreloc");
-	fprintf(stderr, fmt, ...);
-	fprintf(stderr, ": %s\n", strerror(errno));
-	exit(eval);
-}
-#endif
-
-- 
2.26.0

