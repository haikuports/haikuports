SUMMARY="Generate documentation from C sources"
DESCRIPTION="GTK-Doc is a project which was started to generate API \
documentation from comments added to C code. It is typically used to \
document the public API of GTK+ and GNOME libraries, but it can also \
be used to document application code."
HOMEPAGE="http://www.gtk.org/gtk-doc/"
COPYRIGHT="2002-2010 Damon Chaplin and Owen Taylor"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://download.gnome.org/sources/gtk-doc/$portVersion/gtk-doc-$portVersion.tar.xz"
CHECKSUM_SHA256="1ea46ed400e6501f975acaafea31479cea8f32f911dca4dff036f59e6464fd42"
SOURCE_DIR="gtk-doc-$portVersion"
PATCHES="gtk_doc-$portVersion.patchset"

ARCHITECTURES="x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	gtk_doc$secondaryArchSuffix = $portVersion
	cmd:gtkdoc_check$secondaryArchSuffix
	cmd:gtkdoc_depscan$secondaryArchSuffix
	cmd:gtkdoc_fixxref$secondaryArchSuffix
	cmd:gtkdoc_mkdb$secondaryArchSuffix
	cmd:gtkdoc_mkhtml$secondaryArchSuffix
	cmd:gtkdoc_mkman$secondaryArchSuffix
	cmd:gtkdoc_mkpdf$secondaryArchSuffix
	cmd:gtkdoc_mktmpl$secondaryArchSuffix
	cmd:gtkdoc_rebase$secondaryArchSuffix
	cmd:gtkdoc_scan$secondaryArchSuffix
	cmd:gtkdoc_scangobj$secondaryArchSuffix
	cmd:gtkdoc_scanobj$secondaryArchSuffix
	cmd:gtkdocize$secondaryArchSuffix
"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	"

BUILD_REQUIRES="
	docbook_xml_dtd
	docbook_xsl_stylesheets
	devel:libglib_2.0$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
"

BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:autoconf
	cmd:automake
	cmd:awk
	cmd:gcc$secondaryArchSuffix
	cmd:itstool
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:perl
	cmd:pkg_config$secondaryArchSuffix
	cmd:python
	cmd:vim
	cmd:xsltproc$secondaryArchSuffix
"

BUILD()
{
	# Generate an XML catalog that includes both the Docbook-XML and Docbook-XSL
	# ones. Linux distros populate a global catalog file using post-install
	# scripts in the docbook packages, but we don't have that yet.
	echo "<!DOCTYPE catalog
	PUBLIC \"-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN\"
	\"http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd\">
	<catalog xmlns=\"urn:oasis:names:tc:entity:xmlns:xml:catalog\"
		prefer=\"public\">
	" > xmlcat

	for i in /system/data/xml/catalog/*
	do
		echo "	<nextCatalog catalog=\"file://$i\"/>" >> xmlcat
	done

	echo "</catalog>" >> xmlcat

	runConfigure ./configure --with-highlight=auto --with-xml-catalog=`pwd`/xmlcat --libdir=$developLibDir
	make $jobArgs
}

INSTALL()
{
	make install
}

TEST()
{
	make check
}
