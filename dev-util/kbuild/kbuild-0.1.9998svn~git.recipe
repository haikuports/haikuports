SUMMARY="A makefile framework for writing simple makefiles for complex tasks"
DESCRIPTION="The goals of the kBuild framework:

Similar behavior cross all supported platforms.
Flexibility, don't create unnecessary restrictions preventing ad-hoc solutions.
Makefile can very simple to write and maintain.
There are four concepts being tried out in the current kBuild incaration:

One configuration file for a subtree automatically included.
Target configuration templates as the primary mechanism for makefile \n
simplification.
Tools and SDKs for helping out the templates with flexibility.
Non-recursive makefile method by using sub-makefiles."
HOMEPAGE="https://trac.netlabs.org/kbuild/"
COPYRIGHT="kBuild developers"
LICENSE="GNU LGPL v3"
REVISION="1"
COMMIT="96a1801b3d446bfc80aab1ed1cb9b704d5d3dfbb"
SOURCE_URI="git+https://anonscm.debian.org/git/pkg-virtualbox/kbuild.git#$COMMIT"

ARCHITECTURES="?x86_gcc2 ?x86 x86_64"
SECONDARY_ARCHITECTURES="?x86"

PROVIDES="
	kbuild$secondaryArchSuffix = $portVersion
	cmd:kDepIDB = $portVersion
	cmd:kDepPre = $portVersion
	cmd:kDepObj = $portVersion
	cmd:kmk = $portVersion
	cmd:kmk_append = $portVersion
	cmd:kmk_ash = $portVersion
	cmd:kmk_cat = $portVersion
	cmd:kmk_chmod = $portVersion
	cmd:kmk_cmp = $portVersion
	cmd:kmk_cp = $portVersion
	cmd:kmk_echo = $portVersion
	cmd:kmk_expr = $portVersion
	cmd:kmk_gmake = $portVersion
	cmd:kmk_install = $portVersion
	cmd:kmk_ln = $portVersion
	cmd:kmk_md5sum = $portVersion
	cmd:kmk_mkdir = $portVersion
	cmd:kmk_mv = $portVersion
	cmd:kmk_printf = $portVersion
	cmd:kmk_redirect = $portVersion
	cmd:kmk_rm = $portVersion
	cmd:kmk_rmdir = $portVersion
	cmd:kmk_sed = $portVersion
	cmd:kmk_sleep = $portVersion
	cmd:kmk_test = $portVersion
	cmd:kmk_time = $portVersion
	cmd:kObjCache = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autopoint
	cmd:autoreconf
	cmd:find
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:makeinfo
	cmd:tar
	cmd:yacc
	"

archpath=x86
if [ "$targetArchitecture" = x86_64 ]; then
	archpath=amd64
fi


BUILD()
{
	kBuild/env.sh --full make $jobArgs -f bootstrap.gmk
}

INSTALL()
{
	mkdir -p $binDir $dataDir
	cp -R kBuild/bin/haiku.${archpath}/* $binDir
	cp -R kBuild/{tools,units,*.kmk} $dataDir
}
