SUMMARY="The GNU debugger"
DESCRIPTION="GDB is the GNU debugger. It allows you to see what is going on \
'inside' another program while it executes -- or what another program was \
doing at the moment it crashed.

GDB can do four main kinds of things (plus other things in support of \
these) to help you catch bugs in the act:

 * Start your program, specifying anything that might affect its behavior.
 * Make your program stop on specified conditions.
 * Examine what has happened, when your program has stopped.
 * Change things in your program, so you can experiment with correcting \
the effects of one bug and go on to learn about another.

The program being debugged can be written in Ada, C, C++, Objective-C, \
Pascal (and many other languages). Those programs might be executing \
on the same machine as GDB (native) or on another machine (remote). \
GDB can run on most popular UNIX and Microsoft Windows variants."
HOMEPAGE="https://sourceware.org/gdb/"
COPYRIGHT="2021 Free Software Foundation, Inc."
LICENSE="GNU GPL v2
	GNU GPL v3"
REVISION="1"
SOURCE_URI="https://ftp.gnu.org/gnu/gdb/gdb-$portVersion.tar.xz"
CHECKSUM_SHA256="aaa1223d534c9b700a8bec952d9748ee1977513f178727e1bee520ee000b4f29"
PATCHES="gdb-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86_64 ?arm ?arm64 ?m68k ?ppc ?riscv64 ?sparc"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	gdb$secondaryArchSuffix= $portVersion
	cmd:gdb$secondaryArchSuffix = $portVersion
	cmd:gdb_add_index$secondaryArchSuffix = $portVersion
	devel:libbfd$secondaryArchSuffix = $portVersion
	devel:libctf$secondaryArchSuffix= $portVersion
	devel:libopcodes$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libncurses$secondaryArchSuffix
	lib:libpython2.7
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	devel:libexpat$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libncurses$secondaryArchSuffix
	devel:libpython2.7
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:awk
	cmd:bison$secondaryArchSuffix
	cmd:cmp
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:m4
	cmd:make
	cmd:makeinfo
	cmd:python
	cmd:yacc$secondaryArchSuffix
	"

TEST_REQUIRES="
	cmd:runtest$secondaryArchSuffix
	"

BUILD()
{
	if [ $targetArchitecture = x86 ]; then
    	TARGET=i586-pc-haiku
	elif [ $targetArchitecture = x86_64 ]; then
		TARGET=x86_64-unknown-haiku
	fi

	runConfigure --omit-dirs "docDir dataRootDir" ./configure \
		--host=$TARGET --target=$TARGET \
		--disable-nls --with-system-zlib

	make configure-host
	make configure-target

	make $jobArgs
}

INSTALL()
{
	make install

	prepareInstalledDevelLibs \
		libbfd \
		libopcodes
	rm $developLibDir/*.la
}

TEST()
{
	make check
}
