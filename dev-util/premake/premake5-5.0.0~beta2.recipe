SUMMARY="Powerfully simple build configuration"
DESCRIPTION="Describe your software project with a full-featured scripting \
language and let Premake write the build scripts for you. With one file your \
project can support both IDE-addicted Windows coders and Linux command-line junkies!"
HOMEPAGE="http://industriousone.com/premake"
COPYRIGHT="2003-2022 Jason Perkins and individual contributors"
LICENSE="BSD (3-clause)"
REVISION="2"
SOURCE_URI="https://github.com/premake/premake-core/releases/download/v${portVersion%%~beta*}-${portVersion##*.*.*~}/premake-${portVersion%%~beta*}-${portVersion##*.*.*~}-src.zip"
CHECKSUM_SHA256="4c1100f5170ae1c3bd1b4fd9458b3b02ae841aefbfc41514887b80996436dee2"
SOURCE_DIR="premake-${portVersion/\~/-}-src"
PATCHES="
	premake-5.0.0-remove-hardcoded-libpath.patch
	premake5-$portVersion.patchset
	"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandBinDir=$prefix/bin
fi

PROVIDES="
	premake5$secondaryArchSuffix = $portVersion
	cmd:premake5 = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"
REPLACES="
	premake$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	ca_root_certificates
	"
BUILD_PREREQUIRES="
	cmd:getconf
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	"

PATCH()
{
	sed -i '/-lm/d' build/gmake2.unix/Premake5.make
	sed -i 's/-rdynamic//g' build/gmake2.unix/Premake5.make
}

BUILD()
{
	make -f Bootstrap.mak haiku
}

INSTALL()
{
	cd bin/release
	mkdir -p $commandBinDir
	install -m 0755 premake5 $commandBinDir
}

TEST()
{
	bin/release/premake5 test
}
