SUMMARY="Compiles executable finite state machines from regular languages"
DESCRIPTION="Ragel compiles executable finite state machines from regular \
languages. Ragel targets C, C++, Objective-C, C#, D, Java, Ruby, OCaml and Go.
Ragel state machines can not only recognize byte sequences as regular \
expression machines do, but can also execute code at arbitrary points in the \
recognition of a regular language.
Code embedding is done using inline operators that do not disrupt the regular \
language syntax."
HOMEPAGE="http://www.complang.org/ragel"
COPYRIGHT="2001-2009 Adrian Thurston
	2007 Victor Hugo Borja
	2011 Josef Goettgens"
LICENSE="GNU GPL v1"
REVISION="1"
SOURCE_URI="http://www.complang.org/ragel/ragel-6.8.tar.gz"
CHECKSUM_SHA256="dd7f7d22f3a58147379bda61334d341c2caa0caf9f71897e3e4ec05c8f398764"
PATCHES="ragel-6.8.patch"

ARCHITECTURES="x86_gcc2 x86 ?x86_64"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	ragel$secondaryArchSuffix = $portVersion
	cmd:ragel$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	runConfigure ./configure
	make
}

INSTALL()
{
	make install
}
