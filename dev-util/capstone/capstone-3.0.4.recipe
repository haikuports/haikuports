SUMMARY="Lightweight multi-platform, multi-architecture disassembly framework"
DESCRIPTION="* Multi-architectures: Arm, Arm64 (Armv8), Mips, PowerPC, Sparc, \
SystemZ, XCore & X86 (include X86_64) (details).
* Clean/simple/lightweight/intuitive architecture-neutral API.
* Provide details on disassembled instruction (called “decomposer” by some others).
* Provide some semantics of the disassembled instruction, such as list of \
implicit registers read & written.
* Implemented in pure C language, with bindings for Perl, Python, Ruby, C#, \
NodeJS, Java, GO, C++, OCaml, Lua, Rust, Delphi, Free Pascall & Vala available.
* Native support for Windows & *nix (with Mac OSX, iOS, Android, Linux, *BSD & \
Solaris confirmed).
* Thread-safe by design.
* Special support for embedding into firmware or OS kernel.
* High performance & suitable for malware analysis (capable of handling \
various X86 malware tricks)."
HOMEPAGE="http://www.capstone-engine.org"
LICENSE="BSD (3-clause)"
COPYRIGHT="2013-2015, COSEINC"
REVISION="2"

ARCHITECTURES="x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

SOURCE_URI="https://github.com/aquynh/capstone/archive/$portVersion.tar.gz"
CHECKSUM_SHA256="5d6dadf5864c56f8de66c66088fa68e849d0bff6577865a4f81b6f23112b14f2"
PATCHES="capstone-$portVersion.patchset"

PROVIDES="
	capstone$secondaryArchSuffix = $portVersion
	lib:libcapstone$secondaryArchSuffix = 3
"

PROVIDES_devel="
	devel:libcapstone$secondaryArchSuffix = 3
"

REQUIRES_devel="
	capstone$secondaryArchSuffix == $portVersion base
"

REQUIRES="
	haiku$secondaryArchSuffix
"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
"

BUILD_PREREQUIRES="
	cmd:awk
	cmd:gcc$secondaryArchSuffix
	cmd:make
"

BUILD()
{
	export LIBDIRARCH=$relativeLibDir
	./make.sh default
}

INSTALL()
{
	export PREFIX=$prefix
	export LIBDIRARCH=$relativeLibDir
	./make.sh install
	prepareInstalledDevelLib libcapstone
	fixPkgconfig
	packageEntries devel $developDir
}
