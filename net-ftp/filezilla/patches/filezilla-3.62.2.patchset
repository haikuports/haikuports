From c0fae6779d337a1ec5a9c367aa921dbf8a32dd4a Mon Sep 17 00:00:00 2001
From: codesquid <codesquid>
Date: Thu, 1 Dec 2022 10:54:16 +0100
Subject: Allow wx3.2 across the board.


diff --git a/configure.ac b/configure.ac
index b49ae75..a8f1c1d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -179,11 +179,7 @@ if test "$buildmain" = "yes"; then
     ])
   fi
   if test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" = "3.1"; then
-    AC_MSG_ERROR([You must use wxWidgets 3.0.x, development versions of wxWidgets are not supported.])
-  elif test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" != "3.0"; then
-    if ! echo "$WX_CPPFLAGS" | grep __WXMAC__ > /dev/null; then
-      AC_MSG_ERROR([You must use wxWidgets 3.0.x, wxWidgets 3.2 or higher is not yet supported.])
-    fi
+    AC_MSG_ERROR([You must use wxWidgets 3.0.x, or 3.2.x, development versions of wxWidgets are not supported.])
   fi
 
   if test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" = "3.0"; then
-- 
2.37.3


From 67795f7fcdd9e56cb134258306f7fb85ace79293 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: stub wordexp


diff --git a/src/commonui/fz_paths.cpp b/src/commonui/fz_paths.cpp
index a9f64f7..da7a66b 100644
--- a/src/commonui/fz_paths.cpp
+++ b/src/commonui/fz_paths.cpp
@@ -15,8 +15,10 @@
 	#include <objbase.h>
 #else
 	#include <unistd.h>
+#ifndef __HAIKU__
 	#include <wordexp.h>
 #endif
+#endif
 
 using namespace std::literals;
 
@@ -487,6 +489,8 @@ char const* GetDownloadDirImpl();
 #elif !defined(FZ_WINDOWS)
 
 namespace {
+
+#ifndef __HAIKU__
 std::string ShellUnescape(std::string const& path)
 {
 	std::string ret;
@@ -500,6 +504,12 @@ std::string ShellUnescape(std::string const& path)
 
 	return ret;
 }
+#else
+std::string ShellUnescape(std::string const& path)
+{
+	return path;
+}
+#endif
 
 size_t next_line(fz::file& f, fz::buffer& buf, size_t maxlen = 16 * 1024)
 {
-- 
2.37.3


From 62b3c08bd5525e0449b6adae2bff30aea50c54b0 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: configure: detect -lnetwork


diff --git a/configure.ac b/configure.ac
index a8f1c1d..65b1dac 100644
--- a/configure.ac
+++ b/configure.ac
@@ -256,7 +256,7 @@ if test "$buildmain" = "yes"; then
   #include <sys/types.h>
   #include <utmp.h>])
 
-  AC_SEARCH_LIBS([socket], [xnet])
+  AC_SEARCH_LIBS([socket], [network xnet])
   AC_SEARCH_LIBS([getaddrinfo], [xnet])
   AC_SEARCH_LIBS([in6addr_loopback], [socket])
 
-- 
2.37.3


From ca3472b7a047ca97d1f176a98e60ed25c8703f19 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: adjust folders for Haiku


diff --git a/src/commonui/Makefile.am b/src/commonui/Makefile.am
index dbd9a00..c6ea81a 100644
--- a/src/commonui/Makefile.am
+++ b/src/commonui/Makefile.am
@@ -5,6 +5,7 @@ lib_LTLIBRARIES = libfzclient-commonui-private.la
 libfzclient_commonui_private_la_CPPFLAGS = -I$(top_builddir)/config
 libfzclient_commonui_private_la_CPPFLAGS += $(LIBFILEZILLA_CFLAGS)
 libfzclient_commonui_private_la_CPPFLAGS += -DBUILDING_FZ_COMMONUI
+libfzclient_commonui_private_la_CPPFLAGS += -DDATADIR='L"$(datadir)"'
 
 libfzclient_commonui_private_la_CXXFLAGS = -fvisibility=hidden
 libfzclient_commonui_private_la_LDFLAGS = -no-undefined -release $(PACKAGE_VERSION_MAJOR).$(PACKAGE_VERSION_MINOR).$(PACKAGE_VERSION_MICRO)
diff --git a/src/commonui/fz_paths.cpp b/src/commonui/fz_paths.cpp
index da7a66b..9199cbf 100644
--- a/src/commonui/fz_paths.cpp
+++ b/src/commonui/fz_paths.cpp
@@ -287,6 +287,19 @@ CLocalPath GetFZDataDir(std::vector<std::wstring> const& fileToFind, std::wstrin
 		}
 	}
 
+#ifdef DATADIR
+	std::wstring dataDir(DATADIR);
+	if (testPath(dataDir)) {
+		return ret;
+	}
+
+	if (!prefixSub.empty()) {
+		if (testPath(dataDir + L_DIR_SEP + prefixSub)) {
+			return ret;
+		}
+	}
+#endif
+
 	std::wstring selfDir = GetOwnExecutableDir();
 	if (!selfDir.empty()) {
 		if (searchSelfDir && testPath(selfDir)) {
@@ -349,7 +362,7 @@ CLocalPath GetDefaultsDir()
 
 #endif
 		if (path.empty()) {
-			path = GetFZDataDir({ L"fzdefaults.xml" }, L"share/filezilla");
+			path = GetFZDataDir({ L"fzdefaults.xml" }, L"filezilla");
 		}
 		return path;
 	}();
diff --git a/src/interface/FileZilla.cpp b/src/interface/FileZilla.cpp
index df54eeb..9652cac 100644
--- a/src/interface/FileZilla.cpp
+++ b/src/interface/FileZilla.cpp
@@ -294,7 +294,7 @@ int CFileZillaApp::OnExit()
 bool CFileZillaApp::LoadResourceFiles()
 {
 	AddStartupProfileRecord("CFileZillaApp::LoadResourceFiles");
-	m_resourceDir = GetFZDataDir({L"resources/defaultfilters.xml"}, L"share/filezilla");
+	m_resourceDir = GetFZDataDir({L"resources/defaultfilters.xml"}, L"filezilla");
 
 	wxImage::AddHandler(new wxPNGHandler());
 
@@ -322,7 +322,7 @@ bool CFileZillaApp::LoadLocales()
 	}
 #ifndef __WXMAC__
 	else {
-		m_localesDir = GetFZDataDir({L"de/filezilla.mo", L"de/LC_MESSAGES/filezilla.mo"}, L"share/locale", false);
+		m_localesDir = GetFZDataDir({L"de/filezilla.mo", L"de/LC_MESSAGES/filezilla.mo"}, L"locale", false);
 	}
 #endif
 	if (!m_localesDir.empty()) {
diff --git a/src/interface/locale_initializer.cpp b/src/interface/locale_initializer.cpp
index c7d2fc7..fac6aa7 100644
--- a/src/interface/locale_initializer.cpp
+++ b/src/interface/locale_initializer.cpp
@@ -204,7 +204,7 @@ std::string CInitializer::GetDefaultsXmlFile()
 	std::string selfPath = fz::to_string(GetOwnExecutableDir());
 	file = CheckPathForDefaults(selfPath, 0, "fzdefaults.xml");
 	if (selfPath.size() > 5 && fz::ends_with(selfPath, std::string("/bin/"))) {
-		file = CheckPathForDefaults(selfPath.substr(0, selfPath.size() - 4), 0, "share/filezilla/fzdefaults.xml");
+		file = CheckPathForDefaults(selfPath.substr(0, selfPath.size() - 4), 0, "data/filezilla/fzdefaults.xml");
 		if (!file.empty()) {
 			return file;
 		}
@@ -225,7 +225,7 @@ std::string CInitializer::GetDefaultsXmlFile()
 			path += '/';
 		}
 		if (segment.size() > 5 && fz::ends_with(segment, std::string("/bin/"))) {
-			file = CheckPathForDefaults(segment.substr(0, segment.size() - 4), 0, "share/filezilla/fzdefaults.xml");
+			file = CheckPathForDefaults(segment.substr(0, segment.size() - 4), 0, "data/filezilla/fzdefaults.xml");
 			if (!file.empty()) {
 				return file;
 			}
-- 
2.37.3

