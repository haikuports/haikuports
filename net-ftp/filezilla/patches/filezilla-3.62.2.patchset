From e5513f8a3db622f72cab6ba1144a584c1212dcb2 Mon Sep 17 00:00:00 2001
From: codesquid <codesquid>
Date: Thu, 1 Dec 2022 10:54:16 +0100
Subject: Allow wx3.2 across the board.


diff --git a/configure.ac b/configure.ac
index b49ae75..a8f1c1d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -179,11 +179,7 @@ if test "$buildmain" = "yes"; then
     ])
   fi
   if test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" = "3.1"; then
-    AC_MSG_ERROR([You must use wxWidgets 3.0.x, development versions of wxWidgets are not supported.])
-  elif test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" != "3.0"; then
-    if ! echo "$WX_CPPFLAGS" | grep __WXMAC__ > /dev/null; then
-      AC_MSG_ERROR([You must use wxWidgets 3.0.x, wxWidgets 3.2 or higher is not yet supported.])
-    fi
+    AC_MSG_ERROR([You must use wxWidgets 3.0.x, or 3.2.x, development versions of wxWidgets are not supported.])
   fi
 
   if test "${WX_VERSION_MAJOR}.${WX_VERSION_MINOR}" = "3.0"; then
-- 
2.37.3


From 7d0cb381f4361f020268f357c1b4f21fd17a544c Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: stub wordexp


diff --git a/src/commonui/fz_paths.cpp b/src/commonui/fz_paths.cpp
index a9f64f7..da7a66b 100644
--- a/src/commonui/fz_paths.cpp
+++ b/src/commonui/fz_paths.cpp
@@ -15,8 +15,10 @@
 	#include <objbase.h>
 #else
 	#include <unistd.h>
+#ifndef __HAIKU__
 	#include <wordexp.h>
 #endif
+#endif
 
 using namespace std::literals;
 
@@ -487,6 +489,8 @@ char const* GetDownloadDirImpl();
 #elif !defined(FZ_WINDOWS)
 
 namespace {
+
+#ifndef __HAIKU__
 std::string ShellUnescape(std::string const& path)
 {
 	std::string ret;
@@ -500,6 +504,12 @@ std::string ShellUnescape(std::string const& path)
 
 	return ret;
 }
+#else
+std::string ShellUnescape(std::string const& path)
+{
+	return path;
+}
+#endif
 
 size_t next_line(fz::file& f, fz::buffer& buf, size_t maxlen = 16 * 1024)
 {
-- 
2.37.3


From fb3d46e468bc2a49ff8e8455f410f30d5dc2dacc Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: configure: detect -lnetwork


diff --git a/configure.ac b/configure.ac
index a8f1c1d..65b1dac 100644
--- a/configure.ac
+++ b/configure.ac
@@ -256,7 +256,7 @@ if test "$buildmain" = "yes"; then
   #include <sys/types.h>
   #include <utmp.h>])
 
-  AC_SEARCH_LIBS([socket], [xnet])
+  AC_SEARCH_LIBS([socket], [network xnet])
   AC_SEARCH_LIBS([getaddrinfo], [xnet])
   AC_SEARCH_LIBS([in6addr_loopback], [socket])
 
-- 
2.37.3


From c3023a29746232c93f51c3b495c7b8da9b824480 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 19 Nov 2022 13:44:51 +0100
Subject: adjust folders for Haiku


diff --git a/src/commonui/Makefile.am b/src/commonui/Makefile.am
index dbd9a00..c6ea81a 100644
--- a/src/commonui/Makefile.am
+++ b/src/commonui/Makefile.am
@@ -5,6 +5,7 @@ lib_LTLIBRARIES = libfzclient-commonui-private.la
 libfzclient_commonui_private_la_CPPFLAGS = -I$(top_builddir)/config
 libfzclient_commonui_private_la_CPPFLAGS += $(LIBFILEZILLA_CFLAGS)
 libfzclient_commonui_private_la_CPPFLAGS += -DBUILDING_FZ_COMMONUI
+libfzclient_commonui_private_la_CPPFLAGS += -DDATADIR='L"$(datadir)"'
 
 libfzclient_commonui_private_la_CXXFLAGS = -fvisibility=hidden
 libfzclient_commonui_private_la_LDFLAGS = -no-undefined -release $(PACKAGE_VERSION_MAJOR).$(PACKAGE_VERSION_MINOR).$(PACKAGE_VERSION_MICRO)
diff --git a/src/commonui/fz_paths.cpp b/src/commonui/fz_paths.cpp
index da7a66b..9199cbf 100644
--- a/src/commonui/fz_paths.cpp
+++ b/src/commonui/fz_paths.cpp
@@ -287,6 +287,19 @@ CLocalPath GetFZDataDir(std::vector<std::wstring> const& fileToFind, std::wstrin
 		}
 	}
 
+#ifdef DATADIR
+	std::wstring dataDir(DATADIR);
+	if (testPath(dataDir)) {
+		return ret;
+	}
+
+	if (!prefixSub.empty()) {
+		if (testPath(dataDir + L_DIR_SEP + prefixSub)) {
+			return ret;
+		}
+	}
+#endif
+
 	std::wstring selfDir = GetOwnExecutableDir();
 	if (!selfDir.empty()) {
 		if (searchSelfDir && testPath(selfDir)) {
@@ -349,7 +362,7 @@ CLocalPath GetDefaultsDir()
 
 #endif
 		if (path.empty()) {
-			path = GetFZDataDir({ L"fzdefaults.xml" }, L"share/filezilla");
+			path = GetFZDataDir({ L"fzdefaults.xml" }, L"filezilla");
 		}
 		return path;
 	}();
diff --git a/src/interface/FileZilla.cpp b/src/interface/FileZilla.cpp
index df54eeb..9652cac 100644
--- a/src/interface/FileZilla.cpp
+++ b/src/interface/FileZilla.cpp
@@ -294,7 +294,7 @@ int CFileZillaApp::OnExit()
 bool CFileZillaApp::LoadResourceFiles()
 {
 	AddStartupProfileRecord("CFileZillaApp::LoadResourceFiles");
-	m_resourceDir = GetFZDataDir({L"resources/defaultfilters.xml"}, L"share/filezilla");
+	m_resourceDir = GetFZDataDir({L"resources/defaultfilters.xml"}, L"filezilla");
 
 	wxImage::AddHandler(new wxPNGHandler());
 
@@ -322,7 +322,7 @@ bool CFileZillaApp::LoadLocales()
 	}
 #ifndef __WXMAC__
 	else {
-		m_localesDir = GetFZDataDir({L"de/filezilla.mo", L"de/LC_MESSAGES/filezilla.mo"}, L"share/locale", false);
+		m_localesDir = GetFZDataDir({L"de/filezilla.mo", L"de/LC_MESSAGES/filezilla.mo"}, L"locale", false);
 	}
 #endif
 	if (!m_localesDir.empty()) {
diff --git a/src/interface/locale_initializer.cpp b/src/interface/locale_initializer.cpp
index c7d2fc7..fac6aa7 100644
--- a/src/interface/locale_initializer.cpp
+++ b/src/interface/locale_initializer.cpp
@@ -204,7 +204,7 @@ std::string CInitializer::GetDefaultsXmlFile()
 	std::string selfPath = fz::to_string(GetOwnExecutableDir());
 	file = CheckPathForDefaults(selfPath, 0, "fzdefaults.xml");
 	if (selfPath.size() > 5 && fz::ends_with(selfPath, std::string("/bin/"))) {
-		file = CheckPathForDefaults(selfPath.substr(0, selfPath.size() - 4), 0, "share/filezilla/fzdefaults.xml");
+		file = CheckPathForDefaults(selfPath.substr(0, selfPath.size() - 4), 0, "data/filezilla/fzdefaults.xml");
 		if (!file.empty()) {
 			return file;
 		}
@@ -225,7 +225,7 @@ std::string CInitializer::GetDefaultsXmlFile()
 			path += '/';
 		}
 		if (segment.size() > 5 && fz::ends_with(segment, std::string("/bin/"))) {
-			file = CheckPathForDefaults(segment.substr(0, segment.size() - 4), 0, "share/filezilla/fzdefaults.xml");
+			file = CheckPathForDefaults(segment.substr(0, segment.size() - 4), 0, "data/filezilla/fzdefaults.xml");
 			if (!file.empty()) {
 				return file;
 			}
-- 
2.37.3


From 36f74e3cc2d12bc03c410e799ad578534a5d12ba Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Sat, 3 Dec 2022 16:39:13 +0100
Subject: Haiku: use BNotification


diff --git a/src/interface/QueueView.cpp b/src/interface/QueueView.cpp
index 9a319ca..2582fb0 100644
--- a/src/interface/QueueView.cpp
+++ b/src/interface/QueueView.cpp
@@ -29,7 +29,9 @@
 
 #include <libfilezilla/glue/wxinvoker.hpp>
 
-#if WITH_LIBDBUS
+#if defined(__HAIKU__)
+#include <Notification.h>
+#elif WITH_LIBDBUS
 #include "../dbus/desktop_notification.h"
 #elif defined(__WXGTK__) || defined(__WXMSW__)
 #include <wx/notifmsg.h>
@@ -2689,7 +2691,13 @@ void CQueueView::ActionAfter(bool warned)
 				msg = _("All files have been successfully transferred");
 			}
 
-#if WITH_LIBDBUS
+#if defined(__HAIKU__)
+			BNotification notification((failed_count > 0) ? B_ERROR_NOTIFICATION : B_INFORMATION_NOTIFICATION);
+			notification.SetGroup("FileZilla");
+			notification.SetTitle(BString(title));
+			notification.SetContent(BString(msg));
+			notification.Send();
+#elif WITH_LIBDBUS
 			if (!m_desktop_notification) {
 				m_desktop_notification = std::make_unique<CDesktopNotification>();
 			}
diff --git a/src/interface/QueueView.h b/src/interface/QueueView.h
index 7b16d8a..8b120b6 100644
--- a/src/interface/QueueView.h
+++ b/src/interface/QueueView.h
@@ -86,7 +86,9 @@ class CMainFrame;
 class CStatusLineCtrl;
 class CAsyncRequestQueue;
 class CQueue;
-#if WITH_LIBDBUS
+#if defined(__HAIKU__)
+// empty
+#elif WITH_LIBDBUS
 class CDesktopNotification;
 #elif defined(__WXGTK__) || defined(__WXMSW__)
 class wxNotificationMessage;
@@ -271,7 +273,9 @@ protected:
 
 	void ReleaseExclusiveEngineLock(CFileZillaEngine* pEngine);
 
-#if WITH_LIBDBUS
+#if defined(__HAIKU__)
+	// empty
+#elif WITH_LIBDBUS
 	std::unique_ptr<CDesktopNotification> m_desktop_notification;
 #elif defined(__WXGTK__) || defined(__WXMSW__)
 	std::unique_ptr<wxNotificationMessage> m_desktop_notification;
-- 
2.37.3


From e307ee5d6125be25e9bd9f2d91310d7de40f01c4 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Mon, 5 Dec 2022 23:03:41 +0100
Subject: Haiku: initialize XDG vars


diff --git a/src/interface/locale_initializer.cpp b/src/interface/locale_initializer.cpp
index fac6aa7..bcb1476 100644
--- a/src/interface/locale_initializer.cpp
+++ b/src/interface/locale_initializer.cpp
@@ -10,6 +10,10 @@
 #include <locale.h>
 #include <sys/stat.h>
 
+#ifdef __HAIKU__
+#include <glib.h>
+#endif
+
 std::wstring GetOwnExecutableDir();
 
 struct t_fallbacks
@@ -93,6 +97,14 @@ int main(int argc, char** argv)
 		}
 	}
 
+#ifdef __HAIKU__
+	g_setenv ("XDG_CONFIG_DIRS", "/boot/system/settings", FALSE);
+	g_setenv ("XDG_DATA_HOME", "/boot/home/config/non-packaged/data", FALSE);
+	g_setenv ("XDG_CONFIG_HOME", "/boot/home/config/settings", FALSE);
+	g_setenv ("XDG_CACHE_HOME", "/boot/home/config/cache", FALSE);
+	g_setenv ("XDG_DATA_DIRS", "/boot/system/non-packaged/data:/boot/system/data", FALSE);
+#endif
+
 	return wxEntry(argc, argv);
 }
 
-- 
2.37.3

