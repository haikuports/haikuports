From be2d581ec3056b8cb9264d551a6c5810825c6251 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Mon, 15 Oct 2018 19:59:46 +0200
Subject: Don't use -fstack-protector-strong


diff --git a/configure.ac b/configure.ac
index 5aed1f4..4e37e3c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2899,10 +2899,6 @@ AC_ARG_ENABLE([harden],
 
 AC_DEFUN([ADD_HARDENING_FLAGS],[
    AX_APPEND_COMPILE_FLAGS([-fpie -fPIE -Wformat -Werror=format-security])
-
-   AX_CHECK_COMPILE_FLAG([-fstack-protector-strong],
-     [AX_APPEND_FLAG([-fstack-protector-strong])],
-     [AX_APPEND_COMPILE_FLAGS(["-fstack-protector --param ssp-buffer-size=4"])])
 ])
 
 if test x"$harden" = x"yes"; then
-- 
2.19.1


From 5f6f5f925e8985d8bcdf3d2f12e3159be954128d Mon Sep 17 00:00:00 2001
From: Kacper Kasper <kacperkasper@gmail.com>
Date: Mon, 15 Oct 2018 20:00:46 +0200
Subject: Don't use defined Haiku here (previous patch)


diff --git a/libbase/utility.h b/libbase/utility.h
index 10f35aa..5fca0a4 100644
--- a/libbase/utility.h
+++ b/libbase/utility.h
@@ -61,7 +61,7 @@ namespace std
 };
 #endif
 
-#if defined(__HAIKU__)
+#if defined(__HAIKU_OLD)
 namespace std {
 	class wstring : public std::basic_string<char>
 	{
-- 
2.19.1


From 4b5d8e2797042d284eccbbc0b8022c8e59b3971f Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Mon, 15 Oct 2018 20:03:07 +0200
Subject: Include sys/select.h


diff --git a/libbase/Socket.cpp b/libbase/Socket.cpp
index 43a10ac..03db348 100644
--- a/libbase/Socket.cpp
+++ b/libbase/Socket.cpp
@@ -27,6 +27,7 @@
 #include <cerrno>
 #include <csignal>
 #include <cstdint>
+#include <sys/select.h>
 
 #include "GnashSystemNetHeaders.h"
 #include "GnashSystemFDHeaders.h"
diff --git a/libcore/ExternalInterface.cpp b/libcore/ExternalInterface.cpp
index 8801696..79f959e 100644
--- a/libcore/ExternalInterface.cpp
+++ b/libcore/ExternalInterface.cpp
@@ -25,6 +25,7 @@
 #include <sstream>
 #include <boost/algorithm/string/erase.hpp>
 #include <algorithm>
+#include <sys/select.h>
 
 #ifdef SOLARIS_HOST
 # include <sys/filio.h> // for FIONREAD
-- 
2.19.1


From 3b016d436d4e6270c391fc0b06fc97d9611b5a83 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Mon, 15 Oct 2018 20:06:09 +0200
Subject: Include list here


diff --git a/libcore/asobj/Array_as.h b/libcore/asobj/Array_as.h
index a7c4cee..14dd06b 100644
--- a/libcore/asobj/Array_as.h
+++ b/libcore/asobj/Array_as.h
@@ -19,6 +19,7 @@
 #ifndef GNASH_ARRAY_H
 #define GNASH_ARRAY_H
 
+#include <list>
 #include "as_object.h" 
 
 // Forward declarations
-- 
2.19.1


From 998f4d9f89618a55f3a19da192bd9379f05d2ee5 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Mon, 15 Oct 2018 20:08:34 +0200
Subject: Use correct ffmpeg function AV_INPUT_BUFFER_PADDING_SIZE


diff --git a/libmedia/ffmpeg/MediaHandlerFfmpeg.cpp b/libmedia/ffmpeg/MediaHandlerFfmpeg.cpp
index 127aaaa..216d96b 100644
--- a/libmedia/ffmpeg/MediaHandlerFfmpeg.cpp
+++ b/libmedia/ffmpeg/MediaHandlerFfmpeg.cpp
@@ -149,7 +149,7 @@ MediaHandlerFfmpeg::cameraNames(std::vector<std::string>& /*names*/) const
 size_t
 MediaHandlerFfmpeg::getInputPaddingSize() const
 {
-    return FF_INPUT_BUFFER_PADDING_SIZE;
+    return AV_INPUT_BUFFER_PADDING_SIZE;
 }
 
 } // gnash.media.ffmpeg namespace 
diff --git a/libmedia/ffmpeg/MediaParserFfmpeg.cpp b/libmedia/ffmpeg/MediaParserFfmpeg.cpp
index 2c64eed..5944223 100644
--- a/libmedia/ffmpeg/MediaParserFfmpeg.cpp
+++ b/libmedia/ffmpeg/MediaParserFfmpeg.cpp
@@ -64,7 +64,7 @@ AVInputFormat*
 MediaParserFfmpeg::probeStream()
 {
     const size_t probeSize = 4096;
-    const size_t bufSize = probeSize + FF_INPUT_BUFFER_PADDING_SIZE;
+    const size_t bufSize = probeSize + AV_INPUT_BUFFER_PADDING_SIZE;
 
 	std::unique_ptr<std::uint8_t[]> buffer(new std::uint8_t[bufSize]);
 
@@ -173,7 +173,7 @@ MediaParserFfmpeg::parseVideoFrame(AVPacket& packet)
 
 	// TODO: We might avoid the copy as a whole by making EncodedVideoFrame
 	//       virtual.
-	size_t allocSize = packet.size + FF_INPUT_BUFFER_PADDING_SIZE;
+	size_t allocSize = packet.size + AV_INPUT_BUFFER_PADDING_SIZE;
 	std::uint8_t* data = new std::uint8_t[allocSize];
 	std::copy(packet.data, packet.data+packet.size, data);
 	std::unique_ptr<EncodedVideoFrame> frame(new EncodedVideoFrame(data, packet.size, 0, timestamp));
@@ -221,7 +221,7 @@ MediaParserFfmpeg::parseAudioFrame(AVPacket& packet)
 
 	// TODO: We might avoid the copy as a whole by making EncodedAudioFrame
 	//       virtual.
-	size_t allocSize = packet.size + FF_INPUT_BUFFER_PADDING_SIZE;
+	size_t allocSize = packet.size + AV_INPUT_BUFFER_PADDING_SIZE;
 	std::uint8_t* data = new std::uint8_t[allocSize];
 	std::copy(packet.data, packet.data+packet.size, data);
 
-- 
2.19.1

