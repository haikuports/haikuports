From 9216ba4b743499f973896f79ec6055b1a92db943 Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Tue, 18 Apr 2023 13:13:07 +0200
Subject: Haiku build fixes


diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 0c1443c..3bea528 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -140,7 +140,7 @@ MainWindow::MainWindow()
     , m_upgradeUrl("https://www.shotcut.org/download/")
     , m_keyframesDock(0)
 {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC) && !defined(Q_OS_HAIKU)
     QLibrary libJack("libjack.so.0");
     if (!libJack.load()) {
         QMessageBox::critical(this, qApp->applicationName(),
diff --git a/src/spatialmedia/constants.h b/src/spatialmedia/constants.h
index 3bceef7..bdce17e 100644
--- a/src/spatialmedia/constants.h
+++ b/src/spatialmedia/constants.h
@@ -35,6 +35,52 @@
 #  define htole64(x) qtoLittleEndian(x)
 #  define be64toh(x) qFromBigEndian(x)
 #  define le64toh(x) qFromLittleEndian(x)
+#elif defined(__HAIKU__)
+
+#include <config/HaikuConfig.h>
+#include <support/ByteOrder.h>
+#include <support/SupportDefs.h>
+
+/*
+ * General byte order swapping functions.
+ */
+#define bswap16(x)  __swap_int16(x)
+#define bswap32(x)  __swap_int32(x)
+#define bswap64(x)  __swap_int64(x)
+
+/*
+ * Host to big endian, host to little endian, big endian to host, and little
+ * endian to host byte order functions as detailed in byteorder(9).
+ */
+#if BYTE_ORDER == LITTLE_ENDIAN
+#define htobe16(x)  bswap16((x))
+#define htobe32(x)  bswap32((x))
+#define htobe64(x)  bswap64((x))
+#define htole16(x)  ((uint16_t)(x))
+#define htole32(x)  ((uint32_t)(x))
+#define htole64(x)  ((uint64_t)(x))
+
+#define be16toh(x)  bswap16((x))
+#define be32toh(x)  bswap32((x))
+#define be64toh(x)  bswap64((x))
+#define le16toh(x)  ((uint16_t)(x))
+#define le32toh(x)  ((uint32_t)(x))
+#define le64toh(x)  ((uint64_t)(x))
+#else /* BYTE_ORDER != LITTLE_ENDIAN */
+#define htobe16(x)  ((uint16_t)(x))
+#define htobe32(x)  ((uint32_t)(x))
+#define htobe64(x)  ((uint64_t)(x))
+#define htole16(x)  bswap16((x))
+#define htole32(x)  bswap32((x))
+#define htole64(x)  bswap64((x))
+
+#define be16toh(x)  ((uint16_t)(x))
+#define be32toh(x)  ((uint32_t)(x))
+#define be64toh(x)  ((uint64_t)(x))
+#define le16toh(x)  bswap16((x))
+#define le32toh(x)  bswap32((x))
+#define le64toh(x)  bswap64((x))
+#endif /* BYTE_ORDER == LITTLE_ENDIAN */
 #elif !defined(__FreeBSD__)
 #  include <endian.h>
 #elif defined(__FreeBSD__)
-- 
2.45.2


From d2474f8865f33203974f0a4ef683b2a8cbef57dd Mon Sep 17 00:00:00 2001
From: TURX <turx2003@gmail.com>
Date: Mon, 20 Jan 2020 01:32:19 +0800
Subject: fix Haiku support


diff --git a/src/main.cpp b/src/main.cpp
index e293442..8bd0f9e 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -34,6 +34,10 @@
 #include "macos.h"
 #endif
 
+#ifdef Q_OS_HAIKU
+#include <FindDirectory.h>
+#endif
+
 #ifdef Q_OS_WIN
 #include <windows.h>
 #if defined(QT_DEBUG) && !defined(__ARM_ARCH)
@@ -221,7 +225,14 @@ public:
             resourceArg = parser.positionalArguments();
 
         // Startup logging.
+#if !defined(Q_OS_HAIKU)
         dir.setPath(Settings.appDataLocation());
+#else
+        char buffer[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+        find_directory(B_USER_LOG_DIRECTORY, -1, false, buffer, sizeof(buffer));
+        QString path = QString::fromUtf8(buffer);
+        dir.setPath(path);
+#endif
         if (!dir.exists()) dir.mkpath(dir.path());
         auto previousLogName = dir.filePath("shotcut-log.bak");
         QFile::remove(previousLogName);
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 3bea528..c4822af 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -105,6 +105,10 @@
 #include <QImageReader>
 #include <algorithm>
 
+#ifdef Q_OS_HAIKU
+#include <FindDirectory.h>
+#endif
+
 #define SHOTCUT_THEME
 
 static bool eventDebugCallback(void **data)
@@ -1513,7 +1517,15 @@ void MainWindow::setFullScreen(bool isFullScreen)
 
 QString MainWindow::untitledFileName() const
 {
-    QDir dir = Settings.appDataLocation();
+    QDir dir;
+#if !defined(Q_OS_HAIKU)
+    dir = Settings.appDataLocation();
+#else
+    char buffer[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+    find_directory(B_USER_LOG_DIRECTORY, -1, false, buffer, sizeof(buffer));
+    QString path = QString::fromUtf8(buffer);
+    dir = path;
+#endif
     if (!dir.exists()) dir.mkpath(dir.path());
     return dir.filePath("__untitled__.mlt");
 }
@@ -4234,7 +4246,15 @@ void MainWindow::on_actionResources_triggered()
 void MainWindow::on_actionApplicationLog_triggered()
 {
     TextViewerDialog dialog(this);
-    QDir dir = Settings.appDataLocation();
+    QDir dir;
+#if !defined(Q_OS_HAIKU)
+    dir = Settings.appDataLocation();
+#else
+    char buffer[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+    find_directory(B_USER_LOG_DIRECTORY, -1, false, buffer, sizeof(buffer));
+    QString path = QString::fromUtf8(buffer);
+    dir = path;
+#endif
     QFile logFile(dir.filePath("shotcut-log.txt"));
     logFile.open(QIODevice::ReadOnly | QIODevice::Text);
     dialog.setText(logFile.readAll());
-- 
2.45.2


From 9587c648458b26c85406700407fbdc6a632626b1 Mon Sep 17 00:00:00 2001
From: Schrijvers Luc <begasus@gmail.com>
Date: Sat, 28 Dec 2024 18:50:41 +0100
Subject: Haiku fixes(?)


diff --git a/src/docks/subtitlesdock.cpp b/src/docks/subtitlesdock.cpp
index a06114d..2535d2f 100644
--- a/src/docks/subtitlesdock.cpp
+++ b/src/docks/subtitlesdock.cpp
@@ -1084,6 +1084,8 @@ void SubtitlesDock::burnInOnTimeline()
     filter.set("family", "Verdana");
 #elif defined(Q_OS_MAC)
     filter.set("family", "Helvetica");
+#elif defined(Q_OS_HAIKU)
+    filter.set("family", "NotoSerif	");
 #endif
     filter.set("fgcolour", "#ffffffff");
     filter.set("bgcolour", "#00000000");
@@ -1128,6 +1130,8 @@ void SubtitlesDock::generateTextOnTimeline()
         filter.set("family", "Verdana");
 #elif defined(Q_OS_MAC)
         filter.set("family", "Helvetica");
+#elif defined(Q_OS_HAIKU)
+    filter.set("family", "NotoSerif	");
 #endif
         filter.set("fgcolour", "#ffffffff");
         filter.set("bgcolour", "#00000000");
diff --git a/src/qmltypes/qmlapplication.cpp b/src/qmltypes/qmlapplication.cpp
index 066f04e..a2e2796 100644
--- a/src/qmltypes/qmlapplication.cpp
+++ b/src/qmltypes/qmlapplication.cpp
@@ -92,6 +92,8 @@ QString QmlApplication::OS()
     return "UNIX";
 #elif defined(Q_OS_WIN)
     return "Windows";
+#elif defined(Q_OS_HAIKU)
+    return "Haiku";
 #else
     return "";
 #endif
@@ -231,10 +233,12 @@ QDir QmlApplication::dataDir()
 #if defined(Q_OS_MAC)
     dir.cdUp();
     dir.cd("Resources");
-#else
-#if defined(Q_OS_UNIX) || (defined(Q_OS_WIN) && defined(NODEPLOY))
+#elif defined(Q_OS_HAIKU)
     dir.cdUp();
-#endif
+    dir.cd("data");
+#elif defined(Q_OS_UNIX) && !defined(Q_OS_HAIKU) || (defined(Q_OS_WIN) && defined(NODEPLOY))
+    dir.cdUp();
+#else
     dir.cd("share");
 #endif
     return dir;
diff --git a/src/util.cpp b/src/util.cpp
index eb5ff76..883ff77 100644
--- a/src/util.cpp
+++ b/src/util.cpp
@@ -541,6 +541,8 @@ bool Util::isMemoryLow()
     meminfo.close();
     LOG_INFO() << "available RAM = " << availableKB << "KB";
     return availableKB < kLowMemoryThresholdKB;
+#elif defined(Q_OS_HAIKU)
+    return false;
 #endif
 }
 
-- 
2.45.2

