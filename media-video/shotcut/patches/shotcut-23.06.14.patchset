From 2db13fa56889ec77ab1ac9e8ff48d429c82d277e Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Tue, 18 Apr 2023 13:13:07 +0200
Subject: Haiku build fixes


diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index c784a2a..e810489 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -135,7 +135,7 @@ MainWindow::MainWindow()
     , m_upgradeUrl("https://www.shotcut.org/download/")
     , m_keyframesDock(0)
 {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC) && !defined(Q_OS_HAIKU)
     QLibrary libJack("libjack.so.0");
     if (!libJack.load()) {
         QMessageBox::critical(this, qApp->applicationName(),
diff --git a/src/spatialmedia/constants.h b/src/spatialmedia/constants.h
index 3bceef7..bdce17e 100644
--- a/src/spatialmedia/constants.h
+++ b/src/spatialmedia/constants.h
@@ -35,6 +35,52 @@
 #  define htole64(x) qtoLittleEndian(x)
 #  define be64toh(x) qFromBigEndian(x)
 #  define le64toh(x) qFromLittleEndian(x)
+#elif defined(__HAIKU__)
+
+#include <config/HaikuConfig.h>
+#include <support/ByteOrder.h>
+#include <support/SupportDefs.h>
+
+/*
+ * General byte order swapping functions.
+ */
+#define bswap16(x)  __swap_int16(x)
+#define bswap32(x)  __swap_int32(x)
+#define bswap64(x)  __swap_int64(x)
+
+/*
+ * Host to big endian, host to little endian, big endian to host, and little
+ * endian to host byte order functions as detailed in byteorder(9).
+ */
+#if BYTE_ORDER == LITTLE_ENDIAN
+#define htobe16(x)  bswap16((x))
+#define htobe32(x)  bswap32((x))
+#define htobe64(x)  bswap64((x))
+#define htole16(x)  ((uint16_t)(x))
+#define htole32(x)  ((uint32_t)(x))
+#define htole64(x)  ((uint64_t)(x))
+
+#define be16toh(x)  bswap16((x))
+#define be32toh(x)  bswap32((x))
+#define be64toh(x)  bswap64((x))
+#define le16toh(x)  ((uint16_t)(x))
+#define le32toh(x)  ((uint32_t)(x))
+#define le64toh(x)  ((uint64_t)(x))
+#else /* BYTE_ORDER != LITTLE_ENDIAN */
+#define htobe16(x)  ((uint16_t)(x))
+#define htobe32(x)  ((uint32_t)(x))
+#define htobe64(x)  ((uint64_t)(x))
+#define htole16(x)  bswap16((x))
+#define htole32(x)  bswap32((x))
+#define htole64(x)  bswap64((x))
+
+#define be16toh(x)  ((uint16_t)(x))
+#define be32toh(x)  ((uint32_t)(x))
+#define be64toh(x)  ((uint64_t)(x))
+#define le16toh(x)  bswap16((x))
+#define le32toh(x)  bswap32((x))
+#define le64toh(x)  bswap64((x))
+#endif /* BYTE_ORDER == LITTLE_ENDIAN */
 #elif !defined(__FreeBSD__)
 #  include <endian.h>
 #elif defined(__FreeBSD__)
-- 
2.37.3


From cb7d9bba2fcac2a3da819339b4fb835345d28bd7 Mon Sep 17 00:00:00 2001
From: TURX <turx2003@gmail.com>
Date: Mon, 20 Jan 2020 01:32:19 +0800
Subject: fix Haiku support


diff --git a/src/main.cpp b/src/main.cpp
index 7c15047..44c89be 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -48,6 +48,10 @@ extern "C"
 
 static const int kMaxCacheCount = 5000;
 
+#ifdef Q_OS_HAIKU
+#include <FindDirectory.h>
+#endif
+
 static void mlt_log_handler(void *service, int mlt_level, const char *format, va_list args)
 {
     if (mlt_level > mlt_log_get_level())
@@ -193,7 +197,14 @@ public:
             resourceArg = parser.positionalArguments();
 
         // Startup logging.
+#if !defined(Q_OS_HAIKU)
         dir.setPath(Settings.appDataLocation());
+#else
+        char buffer[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+        find_directory(B_USER_LOG_DIRECTORY, -1, false, buffer, sizeof(buffer));
+        QString path = QString::fromUtf8(buffer);
+        dir.setPath(path);
+#endif
         if (!dir.exists()) dir.mkpath(dir.path());
         const QString logFileName = dir.filePath("shotcut-log.txt");
         QFile::remove(logFileName);
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index e810489..d358edd 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -103,6 +103,10 @@
 #include <clocale>
 #include <algorithm>
 
+#ifdef Q_OS_HAIKU
+#include <FindDirectory.h>
+#endif
+
 #define SHOTCUT_THEME
 
 static bool eventDebugCallback(void **data)
@@ -3742,7 +3746,15 @@ void MainWindow::onDrawingMethodTriggered(QAction *action)
 void MainWindow::on_actionApplicationLog_triggered()
 {
     TextViewerDialog dialog(this);
-    QDir dir = Settings.appDataLocation();
+    QDir dir;
+#if !defined(Q_OS_HAIKU)
+    dir = Settings.appDataLocation();
+#else
+    char buffer[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+    find_directory(B_USER_LOG_DIRECTORY, -1, false, buffer, sizeof(buffer));
+    QString path = QString::fromUtf8(buffer);
+    dir = path;
+#endif
     QFile logFile(dir.filePath("shotcut-log.txt"));
     logFile.open(QIODevice::ReadOnly | QIODevice::Text);
     dialog.setText(logFile.readAll());
-- 
2.37.3

