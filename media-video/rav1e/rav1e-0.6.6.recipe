SUMMARY="The fastest and safest AV1 encoder"
DESCRIPTION="rav1e is an AV1 video encoder. It is designed to eventually cover all use cases, \
though in its current form it is most suitable for cases where libaom (the reference encoder) is \
too slow."
HOMEPAGE="https://github.com/xiph/rav1e/"
COPYRIGHT="2017-2021, the rav1e contributors"
LICENSE="BSD (2-clause)"
REVISION="1"
SOURCE_URI="$HOMEPAGE/archive/refs/tags/v$portVersion.tar.gz"
CHECKSUM_SHA256="723696e93acbe03666213fbc559044f3cae5b8b888b2ddae667402403cff51e5"
SOURCE_FILENAME="rav1e-v$portVersion.tar.gz"
SOURCE_URI_2="$HOMEPAGE/releases/download/v$portVersion/Cargo.lock#noarchive"
CHECKSUM_SHA256_2="2014f7d76e7d0d7eaa63158ef5a1a1cea15a095fd5fb79b20b1052015a7fcd0c"
PATCHES="rav1e-0.6.6.patchset"

ARCHITECTURES="?all !x86_gcc2 x86_64"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%.*}"

PROVIDES="
	rav1e$secondaryArchSuffix =$portVersion
	cmd:rav1e = $portVersion
	lib:librav1e$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	rav1e${secondaryArchSuffix}_devel = $portVersion
	devel:librav1e$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	rav1e$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libgit2$secondaryArchSuffix
	devel:libssh2$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cargo$secondaryArchSuffix >= 0.74
	cmd:cargo_cbuild
	cmd:cargo_cinstall
	cmd:gcc$secondaryArchSuffix
	cmd:nasm
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage rav1e$secondaryArchSuffix \
	$prefix/bin/rav1e \
	$libDir/librav1e.so.$libVersion

BUILD()
{
	cp $sourceDir2/Cargo.lock Cargo.lock
	cargo fetch
}

INSTALL()
{
	export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
	export LIBSSH2_SYS_USE_PKG_CONFIG=1
	export LIBGIT2_SYS_USE_PKG_CONFIG=1
	export PKG_CONFIG_ALLOW_CROSS=1

	cargo install --locked --root $prefix --path .
	cargo cinstall --release --prefix=$prefix \
		--libdir=$libDir \
		--pkgconfigdir=$libDir/pkgconfig \
		--includedir=$includeDir

	rm -f $libDir/*.a
	rm -f $prefix/{.crates.toml,.crates2.json}

	prepareInstalledDevelLib librav1e
	fixPkgconfig

	#package devel
	packageEntries devel \
		$developDir
}

TEST()
{
	cargo test --release
}
