SUMMARY="A tool to convert video from nearly any format to modern codecs"
DESCRIPTION="HandBrake is an open-source, GPL-licensed, multiplatform, \
multithreaded video transcoder.
Convert from many common multimedia file formats, including unprotected \
DVD or BluRay sources to a handful of modern output file formats."
HOMEPAGE="https://handbrake.fr/"
LICENSE="GNU GPL v2"
COPYRIGHT="2003-2020 HandBrake Team"
REVISION="4"
SOURCE_URI="https://github.com/HandBrake/HandBrake/releases/download/$portVersion/HandBrake-$portVersion-source.tar.bz2"
CHECKSUM_SHA256="3999fe06d5309c819799a73a968a8ec3840e7840c2b64af8f5cdb7fd8c9430f0"
SOURCE_DIR="HandBrake-$portVersion"
PATCHES="handbrake-$portVersion.patchset"
ADDITIONAL_FILES="
	HandBrake.rdef.in
	icons.zip
	"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	handbrake$secondaryArchSuffix = $portVersion
	app:HandBrake
	cmd:HandBrakeCLI
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libass$secondaryArchSuffix
	lib:libatk_1.0$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libbluray$secondaryArchSuffix
	lib:libbz2$secondaryArchSuffix
	lib:libcairo$secondaryArchSuffix
	lib:libdav1d$secondaryArchSuffix
	lib:libdvdnav$secondaryArchSuffix
	lib:libdvdread$secondaryArchSuffix	
	lib:libogg$secondaryArchSuffix
	lib:libfdk_aac$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libfribidi$secondaryArchSuffix
	lib:libgdk_pixbuf_2.0$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgtk_3$secondaryArchSuffix
	lib:libharfbuzz$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjansson$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:libmkv$secondaryArchSuffix
	lib:libmp3lame$secondaryArchSuffix
	lib:libmp4v2$secondaryArchSuffix
	lib:libmpeg2$secondaryArchSuffix
	lib:libopus$secondaryArchSuffix
	lib:libpango_1.0$secondaryArchSuffix
	lib:libsamplerate$secondaryArchSuffix
	lib:libspeex$secondaryArchSuffix
	lib:libtheora$secondaryArchSuffix
	lib:libturbojpeg$secondaryArchSuffix
	lib:libvorbis$secondaryArchSuffix
	lib:libvpx$secondaryArchSuffix
	lib:libx264$secondaryArchSuffix
	lib:libx265$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	gcc${secondaryArchSuffix}_syslibs_devel
	devel:libass$secondaryArchSuffix
	devel:libavcodec$secondaryArchSuffix >= 58
	devel:libavformat$secondaryArchSuffix >= 58
	devel:libbluray$secondaryArchSuffix >= 2
	devel:libbz2$secondaryArchSuffix
	devel:libdav1d$secondaryArchSuffix
	devel:libdvdnav$secondaryArchSuffix
	devel:libdvdread$secondaryArchSuffix
	devel:libfdk_aac$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgtk_3$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libjansson$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:libmkv$secondaryArchSuffix
	devel:libmp3lame$secondaryArchSuffix
	devel:libmp4v2$secondaryArchSuffix
	devel:libmpeg2$secondaryArchSuffix
	devel:libogg$secondaryArchSuffix
	devel:libopus$secondaryArchSuffix
	devel:libsamplerate$secondaryArchSuffix
	devel:libtheora$secondaryArchSuffix
	devel:libturbojpeg$secondaryArchSuffix
	devel:libvorbis$secondaryArchSuffix
	devel:libvpx$secondaryArchSuffix
	devel:libx264$secondaryArchSuffix
	devel:libx265$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:autoconf
	cmd:automake
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:intltool_update
	cmd:libtool
	cmd:m4
	cmd:make
	cmd:meson
	cmd:nasm
	cmd:patch
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3
	cmd:sed
	cmd:tar
	cmd:unzip
	"

PATCH()
{
	sed -i 's/MODULES += contrib\/.*//g' make/include/main.defs
	INCLUDE_DIR=`finddir B_SYSTEM_DIRECTORY`/$relativeIncludeDir
	sed -i "s|/system/develop/headers|$INCLUDE_DIR|g" libhb/module.defs
	sed -i 's/i686/i586/g' make/include/gcc.defs
}

BUILD()
{
	./configure \
		--prefix=$prefix \
		--force \
		--enable-x265 \
		--enable-fdk-aac

	cd build
	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	mkdir -p $dataDir/icons/hicolor
	unzip -o $portDir/additional-files/icons.zip -d $dataDir/icons/hicolor
	mv $prefix/share/locale $dataDir
	rm -rf $prefix/share

	mkdir -p $appsDir
	mv $prefix/bin/ghb $appsDir/HandBrake

	local APP_SIGNATURE="application/x-vnd.titler-handbrake"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/HandBrake.rdef.in > HandBrake.rdef

	addResourcesToBinaries HandBrake.rdef $appsDir/HandBrake

	addAppDeskbarSymlink $appsDir/HandBrake "HandBrake"
}
