SUMMARY="Geometry library for topological robustness"
DESCRIPTION="Manifold is a geometry library dedicated to creating and operating on manifold \
triangle meshes. A manifold mesh is a mesh that represents a solid object, and so is very \
important in manufacturing, CAD, structural analysis, etc. Manifold also supports arbitrary \
vertex properties and enables mapping of materials for rendering use-cases. Our primary goal is \
reliability: guaranteed manifold output without caveats or edge cases. Our secondary goal is \
performance: efficient algorithms that make extensive use of parallelization, or pipelining when \
only a single thread is available."
HOMEPAGE="https://github.com/elalish/manifold"
COPYRIGHT="2022-2024 manifold contributors"
LICENSE="Apache v2"
REVISION="1"
SOURCE_URI="https://github.com/elalish/manifold/archive/refs/tags/v$portVersion.tar.gz"
CHECKSUM_SHA256="5e84fdaab7933a00fb4279a9bbe2885e94db3adfc45a2ef56ae35abfe5e6ea43"
SOURCE_FILENAME="manifold-v$portVersion.tar.gz"
PATCHES="manifold-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	manifold$secondaryArchSuffix = $portVersion
	lib:libmanifold$secondaryArchSuffix = $libVersionCompat
	lib:libmanifoldc$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libClipper2$secondaryArchSuffix
	"

PROVIDES_devel="
	manifold${secondaryArchSuffix}_devel = $portVersion
	devel:libmanifold$secondaryArchSuffix = $libVersionCompat
	devel:libmanifoldc$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	manifold$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libClipper2$secondaryArchSuffix
#	devel:libgtest$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DMANIFOLD_TEST=OFF

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLibs \
		libmanifold \
		libmanifoldc
	fixPkgconfig

	# Fix usage of hardcoded "/include":
	sed -e "s|\(\${_IMPORT_PREFIX}\)/include|\1/$relativeIncludeDir|" -i \
		$libDir/cmake/manifold/manifoldTargets.cmake

	packageEntries devel \
		$developDir \
		$libDir/cmake
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
