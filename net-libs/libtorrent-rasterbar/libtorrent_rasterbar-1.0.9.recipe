SUMMARY="An efficient feature complete C++ bittorrent implementation"
DESCRIPTION="libtorrent is a feature complete C++ bittorrent implementation \
focusing on efficiency and scalability. It runs on embedded devices as well \
as desktops. It boasts a well documented library interface that is easy to \
use. It comes with a simple bittorrent client demonstrating the use of the \
library.

The main goals of libtorrent are:

 * to be cpu efficient
 * to be memory efficient
 * to be very easy to use"
HOMEPAGE="http://www.libtorrent.org/"
COPYRIGHT="2003-2016 Arvid Norberg"
LICENSE="BSD (2-clause)"
REVISION="2"
SOURCE_URI="https://github.com/arvidn/libtorrent/releases/download/libtorrent-${portVersion//./_}/libtorrent-rasterbar-$portVersion.tar.gz"
CHECKSUM_SHA256="11a93125ed49f796fca83da925ab7dc29e91d88b915f078caaddaaf559d63db6"
SOURCE_DIR="libtorrent-rasterbar-$portVersion"
PATCHES="libtorrent_rasterbar-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="!x86_gcc2 x86"

PROVIDES="
	libtorrent_rasterbar${secondaryArchSuffix} = $portVersion
	lib:libtorrent_rasterbar$secondaryArchSuffix = 8 compat >= 8
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libboost_atomic$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	"

PROVIDES_devel="
	libtorrent_rasterbar${secondaryArchSuffix}_devel = $portVersion
	devel:libtorrent_rasterbar$secondaryArchSuffix = 8 compat >= 8
	"
REQUIRES_devel="
	libtorrent_rasterbar$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libboost_system$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	cmd:make
	cmd:cmake
	"

BUILD()
{
	# this CMake setup does not use GNUInstallDirs
	cmake -DCMAKE_INSTALL_PREFIX=$prefix
	make $jobArgs
}

INSTALL()
{
	mkdir -p $includeDir $libDir
	make install

	mv $prefix/include/libtorrent $includeDir
	if [ -n "$secondaryArchSuffix" ]; then
		mv $prefix/lib/*.so* $libDir
		mv $prefix/lib/pkgconfig $libDir
	fi
	rm -r $prefix/include
	strip $libDir/libtorrent-rasterbar.so.8

	prepareInstalledDevelLib libtorrent-rasterbar
	fixPkgconfig

	packageEntries devel \
		$developDir
}
