From bedffa769cda6c4da7e739117a8b0546320e0f11 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 16 Oct 2021 21:33:26 +0200
Subject: Haiku: port


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5291379..69963d3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -295,7 +295,7 @@ if (gRPC_XDS_USER_AGENT_IS_CSHARP)
   add_definitions("-DGRPC_XDS_USER_AGENT_NAME_SUFFIX=\"csharp\"" "-DGRPC_XDS_USER_AGENT_VERSION_SUFFIX=\"2.46.2\"")
 endif()
 
-if(UNIX)
+if(UNIX AND NOT HAIKU)
   # -pthread does more than -lpthread
   set(THREADS_PREFER_PTHREAD_FLAG ON)
   find_package(Threads)
diff --git a/include/grpc/event_engine/port.h b/include/grpc/event_engine/port.h
index 9424586..5ee5327 100644
--- a/include/grpc/event_engine/port.h
+++ b/include/grpc/event_engine/port.h
@@ -20,7 +20,7 @@
 #if defined(GPR_ANDROID) || defined(GPR_LINUX) || defined(GPR_APPLE) ||     \
     defined(GPR_FREEBSD) || defined(GPR_OPENBSD) || defined(GPR_SOLARIS) || \
     defined(GPR_AIX) || defined(GPR_NACL) || defined(GPR_FUCHSIA) ||        \
-    defined(GRPC_POSIX_SOCKET)
+    defined(GPR_HAIKU) || defined(GRPC_POSIX_SOCKET)
 #define GRPC_EVENT_ENGINE_POSIX
 #include <arpa/inet.h>
 #include <netdb.h>
diff --git a/include/grpc/impl/codegen/port_platform.h b/include/grpc/impl/codegen/port_platform.h
index 3227f51..4e2a225 100644
--- a/include/grpc/impl/codegen/port_platform.h
+++ b/include/grpc/impl/codegen/port_platform.h
@@ -404,6 +404,30 @@
 #define GPR_HAS_PTHREAD_H 1
 #define GPR_GETPID_IN_UNISTD_H 1
 #define GRPC_ROOT_PEM_PATH "/config/ssl/cert.pem"
+#elif defined(__HAIKU__)
+#define GPR_PLATFORM_STRING "haiku"
+#ifndef _BSD_SOURCE
+#define _BSD_SOURCE
+#endif
+#define GPR_HAIKU 1
+#define GPR_CPU_POSIX 1
+#define GPR_GCC_ATOMIC 1
+#define GPR_POSIX_LOG 1
+#define GPR_POSIX_ENV 1
+#define GPR_POSIX_TMPFILE 1
+#define GPR_POSIX_STAT 1
+#define GPR_POSIX_STRING 1
+#define GPR_POSIX_SUBPROCESS 1
+#define GPR_POSIX_SYNC 1
+#define GPR_POSIX_TIME 1
+#define GPR_HAS_PTHREAD_H 1
+#define GPR_GETPID_IN_UNISTD_H 1
+#define GPR_SUPPORT_CHANNELS_FROM_FD 1
+#ifdef _LP64
+#define GPR_ARCH_64 1
+#else /* _LP64 */
+#define GPR_ARCH_32 1
+#endif /* _LP64 */
 #else
 #error "Could not auto-detect platform"
 #endif
diff --git a/src/core/lib/gpr/tls.h b/src/core/lib/gpr/tls.h
index 7ea6598..692180c 100644
--- a/src/core/lib/gpr/tls.h
+++ b/src/core/lib/gpr/tls.h
@@ -151,7 +151,7 @@ class PthreadTlsImpl : TlsTypeConstrainer<T> {
 #else
 
 #define GPR_THREAD_LOCAL(type) \
-  thread_local typename grpc_core::TlsTypeConstrainer<type>::Type
+  __thread typename grpc_core::TlsTypeConstrainer<type>::Type
 
 #endif
 
diff --git a/src/core/lib/iomgr/port.h b/src/core/lib/iomgr/port.h
index 8762791..82eb34e 100644
--- a/src/core/lib/iomgr/port.h
+++ b/src/core/lib/iomgr/port.h
@@ -177,6 +177,16 @@
 // TODO(rudominer) Check this does something we want.
 #define GRPC_POSIX_SOCKETUTILS 1
 #define GRPC_TIMER_USE_GENERIC 1
+#elif defined(GPR_HAIKU)
+#define GRPC_HAVE_ARPA_NAMESER 1
+#define GRPC_HAVE_IFADDRS 1
+#define GRPC_HAVE_IPV6_RECVPKTINFO 1
+#define GRPC_HAVE_UNIX_SOCKET 1
+#define GRPC_POSIX_FORK 1
+#define GRPC_POSIX_NO_SPECIAL_WAKEUP_FD 1
+#define GRPC_POSIX_SOCKET 1
+#define GRPC_POSIX_SOCKETUTILS 1
+#define GRPC_POSIX_WAKEUP_FD 1
 #elif !defined(GPR_NO_AUTODETECT_PLATFORM)
 #error "Platform not recognized"
 #endif
-- 
2.30.2


From 590791b8346bdf078b3f2686e13060e41bbc7625 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 22 Oct 2021 14:54:43 +0200
Subject: patch needed to help build and run tests on Haiku


diff --git a/tools/run_tests/python_utils/jobset.py b/tools/run_tests/python_utils/jobset.py
index 2174c00..99dd74e 100755
--- a/tools/run_tests/python_utils/jobset.py
+++ b/tools/run_tests/python_utils/jobset.py
@@ -58,6 +58,8 @@ def platform_string():
         return 'mac'
     elif platform.system() == 'Linux':
         return 'linux'
+    elif platform.system() == 'Haiku':
+        return 'haiku'
     else:
         return 'posix'
 
diff --git a/tools/run_tests/run_tests.py b/tools/run_tests/run_tests.py
index bf1b8d0..9fce0d4 100755
--- a/tools/run_tests/run_tests.py
+++ b/tools/run_tests/run_tests.py
@@ -303,6 +303,19 @@ class CLanguage(object):
                 # see https://github.com/grpc/grpc/blob/b5b8578b3f8b4a9ce61ed6677e19d546e43c5c68/tools/run_tests/artifacts/artifact_targets.py#L253
                 self._cmake_configure_extra_args.append('-DOPENSSL_NO_ASM=ON')
 
+            if self.platform == 'haiku':
+                self._cmake_configure_extra_args.append('-DCMAKE_CXX_STANDARD=17')
+                self._cmake_configure_extra_args.append('-DCMAKE_POSITION_INDEPENDENT_CODE=NO')
+                self._cmake_configure_extra_args.append('-DgRPC_ABSL_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_BENCHMARK_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_CARES_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_ZLIB_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_PROTOBUF_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_PROTOBUF_PACKAGE_TYPE=MODULE')
+                self._cmake_configure_extra_args.append('-DgRPC_RE2_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_SSL_PROVIDER=package')
+                self._cmake_configure_extra_args.append('-DgRPC_ZLIB_PROVIDER=package')
+
     def test_specs(self):
         out = []
         binaries = get_c_tests(self.args.travis, self.test_lang)
-- 
2.30.2


From 7dc62c4b29b7d4b40b22b0dd42703c825e206d69 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 26 Nov 2021 20:17:18 +0100
Subject: protobuf minimum version 1.16.0


diff --git a/cmake/protobuf.cmake b/cmake/protobuf.cmake
index f23f65d..83fad47 100644
--- a/cmake/protobuf.cmake
+++ b/cmake/protobuf.cmake
@@ -55,7 +55,7 @@ if(gRPC_PROTOBUF_PROVIDER STREQUAL "module")
     set(gRPC_INSTALL FALSE)
   endif()
 elseif(gRPC_PROTOBUF_PROVIDER STREQUAL "package")
-  find_package(Protobuf REQUIRED ${gRPC_PROTOBUF_PACKAGE_TYPE})
+  find_package(Protobuf 1.16.0 REQUIRED ${gRPC_PROTOBUF_PACKAGE_TYPE})
 
   # {Protobuf,PROTOBUF}_FOUND is defined based on find_package type ("MODULE" vs "CONFIG").
   # For "MODULE", the case has also changed between cmake 3.5 and 3.6.
-- 
2.30.2

