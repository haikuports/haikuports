SUMMARY="Telegram Database library"
DESCRIPTION="TDLib (Telegram Database library) is a cross-platform library for building \
Telegram clients. It can be easily used from almost any programming language."
HOMEPAGE="https://github.com/tdlib/td"
COPYRIGHT="2013-2025 Telegram"
LICENSE="Boost v1.0"
REVISION="1"
srcGitRev="51743dfd01dff6179e2d8f7095729caa4e2222e9"
SOURCE_URI="https://github.com/tdlib/td/archive/$srcGitRev.tar.gz"
SOURCE_DIR="td-$srcGitRev"
CHECKSUM_SHA256="f2c6b92533ba41a024b9fdb86d346c8bfc876d5961738ad463effbd844d61405"
SOURCE_FILENAME="tdlib-$srcGitRev.tar.gz"

PATCHES="tdlib-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	tdlib$secondaryArchSuffix = $portVersion
	devel:libtdactor$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdapi$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdclient$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdcore$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtddb$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtde2e$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdjson$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdjson_private$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdjson_static$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdmtproto$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdnet$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdsqlite$secondaryArchSuffix = 0.0.0 compat >= 0
	devel:libtdutils$secondaryArchSuffix = 0.0.0 compat >= 0
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcrypto$secondaryArchSuffix >= 3
	devel:libssl$secondaryArchSuffix >= 3
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:gperf
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3
	cmd:sed
	cmd:yasm
	"

BUILD()
{
	cmake -B build -S. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_LIBDIR=$developLibDir \
		-DCMAKE_INSTALL_INCLUDEDIR=$includeDir \
		-DCMAKE_EXE_LINKER_FLAGS="-lnetwork" \
		-DTD_INSTALL_STATIC_LIBRARIES=ON \
		-DTD_INSTALL_SHARED_LIBRARIES=OFF \
		-DTD_ENABLE_JNI=OFF \
		-DTD_ENABLE_DOTNET=OFF \
		-DTD_ENABLE_LTO=OFF \
		-DTD_E2E_ONLY=OFF \
		-DBUILD_TESTING=OFF \
		-DMEMPROF=OFF

	make -C build $jobArgs

	cmake -B build_e2e -S. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_LIBDIR=$developLibDir \
		-DCMAKE_INSTALL_INCLUDEDIR=$includeDir \
		-DCMAKE_EXE_LINKER_FLAGS="-lnetwork" \
		-DTD_INSTALL_STATIC_LIBRARIES=ON \
		-DTD_INSTALL_SHARED_LIBRARIES=OFF \
		-DTD_ENABLE_JNI=OFF \
		-DTD_ENABLE_DOTNET=OFF \
		-DTD_ENABLE_LTO=OFF \
		-DTD_E2E_ONLY=ON \
		-DBUILD_TESTING=OFF \
		-DMEMPROF=OFF

	make -C build_e2e $jobArgs
}

INSTALL()
{
	make -C build install
	make -C build_e2e install

	mkdir -p $libDir
	mv $developLibDir/cmake $libDir
}
