From 3a38e0ace4445b72a7f6a21c2fb5e0733f26ed25 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sat, 28 Mar 2020 10:17:16 +0100
Subject: Search for network functions in libnetwork


diff --git a/configure.ac b/configure.ac
index 69f3abd..5f6f99d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -318,7 +318,7 @@ AC_ARG_ENABLE( getaddrinfo,
                   [do not use getaddrinfo for dns lookups [default use getaddrinfo]])],
                [getaddrinfo="no"])
 if test "x$getaddrinfo" = "xyes"; then
-    AC_CHECK_FUNCS(getaddrinfo,,getaddrinfo="no")
+    AC_SEARCH_LIBS(getaddrinfo,network,,getaddrinfo="no")
 fi
 AC_MSG_CHECKING([whether to use getaddrinfo])
 AC_MSG_RESULT($getaddrinfo)
@@ -327,6 +327,7 @@ dnl Checks for header files.
 AC_HEADER_STDC
 AC_CHECK_HEADERS(unistd.h strings.h errno.h arpa/nameser.h)
 AC_CHECK_FUNCS(setsockopt,,[AC_CHECK_LIB(socket,setsockopt)])
+AC_CHECK_FUNCS(setsockopt,,[AC_CHECK_LIB(network,setsockopt)])
 
 dnl Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
-- 
2.28.0


From 6bd4a36a1228bcf8652dd39c81e1bc713026fa44 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sat, 28 Mar 2020 13:10:43 +0100
Subject: Hack for detecting libnetwork internal functions

These functions are found indirectly through #defines in the headers.
So a normal AC_SEARCH_LIBS does not work.

diff --git a/configure.ac b/configure.ac
index 5f6f99d..cd617f2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -220,7 +220,7 @@ else
     else
       AC_MSG_CHECKING([for res_querydomain in -lresolv (alternate version)])
       save_libs="$LIBS"
-      LIBS="-lresolv $LIBS"
+      LIBS="-lnetwork $LIBS"
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <resolv.h>]], [[res_querydomain(0,0,0,0,0,0)]])],
                      [AC_MSG_RESULT(yes)
                       AC_DEFINE(HAVE_RES_QUERYDOMAIN)
@@ -248,7 +248,7 @@ else
     else
       AC_MSG_CHECKING([for dn_skipname in -lresolv (alternate version)])
       save_libs="$LIBS"
-      LIBS="-lresolv $LIBS"
+      LIBS="-lnetwork $LIBS"
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <netinet/in.h>
  #include <resolv.h>]], [[dn_skipname(0,0)]])],
                      [AC_MSG_RESULT(yes)
@@ -277,7 +277,7 @@ else
     else
       AC_MSG_CHECKING([for res_query in -lresolv (alternate version)])
       save_libs="$LIBS"
-      LIBS="-lresolv $LIBS"
+      LIBS="-lnetwork $LIBS"
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <resolv.h>]], [[res_query(0,0,0,0,0)]])],
                      [AC_MSG_RESULT(yes)
                       AC_DEFINE(HAVE_RES_QUERY)
-- 
2.28.0


From fcd563a33e4f7e7c394270159401597ebcf52779 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 15 Nov 2020 16:18:42 +0100
Subject: Load system certificates.


diff --git a/src/tlsopensslbase.cpp b/src/tlsopensslbase.cpp
index 682f758..2a1a3b7 100644
--- a/src/tlsopensslbase.cpp
+++ b/src/tlsopensslbase.cpp
@@ -126,6 +126,9 @@ namespace gloox
   {
     m_cacerts = cacerts;
 
+    if (m_cacerts.empty())
+      SSL_CTX_set_default_verify_paths( m_ctx );
+
     StringList::const_iterator it = m_cacerts.begin();
     for( ; it != m_cacerts.end(); ++it )
       SSL_CTX_load_verify_locations( m_ctx, (*it).c_str(), 0 );
-- 
2.28.0

