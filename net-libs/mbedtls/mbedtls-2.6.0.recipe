SUMMARY="Open source, portable, easy to use, readable and flexible SSL library"
DESCRIPTION="mbed TLS (formerly known as PolarSSL) makes it trivially easy for \
developers to include cryptographic and SSL/TLS capabilities in their (embedded) \
products, facilitating this functionality with a minimal coding footprint."
HOMEPAGE="https://tls.mbed.org/"
COPYRIGHT="2006-2016, ARM Limited"
LICENSE="Apache v2"
REVISION="1"
SOURCE_URI="https://tls.mbed.org/download/mbedtls-$portVersion-apache.tgz"
CHECKSUM_SHA256="99bc9d4212d3d885eeb96273bcde8ecc649a481404b8d7ea7bb26397c9909687"

ARCHITECTURES="x86_gcc2 x86_64"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	mbedtls = $portVersion
	cmd:mbedtls_aescrypt2 = $portVersion
	cmd:mbedtls_benchmark = $portVersion
	cmd:mbedtls_cert_app = $portVersion
	cmd:mbedtls_cert_req = $portVersion
	cmd:mbedtls_cert_write = $portVersion
	cmd:mbedtls_crl_app = $portVersion
	cmd:mbedtls_crypt_and_hash = $portVersion
	cmd:mbedtls_dh_client = $portVersion
	cmd:mbedtls_dh_genprime = $portVersion
	cmd:mbedtls_dh_server = $portVersion
	cmd:mbedtls_dtls_client = $portVersion
	cmd:mbedtls_dtls_server = $portVersion
	cmd:mbedtls_ecdh_curve25519 = $portVersion
	cmd:mbedtls_ecdsa = $portVersion
	cmd:mbedtls_gen_entropy = $portVersion
	cmd:mbedtls_gen_key = $portVersion
	cmd:mbedtls_gen_random_ctr_drbg = $portVersion
	cmd:mbedtls_gen_random_havege = $portVersion
	cmd:mbedtls_generic_sum = $portVersion
	cmd:mbedtls_hello = $portVersion
	cmd:mbedtls_key_app = $portVersion
	cmd:mbedtls_key_app_writer = $portVersion
	cmd:mbedtls_mini_client = $portVersion
	cmd:mbedtls_mpi_demo = $portVersion
	cmd:mbedtls_pem2der = $portVersion
	cmd:mbedtls_pk_decrypt = $portVersion
	cmd:mbedtls_pk_encrypt = $portVersion
	cmd:mbedtls_pk_sign = $portVersion
	cmd:mbedtls_pk_verify = $portVersion
	cmd:mbedtls_req_app = $portVersion
	cmd:mbedtls_rsa_decrypt = $portVersion
	cmd:mbedtls_rsa_encrypt = $portVersion
	cmd:mbedtls_rsa_genkey = $portVersion
	cmd:mbedtls_rsa_sign = $portVersion
	cmd:mbedtls_rsa_sign_pss = $portVersion
	cmd:mbedtls_rsa_verify = $portVersion
	cmd:mbedtls_rsa_verify_pss = $portVersion
	cmd:mbedtls_selftest = $portVersion
	cmd:mbedtls_ssl_cert_test = $portVersion
	cmd:mbedtls_ssl_client1 = $portVersion
	cmd:mbedtls_ssl_client2 = $portVersion
	cmd:mbedtls_ssl_fork_server = $portVersion
	cmd:mbedtls_ssl_mail_client = $portVersion
	cmd:mbedtls_ssl_server = $portVersion
	cmd:mbedtls_ssl_server2 = $portVersion
	cmd:mbedtls_strerror = $portVersion
	cmd:mbedtls_udp_proxy = $portVersion
	lib:libmbedcrypto = 0 compat >=0
	lib:libmbedtls = 10 compat >= 10
	lib:libmbedx509 = 0 compat >= 0
	"
REQUIRES="
	haiku
	"

PROVIDES_devel="
	mbedtls_devel = $portVersion
	devel:libmbedcrypto = 0 compat >=0
	devel:libmbedtls = 10 compat >= 10
	devel:libmbedx509 = 0 compat >=0
	"
REQUIRES_devel="
	mbedtls == $portVersion base
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc
	cmd:make
	cmd:perl
	cmd:sed
	"

PATCH()
{
	sed -i \
		-e "s|/include/mbedtls|/$relativeOldIncludeDir|;"\
		-e "s|/include|/$relativeOldIncludeDir|;"\
		-e "s|/bin/|/$relativeBinDir/|;"\
		-e "s|/bin\$|/$relativeBinDir/|;"\
		-e "s|/lib\$|/$relativeLibDir/|;"\
		Makefile
}

BUILD()
{
	# Haiku is unix-like and network functions are in libnetwork
	make CFLAGS="-Dunix" LDFLAGS="-lnetwork" SHARED=yes WARNING_CFLAGS=
}

INSTALL()
{
	make install SHARED=yes DESTDIR=$prefix
	prepareInstalledDevelLibs libmbedcrypto libmbedtls libmbedx509
	packageEntries devel $developDir
}

TEST()
{
	LIBRARY_PATH="$sourceDir/library:$LIBRARY_PATH" make check
}
