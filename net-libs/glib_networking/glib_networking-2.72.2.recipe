SUMMARY="Network-related giomodules for GLib"
DESCRIPTION="This package contains various network related extensions for the GIO library."
HOMEPAGE="https://www.gtk.org/"
COPYRIGHT="1995-1997  Peter Mattis, Spencer Kimball and Josh MacDonald
	1991-2003 Free Software Foundation, Inc.
	1997-2006 University of Cambridge.
	1998-2001, 2003-2010 Red Hat, Inc.
	2007-2009 Nokia Corporation
	2008, 2010 Oracle and/or its affiliates, Inc. All rights
	2008-2010 Codethink Limited
	2008-2010 Collabora Ltd.
	1995-2010 Several others"
LICENSE="GNU LGPL v2"
REVISION="2"
SOURCE_URI="http://ftp.gnome.org/pub/gnome/sources/glib-networking/2.72/glib-networking-$portVersion.tar.xz"
CHECKSUM_SHA256="cd2a084c7bb91d78e849fb55d40e472f6d8f6862cddc9f12c39149359ba18268"
SOURCE_DIR="glib-networking-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	glib_networking$secondaryArchSuffix = $portVersion compat >= 2
	lib:libglib_networking_2.0$secondaryArchSuffix = $portVersion compat >= 2
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libffi$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	ca_root_certificates
	devel:libcrypto$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libtasn1$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:intltool_update
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:meson
	cmd:ninja
	cmd:python3
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	sed -e '/meson.add_install_script/ s/^#*/#/' -i meson.build

	CFLAGS="-D_BSD_SOURCE" \
	LDFLAGS="-lbsd -lgnu -lnetwork" meson build \
		-Dopenssl=enabled \
		--buildtype=release \
		--prefix=$prefix --includedir=$includeDir \
		--libdir=$libDir --datadir=$dataDir --bindir=$binDir \
		--localedir=$dataDir/locale

	ninja $jobArgs -C build
}

INSTALL()
{
	ninja -C build install
}
