SUMMARY="A HTTP and WebDAV client library"
DESCRIPTION="Neon is a HTTP and WebDAV client library with a C interface.

Features:
- high-level wrappers for common HTTP and WebDAV operations (GET, MOVE, \
DELETE, etc.).
- low-level interface to the HTTP request/response engine, allowing the use of \
arbitrary HTTP methods, headers, etc.
- authentication support including Basic and Digest support, along with \
GSSAPI-based Negotiate on Unix, and SSPI-based Negotiate/NTLM on Win32.
- SSL/TLS support using OpenSSL or GnuTLS; exposing an abstraction layer for \
verifying server certificates, handling client certificates, and examining \
certificate properties. Smartcard-based client certificates are also supported \
via a PKCS#11 wrapper interface.
- abstract interface to parsing XML using libxml2 or expat, and wrappers to \
simplify handling XML HTTP response bodies.
- WebDAV metadata support; wrappers for PROPFIND and PROPPATCH to simplify \
property manipulation."
HOMEPAGE="https://notroj.github.io/neon/
	https://github.com/notroj/neon"
COPYRIGHT="1999-2021 Joe Orton and others"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://notroj.github.io/neon/neon-$portVersion.tar.gz"
CHECKSUM_SHA256="4872e12f802572dedd4b02f870065814b2d5141f7dbdaf708eedab826b51a58a"
PATCHES="neon-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="27.5.5"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	neon$secondaryArchSuffix = $portVersion compat >= 0.29
	lib:libneon$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libncurses$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	neon${secondaryArchSuffix}_devel = $portVersion compat >= 0.29
	cmd:neon_config$commandSuffix = $portVersion compat >= 0.29
	devel:libneon$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	neon$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcrypto$secondaryArchSuffix
	devel:libncurses$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage neon$secondaryArchSuffix \
	"$libDir"/libneon.so.$libVersion

BUILD()
{
	echo 'LT_INIT' >> configure.ac
	echo 'AC_CONFIG_MACRO_DIR([macros])' >> configure.ac
	./autogen.sh
	runConfigure --omit-dirs binDir ./configure \
		--bindir=$commandBinDir \
		--with-ssl=openssl \
		--with-libxml2 \
		--enable-shared \
		--disable-static \
		--disable-nls
	make $jobArgs
}

INSTALL()
{
	make install

	rm $libDir/libneon.la

	prepareInstalledDevelLib libneon
	fixDevelopLibDirReferences $commandBinDir/neon-config
	fixPkgconfig

	# devel package
	packageEntries devel \
		$commandBinDir/neon-config \
		$developDir \
		$documentationDir

	# cleanup
	rm -r $commandBinDir
}
