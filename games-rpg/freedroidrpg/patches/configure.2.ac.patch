diff --git a/configure.ac b/configure.ac
index 73a762a..faf7cb9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -51,7 +51,7 @@ case "$target" in
 
 	*)
 	CFLAGS="$CFLAGS  -DFD_DATADIR='\"\$(pkgdatadir)\"'"   #avoid expansion of $pkgdatadir !
-	LDFLAGS="$LDFLAGS -rdynamic"
+	LDFLAGS="$LDFLAGS -lGL"
 	SYS_GL_LIB=GL
 	;;
 esac
@@ -105,53 +105,24 @@ AM_PATH_SDL($SDL_VERSION,
 CFLAGS="$CFLAGS $SDL_CFLAGS"
 LIBS="$LIBS $SDL_LIBS"
 
-AC_CHECK_LIB([jpeg], [jpeg_start_compress],,
-	AC_MSG_ERROR([libjpeg needed to run FreedroidRPG!
-see http://www.ijg.org/]))
+AC_CHECK_LIB([jpeg], [jpeg_start_compress])
 
-AC_CHECK_LIB([z], [compress],,
-	AC_MSG_ERROR([zlib is needed to run FreedroidRPG!
-see http://www.gzip.org/zlib/]))
+AC_CHECK_LIB([z], [compress])
 
-AC_CHECK_LIB([png], [png_read_png],,
-	AC_MSG_ERROR([libpng needed to run FreedroidRPG
-see http://www.libpng.org/pub/png/libpng.html]))
+AC_CHECK_LIB([png], [png_read_png])
 
-AC_CHECK_LIB([SDL_image], [IMG_LoadJPG_RW],,
-	AC_MSG_ERROR([SDL_image library needed for FreedroidRPG!
-see http://www.libsdl.org/]))
+AC_CHECK_LIB([SDL_image], [IMG_LoadJPG_RW])
 
-AC_CHECK_LIB([SDL_gfx], [zoomSurface],,
-	AC_MSG_ERROR([SDL_gfx library needed for FreedroidRPG!
-Please refer to the INSTALL file]))
+AC_CHECK_LIB([SDL_gfx], [zoomSurface])
 
 AC_MSG_NOTICE([[Checking for optional SDL libraries:]])
 summary_sound="yes"
-AC_CHECK_LIB([SDL_mixer], [Mix_ChannelFinished],, AC_MSG_WARN([
---------------------------------------------------
-libSDL_mixer not found!
-You need the SDL_mixer library (version >= 1.2.1) if you want sound!
-(see see http://www.libsdl.org/)
---> compiling without sound support
---------------------------------------------------])
-summary_sound="SDL_mixer not found")
+AC_CHECK_LIB([SDL_mixer], [Mix_ChannelFinished])
 
 if test x$want_vorbis = xyes; then
-AC_CHECK_LIB([ogg], [oggpack_read],, AC_MSG_WARN([
---------------------------------------------------
-libogg not found!
-You need the Ogg libs installed if you want
-Freedroid to be able to play Ogg files (e.g. the Intro theme)
---------------------------------------------------])
-summary_sound="no libogg")
+AC_CHECK_LIB([ogg], [oggpack_read])
 
-AC_CHECK_LIB([vorbis], [vorbis_block_init],, AC_MSG_WARN([
---------------------------------------------------
-libvorbis not found!
-You need the Vorbis libs installed if you want
-Freedroid to be able to play Ogg files (e.g. the Intro theme)
---------------------------------------------------])
-summary_sound="no libvorbis")
+AC_CHECK_LIB([vorbis], [vorbis_block_init])
 else
 AC_DEFINE(HAVE_LIBOGG,0, [Define to 1 if ogg libs were found])
 AC_DEFINE(HAVE_LIBVORBIS,0, [Define to 1 if Vorbis libs were found])
@@ -219,7 +190,17 @@ AC_TYPE_SIZE_T
 AC_HEADER_TIME
 
 # Checks for library functions.
-AC_CHECK_FUNCS([alarm getcwd gettimeofday memset sqrt strstr strtok alphasort scandir nl_langinfo dirname])
+AC_DEFINE([HAVE_ALARM],[1],[Haiku has alarm])
+AC_DEFINE([HAVE_DIRNAME],[1],[Haiku has dirname])
+AC_DEFINE([HAVE_GETCWD],[1],[Haiku has getcwd])
+AC_DEFINE([HAVE_GETTIMEOFDAY],[1],[Haiku has gettimeofday])
+AC_DEFINE([HAVE_STRSTR],[1],[Haiku has strstr])
+AC_DEFINE([HAVE_STRTOK],[1],[Haiku has strtok])
+AC_DEFINE([HAVE_SQRT],[1],[Haiku has sqrt])
+AC_DEFINE([HAVE_MEMSET],[1],[Haiku has memset])
+AC_DEFINE([HAVE_SCANDIR],[1],[Haiku has scandir])
+AC_DEFINE([HAVE_ALPHASORT],[1],[Haiku has alphashort])
+AC_DEFINE([PACKAGE_BUGREPORT],["http://github.com/haikuports/haikuports"],[Haikuports bugs])
 
 if test x$want_backtrace = xyes; then
    AC_CHECK_FUNCS([backtrace])
