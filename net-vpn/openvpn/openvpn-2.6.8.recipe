SUMMARY="A Secure tunneling daemon"
DESCRIPTION="OpenVPN is a robust and highly flexible tunneling application that uses all of the \
encryption, authentication, and certification features of the OpenSSL library to securely tunnel \
IP networks over a single UDP or TCPport.
It can use the Marcus Franz Xaver Johannes Oberhumers LZO library for compression."
HOMEPAGE="https://openvpn.net"
COPYRIGHT="2002-2023 OpenVPN Inc"
LICENSE="OpenVPN
	GNU GPL v2"
REVISION="3"
SOURCE_URI="https://github.com/OpenVPN/openvpn/archive/refs/tags/v$portVersion.tar.gz"
CHECKSUM_SHA256="36fe5399b59a00932b8c3919c76203176b79125f9023046d3db35a701be891f8"
SOURCE_FILENAME="openvpn-$portVersion.tar.gz"
PATCHES="
	openvpn-$portVersion.patchset
	"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	openvpn$secondaryArchSuffix = $portVersion
	cmd:openvpn = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:liblzo2$secondaryArchSuffix
	lib:liblz4$secondaryArchSuffix
#	lib:libpkcs11$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	"

defineDebugInfoPackage openvpn$secondaryArchSuffix \
	$commandBinDir/openvpn \
	$libDir/openvpn/plugins/openvpn-plugin-auth-pam.so \
	$libDir/openvpn/plugins/openvpn-plugin-down-root.so

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:liblzo2$secondaryArchSuffix
	devel:liblz4$secondaryArchSuffix
	devel:libpam$secondaryArchSuffix
	devel:libpkcs11_helper$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoreconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	docutils_python39
	"

BUILD()
{
	autoreconf -fi
	LDFLAGS="-lnetwork" runConfigure --omit-dirs sbinDir ./configure \
		--sbindir=$commandBinDir \
		--disable-static
	make $jobArgs
}

INSTALL()
{
	make install

	# remove libtool files
	find $libDir -name '*.la' -delete
}

TEST()
{
	make check
}
