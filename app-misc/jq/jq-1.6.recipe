SUMMARY="A lightweight and flexible command-line JSON processor"
DESCRIPTION="jq is like sed for JSON data – you can use it to slice \
and filter and map and transform structured data with the same ease \
that sed, awk, grep and friends let you play with text. \
It is written in portable C, and it has zero runtime dependencies. \
You can download a single binary, scp it to a far away machine, \
and expect it to work. It can mangle the data format that you have into \
the one that you want with very little effort, and the program to do so \
is often shorter and simpler than you’d expect."
HOMEPAGE="http://stedolan.github.io/jq/"
COPYRIGHT="2012,2015 Stephen Dolan"
LICENSE="MIT"
REVISION="3"
SOURCE_URI="http://github.com/stedolan/jq/archive/jq-$portVersion.tar.gz"
CHECKSUM_SHA256="158182b85f3be9e23ab1dc50cfcc24e415aade2a0b8a5d9f709e0b587666d61b"
SOURCE_DIR="jq-jq-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandBinDir=$prefix/bin
fi


PROVIDES="
	jq = $portVersion
	cmd:jq = $portVersion
	"
REQUIRES="
	haiku${secondaryArchSuffix}
	lib:libonig$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libonig$secondaryArchSuffix >= 5
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:awk
	cmd:autoconf
	cmd:autoreconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	touch src/lexer.c src/parser.c
	autoreconf -fi
	runConfigure ./configure
	make $jobArgs
}

INSTALL()
{
	mkdir -p $commandBinDir
	cp -a jq $commandBinDir

	mkdir -p $manDir/man1
	cp -a jq.1 $manDir/man1
}
