From 6f1a36ff0223832812954992b36e1a22ed2cd695 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Tue, 13 Aug 2013 08:07:25 +0200
Subject: git-web--browse.sh: use "open" on Haiku


diff --git a/git-web--browse.sh b/git-web--browse.sh
index ae15253..b074d1a 100755
--- a/git-web--browse.sh
+++ b/git-web--browse.sh
@@ -133,6 +133,11 @@ if test -z "$browser" ; then
 		browser_candidates="cygstart $browser_candidates"
 	fi
 
+	# /boot/system/haiku_loader indicates Haiku
+	if test -f /boot/system/haiku_loader; then
+		browser_candidates="open $browser_candidates"
+	fi
+
 	for i in $browser_candidates; do
 		init_browser_path $i
 		if type "$browser_path" > /dev/null 2>&1; then
-- 
2.15.0


From 6991c216d9883cc9fd0947dddd0d1f87a5b9a1c9 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Mon, 19 Jan 2015 15:37:16 -0500
Subject: On Haiku use the user settings directory instead of HOME


diff --git a/path.c b/path.c
index da8b655..ec3d6c2 100644
--- a/path.c
+++ b/path.c
@@ -11,6 +11,11 @@
 #include "path.h"
 #include "packfile.h"
 
+#ifdef __HAIKU__
+#include <FindDirectory.h>
+#include <StorageDefs.h>
+#endif
+
 static int get_st_mode_bits(const char *path, int *mode)
 {
 	struct stat st;
@@ -1331,10 +1336,19 @@ char *xdg_config_home(const char *filename)
 {
 	const char *home, *config_home;
 
+#ifdef __HAIKU__
+	char settingsPath[B_PATH_NAME_LENGTH];
+ 	assert(filename);
+	if (find_directory(B_USER_SETTINGS_DIRECTORY, -1, true, settingsPath,
+		sizeof(settingsPath)) == B_OK)
+		return mkpathdup("%s/git/%s", settingsPath, filename);
+#else
 	assert(filename);
 	config_home = getenv("XDG_CONFIG_HOME");
+
 	if (config_home && *config_home)
 		return mkpathdup("%s/git/%s", config_home, filename);
+#endif
 
 	home = getenv("HOME");
 	if (home)
-- 
2.15.0


From 1ae5f8e6552ad007c2863c630f3d00af25dd9d6c Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 19 Jan 2015 15:50:09 -0500
Subject: Ensure config-directory exists before using it.


diff --git a/config.c b/config.c
index adb7d7a..4b1b14e 100644
--- a/config.c
+++ b/config.c
@@ -2453,6 +2453,7 @@ int git_config_set_multivar_in_file_gently(const char *config_filename,
 	int ret;
 	struct lock_file lock = LOCK_INIT;
 	char *filename_buf = NULL;
+	char *config_dir = NULL;
 	char *contents = NULL;
 	size_t contents_sz;
 
@@ -2466,6 +2467,12 @@ int git_config_set_multivar_in_file_gently(const char *config_filename,
 	if (!config_filename)
 		config_filename = filename_buf = git_pathdup("config");
 
+	config_dir = xstrdup(config_filename);
+	* find_last_dir_sep(config_dir) = '\0';
+	if (access(config_dir, F_OK) != 0)
+		mkdir(config_dir, 0755);
+	free(config_dir);
+
 	/*
 	 * The lock serves a purpose in addition to locking: the new
 	 * contents of .git/config will be written into it.
-- 
2.15.0


From d05e3f2f90015d304653b0b5b95c47728e484cd7 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 14 Feb 2016 10:32:12 +0100
Subject: Move credential cache to the config directory.

Do not clutter the home dir.

diff --git a/credential-cache.c b/credential-cache.c
index 1cccc3a..076f6fa 100644
--- a/credential-cache.c
+++ b/credential-cache.c
@@ -87,7 +87,7 @@ static char *get_socket_path(void)
 {
 	struct stat sb;
 	char *old_dir, *socket;
-	old_dir = expand_user_path("~/.git-credential-cache", 0);
+	old_dir = xdg_config_home("credential-cache");
 	if (old_dir && !stat(old_dir, &sb) && S_ISDIR(sb.st_mode))
 		socket = xstrfmt("%s/socket", old_dir);
 	else
-- 
2.15.0


From ca5578cbeda5822c33d6ee55eb11f72ee55a2d9d Mon Sep 17 00:00:00 2001
From: localanu <localanu@gmail.com>
Date: Thu, 21 Dec 2017 23:15:15 +0000
Subject: Fix dir to ~/config/settings/git/config


diff --git a/builtin/commit.c b/builtin/commit.c
index d75b380..73186aa 100644
--- a/builtin/commit.c
+++ b/builtin/commit.c
@@ -1419,7 +1419,7 @@ int cmd_status(int argc, const char **argv, const char *prefix)
 
 static const char *implicit_ident_advice(void)
 {
-	char *user_config = expand_user_path("~/.gitconfig", 0);
+	char *user_config = expand_user_path("~/config/settings/git/config", 0);
 	char *xdg_config = xdg_config_home("config");
 	int config_exists = file_exists(user_config) || file_exists(xdg_config);
 
diff --git a/builtin/config.c b/builtin/config.c
index d13daee..faa388a 100644
--- a/builtin/config.c
+++ b/builtin/config.c
@@ -505,7 +505,7 @@ int cmd_config(int argc, const char **argv, const char *prefix)
 	}
 
 	if (use_global_config) {
-		char *user_config = expand_user_path("~/.gitconfig", 0);
+		char *user_config = expand_user_path("~/config/settings/git/config", 0);
 		char *xdg_config = xdg_config_home("config");
 
 		if (!user_config)
diff --git a/config.c b/config.c
index 4b1b14e..bd720cf 100644
--- a/config.c
+++ b/config.c
@@ -1535,7 +1535,7 @@ static int do_git_config_sequence(const struct config_options *opts,
 {
 	int ret = 0;
 	char *xdg_config = xdg_config_home("config");
-	char *user_config = expand_user_path("~/.gitconfig", 0);
+	char *user_config = expand_user_path("~/config/settings/git/config", 0);
 	char *repo_config;
 
 	if (opts->commondir)
-- 
2.15.0

