SUMMARY="A secure replacement for inetd"
DESCRIPTION="powerful replacement for inetd"
HOMEPAGE="https://github.com/xinetd-org/xinetd"
COPYRIGHT="1992 Panagiotis Tsirigotis
	1998-2001 Rob Braun"
LICENSE="Xinetd"
REVISION="1"
SOURCE_URI="https://github.com/xinetd-org/xinetd/archive/xinetd-${portVersion//\./-}.tar.gz"
CHECKSUM_SHA256="620b25f4ab4d72fdf32b13797156ea40df2049f1c07e640177e5fec544e9a94c"
SOURCE_DIR="xinetd-xinetd-${portVersion//\./-}"
PATCHES="xinetd-$portVersion.patchset"

ARCHITECTURES="?x86_gcc2 ?x86_64"

PROVIDES="
	xinetd = $portVersion
	cmd:itox = $portVersion
	cmd:xconv.pl = $portVersion
	cmd:xinetd = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:gcc
	cmd:libtoolize
	cmd:make
	cmd:perl
	"

PATCH()
{
	# if we don't have rpc/rpc.h then why does it still try to use it??
	# let's change the #ifndef NO_RPC to #ifdef HAVE_RPC_RPC
	sed -i 's/ndef NO_RPC/def HAVE_RPC_RPC/g' xinetd/*.c

	# workaround while (SIGBUS == SIGSEGV) on HAIKU
	sed -i 's/case SIGBUS:/\n/' xinetd/signals.c

	# save rlim_t
	sed -i 's/XINETD_CHECK_TYPE(rlim_t/dnl &/' configure.in
}

BUILD()
{
	libtoolize --force --copy --install
	aclocal
	autoconf
	runConfigure ./configure
	make $jobArgs
}

INSTALL()
{
	make install
}
