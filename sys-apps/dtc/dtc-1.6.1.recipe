SUMMARY="The Device Tree Compiler"
DESCRIPTION="The Device Tree Compiler (DTC) is the toolchain for building \
device tree source files (*.dts) into the binary format (*.dtb)."
HOMEPAGE="https://git.kernel.org/cgit/utils/dtc/dtc.git"
COPYRIGHT="2005 David Gibson, IBM Corporation"
LICENSE="GNU GPL v2"
REVISION="3"
SOURCE_URI="https://www.kernel.org/pub/software/utils/dtc/dtc-$portVersion.tar.xz"
CHECKSUM_SHA256="65cec529893659a49a89740bb362f507a3b94fc8cd791e76a8d6a2b6f3203473"
PATCHES="dtc-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion=$portVersion
libVersionCompat=${libVersion%%.*}

PROVIDES="
	dtc$secondaryArchSuffix = $portVersion
	lib:libfdt$secondaryArchSuffix = 1
	lib:libfdt_$portVersion$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libyaml_0$secondaryArchSuffix
	"

PROVIDES_tools="
	dtc${secondaryArchSuffix}_tools
	cmd:convert_dtsv0$commandSuffix = $portVersion
	cmd:dtc$commandSuffix = $portVersion
	cmd:dtdiff$commandSuffix = $portVersion
	cmd:fdtdump$commandSuffix = $portVersion
	cmd:fdtget$commandSuffix = $portVersion
	cmd:fdtoverlay$commandSuffix = $portVersion
	cmd:fdtput$commandSuffix = $portVersion
	"
REQUIRES_tools="
	dtc$secondaryArchSuffix == $portVersion base
	haiku$secondaryArchSuffix
	lib:libyaml_0$secondaryArchSuffix
	"

PROVIDES_devel="
	dtc${secondaryArchSuffix}_devel = $portVersion
	devel:libfdt$secondaryArchSuffix =1
	devel:libfdt_$portVersion$secondaryArchSuffix
	"
REQUIRES_devel="
	dtc$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libyaml_0$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:bison
	cmd:cmp
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage dtc$secondaryArchSuffix \
	"$(getPackagePrefix tools)"/bin/convert-dtsv0 \
	"$(getPackagePrefix tools)"/bin/dtc \
	"$(getPackagePrefix tools)"/bin/fdtdump \
	"$(getPackagePrefix tools)"/bin/fdtget \
	"$(getPackagePrefix tools)"/bin/fdtoverlay \
	"$(getPackagePrefix tools)"/bin/fdtput \
	$libDir/libfdt-$portVersion.so

BUILD()
{
	make PREFIX=$prefix $jobArgs NO_PYTHON=TRUE
}

INSTALL()
{
	make install \
		PREFIX=$prefix \
		BINDIR=$commandBinDir \
		INCLUDEDIR=$includeDir \
		LIBDIR=$libDir \
		NO_PYTHON=1

	# remove static library
	rm -f $libDir/libfdt.a

	prepareInstalledDevelLibs libfdt libfdt-$portVersion

	packageEntries devel $developDir

	packageEntries tools $commandBinDir

	ln -r -s $libDir/libfdt-$portVersion.so \
		$libDir/libfdt.so.$libVersionCompat
}

TEST()
{
	make check
}
