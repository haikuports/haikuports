SUMMARY="The Device Tree Compiler"
DESCRIPTION="The Device Tree Compiler (DTC) is the toolchain for building \
device tree source files (*.dts) into the binary format (*.dtb)."
HOMEPAGE="https://git.kernel.org/cgit/utils/dtc/dtc.git"
COPYRIGHT="2005 David Gibson, IBM Corporation"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://www.kernel.org/pub/software/utils/dtc/dtc-$portVersion.tar.xz"
CHECKSUM_SHA256="382302bfcc3c40734be80ac620983971d911ec4cde798f551873f3eb008c7b7e"
PATCHES="dtc-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion=$portVersion
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	dtc$secondaryArchSuffix = $portVersion
	cmd:convert_dtsv0$commandSuffix = $portVersion
	cmd:dtc$commandSuffix = $portVersion
	cmd:dtdiff$commandSuffix = $portVersion
	cmd:fdtdump$commandSuffix = $portVersion
	cmd:fdtget$commandSuffix = $portVersion
	cmd:fdtoverlay$commandSuffix = $portVersion
	cmd:fdtput$commandSuffix = $portVersion
	lib:libfdt$secondaryArchSuffix = $libVersionCompat
	lib:libfdt_$portVersion$secondaryArchSuffix
	devel:libfdt$secondaryArchSuffix = $libVersionCompat
	devel:libfdt_$portVersion$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:bison >= 2.5
	cmd:cmp
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:make
	"

defineDebugInfoPackage dtc$secondaryArchSuffix \
	"$commandBinDir"/convert-dtsv0 \
	"$commandBinDir"/dtc \
	"$commandBinDir"/fdtdump \
	"$commandBinDir"/fdtget \
	"$commandBinDir"/fdtoverlay \
	"$commandBinDir"/fdtput \
	"$libDir"/libfdt-$portVersion.so

BUILD()
{
	make PREFIX=$prefix $jobArgs NO_PYTHON=TRUE
}

INSTALL()
{
	make install PREFIX="$prefix" BINDIR="$commandBinDir" \
		INCLUDEDIR="$includeDir" LIBDIR="$libDir" NO_PYTHON=1

	prepareInstalledDevelLibs libfdt

	ln -r -s "$libDir"/libfdt-$portVersion.so "$developLibDir"

}

TEST()
{
	make check
}
