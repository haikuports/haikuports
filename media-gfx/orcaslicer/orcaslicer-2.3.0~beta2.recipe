SUMMARY="An open source slicer for FDM printers"
DESCRIPTION="Orca slicer is a powerful open source slicer for FFF (FDM) 3D Printers.

Main features:
* Auto-calibration for all printers
* Sandwich (inner-outer-inner) mode - An improved version of the External Perimeters First mode
* Precise wall
* Polyholes conversion support
* Klipper support
* More granular controls"
HOMEPAGE="https://github.com/SoftFever/OrcaSlicer"
COPYRIGHT="SoftFever"
LICENSE="GNU AGPL v3"
REVISION="2"
SOURCE_URI="https://github.com/SoftFever/OrcaSlicer/archive/refs/tags/v${portVersion/\~/-}.tar.gz"
CHECKSUM_SHA256="bee3bc54c968d8f7c069c00d4f196807b5522d77eb8424fd0c09f0a0e9666652"
SOURCE_DIR="OrcaSlicer-${portVersion/\~/-}"
PATCHES="orcaslicer-$portVersion.patchset"
srcGitRev2="a7eb2cfd53a70fcd9ba9dcfad80a3994642f362f"
SOURCE_URI_2="https://gitlab.freedesktop.org/mesa/drm/-/archive/$srcGitRev2/drm-$srcGitRev2.tar.gz"
CHECKSUM_SHA256_2="f34af06cd3d7c0b8b68b8bbe9844d02114bd19a1a7eab7520c2f7fbd0956cbb5"
SOURCE_DIR_2="drm-$srcGitRev2"
PATCHES_2="orcaslicer-$portVersion-drm.patchset"
srcGitRev3="faa72ba346d7f852fb7962bf6068d750c28f6bdb"
SOURCE_URI_3="https://github.com/X547/mesa/archive/$srcGitRev3.zip"
CHECKSUM_SHA256_3="b62c1b5b4419f320bde62b08253a20d3e4c2d2c51d1f9178e396da85de3aed2b"
SOURCE_DIR_3="mesa-$srcGitRev3"
PATCHES_3="orcaslicer-$portVersion-mesa.patchset"

ADDITIONAL_FILES="
	orcaslicer.rdef.in
	OrcaSlicer.sh
	"
ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="?x86"

PROVIDES="
	orcaslicer$secondaryArchSuffix = $portVersion
	app:OrcaSlicer = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libatk_1.0$secondaryArchSuffix
	lib:libboost_atomic$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libbrotlidec$secondaryArchSuffix
	lib:libcairo$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libglfw$secondaryArchSuffix	
	lib:libGLEW$secondaryArchSuffix
	lib:libgdk_3$secondaryArchSuffix
	lib:libgdk_pixbuf_2.0$secondaryArchSuffix
	lib:libhalf_2_4$secondaryArchSuffix
	lib:libharfbuzz$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgstapp_1.0$secondaryArchSuffix
	lib:libgstaudio_1.0$secondaryArchSuffix
	lib:libgstbase_1.0$secondaryArchSuffix
	lib:libgstpbutils_1.0$secondaryArchSuffix
	lib:libgstreamer_1.0$secondaryArchSuffix
	lib:libgsttag_1.0$secondaryArchSuffix
	lib:libgstvideo_1.0$secondaryArchSuffix
	lib:libgmodule_2.0$secondaryArchSuffix
	lib:libgobject_2.0$secondaryArchSuffix
	lib:libgtk_3$secondaryArchSuffix
	lib:libharfbuzz$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libLLVM$secondaryArchSuffix >= 18
	lib:libnlopt$secondaryArchSuffix
	lib:libpango_1.0$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libsoup_3.0$secondaryArchSuffix
	lib:libtbb$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libopenvdb$secondaryArchSuffix
	lib:libwayland_client$secondaryArchSuffix
	lib:libwebkit2gtk_4.1$secondaryArchSuffix
	lib:libwx_gtk3u_aui_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_core_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_gl_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_media_3.2$secondaryArchSuffix
	lib:libwx_baseu_net_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_webview_3.2$secondaryArchSuffix
	lib:libzstd$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	opencascade${secondaryArchSuffix}_devel	
	wxgtk${secondaryArchSuffix}_devel
	devel:cereal$secondaryArchSuffix
	devel:eigen$secondaryArchSuffix
	devel:libboost_atomic$secondaryArchSuffix >= 1.83.0
	devel:libboost_chrono$secondaryArchSuffix >= 1.83.0
	devel:libboost_date_time$secondaryArchSuffix >= 1.83.0
	devel:libboost_system$secondaryArchSuffix >= 1.83.0
	devel:libboost_thread$secondaryArchSuffix >= 1.83.0
	devel:libbrotlidec$secondaryArchSuffix
	devel:libcppunit$secondaryArchSuffix
	devel:libcrypto$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix	
	devel:libexecinfo$secondaryArchSuffix
	devel:libexpat$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgdk_3$secondaryArchSuffix
	devel:libgdk_pixbuf_2.0$secondaryArchSuffix
	devel:libgstapp_1.0$secondaryArchSuffix
	devel:libgstreamer_1.0$secondaryArchSuffix
	devel:libGL$secondaryArchSuffix
	devel:libglew$secondaryArchSuffix >= 2.2
	devel:libglfw$secondaryArchSuffix
	devel:libGLU$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libgtk_3$secondaryArchSuffix
	devel:libhalf_2_4$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libLLVM_18$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libnettle$secondaryArchSuffix
	devel:libnghttp2$secondaryArchSuffix
	devel:libnlopt$secondaryArchSuffix
	devel:libopenvdb$secondaryArchSuffix
	devel:libpcre$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libpsl$secondaryArchSuffix
	devel:libsoup_3.0$secondaryArchSuffix
	devel:libsqlite3$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libtbb$secondaryArchSuffix
	devel:libxkbcommon$secondaryArchSuffix
	devel:libvulkan$secondaryArchSuffix
	devel:libwayland_client$secondaryArchSuffix
	devel:libwayland_egl$secondaryArchSuffix 
	devel:libwayland_server$secondaryArchSuffix
	devel:libwebkit2gtk_4.1$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	devel:libzstd$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	wayland_protocols
	"
BUILD_PREREQUIRES="
	mako_python310
	pyyaml_python310
	cmd:aclocal
	cmd:autoconf
	cmd:awk
	cmd:bison
	cmd:cmake
	cmd:cmp
	cmd:diff
	cmd:egrep
	cmd:find
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:gettext
	cmd:git
	cmd:libtoolize$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:lld >= 18
	cmd:llvm_config >= 18
	cmd:make
	cmd:makeinfo
	cmd:meson
	cmd:ninja
	cmd:patch
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3.10
	cmd:which
	cmd:xgettext
	"

BUILD()
{
	# build deps
	cmake -S deps -B deps/build/release \
		-G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-DDESTDIR="${PWD}/deps/build/destdir" \
		-DDEP_DOWNLOAD_DIR="${PWD}/deps/DL_CACHE" \
		-DDEP_WX_GTK3=ON

	cmake --build deps/build/release

	# build OrcaSlicer
	cmake -S . -B _build \
		-G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PATH=$appsDir/OrcaSlicer \
		-DCMAKE_PREFIX_PATH="${PWD}/deps/build/destdir/usr/local" \
		-DSLIC3R_STATIC=0 \
		-DSLIC3R_GTK=3 \
		-DORCA_TOOLS=ON \
		-DCMAKE_CXX_FLAGS="-fuse-ld=lld -Wl,--no-keep-memory -Wl,--undefined-version"

	cmake --build _build -j1
	
	# build locales
	run_gettext.sh

	# build hack for localtime_r
	gcc -shared -o haiku/libfakelocaltime.so haiku/libfakelocaltime.c
	
	# build libdrm
	cd $sourceDir2
	mkdir -p build
	meson build \
		--buildtype=release \
		--prefix=$sourceDir2/build/install \
		-Dintel=disabled \
		-Dradeon=disabled \
		-Damdgpu=disabled \
		-Dnouveau=disabled \
		-Dvmwgfx=disabled \
		-Dfreedreno=disabled \
		-Dvc4=disabled \
		-Detnaviv=disabled \
		-Dcairo-tests=disabled \
		-Dman-pages=disabled \
		-Dvalgrind=disabled \
		-Dtests=false
	ninja -C build $jobArgs
	ninja -C build install
	
	# build mesa for wayland
	cd $sourceDir3
	mkdir -p build
	export PKG_CONFIG_PATH=$sourceDir2/build/install/lib/pkgconfig:$PKG_CONFIG_PATH
	meson build \
		--buildtype=release \
		--prefix=$sourceDir3/build/install \
		-Dplatforms=wayland \
		-Dglx=disabled \
		-Dgbm=disabled \
		-Dglvnd=disabled \
		-Dgallium-drivers=llvmpipe \
		-Dvulkan-drivers=swrast \
		-Dvulkan-icd-dir=$sourceDir3/build/install/lib

	ninja -C build $jobArgs
	ninja -C build install
}

INSTALL()
{
	mkdir -p $appsDir/OrcaSlicer/bin/lib

	cp -f _build/src/orca-slicer $appsDir/OrcaSlicer/bin/OrcaSlicer
	cp -rf resources $appsDir/OrcaSlicer
	cp -Pf deps/build/destdir/usr/local/lib/*.so* $appsDir/OrcaSlicer/bin/lib
	cp -Pf $sourceDir2/build/install/lib/*.so* $appsDir/OrcaSlicer/bin/lib
	cp -Pf $sourceDir3/build/install/lib/*.so* $appsDir/OrcaSlicer/bin/lib
	cp -Pf haiku/*.so $appsDir/OrcaSlicer/bin/lib
	cp -f $portDir/additional-files/OrcaSlicer.sh $appsDir/OrcaSlicer/OrcaSlicer
	chmod +x $appsDir/OrcaSlicer/OrcaSlicer
	strip $appsDir/OrcaSlicer/bin/OrcaSlicer

	local APP_SIGNATURE="application/x-vnd.orca-slicer"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3 | cut -d~ -f1`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/orcaslicer.rdef.in > $sourceDir/orcaslicer.rdef

	addResourcesToBinaries $sourceDir/orcaslicer.rdef $appsDir/OrcaSlicer/bin/OrcaSlicer

	rc orcaslicer.rdef
	resattr -o $appsDir/OrcaSlicer/OrcaSlicer orcaslicer.rsrc

	addAppDeskbarSymlink $appsDir/OrcaSlicer/OrcaSlicer
}
