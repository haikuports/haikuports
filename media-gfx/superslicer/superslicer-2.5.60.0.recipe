SUMMARY="G-code generator for 3D printers"
DESCRIPTION="SuperSlicer takes 3D models (STL, OBJ, AMF) and converts them into G-code \
instructions for FFF printers or PNG layers for mSLA 3D printers. It's compatible with \
any modern printer based on the RepRap toolchain which is running a firmware based on \
Marlin, Prusa, Klipper, etc.

SuperSlicer is based on PrusaSlicer by Prusa Research. PrusaSlicer is based on Slic3r \
by Alessandro Ranellucci and the RepRap community.

What are SuperSlicer main features? main new features/differences?

* Custom-made generated calibration tests.
* new settings to fine-tune the top surface quality, like 'only one perimeter on top'.
* A 'denser infill' option for supporting the (solid) top layers.
* Better Thin walls (anchored inside the print, no more random bits at the ends, embedded in perimeter loops).
* Options to change holes dimensions and/or geometry, to print them at the right size.
* Better overhangs (add perimeters if needed, slice them in opposite direction each layer).
* Brim rework: many more options (inside, outside only, 'ears', per object)
* Some new seam options, to help hide them.
* Built-in calibration prints
* Built-in object generation script
* Can join perimeters into a big one to avoid travel moves.
* Many other little options and corrections (like the filled concentric pattern).
* It has also all the current slic3rPE/PrusaSlicer features."
HOMEPAGE="https://github.com/supermerill/SuperSlicer"
COPYRIGHT="Merill"
LICENSE="GNU AGPL v3"
REVISION="3"
SOURCE_URI="https://github.com/supermerill/SuperSlicer/archive/refs/tags/$portVersion.tar.gz"
CHECKSUM_SHA256="47ddf0dcf2d428e483011a74d32fe56a75fbe55dc8a3187956d5dd5758279dcb"
SOURCE_DIR="SuperSlicer-$portVersion"
PATCHES="superslicer-$portVersion.patchset"
srcGitRev2="fe18f18b4c005a2c4e4b69a5866d0d065bde82aa"
SOURCE_URI_2="https://github.com/FormerLurker/ArcWelderLib/archive/$srcGitRev2.tar.gz"
CHECKSUM_SHA256_2="c38a02ab3d7e5da05402e0c9ecaabc70e576e60b0b93b8f0b7b78f456113e60d"
SOURCE_DIR_2="ArcWelderLib-$srcGitRev2"
srcGitRev3="ca25c7ec55dcc6073da61e39692c321cdb6497dc"
SOURCE_URI_3="https://github.com/slic3r/slic3r-profiles/archive/$srcGitRev3.tar.gz"
CHECKSUM_SHA256_3="01ed3cada426e586960338ddb63c8113c86b698d4d6debdabaa720463bbdbb98"
SOURCE_DIR_3="slic3r-profiles-$srcGitRev3"
srcGitRev4="a7eb2cfd53a70fcd9ba9dcfad80a3994642f362f"
SOURCE_URI_4="https://gitlab.freedesktop.org/mesa/drm/-/archive/$srcGitRev4/drm-$srcGitRev4.tar.gz"
CHECKSUM_SHA256_4="c62ee1655e6beee0f876ee9b91e3f273d76827b322c29d2940cb6b95ee03a192"
SOURCE_DIR_4="libdrm-$srcGitRev4"
PATCHES_4="superslicer-$portVersion-drm.patchset"
srcGitRev5="37a38f6744f3e81063d13995a974ccd383050514"
SOURCE_URI_5="https://gitlab.freedesktop.org/mesa/mesa/-/archive/$srcGitRev5/mesa-$srcGitRev5.tar.bz2"
CHECKSUM_SHA256_5="84e6d3c9c1eb4ff1325aebf2ea831722075621b5a65650b651e8429d26cf8938"
SOURCE_DIR_5="mesa-$srcGitRev5"
PATCHES_5="superslicer-$portVersion-mesa.patchset"

ADDITIONAL_FILES="
	superslicer.rdef.in
	gcodeviewer.rdef.in
	"
ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="?x86"

PROVIDES="
	superslicer$secondaryArchSuffix = $portVersion
	app:SuperSlicer = $portVersion
	app:GCodeViewer = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libatk_1.0$secondaryArchSuffix
	lib:libboost_atomic$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libbrotlidec$secondaryArchSuffix
	lib:libcairo$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libglfw$secondaryArchSuffix	
	lib:libGLEW$secondaryArchSuffix
	lib:libgdk_3$secondaryArchSuffix
	lib:libgdk_pixbuf_2.0$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libhalf_2_4$secondaryArchSuffix
	lib:libharfbuzz$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgstapp_1.0$secondaryArchSuffix
	lib:libgstaudio_1.0$secondaryArchSuffix
	lib:libgstbase_1.0$secondaryArchSuffix
	lib:libgstpbutils_1.0$secondaryArchSuffix
	lib:libgstreamer_1.0$secondaryArchSuffix
	lib:libgsttag_1.0$secondaryArchSuffix
	lib:libgstvideo_1.0$secondaryArchSuffix
	lib:libgmodule_2.0$secondaryArchSuffix
	lib:libgobject_2.0$secondaryArchSuffix
	lib:libgtk_3$secondaryArchSuffix
	lib:libharfbuzz$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libLLVM$secondaryArchSuffix >= 20
	lib:libmpfr$secondaryArchSuffix
	lib:libnlopt$secondaryArchSuffix
	lib:libpango_1.0$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libsoup_3.0$secondaryArchSuffix
	lib:libtbb$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libopenvdb$secondaryArchSuffix
	lib:libwayland_client$secondaryArchSuffix
	lib:libwebkit2gtk_4.1$secondaryArchSuffix
	lib:libwx_gtk3u_aui_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_core_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_gl_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_media_3.2$secondaryArchSuffix
	lib:libwx_baseu_net_3.2$secondaryArchSuffix
	lib:libwx_gtk3u_webview_3.2$secondaryArchSuffix
	lib:libzstd$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	opencascade${secondaryArchSuffix}_devel	
	wxgtk${secondaryArchSuffix}_devel
	devel:cereal$secondaryArchSuffix
	devel:eigen$secondaryArchSuffix
	devel:libboost_atomic$secondaryArchSuffix >= 1.83.0
	devel:libboost_chrono$secondaryArchSuffix >= 1.83.0
	devel:libboost_date_time$secondaryArchSuffix >= 1.83.0
	devel:libboost_system$secondaryArchSuffix >= 1.83.0
	devel:libboost_thread$secondaryArchSuffix >= 1.83.0
	devel:libbrotlidec$secondaryArchSuffix
	devel:libcppunit$secondaryArchSuffix
	devel:libcrypto$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix	
	devel:libexecinfo$secondaryArchSuffix
	devel:libexpat$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgdk_3$secondaryArchSuffix
	devel:libgdk_pixbuf_2.0$secondaryArchSuffix
	devel:libgstapp_1.0$secondaryArchSuffix
	devel:libgstreamer_1.0$secondaryArchSuffix
	devel:libGL$secondaryArchSuffix
	devel:libglew$secondaryArchSuffix >= 2.2
	devel:libglfw$secondaryArchSuffix
	devel:libGLU$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libgtk_3$secondaryArchSuffix
	devel:libhalf_2_4$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libLLVM_20$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libnettle$secondaryArchSuffix
	devel:libnghttp2$secondaryArchSuffix
	devel:libmpfr$secondaryArchSuffix >= 6
	devel:libnlopt$secondaryArchSuffix
	devel:libopenvdb$secondaryArchSuffix
	devel:libpcre$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libpsl$secondaryArchSuffix
	devel:libsoup_3.0$secondaryArchSuffix
	devel:libsqlite3$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	devel:libtbb$secondaryArchSuffix
	devel:libxkbcommon$secondaryArchSuffix
	devel:libvulkan$secondaryArchSuffix
	devel:libwayland_client$secondaryArchSuffix
	devel:libwayland_egl$secondaryArchSuffix 
	devel:libwayland_server$secondaryArchSuffix
	devel:libwebkit2gtk_4.1$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	devel:libzstd$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	wayland_protocols
	"
BUILD_PREREQUIRES="
	mako_python310
	pyyaml_python310
	cmd:aclocal
	cmd:autoconf
	cmd:awk
	cmd:bison
	cmd:cmake
	cmd:cmp
	cmd:diff
	cmd:egrep
	cmd:find
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:gettext
	cmd:git
	cmd:libtoolize$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:lld >= 20
	cmd:llvm_config >= 20
	cmd:make
	cmd:makeinfo
	cmd:meson
	cmd:ninja
	cmd:patch
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3.10
	cmd:which
	cmd:xgettext
	"

BUILD()
{
	# link submodules
	rm -rf $sourceDir/src/ArcWelderLib
	ln -sfn $sourceDir2 $sourceDir/src/ArcWelderLib
	rm -rf $sourceDir/resources/profiles
	ln -sfn $sourceDir3 $sourceDir/resources/profiles

	# build deps
	cmake -S deps -B deps/build/release \
		-DCMAKE_BUILD_TYPE=Release \
		-DDESTDIR="${PWD}/deps/build/destdir" \
		-DDEP_DOWNLOAD_DIR="${PWD}/deps/DL_CACHE" \
		-DDEP_WX_GTK3=ON

	pushd deps/build/release
		make $jobArgs
	popd

	# change date in version
	sed -i "s/+UNKNOWN/_$(date '+%F')/" version.inc

	# build SuperSlicer
	cmake -S . -B build \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PATH=$appsDir/SuperSlicer \
		-DCMAKE_PREFIX_PATH="${PWD}/deps/build/destdir/usr/local" \
		-DSLIC3R_STATIC=0 \
		-DSLIC3R_GTK=3 \
		-DCMAKE_CXX_FLAGS="-fuse-ld=lld -Wl,--no-keep-memory -Wl,--undefined-version"

	pushd build
		make avrdude-slic3r
		make Slic3r $jobArgs
		make gettext_po_to_mo
		make OCCTWrapper
	popd

	# build hack for localtime_r
	gcc -shared -o haiku/libfakelocaltime.so haiku/libfakelocaltime.c

	# build launchers
	gcc -o haiku/SuperSlicer haiku/SuperSlicer.cpp -lbe
	gcc -o haiku/GCodeViewer haiku/GCodeViewer.cpp -lbe

	# build libdrm
	cd $sourceDir4
	mkdir -p build
	meson build \
		--buildtype=release \
		--prefix=$sourceDir4/build/install \
		-Dintel=disabled \
		-Dradeon=disabled \
		-Damdgpu=disabled \
		-Dnouveau=disabled \
		-Dvmwgfx=disabled \
		-Dfreedreno=disabled \
		-Dvc4=disabled \
		-Detnaviv=disabled \
		-Dcairo-tests=disabled \
		-Dman-pages=disabled \
		-Dvalgrind=disabled \
		-Dtests=false
	ninja -C build $jobArgs
	ninja -C build install

	# build mesa for wayland
	cd $sourceDir5
	mkdir -p build
	export PKG_CONFIG_PATH=$sourceDir4/build/install/lib/pkgconfig:$PKG_CONFIG_PATH
	meson build \
		--buildtype=release \
		--prefix=$sourceDir5/build/install \
		-Dplatforms=wayland \
		-Dglx=disabled \
		-Dgbm=disabled \
		-Dglvnd=disabled \
		-Dgallium-drivers=llvmpipe \
		-Dvulkan-drivers=swrast \
		-Dvulkan-icd-dir=$sourceDir5/build/install/lib

	ninja -C build $jobArgs
	ninja -C build install
}

INSTALL()
{
	mkdir -p $appsDir/SuperSlicer/bin/lib

	cp -f build/src/superslicer $appsDir/SuperSlicer/bin/SuperSlicer
	ln -s $appsDir/SuperSlicer/bin/SuperSlicer $appsDir/SuperSlicer/bin/superslicer
	ln -s $appsDir/SuperSlicer/bin/SuperSlicer $appsDir/SuperSlicer/bin/superslicer-gcodeviewer
	cp -f build/src/avrdude/avrdude-slic3r $appsDir/SuperSlicer/bin
	cp -rf resources $appsDir/SuperSlicer
	cp -Pf build/src/OCCTWrapper.so $appsDir/SuperSlicer/bin/lib
	cp -Pf deps/build/destdir/usr/local/lib/*.so* $appsDir/SuperSlicer/bin/lib
	cp -Pf $sourceDir4/build/install/lib/*.so* $appsDir/SuperSlicer/bin/lib
	cp -Pf $sourceDir5/build/install/lib/*.so* $appsDir/SuperSlicer/bin/lib
	cp -Pf haiku/*.so $appsDir/SuperSlicer/bin/lib
	cp -f haiku/SuperSlicer $appsDir/SuperSlicer
	cp -f haiku/GCodeViewer $appsDir/SuperSlicer

	strip $appsDir/SuperSlicer/bin/SuperSlicer
	strip $appsDir/SuperSlicer/bin/lib/OCCTWrapper.so

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"

	local APP_SIGNATURE="application/x-vnd.superslicer"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/superslicer.rdef.in > $sourceDir/superslicer.rdef

	addResourcesToBinaries $sourceDir/superslicer.rdef $appsDir/SuperSlicer/bin/SuperSlicer

	local APP_SIGNATURE="application/x-vnd.superslicer-launcher"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/superslicer.rdef.in > $sourceDir/superslicer-launcher.rdef

	addResourcesToBinaries $sourceDir/superslicer-launcher.rdef $appsDir/SuperSlicer/SuperSlicer

	local APP_SIGNATURE="application/x-vnd.superslicer-viewer-launcher"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/gcodeviewer.rdef.in > $sourceDir/gcodeviewer.rdef

	addResourcesToBinaries $sourceDir/gcodeviewer.rdef $appsDir/SuperSlicer/GCodeViewer

	addAppDeskbarSymlink $appsDir/SuperSlicer/SuperSlicer "SuperSlicer"
	addAppDeskbarSymlink $appsDir/SuperSlicer/GCodeViewer "G-code Viewer"
}
