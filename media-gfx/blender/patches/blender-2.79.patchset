From 41ec906196e265f144d30df0293c5326d7f0ea92 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sun, 17 Sep 2017 13:03:51 +0200
Subject: Haiku supporting patches


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0423781..207f5ba 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -195,7 +195,7 @@ endif()
 # Options
 
 # First platform specific non-cached vars
-if(UNIX AND NOT APPLE)
+if(UNIX AND NOT (APPLE OR HAIKU))
 	set(WITH_X11 ON)
 endif()
 
@@ -791,7 +791,7 @@ set(CC_REMOVE_STRICT_FLAGS)
 
 # libraries to link the binary with passed to target_link_libraries()
 # known as LLIBS to scons
-set(PLATFORM_LINKLIBS "")
+set(PLATFORM_LINKLIBS "-lnetwork")
 
 # Added to linker flags in setup_liblinks
 # - CMAKE_EXE_LINKER_FLAGS
diff --git a/build_files/cmake/Modules/FindEigen3.cmake b/build_files/cmake/Modules/FindEigen3.cmake
index 400e8eb..fdd7936 100644
--- a/build_files/cmake/Modules/FindEigen3.cmake
+++ b/build_files/cmake/Modules/FindEigen3.cmake
@@ -29,6 +29,8 @@ SET(_eigen3_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(EIGEN3_INCLUDE_DIR
@@ -38,7 +40,7 @@ FIND_PATH(EIGEN3_INCLUDE_DIR
   HINTS
     ${_eigen3_SEARCH_DIRS}
   PATH_SUFFIXES
-    include/eigen3
+    include/eigen3 Eigen
 )
 
 # handle the QUIETLY and REQUIRED arguments and set EIGEN3_FOUND to TRUE if 
diff --git a/build_files/cmake/Modules/FindFftw3.cmake b/build_files/cmake/Modules/FindFftw3.cmake
index 197d4aa..bb51040 100644
--- a/build_files/cmake/Modules/FindFftw3.cmake
+++ b/build_files/cmake/Modules/FindFftw3.cmake
@@ -33,6 +33,8 @@ SET(_fftw3_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(FFTW3_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindGLEW.cmake b/build_files/cmake/Modules/FindGLEW.cmake
index 2f098d5..6910661 100644
--- a/build_files/cmake/Modules/FindGLEW.cmake
+++ b/build_files/cmake/Modules/FindGLEW.cmake
@@ -30,6 +30,8 @@ ENDIF()
 SET(_glew_SEARCH_DIRS
   ${GLEW_ROOT_DIR}
   /usr/local
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(GLEW_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindHDF5.cmake b/build_files/cmake/Modules/FindHDF5.cmake
index 56ceda8..990a594 100644
--- a/build_files/cmake/Modules/FindHDF5.cmake
+++ b/build_files/cmake/Modules/FindHDF5.cmake
@@ -31,6 +31,8 @@ SET(_hdf5_SEARCH_DIRS
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
   /opt/lib/hdf5
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_LIBRARY(HDF5_LIBRARY
diff --git a/build_files/cmake/Modules/FindIcuLinux.cmake b/build_files/cmake/Modules/FindIcuLinux.cmake
index e0e5873..cca1026 100644
--- a/build_files/cmake/Modules/FindIcuLinux.cmake
+++ b/build_files/cmake/Modules/FindIcuLinux.cmake
@@ -36,6 +36,8 @@ SET(_icu_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 # We don't need includes, only libs to link against...
diff --git a/build_files/cmake/Modules/FindLZO.cmake b/build_files/cmake/Modules/FindLZO.cmake
index a21aa0a..9086456 100644
--- a/build_files/cmake/Modules/FindLZO.cmake
+++ b/build_files/cmake/Modules/FindLZO.cmake
@@ -33,6 +33,8 @@ SET(_lzo_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(LZO_INCLUDE_DIR lzo/lzo1x.h
diff --git a/build_files/cmake/Modules/FindOpenColorIO.cmake b/build_files/cmake/Modules/FindOpenColorIO.cmake
index bd1ecac..e7495c7 100644
--- a/build_files/cmake/Modules/FindOpenColorIO.cmake
+++ b/build_files/cmake/Modules/FindOpenColorIO.cmake
@@ -40,6 +40,8 @@ SET(_opencolorio_SEARCH_DIRS
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
   /opt/lib/ocio
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(OPENCOLORIO_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindOpenEXR.cmake b/build_files/cmake/Modules/FindOpenEXR.cmake
index 41e60a7..021d9de 100644
--- a/build_files/cmake/Modules/FindOpenEXR.cmake
+++ b/build_files/cmake/Modules/FindOpenEXR.cmake
@@ -52,6 +52,8 @@ SET(_openexr_SEARCH_DIRS
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
   /opt/lib/openexr
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(OPENEXR_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindOpenImageIO.cmake b/build_files/cmake/Modules/FindOpenImageIO.cmake
index d59f9cf..c60463f 100644
--- a/build_files/cmake/Modules/FindOpenImageIO.cmake
+++ b/build_files/cmake/Modules/FindOpenImageIO.cmake
@@ -36,6 +36,8 @@ SET(_openimageio_SEARCH_DIRS
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
   /opt/lib/oiio
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(OPENIMAGEIO_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindOpenJPEG.cmake b/build_files/cmake/Modules/FindOpenJPEG.cmake
index d765103..48bd9e1 100644
--- a/build_files/cmake/Modules/FindOpenJPEG.cmake
+++ b/build_files/cmake/Modules/FindOpenJPEG.cmake
@@ -33,6 +33,8 @@ SET(_openjpeg_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(OPENJPEG_INCLUDE_DIR
diff --git a/build_files/cmake/Modules/FindPCRE.cmake b/build_files/cmake/Modules/FindPCRE.cmake
index ff4b726..999d404 100644
--- a/build_files/cmake/Modules/FindPCRE.cmake
+++ b/build_files/cmake/Modules/FindPCRE.cmake
@@ -33,6 +33,8 @@ SET(_pcre_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(PCRE_INCLUDE_DIR pcre.h
diff --git a/build_files/cmake/Modules/FindSDL2.cmake b/build_files/cmake/Modules/FindSDL2.cmake
index 2a835cf..75de7c6 100644
--- a/build_files/cmake/Modules/FindSDL2.cmake
+++ b/build_files/cmake/Modules/FindSDL2.cmake
@@ -35,6 +35,9 @@ SET(_sdl2_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
+  
 )
 
 FIND_PATH(SDL2_INCLUDE_DIR
@@ -43,7 +46,7 @@ FIND_PATH(SDL2_INCLUDE_DIR
   HINTS
     ${_sdl2_SEARCH_DIRS}
   PATH_SUFFIXES
-    include/SDL2 include
+    include/SDL2 include SDL2
 )
 
 FIND_LIBRARY(SDL2_LIBRARY
diff --git a/build_files/cmake/Modules/FindSndFile.cmake b/build_files/cmake/Modules/FindSndFile.cmake
index 1b685ea..a7c2022 100644
--- a/build_files/cmake/Modules/FindSndFile.cmake
+++ b/build_files/cmake/Modules/FindSndFile.cmake
@@ -33,6 +33,8 @@ SET(_sndfile_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(SNDFILE_INCLUDE_DIR sndfile.h
diff --git a/build_files/cmake/Modules/FindXML2.cmake b/build_files/cmake/Modules/FindXML2.cmake
index 40cc332..09237ee 100644
--- a/build_files/cmake/Modules/FindXML2.cmake
+++ b/build_files/cmake/Modules/FindXML2.cmake
@@ -33,6 +33,8 @@ SET(_xml2_SEARCH_DIRS
   /sw # Fink
   /opt/local # DarwinPorts
   /opt/csw # Blastwave
+  /system/lib # Haiku
+  /system/develop/headers # Haiku
 )
 
 FIND_PATH(XML2_INCLUDE_DIR libxml2/libxml/xpath.h
diff --git a/build_files/cmake/macros.cmake b/build_files/cmake/macros.cmake
index 6303119..2083683 100644
--- a/build_files/cmake/macros.cmake
+++ b/build_files/cmake/macros.cmake
@@ -1508,6 +1508,7 @@ function(find_python_package
 		  PATH_SUFFIXES
 		    site-packages
 		    dist-packages
+		    vendor-packages
 		   NO_DEFAULT_PATH
 		)
 
@@ -1518,6 +1519,8 @@ function(find_python_package
 				"'${PYTHON_LIBPATH}/python${_PY_VER_MAJOR}/site-packages/${package}', "
 				"'${PYTHON_LIBPATH}/python${PYTHON_VERSION}/dist-packages/${package}', "
 				"'${PYTHON_LIBPATH}/python${_PY_VER_MAJOR}/dist-packages/${package}', "
+                "'${PYTHON_LIBPATH}/python${PYTHON_VERSION}/vendor-packages/${package}', "
+                "'${PYTHON_LIBPATH}/python${_PY_VER_MAJOR}/vendor-packages/${package}', "
 				"\n"
 				"The 'WITH_PYTHON_INSTALL_${_upper_package}' option will be ignored when installing Python.\n"
 				"The build will be usable, only add-ons that depend on this package won't be functional."
diff --git a/build_files/cmake/platform/platform_unix.cmake b/build_files/cmake/platform/platform_unix.cmake
index 62e0caa..5beba82 100644
--- a/build_files/cmake/platform/platform_unix.cmake
+++ b/build_files/cmake/platform/platform_unix.cmake
@@ -358,7 +358,11 @@ if(WITH_OPENSUBDIV OR WITH_CYCLES_OPENSUBDIV)
 endif()
 
 # OpenSuse needs lutil, ArchLinux not, for now keep, can avoid by using --as-needed
-list(APPEND PLATFORM_LINKLIBS -lutil -lc -lm)
+if(HAIKU)
+	list(APPEND PLATFORM_LINKLIBS -lm -lnetwork)
+else()
+	list(APPEND PLATFORM_LINKLIBS -lutil -lc -lm)
+endif()
 
 find_package(Threads REQUIRED)
 list(APPEND PLATFORM_LINKLIBS ${CMAKE_THREAD_LIBS_INIT})
diff --git a/extern/glog/src/config.h b/extern/glog/src/config.h
index f5c9c0b..2703b7b 100644
--- a/extern/glog/src/config.h
+++ b/extern/glog/src/config.h
@@ -14,4 +14,6 @@
  #include "windows/config.h"
 #elif defined(__GNU__)
  #include "config_hurd.h"
+#elif defined(__HAIKU__)
+ #include "config_haiku.h"
 #endif
diff --git a/extern/glog/src/config_haiku.h b/extern/glog/src/config_haiku.h
new file mode 100644
index 0000000..7d19272
--- /dev/null
+++ b/extern/glog/src/config_haiku.h
@@ -0,0 +1,172 @@
+/* src/config.h.  Generated from config.h.in by configure.  */
+/* src/config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Namespace for Google classes */
+#define GOOGLE_NAMESPACE google
+
+/* Define if you have the `dladdr' function */
+/* #undef HAVE_DLADDR */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <execinfo.h> header file. */
+#undef HAVE_EXECINFO_H
+
+/* Define if you have the `fcntl' function */
+#define HAVE_FCNTL 1
+
+/* Define to 1 if you have the <glob.h> header file. */
+#define HAVE_GLOB_H 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `pthread' library (-lpthread). */
+/* #undef HAVE_LIBPTHREAD */
+
+/* Define to 1 if you have the <libunwind.h> header file. */
+/* #undef HAVE_LIBUNWIND_H */
+
+/* define if you have google gflags library */
+#define HAVE_LIB_GFLAGS 1
+
+/* define if you have google gmock library */
+/* #undef HAVE_LIB_GMOCK */
+
+/* define if you have google gtest library */
+/* #undef HAVE_LIB_GTEST */
+
+/* define if you have libunwind */
+/* #undef HAVE_LIB_UNWIND */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* define if the compiler implements namespaces */
+#define HAVE_NAMESPACES 1
+
+/* Define if you have the 'pread' function */
+#define HAVE_PREAD 1
+
+/* Define if you have POSIX threads libraries and header files. */
+#define HAVE_PTHREAD 1
+
+/* Define to 1 if you have the <pwd.h> header file. */
+#define HAVE_PWD_H 1
+
+/* Define if you have the 'pwrite' function */
+#define HAVE_PWRITE 1
+
+/* define if the compiler implements pthread_rwlock_* */
+#define HAVE_RWLOCK 1
+
+/* Define if you have the `sigaltstack' function */
+#define HAVE_SIGALTSTACK 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <syscall.h> header file. */
+/* #undef HAVE_SYSCALL_H */
+
+/* Define to 1 if you have the <syslog.h> header file. */
+#define HAVE_SYSLOG_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/syscall.h> header file. */
+/* #undef HAVE_SYS_SYSCALL_H */
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/ucontext.h> header file. */
+/* #undef HAVE_SYS_UCONTEXT_H */
+
+/* Define to 1 if you have the <sys/utsname.h> header file. */
+#define HAVE_SYS_UTSNAME_H 1
+
+/* Define to 1 if you have the <ucontext.h> header file. */
+/* #undef HAVE_UCONTEXT_H */
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* define if the compiler supports using expression for operator */
+#define HAVE_USING_OPERATOR 1
+
+/* define if your compiler has __attribute__ */
+#define HAVE___ATTRIBUTE__ 1
+
+/* define if your compiler has __builtin_expect */
+#define HAVE___BUILTIN_EXPECT 1
+
+/* define if your compiler has __sync_val_compare_and_swap */
+/* #undef HAVE___SYNC_VAL_COMPARE_AND_SWAP */
+
+/* Name of package */
+#define PACKAGE "glog"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "opensource@google.com"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "glog"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "glog 0.3.2"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "glog"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.3.2"
+
+/* How to access the PC from a struct ucontext */
+/* #define PC_FROM_UCONTEXT uc_mcontext.gregs[REG_RIP] */
+
+/* Define to necessary symbol if this constant uses a non-standard name on
+   your system. */
+/* #undef PTHREAD_CREATE_JOINABLE */
+
+/* The size of `void *', as computed by sizeof. */
+#define SIZEOF_VOID_P 8
+
+/* Define to 1 if you have the ANSI C header files. */
+/* #undef STDC_HEADERS */
+
+#define STDC_HEADERS 1
+/* the namespace where STL code like vector<> is defined */
+#define STL_NAMESPACE std
+
+/* location of source code */
+#define TEST_SRC_DIR "."
+
+/* Version number of package */
+#define VERSION "0.3.2"
+
+/* Stops putting the code inside the Google namespace */
+#define _END_GOOGLE_NAMESPACE_ }
+
+/* Puts following code inside the Google namespace */
+#define _START_GOOGLE_NAMESPACE_ namespace google {
+
+/* isn't getting defined by configure script when clang compilers are used
+   and cuases compilation errors in stactrace/unwind modules */
+#ifdef __clang__
+#  define NO_FRAME_POINTER
+#endif
diff --git a/intern/guardedalloc/intern/mallocn_intern.h b/intern/guardedalloc/intern/mallocn_intern.h
index a292a2e..9a5848c 100644
--- a/intern/guardedalloc/intern/mallocn_intern.h
+++ b/intern/guardedalloc/intern/mallocn_intern.h
@@ -63,6 +63,9 @@
 #elif defined(WIN32)
 #  include <malloc.h>
 #  define malloc_usable_size _msize
+#elif defined(__HAIKU__)
+#  include <malloc.h>
+size_t malloc_usable_size(void *ptr);
 #else
 #  pragma message "We don't know how to use malloc_usable_size on your platform"
 #  undef USE_MALLOC_USABLE_SIZE
diff --git a/intern/libmv/libmv/numeric/numeric.h b/intern/libmv/libmv/numeric/numeric.h
index 1a23d65..6312b4e 100644
--- a/intern/libmv/libmv/numeric/numeric.h
+++ b/intern/libmv/libmv/numeric/numeric.h
@@ -35,7 +35,8 @@
 
 #if !defined(__MINGW64__)
 #  if defined(_WIN32) || defined(__APPLE__) || \
-      defined(__FreeBSD__) || defined(__NetBSD__)
+      defined(__FreeBSD__) || defined(__NetBSD__) || \
+      defined(__HAIKU__)
 inline void sincos(double x, double *sinx, double *cosx) {
   *sinx = sin(x);
   *cosx = cos(x);
diff --git a/source/blender/blenkernel/intern/bvhutils.c b/source/blender/blenkernel/intern/bvhutils.c
index 7754993..08819e5 100644
--- a/source/blender/blenkernel/intern/bvhutils.c
+++ b/source/blender/blenkernel/intern/bvhutils.c
@@ -51,6 +51,16 @@ static ThreadRWMutex cache_rwlock = BLI_RWLOCK_INITIALIZER;
 /* -------------------------------------------------------------------- */
 /** \name Local Callbacks
  * \{ */
+ 
+#ifdef __HAIKU__
+static pthread_once_t sInitOnce = PTHREAD_ONCE_INIT;
+
+static void
+init_cache_rwlock()
+{
+	pthread_rwlock_init(&cache_rwlock, NULL);
+}
+#endif
 
 /* Math stuff for ray casting on mesh faces and for nearest surface */
 
@@ -1332,6 +1342,9 @@ void bvhcache_insert(BVHCache **cache_p, BVHTree *tree, int type)
  */
 void bvhcache_init(BVHCache **cache_p)
 {
+#ifdef __HAIKU__
+	pthread_once(&sInitOnce, &init_cache_rwlock);
+#endif
 	*cache_p = NULL;
 }
 
diff --git a/source/blender/blenkernel/intern/font.c b/source/blender/blenkernel/intern/font.c
index 401fed7..446ecb7 100644
--- a/source/blender/blenkernel/intern/font.c
+++ b/source/blender/blenkernel/intern/font.c
@@ -64,6 +64,16 @@
 
 static ThreadRWMutex vfont_rwlock = BLI_RWLOCK_INITIALIZER;
 
+#ifdef __HAIKU__
+static pthread_once_t sInitOnce = PTHREAD_ONCE_INIT;
+
+static void
+init_vfont_rwlock()
+{
+	pthread_rwlock_init(&vfont_rwlock, NULL);
+}
+#endif
+
 /* The vfont code */
 void BKE_vfont_free_data(struct VFont *vfont)
 {
@@ -655,6 +665,10 @@ bool BKE_vfont_to_curve_ex(Main *bmain, Object *ob, int mode, ListBase *r_nubase
 
 	BLI_assert(ob->type == OB_FONT);
 
+#ifdef __HAIKU__
+	pthread_once(&sInitOnce, &init_vfont_rwlock);
+#endif
+
 	/* Set font data */
 	vfont = cu->vfont;
 
diff --git a/source/blender/blenkernel/intern/particle_system.c b/source/blender/blenkernel/intern/particle_system.c
index 9ee4562..38a0878 100644
--- a/source/blender/blenkernel/intern/particle_system.c
+++ b/source/blender/blenkernel/intern/particle_system.c
@@ -105,6 +105,16 @@
 
 static ThreadRWMutex psys_bvhtree_rwlock = BLI_RWLOCK_INITIALIZER;
 
+#ifdef __HAIKU__
+static pthread_once_t sInitOnce = PTHREAD_ONCE_INIT;
+
+static void
+init_psys_bvhtree_rwlock()
+{
+	pthread_rwlock_init(&psys_bvhtree_rwlock, NULL);
+}
+#endif
+
 /************************************************/
 /*			Reacting to system events			*/
 /************************************************/
@@ -4162,6 +4172,10 @@ void particle_system_update(Scene *scene, Object *ob, ParticleSystem *psys, cons
 	ParticleSettings *part = psys->part;
 	float cfra;
 
+#ifdef __HAIKU__
+	pthread_once(&sInitOnce, &init_psys_bvhtree_rwlock);
+#endif
+
 	/* drawdata is outdated after ANY change */
 	if (psys->pdd) psys->pdd->flag &= ~PARTICLE_DRAW_DATA_UPDATED;
 
diff --git a/source/blender/blenkernel/intern/subsurf_ccg.c b/source/blender/blenkernel/intern/subsurf_ccg.c
index ff06822..8884fe2 100644
--- a/source/blender/blenkernel/intern/subsurf_ccg.c
+++ b/source/blender/blenkernel/intern/subsurf_ccg.c
@@ -91,6 +91,17 @@
 static ThreadRWMutex loops_cache_rwlock = BLI_RWLOCK_INITIALIZER;
 static ThreadRWMutex origindex_cache_rwlock = BLI_RWLOCK_INITIALIZER;
 
+#ifdef __HAIKU__
+static pthread_once_t sInitOnce = PTHREAD_ONCE_INIT;
+
+static void
+init_cache_rwlock()
+{
+	pthread_rwlock_init(&loops_cache_rwlock, NULL);
+	pthread_rwlock_init(&origindex_cache_rwlock, NULL);
+}
+#endif
+
 static CCGDerivedMesh *getCCGDerivedMesh(CCGSubSurf *ss,
                                          int drawInteriorEdges,
                                          int useSubsurfUv,
@@ -4660,6 +4671,10 @@ static void set_ccgdm_all_geometry(CCGDerivedMesh *ccgdm,
 	MPoly *mpoly = NULL;
 	bool has_edge_cd;
 
+#ifdef __HAIKU__
+	pthread_once(&sInitOnce, &init_cache_rwlock);
+#endif
+
 	edgeSize = ccgSubSurf_getEdgeSize(ss);
 	gridSize = ccgSubSurf_getGridSize(ss);
 	gridFaces = gridSize - 1;
diff --git a/source/blender/blenlib/BLI_sys_types.h b/source/blender/blenlib/BLI_sys_types.h
index 9477f61..95c0227 100644
--- a/source/blender/blenlib/BLI_sys_types.h
+++ b/source/blender/blenlib/BLI_sys_types.h
@@ -47,7 +47,7 @@
 extern "C" {
 #endif
 
-#if defined(__linux__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__FreeBSD_kernel__) || defined(__GNU__)
+#if defined(__linux__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__FreeBSD_kernel__) || defined(__GNU__) || defined(__HAIKU__)
 
 /* Linux-i386, Linux-Alpha, Linux-ppc */
 #include <stdint.h>
diff --git a/source/blender/blenlib/BLI_threads.h b/source/blender/blenlib/BLI_threads.h
index 0b1b4d8..a302506 100644
--- a/source/blender/blenlib/BLI_threads.h
+++ b/source/blender/blenlib/BLI_threads.h
@@ -127,7 +127,11 @@ void BLI_spin_end(SpinLock *spin);
 #define THREAD_LOCK_READ    1
 #define THREAD_LOCK_WRITE   2
 
+#ifdef __HAIKU__
+#define BLI_RWLOCK_INITIALIZER {}
+#else
 #define BLI_RWLOCK_INITIALIZER PTHREAD_RWLOCK_INITIALIZER
+#endif
 
 typedef pthread_rwlock_t ThreadRWMutex;
 
diff --git a/source/blender/blenlib/intern/fileops.c b/source/blender/blenlib/intern/fileops.c
index 1df7f6f..24d4090 100644
--- a/source/blender/blenlib/intern/fileops.c
+++ b/source/blender/blenlib/intern/fileops.c
@@ -614,6 +614,11 @@ static int recursive_operation(const char *startfrom, const char *startto,
 		for (i = 0; i < n; i++) {
 			const struct dirent * const dirent = dirlist[i];
 
+#ifdef __HAIKU__
+			struct stat st;
+			char filename[512];
+#endif
+
 			if (FILENAME_IS_CURRPAR(dirent->d_name))
 				continue;
 
@@ -621,7 +626,14 @@ static int recursive_operation(const char *startfrom, const char *startto,
 			if (to)
 				join_dirfile_alloc(&to_path, &to_alloc_len, to, dirent->d_name);
 
+#ifdef __HAIKU__
+			snprintf(filename, sizeof(filename), "%s/%s", startfrom, dirent->d_name);
+			lstat(filename, &st);
+			if (S_ISDIR(st.st_mode)) {
+#else		
+
 			if (dirent->d_type == DT_DIR) {
+#endif
 				/* recursively dig into a subfolder */
 				ret = recursive_operation(from_path, to_path, callback_dir_pre, callback_file, callback_dir_post);
 			}
diff --git a/source/blender/blenlib/intern/storage.c b/source/blender/blenlib/intern/storage.c
index b819c51..9fb3fbf 100644
--- a/source/blender/blenlib/intern/storage.c
+++ b/source/blender/blenlib/intern/storage.c
@@ -37,7 +37,7 @@
 
 #include <sys/stat.h>
 
-#if defined(__NetBSD__) || defined(__DragonFly__) || defined(__sun__) || defined(__sun)
+#if defined(__NetBSD__) || defined(__DragonFly__) || defined(__sun__) || defined(__sun) || defined(__HAIKU__)
    /* Other modern unix os's should probably use this also */
 #  include <sys/statvfs.h>
 #  define USE_STATFS_STATVFS
-- 
2.14.1


From 6c18376d4069c11efe3662c9f2303decee7e03d4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sun, 17 Sep 2017 20:21:42 +0200
Subject: Haiku build fix


diff --git a/extern/sdlew/include/SDL2/SDL_syswm.h b/extern/sdlew/include/SDL2/SDL_syswm.h
index 7c4bc31..f3597d5 100644
--- a/extern/sdlew/include/SDL2/SDL_syswm.h
+++ b/extern/sdlew/include/SDL2/SDL_syswm.h
@@ -13,6 +13,10 @@
 extern "C" {
 #endif
 
+#ifdef __HAIKU__
+struct SDL_SysWMinfo;
+#else
+
 #ifdef SDL_PROTOTYPES_ONLY
 struct SDL_SysWMinfo;
 #else
@@ -36,6 +40,7 @@ struct SDL_SysWMinfo;
 #undef Cursor
 #endif
 
+#endif
 #endif
 
 #if defined(SDL_VIDEO_DRIVER_DIRECTFB)
diff --git a/intern/ghost/intern/GHOST_SystemSDL.cpp b/intern/ghost/intern/GHOST_SystemSDL.cpp
index e9768e4..1fb3289 100644
--- a/intern/ghost/intern/GHOST_SystemSDL.cpp
+++ b/intern/ghost/intern/GHOST_SystemSDL.cpp
@@ -282,9 +282,11 @@ convertSDLKey(SDL_Scancode key)
 static SDL_Window *SDL_GetWindowFromID_fallback(Uint32 id)
 {
 	SDL_Window *sdl_win = SDL_GetWindowFromID(id);
+	#ifndef __HAIKU__
 	if (sdl_win == NULL) {
 		sdl_win = SDL_GL_GetCurrentWindow();
 	}
+	#endif
 	return sdl_win;
 }
 
diff --git a/intern/ghost/intern/GHOST_WindowSDL.cpp b/intern/ghost/intern/GHOST_WindowSDL.cpp
index aeb6188..eac82fb 100644
--- a/intern/ghost/intern/GHOST_WindowSDL.cpp
+++ b/intern/ghost/intern/GHOST_WindowSDL.cpp
@@ -573,9 +573,16 @@ GHOST_WindowSDL::getDPIHint()
 	}
 
 	float ddpi;
+
+#ifndef __HAIKU__
+// SDL_GetDisplayDPI undeclared on Haiku
+
 	if (SDL_GetDisplayDPI(displayIndex, &ddpi, NULL, NULL) != 0) {
 		return 96;
 	}
+#else
+ddpi = 96;
+#endif
 
 	return (int)ddpi;
 }
-- 
2.14.1

