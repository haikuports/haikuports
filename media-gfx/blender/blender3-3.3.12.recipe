SUMMARY="3D Creation/Animation/Publishing System"
DESCRIPTION="Blender is the free and open source 3D creation suite. It \
supports the entirety of the 3D pipeline—modeling, rigging, animation, \
simulation, rendering, compositing and motion tracking, even video editing \
and game creation.
Advanced users employ Blender’s API for Python scripting to customize the \
application and write specialized tools; often these are included in Blender’s \
future releases. Blender is well suited to individuals and small studios who \
benefit from its unified pipeline and responsive development process."
HOMEPAGE="https://www.blender.org/"
COPYRIGHT="2002-2023 Blender Foundation"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://download.blender.org/source/blender-$portVersion.tar.xz"
CHECKSUM_SHA256="dd5ecf5f37aeb708f46796fb2e16b7b2a5556c929f3bb4a1b0df3c8d0768afd3"
SOURCE_DIR="blender-$portVersion"
PATCHES="
	blender3-$portVersion.patchset
	"
ADDITIONAL_FILES="
	blender.rdef.in
	Blender3.sh
	"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="?x86"

PYTHON_VERSION="3.10"

PROVIDES="
	blender3$secondaryArchSuffix = $portVersion
	app:blender3 = $portVersion
	cmd:blender_thumbnailer.py${secondaryArchSuffix} = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	numpy${secondaryArchSuffix}_python310
	requests_python310
	lib:libalembic$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavdevice$secondaryArchSuffix
	lib:libboost_atomic$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_filesystem$secondaryArchSuffix
	lib:libboost_locale$secondaryArchSuffix
	lib:libboost_regex$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libembree3$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libfftw3$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libgcc_s$secondaryArchSuffix
	lib:libgl$secondaryArchSuffix
	lib:libglew$secondaryArchSuffix
	lib:libglu$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libgmpxx$secondaryArchSuffix
	lib:libgomp$secondaryArchSuffix
	lib:libhdf5$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libicui18n$secondaryArchSuffix
	lib:libicuuc$secondaryArchSuffix
	lib:libiex_3_0$secondaryArchSuffix
	lib:libilmthread_3_0$secondaryArchSuffix
	lib:libimath_3_0$secondaryArchSuffix
	lib:libopenexr_3_0$secondaryArchSuffix
	lib:libopenexrutil_3_0$secondaryArchSuffix
	lib:libLLVM_12$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:liblzo2$secondaryArchSuffix
	lib:libopenal$secondaryArchSuffix
	lib:libopencolladabaseutils$secondaryArchSuffix
	lib:libopencolorio$secondaryArchSuffix
	lib:libopenimageio$secondaryArchSuffix
	lib:libopenjp2$secondaryArchSuffix
#	lib:libopenvdb$secondaryArchSuffix
	lib:libosdCPU$secondaryArchSuffix
	lib:libosdGPU$secondaryArchSuffix
#	lib:liboslcomp$secondaryArchSuffix
	lib:libpcre$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libpotrace$secondaryArchSuffix
	lib:libpugixml$secondaryArchSuffix
	lib:libpython${PYTHON_VERSION}$secondaryArchSuffix
	lib:libsdl2_2.0$secondaryArchSuffix
	lib:libsndfile$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libtinyxml$secondaryArchSuffix
	lib:libturbojpeg$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libyaml_cpp$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	lib:libzstd$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	numpy${secondaryArchSuffix}_python310
	devel:eigen$secondaryArchSuffix
	devel:libalembic$secondaryArchSuffix
	devel:libavcodec$secondaryArchSuffix
	devel:libavdevice$secondaryArchSuffix
	devel:libboost_atomic$secondaryArchSuffix >= 1.69.0
	devel:libboost_chrono$secondaryArchSuffix >= 1.69.0
	devel:libboost_date_time$secondaryArchSuffix >= 1.69.0
	devel:libboost_filesystem$secondaryArchSuffix >= 1.69.0
	devel:libboost_locale$secondaryArchSuffix >= 1.69.0
	devel:libboost_regex$secondaryArchSuffix >= 1.69.0
	devel:libboost_system$secondaryArchSuffix >= 1.69.0
	devel:libboost_thread$secondaryArchSuffix >= 1.69.0
	devel:libembree3$secondaryArchSuffix
	devel:libexecinfo$secondaryArchSuffix
	devel:libfftw3$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgl$secondaryArchSuffix
	devel:libglew$secondaryArchSuffix
	devel:libglu$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libgomp$secondaryArchSuffix
	devel:libhdf5$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libicuuc$secondaryArchSuffix
	devel:libiex_3_0$secondaryArchSuffix
	devel:libilmthread_3_0$secondaryArchSuffix
	devel:libimath_3_0$secondaryArchSuffix
	devel:libopenexr_3_0$secondaryArchSuffix
	devel:libopenexrutil_3_0$secondaryArchSuffix
	devel:libllvm_12$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:liblzo2$secondaryArchSuffix
	devel:libopenal$secondaryArchSuffix
	devel:libopencolladabaseutils$secondaryArchSuffix
	devel:libopencolorio$secondaryArchSuffix
	devel:libopenimageio$secondaryArchSuffix
	devel:libopenjp2$secondaryArchSuffix
#	devel:libopenvdb$secondaryArchSuffix
	devel:libosdCPU$secondaryArchSuffix
	devel:libosdGPU$secondaryArchSuffix
#	devel:liboslcomp$secondaryArchSuffix
	devel:libpcre$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libpotrace$secondaryArchSuffix
	devel:libpugixml$secondaryArchSuffix
	devel:libpython${PYTHON_VERSION}$secondaryArchSuffix
	devel:libsdl2_2.0$secondaryArchSuffix
	devel:libsndfile$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libtinyxml$secondaryArchSuffix
	devel:libturbojpeg$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libyaml_cpp$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	devel:libzstd$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	numpy${secondaryArchSuffix}_python310
	requests_python310
	cmd:cmake
	cmd:find
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:ninja
	cmd:python${PYTHON_VERSION}
	cmd:sed
	cmd:strip
	"


PATCH()
{
	find . -type f -name "*.py" | xargs sed -i -e 's,python3,python3.10,g'
}

BUILD()
{
	# IMPORTANT INFORMATION, PLEASE READ BEFORE CHANGE ANYTHING.

	# Please do not make any changes here if they not *REALLY* necessary.
	# Keep this list short and tidy.

	# Blender uses the following settings to produce the official releases:
	# https://github.com/blender/blender/blob/master/build_files/cmake/config/blender_release.cmake
	# This settings are used on Haiku too, but we had to override some settings.
	# We should follow their settings as closely as possible to make interoperability possible between diferent platforms.
	# In the recipe there are 3 group for the compiler flags:
	# - platform specific (required to build Blender on Haiku)
	# - bugous (these settings should work but they breaks build / functionality on Haiku, should be fixed)
	# - missing deps (required dependency is not (yet) available for Haiku, should be ported)
	# If a change required please put it in the correct category, if you are unsure, ask at HaikuPorts.

	INCLUDE_DIR="`finddir B_SYSTEM_HEADERS_DIRECTORY`${secondaryArchSubDir}"

	# Haiku specific settings
	BLENDER_PLATFORM_SPECIFIC="-DCMAKE_INSTALL_PREFIX:PATH=$appsDir/Blender3 \
		-DPYTHON_VERSION=${PYTHON_VERSION} \
		-DPYTHON_INCLUDE_DIR=`finddir B_SYSTEM_HEADERS_DIRECTORY`/python${PYTHON_VERSION}/ \
		-DPYTHON_LIBRARY=`finddir B_SYSTEM_LIB_DIRECTORY`${secondaryArchSubDir}/libpython${PYTHON_VERSION}.so.1.0 \
		-DPYTHON_EXECUTABLE=/bin/python${PYTHON_VERSION} \
		-DOPENCOLLADA_COLLADABASEUTILS_INCLUDE_DIR=${INCLUDE_DIR}/opencollada/COLLADABaseUtils \
		-DOPENCOLLADA_COLLADAFRAMEWORK_INCLUDE_DIR=${INCLUDE_DIR}/opencollada/COLLADAFramework \
		-DOPENCOLLADA_COLLADASAXFRAMEWORKLOADER_INCLUDE_DIR=${INCLUDE_DIR}/opencollada/COLLADASaxFrameworkLoader \
		-DOPENCOLLADA_COLLADASTREAMWRITER_INCLUDE_DIR=${INCLUDE_DIR}/opencollada/COLLADAStreamWriter \
		-DOPENCOLLADA_GENERATEDSAXPARSER_INCLUDE_DIR=${INCLUDE_DIR}/opencollada/GeneratedSaxParser \
		-DOPENSUBDIV_INCLUDE_DIR=${INCLUDE_DIR} \
		-DZLIB_LIBRARY_RELEASE=`finddir B_SYSTEM_LIB_DIRECTORY`${secondaryArchSubDir}/libz.so.1 \
		-DWITH_GHOST_SDL=ON \
		-DWITH_BUILDINFO=OFF \
		-DWITH_PYTHON_INSTALL=OFF \
		-DWITH_PYTHON_INSTALL_NUMPY=OFF \
		-DWITH_PYTHON_INSTALL_REQUESTS=OFF \
		-DWITH_PYTHON_MODULE=OFF \
		-DWITH_PYTHON_SAFETY=OFF \
		-DWITH_CYCLES_EMBREE=ON \
		-DWITH_PYTHON_NUMPY=ON \
		-DWITH_TBB=OFF \
		-DCMAKE_SKIP_RPATH=ON \
		-Wno-dev"

	# Release settings breaks build on Haiku
	BLENDER_BUGOUS="-DWITH_CYCLES_LOGGING=OFF \
		-DWITH_GAMEENGINE_DECKLINK=OFF \
		-DWITH_GTESTS=OFF \
		-DWITH_SYSTEM_EIGEN3=ON \
		-DWITH_SYSTEM_LZO=ON"

	# Missing deps on Haiku
	BLENDER_MISSING="-DWITH_JACK=OFF \
		-DWITH_MEM_JEMALLOC=OFF \
		-DWITH_INPUT_NDOF=OFF"

	# Extra CXX Flags
	BLENDER_CXX="-std=c++11"

	mkdir -p build_haiku
	cd build_haiku

	cmake .. \
		-G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-C ../build_files/cmake/config/blender_release.cmake \
		$BLENDER_PLATFORM_SPECIFIC \
		$BLENDER_BUGOUS \
		$BLENDER_MISSING \
		-DCMAKE_CXX_FLAGS="$BLENDER_CXX"

	ninja $jobArgs
}

INSTALL()
{
	cd build_haiku
	ninja install $jobArgs

	mv $appsDir/Blender3/blender $appsDir/Blender3/Blender

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/blender.rdef.in > blender.rdef

	addResourcesToBinaries blender.rdef \
		$appsDir/Blender3/Blender

	# Startscript for windowed mode (WORKAROUND)
	cp $portDir/additional-files/Blender3.sh $appsDir/Blender3/Blender.sh
	chmod +x $appsDir/Blender3/Blender.sh

	# Installing extra-attribs
	rc blender.rdef
	resattr -o $appsDir/Blender3/Blender.sh \
		blender.rsrc

	cd $appsDir/Blender3
	mkdir -p $docDir/blender

	rm -rf blender.desktop

	addAppDeskbarSymlink $appsDir/Blender3/Blender.sh Blender-3.0

	mkdir -p $binDir
	ln -s $appsDir/Blender3/blender_thumbnailer.py \
		$binDir/blender_thumbnailer.py
}

TEST()
{
	cd build_haiku
	# The whole testcase is around 1GB and not included. Get it from here:
	# svn checkout https://svn.blender.org/svnroot/bf-blender/trunk/lib/tests
	# and put it in "work-2.xx/sources/lib"
	make test
}
