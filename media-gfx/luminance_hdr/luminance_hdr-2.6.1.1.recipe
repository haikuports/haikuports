SUMMARY="Graphical user interface that provides a workflow for HDR imaging"
DESCRIPTION="Luminance HDR is a graphical user interface (based on the Qt5 toolkit) that provides \
a complete workflow for HDR imaging.

Supported HDR formats:
* OpenEXR (extension: exr)
* Radiance RGBE (extension: hdr)
* Tiff formats: 16bit, 32bit (float) and LogLuv (extension: tiff)
* Raw image formats (extension: various)
* PFS native format (extension: pfs)

Supported LDR formats:
* JPEG, PNG, PPM, PBM, TIFF, FITS

Supported features:
* Create an HDR file from a set of images (JPEG, TIFF 8bit and 16bit, RAW) of the same scene taken \
at different exposure setting
* Save and load HDR files
* Rotate and resize HDR files
* Tonemap HDR images
* Projective Transformations
* Copy EXIF data between sets of images
* Supports internationalization

Raw image formats are supported - and treated as HDR - thanks to *LibRAW* http://www.libraw.org/."
HOMEPAGE="http://qtpfsgui.sourceforge.net
	https://github.com/LuminanceHDR/LuminanceHDR"
COPYRIGHT="2010-2019 Davide Anastasia, Franco Comida and Daniel Kaneider
	2006-2010 Giuseppe Rota"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://github.com/LuminanceHDR/LuminanceHDR/archive/refs/tags/v.$portVersion.tar.gz"
CHECKSUM_SHA256="fa5a870ee00392a972755dd04a35e928ec9c50c474f4c72d0477dea337e0b81a"
SOURCE_FILENAME="LuminanceHDR-v.$portVersion.tar.gz"
SOURCE_DIR="LuminanceHDR-v.$portVersion"
ADDITIONAL_FILES="luminance.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	luminance_hdr$secondaryArchSuffix = $portVersion
	app:LuminanceHDR = $portVersion
	cmd:luminance_hdr_cli = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_program_options$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libcfitsio$secondaryArchSuffix
	lib:libexiv2$secondaryArchSuffix
	lib:libfftw3$secondaryArchSuffix
	lib:libfftw3_threads$secondaryArchSuffix
	lib:libgomp$secondaryArchSuffix
	lib:libgsl$secondaryArchSuffix
	lib:libgslcblas$secondaryArchSuffix
	lib:libHalf_2_4$secondaryArchSuffix
	lib:libIex_2_4$secondaryArchSuffix
	lib:libIlmImf_2_4$secondaryArchSuffix
	lib:libIlmThread_2_4$secondaryArchSuffix
	lib:libImath_2_4$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:liblcms2$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libQt5Concurrent$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Network$secondaryArchSuffix
	lib:libQt5Positioning$secondaryArchSuffix
	lib:libQt5PrintSupport$secondaryArchSuffix
	lib:libQt5Qml$secondaryArchSuffix
	lib:libQt5QmlModels$secondaryArchSuffix
	lib:libQt5Quick$secondaryArchSuffix
	lib:libQt5Sql$secondaryArchSuffix
	lib:libQt5WebChannel$secondaryArchSuffix
	lib:libQt5WebEngineCore$secondaryArchSuffix
	lib:libQt5WebEngineWidgets$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libQt5Xml$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libraw_r$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:eigen$secondaryArchSuffix
	devel:libboost_chrono$secondaryArchSuffix >= 1.83.0
	devel:libboost_date_time$secondaryArchSuffix >= 1.83.0
	devel:libboost_program_options$secondaryArchSuffix >= 1.83.0
	devel:libboost_thread$secondaryArchSuffix >= 1.83.0
	devel:libboost_system$secondaryArchSuffix >= 1.83.0
	devel:libcfitsio$secondaryArchSuffix
	devel:libexiv2$secondaryArchSuffix
	devel:libfftw3$secondaryArchSuffix
	devel:libgsl$secondaryArchSuffix
	devel:libgslcblas$secondaryArchSuffix
	devel:libHalf_2_4$secondaryArchSuffix
	devel:libIex_2_4$secondaryArchSuffix
	devel:libIlmImf_2_4$secondaryArchSuffix
	devel:libIlmThread_2_4$secondaryArchSuffix
	devel:libImath_2_4$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:liblcms2$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt5WebEngine$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libraw$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$appsDir/LuminanceHDR \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	mkdir -p $prefix/bin
	mv $appsDir/LuminanceHDR/bin/luminance-hdr-cli $prefix/bin

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local APP_NAME="LuminanceHDR"
	local LONG_INFO="$SUMMARY"
	local APP_SIGNATURE="application/x-vnd.luminance.rdef.in"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		-e "s|@APP_NAME@|$APP_NAME|" \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		$portDir/additional-files/luminance.rdef.in > luminance.rdef

	addResourcesToBinaries luminance.rdef $appsDir/LuminanceHDR/bin/luminance-hdr

	addAppDeskbarSymlink $appsDir/LuminanceHDR/bin/luminance-hdr
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
