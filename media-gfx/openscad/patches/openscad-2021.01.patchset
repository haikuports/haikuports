From 6addb381b30720eda1d86a63d5f4b5e0d838ecce Mon Sep 17 00:00:00 2001
From: Luc Schrijvers <begasus@gmail.com>
Date: Sat, 22 Mar 2025 06:42:20 +0100
Subject: Use OffscreenContextNULL for Haiku


diff --git a/openscad.pro b/openscad.pro
old mode 100755
new mode 100644
index b76ca76..f9ceb26
--- a/openscad.pro
+++ b/openscad.pro
@@ -629,10 +629,14 @@ linux: {
   }
 }
 
-unix:!macx {
+unix:!macx:!haiku {
   SOURCES += src/imageutils-lodepng.cc
   SOURCES += src/OffscreenContextGLX.cc
 }
+haiku {
+  SOURCES += src/imageutils-lodepng.cc
+  SOURCES += src/OffscreenContextNULL.cc
+}
 macx {
   SOURCES += src/imageutils-macosx.cc
   OBJECTIVE_SOURCES += src/OffscreenContextCGL.mm
-- 
2.50.1


From 9b7e218826be0e2841938ceb66367a8e89bf5b52 Mon Sep 17 00:00:00 2001
From: Luc Schrijvers <begasus@gmail.com>
Date: Sat, 22 Mar 2025 07:00:10 +0100
Subject: No GL/glxew.h on Haiku (yet)


diff --git a/src/GLView.cc b/src/GLView.cc
index f1216c6..7ea3cdc 100644
--- a/src/GLView.cc
+++ b/src/GLView.cc
@@ -10,7 +10,7 @@
 #include "boost-utils.h"
 #ifdef _WIN32
 #include <GL/wglew.h>
-#elif !defined(__APPLE__)
+#elif !defined(__APPLE__) && !defined(__HAIKU__)
 #include <GL/glxew.h>
 #endif
 
@@ -193,7 +193,7 @@ void GLView::enable_opencsg_shaders()
     }
 #ifdef _WIN32
     else if (WGLEW_ARB_pbuffer && WGLEW_ARB_pixel_format) this->is_opencsg_capable = true;
-#elif !defined(__APPLE__)
+#elif !defined(__APPLE__) && !defined(__HAIKU__)
     else if (GLXEW_SGIX_pbuffer && GLXEW_SGIX_fbconfig) this->is_opencsg_capable = true;
 #endif
   }
-- 
2.50.1


From 50383d63afc4383f9f514afbca7c8696d33fdea6 Mon Sep 17 00:00:00 2001
From: Luc Schrijvers <begasus@gmail.com>
Date: Tue, 2 Sep 2025 17:09:56 +0200
Subject: Build fix


diff --git a/src/FileModule.cc b/src/FileModule.cc
index ce57b1f..71e343c 100644
--- a/src/FileModule.cc
+++ b/src/FileModule.cc
@@ -65,7 +65,7 @@ void FileModule::registerUse(const std::string path, const Location &loc)
 	auto ext = fs::path(path).extension().generic_string();
 
 	if (boost::iequals(ext, ".otf") || boost::iequals(ext, ".ttf")) {
-		if (fs::is_regular(path)) {
+		if (fs::is_regular_file(path)) {
 			FontCache::instance()->register_font_file(path);
 		} else {
 			LOG(message_group::Error,Location::NONE,"","Can't read font with path '%1$s'",path);
-- 
2.50.1

