SUMMARY="Scanner Access Now Easy (SANE)"
DESCRIPTION="SANE stands for \"Scanner Access Now Easy\" and is an \
application programming interface (API) that provides standardized access to \
any raster image scanner hardware (flatbed scanner, hand-held scanner, video- \
and still-cameras, frame-grabbers, etc.).

The SANE standard is free and its discussion and development \
are open to everybody. The current source code is written to support several \
operating systems, including GNU/Linux, OS/2, Win32 and various Unices and is \
available under the GNU General Public License (commercial applications and \
backends are welcome, too, however).

This package includes scanners backends, the command line frontend scanimage, \
the saned server and the sane-find-scanner utility, along with their \
documentation."
HOMEPAGE="http://www.sane-project.org"
COPYRIGHT="David Mosberger-Tang, Andy Beck"
LICENSE="GNU LGPL v2"
REVISION="2"
SOURCE_URI="https://gitlab.com/sane-project/backends/uploads/110fc43336d0fb5e514f1fdc7360dd87/sane-backends-$portVersion.tar.gz"
CHECKSUM_SHA256="f832395efcb90bb5ea8acd367a820c393dda7e0dd578b16f48928b8f5bdd0524"
SOURCE_DIR="sane-backends-$portVersion"
PATCHES="sane_backends-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

GLOBAL_WRITABLE_FILES="
	settings/sane.d directory keep-old
	"

pythonVersion=3.9

PROVIDES="
	sane_backends$secondaryArchSuffix = $portVersion
	cmd:gamma4scanimage$secondaryArchSuffix = $portVersion
	cmd:sane_config$secondaryArchSuffix = $portVersion
	cmd:sane_find_scanner$secondaryArchSuffix = $portVersion
 	cmd:saned$secondaryArchSuffix = $portVersion
	cmd:scanimage$secondaryArchSuffix = $portVersion
	cmd:umax_pp$secondaryArchSuffix
	lib:libsane$secondaryArchSuffix = $portVersion compat >= 1
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libpython$pythonVersion$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libusb_1.0$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	sane_backends${secondaryArchSuffix}_devel = $portVersion
	devel:libsane$secondaryArchSuffix = $portVersion compat >= 1
	"
REQUIRES_devel="
	sane_backends$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	devel:libcurl$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libpython$pythonVersion$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libusb_1.0$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:autoreconf
	cmd:autopoint
	cmd:awk
	cmd:find
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3
	"

BUILD()
{
	if [ $effectiveTargetArchitecture == 'x86' ]; then
		export CFLAGS="-DTIFF_DISABLE_DEPRECATED"
	fi

	export LIBS="-lnetwork"
	runConfigure configure \
		--prefix=$prefix \
		--bindir=$binDir \
		--sbindir=$binDir \
		--libdir=$libDir \
		--includedir=$includeDir \
		--datadir=$dataDir \
		--docdir=$docDir \
		--with-libcurl \
		--enable-pthread \
		--without-api-spec \
		--disable-locking \
		--with-usb \
		--enable-rpath \
		--enable-pnm-backend

	make $jobArgs
}

INSTALL()
{
	make install-strip

	rm $libDir/libsane.la

	# prepare develop/lib
	prepareInstalledDevelLibs libsane
	fixPkgconfig

	# hack for old BeOS apps (Sanity)
	ln -s $libDir/libsane.so.1 $libDir/libsane.so

	# devel package
	packageEntries devel \
		$developDir
}

TEST()
{
        make check $jobArgs
}
