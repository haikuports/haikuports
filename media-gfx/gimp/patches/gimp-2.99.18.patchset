From 7af8985a55616452a0029b8af6e60b787ca03255 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sat, 16 Mar 2024 23:23:49 +1000
Subject: Fix build for Haiku


diff --git a/extensions/meson.build b/extensions/meson.build
index 3bb1681..e89a6b4 100644
--- a/extensions/meson.build
+++ b/extensions/meson.build
@@ -1,4 +1,4 @@
-subdir('goat-exercises')
+#subdir('goat-exercises')
 
 # Fallback fix to the problem of non-configured interpreters
 if platform_windows and not meson.is_cross_build() and lua.found()
diff --git a/libgimpbase/gimputils.c b/libgimpbase/gimputils.c
index daadac0..f45dc9d 100644
--- a/libgimpbase/gimputils.c
+++ b/libgimpbase/gimputils.c
@@ -51,7 +51,9 @@
 
 /* For thread IDs. */
 #include <sys/types.h>
+#ifndef __HAIKU__
 #include <sys/syscall.h>
+#endif
 
 #ifdef HAVE_SYS_PRCTL_H
 #include <sys/prctl.h>
diff --git a/meson.build b/meson.build
index 85feb5c..57bd9b9 100644
--- a/meson.build
+++ b/meson.build
@@ -154,6 +154,10 @@ if platform_osx
   conf.set('PLATFORM_OSX', 1)
 endif
 
+platform_haiku = (
+  host_os.contains('haiku')
+)
+
 if platform_windows
   windows = import('windows')
   # AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
@@ -602,7 +606,7 @@ detailed_backtraces = (
 ################################################################################
 # Check for x11 support
 
-x11_target = gtk3.get_variable(pkgconfig: 'targets').contains('x11')
+x11_target = false
 
 x11   = x11_target ? dependency('x11')    : no_dep
 xmu   = x11_target ? dependency('xmu')    : no_dep
@@ -1614,10 +1618,7 @@ endif
 
 
 # git-version.h is already present and not generated if dist tarball
-is_git_repository = run_command(python, '-c',
-  'import sys,os; sys.exit(0 if os.path.exists(".git") else 1)',
-  check: false
-).returncode() == 0
+is_git_repository = false
 
 has_version_h = run_command(python, '-c',
   'import sys,os; sys.exit(0 if os.path.exists("git-version.h") else 1)',
diff --git a/plug-ins/meson.build b/plug-ins/meson.build
index e1c6ad8..bf208ec 100644
--- a/plug-ins/meson.build
+++ b/plug-ins/meson.build
@@ -28,7 +28,7 @@ subdir('metadata')
 subdir('pagecurl')
 subdir('print')
 subdir('python')
-subdir('screenshot')
+#subdir('screenshot')
 subdir('script-fu')
 subdir('selection-to-path')
 subdir('twain')
diff --git a/plug-ins/script-fu/server/script-fu-server.c b/plug-ins/script-fu/server/script-fu-server.c
index 7bf9ed6..c1527e1 100644
--- a/plug-ins/script-fu/server/script-fu-server.c
+++ b/plug-ins/script-fu/server/script-fu-server.c
@@ -105,7 +105,7 @@ typedef short sa_family_t; /* Not defined by winsock */
 #define difftime(a,b) (((gdouble)(a)) - ((gdouble)(b)))
 #endif
 
-#ifndef NO_FD_SET
+#if !defined(NO_FD_SET) || defined(__HAIKU__)
 #  define SELECT_MASK fd_set
 #else
 #  ifndef _AIX
-- 
2.43.2


From 0b0b7a0dbfeacbd295758fc566c835b98eb7c160 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sat, 16 Mar 2024 23:24:11 +1000
Subject: Use load_image instead g_spawn_async


diff --git a/app/core/gimp-spawn.c b/app/core/gimp-spawn.c
index bfa08e8..6aeb5b4 100644
--- a/app/core/gimp-spawn.c
+++ b/app/core/gimp-spawn.c
@@ -22,6 +22,10 @@
 
 #include <glib-object.h>
 
+#ifdef __HAIKU__
+#undef HAVE_VFORK
+#endif
+
 #ifdef HAVE_VFORK
 #include <sys/types.h>
 #include <sys/wait.h>
@@ -38,6 +42,11 @@
 #include <io.h>
 #endif
 
+#ifdef __HAIKU__
+#include <stdio.h>
+#include <image.h>
+#endif
+
 #include "core-types.h"
 
 #include "gimp-spawn.h"
@@ -166,6 +175,25 @@ gimp_spawn_async (gchar       **argv,
 {
   g_return_val_if_fail (argv != NULL, FALSE);
   g_return_val_if_fail (argv[0] != NULL, FALSE);
+  
+#ifdef __HAIKU__
+
+  int argc = 0;
+  while (argv[argc] != NULL) argc++;
+  team_id team = load_image(argc, argv, envp);
+  if (team < 0) {
+		g_set_error (error,
+		             G_SPAWN_ERROR,
+		             G_SPAWN_ERROR_FORK,
+		             _("Failed to fork (%s)"),
+		             g_strerror (team));
+  	return FALSE;
+  }
+  resume_thread(team);
+  *child_pid = team;
+  return TRUE;
+
+#else
 
 #ifdef HAVE_VFORK
   if (flags == (G_SPAWN_LEAVE_DESCRIPTORS_OPEN |
@@ -235,6 +263,7 @@ gimp_spawn_async (gchar       **argv,
 #endif /* HAVE_VFORK */
 
   return g_spawn_async (NULL, argv, envp, flags, NULL, NULL, child_pid, error);
+#endif /* __HAIKU__ */
 }
 
 void
-- 
2.43.2


From 161c69fa7dc953551f96e7831247380c7a236a10 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sat, 16 Mar 2024 23:24:33 +1000
Subject: Fix preferences dialog freeze


diff --git a/app/dialogs/preferences-dialog.c b/app/dialogs/preferences-dialog.c
index 0da05a7..fc1bb0c 100644
--- a/app/dialogs/preferences-dialog.c
+++ b/app/dialogs/preferences-dialog.c
@@ -1225,6 +1225,7 @@ prefs_dialog_new (Gimp       *gimp,
    * which case the feature is always available.
    */
   hbox = NULL;
+#if 0
   if (! gimp_stack_trace_available (TRUE))
     {
 #ifndef HAVE_EXECINFO_H
@@ -1236,6 +1237,7 @@ prefs_dialog_new (Gimp       *gimp,
                                  _("This feature is more efficient with \"gdb\" or \"lldb\" installed on your system."));
 #endif /* ! HAVE_EXECINFO_H */
     }
+#endif
   if (hbox)
     gtk_box_pack_start (GTK_BOX (vbox2), hbox, FALSE, FALSE, 0);
 
-- 
2.43.2


From 7bd3e0bfe2e6b9517250f10b1d0319bb66a6ce4f Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sat, 16 Mar 2024 23:26:30 +1000
Subject: Disable signal handlers


diff --git a/app/main.c b/app/main.c
index 1adc133..17dcd0e 100644
--- a/app/main.c
+++ b/app/main.c
@@ -591,7 +591,9 @@ main (int    argc,
   gimp_backtrace_init ();
 
   /* Start signal handlers early. */
+#ifndef __HAIKU__
   gimp_init_signal_handlers (&backtrace_file);
+#endif
 
 #ifdef G_OS_WIN32
   /* Enable Anti-Aliasing*/
diff --git a/libgimp/gimp.c b/libgimp/gimp.c
index e00989b..4de4534 100644
--- a/libgimp/gimp.c
+++ b/libgimp/gimp.c
@@ -244,8 +244,8 @@ gimp_main (GType  plug_in_type,
     /* Similar to core crash handling in app/signals.c, the order here
      * is very important!
      */
-    if (! _prevExceptionFilter)
-      _prevExceptionFilter = SetUnhandledExceptionFilter (gimp_plugin_sigfatal_handler);
+//    if (! _prevExceptionFilter)
+//      _prevExceptionFilter = SetUnhandledExceptionFilter (gimp_plugin_sigfatal_handler);
 
     ExcHndlInit ();
 
@@ -376,15 +376,15 @@ gimp_main (GType  plug_in_type,
    * about the program error, and offer debugging if the plug-in
    * has been built with MSVC, and the user has MSVC installed.
    */
-  gimp_signal_private (SIGHUP,  gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGINT,  gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGQUIT, gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGTERM, gimp_plugin_sigfatal_handler, 0);
-
-  gimp_signal_private (SIGABRT, gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGBUS,  gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGSEGV, gimp_plugin_sigfatal_handler, 0);
-  gimp_signal_private (SIGFPE,  gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGHUP,  gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGINT,  gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGQUIT, gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGTERM, gimp_plugin_sigfatal_handler, 0);
+
+//  gimp_signal_private (SIGABRT, gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGBUS,  gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGSEGV, gimp_plugin_sigfatal_handler, 0);
+//  gimp_signal_private (SIGFPE,  gimp_plugin_sigfatal_handler, 0);
 
   /* Ignore SIGPIPE from crashing Gimp */
   gimp_signal_private (SIGPIPE, SIG_IGN, 0);
diff --git a/libgimpbase/gimpsignal.c b/libgimpbase/gimpsignal.c
index 4e334f6..ca190a2 100644
--- a/libgimpbase/gimpsignal.c
+++ b/libgimpbase/gimpsignal.c
@@ -69,7 +69,7 @@ gimp_signal_private (gint                   signum,
                      GimpSignalHandlerFunc  handler,
                      gint                   flags)
 {
-#ifndef G_OS_WIN32
+#if !defined(G_OS_WIN32) && !defined(__HAIKU__)
   gint ret;
   struct sigaction sa;
   struct sigaction osa;
-- 
2.43.2


From 1a79e5fec10f7cada49f5ebfa0d8e165faab1e9e Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sat, 16 Mar 2024 23:26:44 +1000
Subject: Disable introspection


diff --git a/libgimp/meson.build b/libgimp/meson.build
index bc9727e..d57fd28 100644
--- a/libgimp/meson.build
+++ b/libgimp/meson.build
@@ -436,7 +436,7 @@ libgimpui_introspectable_files = [
   libgimpwidgets_introspectable,
 ]
 
-if meson.is_cross_build() and not get_option('can-crosscompile-gir')
+if (meson.is_cross_build() and not get_option('can-crosscompile-gir')) or host_os.contains('haiku')
   have_gobject_introspection = false
   gobject_introspection_warning = '\n      '.join(['',
     'GObject Introspection is disabled while cross-compiling because',
-- 
2.43.2

