SUMMARY="An outline commandline-only font editor"
DESCRIPTION="An outline font editor that lets you create your own OpenType, \
TrueType, CID-keyed, multi-master fonts and more... or simply edit existing \
ones. This port is only CLI."
HOMEPAGE="https://fontforge.github.io/"
COPYRIGHT="2000-2018 George Williams
	The FontForge Project"
LICENSE="GNU GPL v3
	BSD (3-clause)"
REVISION="1"
SOURCE_URI="https://github.com/fontforge/fontforge/archive/refs/tags/$portVersion.tar.gz"
CHECKSUM_SHA256="ab0c4be41be15ce46a1be1482430d8e15201846269de89df67db32c7de4343f1"
SOURCE_FILENAME="fontforge-$portVersion.tar.gz"
PATCHES="fontforge-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

# On x86_gcc2 we don't want to install the commands in bin/<arch>/, but in bin/.
commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

pythonVersion=3.9

PROVIDES="
	fontforge$secondaryArchSuffix = $portVersion
	cmd:fontforge$commandSuffix
	cmd:fontimage$commandSuffix
	cmd:fontlint$commandSuffix
	cmd:sfddiff$commandSuffix
	lib:libfontforge$secondaryArchSuffix = 4
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libbz2$secondaryArchSuffix
#	lib:libcairo$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
#	lib:libfribidi$secondaryArchSuffix
	lib:libgif$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libltdl$secondaryArchSuffix
	lib:libncurses$secondaryArchSuffix
#	lib:libpangocairo_1.0$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libpython$pythonVersion$secondaryArchSuffix
	lib:libreadline$secondaryArchSuffix
	lib:libspiro$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
#	lib:libuninameslist$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	fontforge${secondaryArchSuffix}_devel = $portVersion
	devel:libfontforge$secondaryArchSuffix = 4
	"
REQUIRES_devel="
	fontforge$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libbz2$secondaryArchSuffix
#	devel:libcairo$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
#	devel:libfribidi$secondaryArchSuffix
	devel:libgif$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libltdl$secondaryArchSuffix
	devel:libncurses$secondaryArchSuffix
#	devel:libpangocairo_1.0$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libpython$pythonVersion$secondaryArchSuffix
	devel:libreadline$secondaryArchSuffix
	devel:libspiro$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
#	devel:libuninameslist$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:ninja
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3
	"

BUILD()
{
	export LDFLAGS="-lnetwork $LDFLAGS"
	cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_INSTALL_BINDIR=$commandBinDir \
		-DBUILD_SHARED_LIBS=ON \
		-DPYHOOK_INSTALL_DIR=$prefix/lib/python$pythonVersion/vendor-packages \
		-DENABLE_GUI=OFF
	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	# we are not linux
	rm -rf $dataDir/{applications,icons,metainfo,mime}

	prepareInstalledDevelLib libfontforge

	# devel package
	packageEntries devel \
		$developDir
}

TEST()
{
	make check
}
