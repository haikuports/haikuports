SUMMARY="A shell tool for executing jobs in parallel locally or on remote machines"
DESCRIPTION="GNU parallel is a shell tool for executing jobs in parallel using \
one or more computers. A job can be a single command or a small script that \
has to be run for each of the lines in the input. The typical input is \
a list of files, a list of hosts, a list of users, a list of URLs, or a list \
of tables. A job can also be a command that reads from a pipe. \
GNU parallel can then split the input and pipe it into commands in parallel.
If you use xargs and tee today you will find GNU parallel very easy to use \
as GNU parallel is written to have the same options as xargs. If you write \
loops in shell, you will find GNU parallel may be able to replace most of \
the loops and make them run faster by running several jobs in parallel.

GNU parallel makes sure output from the commands is the same output as you \
would get had you run the commands sequentially. \
This makes it possible to use output from GNU parallel as input \
for other programs.

For each line of input GNU parallel will execute command with the line as \
arguments. If no command is given, the line of input is executed. \
Several lines will be run in parallel. GNU parallel can often be used as \
a substitute for xargs or cat | bash."
HOMEPAGE="https://www.gnu.org/software/parallel/"
COPYRIGHT="2004-2022 Ole Tango"
LICENSE="GNU GPL v3"
REVISION="1"
SOURCE_URI="ftp://ftp.gnu.org/gnu/parallel/parallel-${portVersion//./}.tar.bz2"
SOURCE_DIR="parallel-${portVersion//./}"
CHECKSUM_SHA256="93f2b94f1850798a4b5dda22bdae86dab6a6565e3525860e08e46f2563f3268c"
PATCHES="parallel-$portVersion.patchset"

ARCHITECTURES="all"

PROVIDES="
	parallel = $portVersion
	cmd:parallel = $portVersion
	cmd:env_parallel = $portVersion
	cmd:env_parallel.ash = $portVersion
	cmd:env_parallel.bash = $portVersion
	cmd:env_parallel.csh = $portVersion
	cmd:env_parallel.dash = $portVersion
	cmd:env_parallel.fish = $portVersion
	cmd:env_parallel.ksh = $portVersion
	cmd:env_parallel.mksh = $portVersion
	cmd:env_parallel.pdksh = $portVersion
	cmd:env_parallel.sh = $portVersion
	cmd:env_parallel.tcsh = $portVersion
	cmd:env_parallel.zsh = $portVersion
	cmd:niceload = $portVersion
	cmd:parcat = $portVersion
	cmd:parset = $portVersion
	cmd:parsort = $portVersion
	cmd:sem = $portVersion
	cmd:sql = $portVersion
	"
REQUIRES="
	cmd:perl
	"

BUILD_PREREQUIRES="
	cmd:awk
	cmd:make
	cmd:perl
	"

BUILD()
{
	runConfigure ./configure
	make
}

INSTALL()
{
	make install

	mkdir $dataDir
	mv $prefix/share/* $dataDir
	rm -r $prefix/share
}
