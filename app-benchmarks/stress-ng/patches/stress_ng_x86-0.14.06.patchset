From 23ea2d5e549bc7dab80b08cce909a3558bfbb270 Mon Sep 17 00:00:00 2001
From: David Karoly <david.karoly@outlook.com>
Date: Fri, 26 Nov 2021 17:45:23 +0000
Subject: disable too large alignment on 32-bit Haiku


diff --git a/stress-icache.c b/stress-icache.c
index c53ecb3..2cc01e2 100644
--- a/stress-icache.c
+++ b/stress-icache.c
@@ -169,14 +169,14 @@ func_name(const stress_args_t *args)					\
 	return EXIT_SUCCESS;						\
 }
 
-#if defined(HAVE_ALIGNED_64K)
-STRESS_ICACHE_FUNC(stress_icache_func_64K, SIZE_64K)
+#if defined(HAVE_ALIGNED_64K) && !defined(__HAIKU__)
+STRESS_ICACHE_FUNC(stress_icache_func_64K, SIZE_4K)
 #endif
 STRESS_ICACHE_FUNC(stress_icache_func_16K, SIZE_16K)
 STRESS_ICACHE_FUNC(stress_icache_func_4K, SIZE_4K)
 
-#if defined(HAVE_ALIGNED_64K)
-STRESS_ICACHE(stress_icache_64K, SIZE_64K, stress_icache_func_64K)
+#if defined(HAVE_ALIGNED_64K) && !defined(__HAIKU__)
+STRESS_ICACHE(stress_icache_64K, SIZE_4K, stress_icache_func_64K)
 #endif
 STRESS_ICACHE(stress_icache_16K, SIZE_16K, stress_icache_func_16K)
 STRESS_ICACHE(stress_icache_4K, SIZE_4K, stress_icache_func_4K)
@@ -201,13 +201,13 @@ static int stress_icache(const stress_args_t *args)
 	case SIZE_16K:
 		ret = stress_icache_16K(args);
 		break;
-#if defined(HAVE_ALIGNED_64K)
+#if defined(HAVE_ALIGNED_64K) && !defined(__HAIKU__)
 	case SIZE_64K:
 		ret = stress_icache_64K(args);
 		break;
 #endif
 	default:
-#if defined(HAVE_ALIGNED_64K)
+#if defined(HAVE_ALIGNED_64K) && !defined(__HAIKU__)
 		pr_inf("%s: page size %zu is not %u or %u or %u, cannot test\n",
 			args->name, args->page_size,
 			SIZE_4K, SIZE_16K, SIZE_64K);
diff --git a/stress-vecfp.c b/stress-vecfp.c
index aa2b379..01da054 100644
--- a/stress-vecfp.c
+++ b/stress-vecfp.c
@@ -58,11 +58,19 @@ typedef double (*stress_vecfp_func_t)(
 /*
  *  float vectors, named by vfloatwN where N = number of elements width
  */
+#ifdef __HAIKU__
+#define VEC_TYPE_T(type, elements)						\
+typedef union {									\
+	type v	 __attribute__ ((vector_size(sizeof(type) * elements)));\
+	type f[elements];						\
+} stress_vecfp_ ## type ## _ ## elements ## _t;
+#else
 #define VEC_TYPE_T(type, elements)						\
 typedef union {									\
 	type v	 ALIGNED(2048) __attribute__ ((vector_size(sizeof(type) * elements)));\
 	type f[elements] ALIGNED(2048);						\
 } stress_vecfp_ ## type ## _ ## elements ## _t;
+#endif
 
 VEC_TYPE_T(float, 256)
 VEC_TYPE_T(float, 128)
-- 
2.37.3

