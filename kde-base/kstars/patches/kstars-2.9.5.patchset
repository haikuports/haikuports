From 46929274bb54d893e3642feca39b0fe8561957d4 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 9 May 2018 20:50:37 +1000
Subject: Fix build for Haiku


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 096c597..019caee 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -247,6 +247,19 @@ if (UNIX)
 endif(UNIX)
 
 # Add security (hardening flags)
+IF (HAIKU)
+	SET(SEC_COMP_FLAGS "-D_FORTIFY_SOURCE=2 -Wcast-align -Wa,--noexecstack")
+	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SEC_COMP_FLAGS}")
+	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SEC_COMP_FLAGS}")
+	SET(SEC_LINK_FLAGS "-Wl,-z,nodump -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now")
+	IF("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
+		MESSAGE("++ 64 bit architecture")
+		SET(SEC_LINK_FLAGS "${SEC_LINK_FLAGS} -pie")
+		SET(SEC_COMP_FLAGS "${SEC_COMP_FLAGS} -fPIE")
+	ENDIF()
+	SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${SEC_LINK_FLAGS}")
+	SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${SEC_LINK_FLAGS}")
+ELSE ()
 IF (UNIX OR APPLE OR ANDROID)
     SET(SEC_COMP_FLAGS "-D_FORTIFY_SOURCE=2 -fstack-protector-all -Wcast-align -fPIE")
     IF (NOT ANDROID AND NOT CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND NOT APPLE)
@@ -264,6 +277,7 @@ IF (UNIX OR APPLE OR ANDROID)
     SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${SEC_LINK_FLAGS}")
     SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${SEC_LINK_FLAGS}")
 ENDIF ()
+ENDIF ()
 
 # Clang Format support
 IF (UNIX OR APPLE)
@@ -374,7 +388,9 @@ configure_file(${CMAKE_CURRENT_SOURCE_DIR}/kstars/version.h.cmake
 # let our config.h be found first in any case
 include_directories (BEFORE ${CMAKE_CURRENT_BINARY_DIR})
 
+IF (NOT HAIKU)
 add_subdirectory(doc)
+ENDIF ()
 add_subdirectory(kstars)
 add_subdirectory(datahandlers)
 
diff --git a/kstars/htmesh/SkipListElement.h b/kstars/htmesh/SkipListElement.h
index f8187e4..a14cd7d 100644
--- a/kstars/htmesh/SkipListElement.h
+++ b/kstars/htmesh/SkipListElement.h
@@ -20,7 +20,7 @@
 #define KEY_MAX _I64_MAX
 #else
 #if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__DragonFly__) || \
-    (defined(__SUNPRO_CC) && defined(__sun)) || defined(__APPLE__)
+    (defined(__SUNPRO_CC) && defined(__sun)) || defined(__APPLE__) || defined(__HAIKU__)
 #define KEY_MAX LLONG_MAX
 #else
 #define KEY_MAX LONG_LONG_MAX
diff --git a/kstars/htmesh/SpatialGeneral.h b/kstars/htmesh/SpatialGeneral.h
index 450119e..4c822d0 100644
--- a/kstars/htmesh/SpatialGeneral.h
+++ b/kstars/htmesh/SpatialGeneral.h
@@ -101,7 +101,7 @@ const float64 gEpsilon = 1.0E-15;
 // standard explicit template instantiation, define.
 //
 
-#if defined(__APPLE__)
+#if defined(__APPLE__) || defined(__HAIKU__)
 #define LINKAGE
 #endif
 
-- 
2.16.2


From 3f9a1566406f46e614fe80a4143d52ae321b5b6f Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 9 May 2018 20:51:23 +1000
Subject: Native Haiku style for Default theme


diff --git a/kstars/auxiliary/thememanager.cpp b/kstars/auxiliary/thememanager.cpp
index 4520c6b..9a2b788 100644
--- a/kstars/auxiliary/thememanager.cpp
+++ b/kstars/auxiliary/thememanager.cpp
@@ -158,9 +158,11 @@ void Manager::slotChangePalette()
 
     if (theme == "Macintosh" || theme == "White Balance" || theme == "High Key" || (theme == "Default" && currentDesktopdefaultTheme().contains("Dark") == false))
         themeIconType = BREEZE_THEME;
-
+#if defined(Q_OS_HAIKU)
+	if (theme == "Default")
+		themeIconType = SYSTEM_THEME;
     setIconTheme(themeIconType);
-
+#endif
     QString filename        = d->themeMap.value(theme);
     KSharedConfigPtr config = KSharedConfig::openConfig(filename);
     // hint for the style to synchronize the color scheme with the window manager/compositor
@@ -182,6 +184,10 @@ void Manager::slotChangePalette()
 
     if(theme == "Macintosh")
         qApp->setStyle(QStyleFactory::create("macintosh"));
+#if defined(Q_OS_HAIKU)
+	else if(theme == "Default")
+		qApp->setStyle(QStyleFactory::create("haiku"));
+#endif
     else
         qApp->setStyle(QStyleFactory::create("Fusion"));
 
@@ -407,6 +413,12 @@ void Manager::setIconTheme(IconTheme theme)
     themeSearchPaths = themeSearchPaths << QStandardPaths::locate(QStandardPaths::GenericDataLocation, "icons", QStandardPaths::LocateDirectory);
     QString resourcePath = QStandardPaths::locate(QStandardPaths::GenericDataLocation, "icons", QStandardPaths::LocateDirectory) + QDir::separator() + iconTheme + QDir::separator() + rccFile;
     QResource::registerResource(resourcePath, "/icons/" + iconTheme);
+	#elif defined(Q_OS_HAIKU)
+	if (theme == SYSTEM_THEME)
+		iconTheme = "haiku";
+	themeSearchPaths = themeSearchPaths << QStandardPaths::locate(QStandardPaths::GenericDataLocation, "icons", QStandardPaths::LocateDirectory);
+	QString resourcePath = QStandardPaths::locate(QStandardPaths::GenericDataLocation, "icons", QStandardPaths::LocateDirectory) + QDir::separator() + iconTheme + QDir::separator() + rccFile;
+	QResource::registerResource(resourcePath, "/icons/" + iconTheme);
     #else
     //TODO On Linux on non-KDE Distros, find out if the themes are installed or not and perhaps warn the user
     #endif
diff --git a/kstars/auxiliary/thememanager.h b/kstars/auxiliary/thememanager.h
index 0b08063..57904c1 100644
--- a/kstars/auxiliary/thememanager.h
+++ b/kstars/auxiliary/thememanager.h
@@ -48,7 +48,7 @@ class Manager : public QObject
 
 public:
 
-    typedef enum { BREEZE_THEME, BREEZE_DARK_THEME } IconTheme;
+    typedef enum { BREEZE_THEME, BREEZE_DARK_THEME, SYSTEM_THEME } IconTheme;
 
     ~Manager();
     static Manager* instance();
-- 
2.16.2


From 8cda7d619e4cc0c4bcbb7c7aa71ee3bc70abc82b Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 10 May 2018 20:24:54 +1000
Subject: Fix strange bug in Haiku x64


diff --git a/datahandlers/catalogdb.cpp b/datahandlers/catalogdb.cpp
index 81c09cc..18bf328 100644
--- a/datahandlers/catalogdb.cpp
+++ b/datahandlers/catalogdb.cpp
@@ -848,6 +848,11 @@ void CatalogDB::GetAllObjects(const QString &catalog, QList<SkyObject *> &sky_li
     //     qWarning() << get_query.lastError();
     //     qWarning() << FindCatalog(catalog);
 
+#if defined(__x86_64__) && defined(__HAIKU__)
+	if (FindCatalog(catalog) < 0)
+		return;
+#endif
+
     if (!get_query.exec())
     {
         qWarning() << get_query.lastQuery();
-- 
2.16.2

