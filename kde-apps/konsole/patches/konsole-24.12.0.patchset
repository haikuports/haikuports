From 8dc4155399f0417942b93be43368edd0aa338ac9 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sun, 3 Mar 2024 22:00:00 +1000
Subject: Fix for Haiku


diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 00ac5b3..e3d11ea 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -97,6 +97,10 @@ if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
     list(APPEND konsole_LIBS util)
 endif()
 
+if(HAIKU)
+    list(APPEND konsole_LIBS network)
+endif()
+
 # TODO: Move this to an internal folder if it grows too much.
 # This konsoleprivate_core is the "core" library that depends in nothing from konsole itself
 # so we can start to detangle the codebase.
diff --git a/src/Pty.cpp b/src/Pty.cpp
index cc704fe..2996253 100644
--- a/src/Pty.cpp
+++ b/src/Pty.cpp
@@ -244,7 +244,7 @@ void Pty::addEnvironmentVariables(const QStringList &environmentVariables)
 
     // extra safeguard to make sure $TERM is always set
     if (!isTermEnvAdded) {
-        setEnv(QStringLiteral("TERM"), QStringLiteral("xterm-256color"));
+        setEnv(QStringLiteral("TERM"), QStringLiteral("xterm-color"));
     }
 }
 
diff --git a/src/Vt102Emulation.cpp b/src/Vt102Emulation.cpp
index 512c57e..ea929f1 100644
--- a/src/Vt102Emulation.cpp
+++ b/src/Vt102Emulation.cpp
@@ -2765,11 +2765,19 @@ void Vt102Emulation::sendKeyEvent(QKeyEvent *event)
             // Alt+[Character] results in Esc+[Character] being sent
             // (unless there is an entry defined for this particular combination
             //  in the keyboard modifier)
+#ifdef Q_OS_HAIKU
+        const bool wantsControlModifier = ((entry.modifiers() & entry.modifierMask() & Qt::ControlModifier) != 0U);
+#else
             const bool wantsAltModifier = ((entry.modifiers() & entry.modifierMask() & Qt::AltModifier) != 0U);
+#endif
             const bool wantsMetaModifier = ((entry.modifiers() & entry.modifierMask() & Qt::MetaModifier) != 0U);
             const bool wantsAnyModifier = ((entry.state() & entry.stateMask() & KeyboardTranslator::AnyModifierState) != 0);
 
+#ifdef Q_OS_HAIKU
+        if (((modifiers & Qt::ControlModifier) != 0U) && !(wantsControlModifier || wantsAnyModifier) && !event->text().isEmpty()) {
+#else
             if (((modifiers & Qt::AltModifier) != 0U) && !(wantsAltModifier || wantsAnyModifier) && !event->text().isEmpty()) {
+#endif
                 textToSend.prepend("\033");
             }
             if (((modifiers & Qt::MetaModifier) != 0U) && !(wantsMetaModifier || wantsAnyModifier) && !event->text().isEmpty()) {
diff --git a/src/profile/Profile.cpp b/src/profile/Profile.cpp
index 9b24587..0434dc4 100644
--- a/src/profile/Profile.cpp
+++ b/src/profile/Profile.cpp
@@ -68,7 +68,7 @@ const std::vector<Profile::PropertyInfo> Profile::DefaultProperties = {
     {Command, "Command", nullptr, QString()},
     {Arguments, "Arguments", nullptr, QStringList()},
     {MenuIndex, "MenuIndex", nullptr, QLatin1String("0")},
-    {Environment, "Environment", GENERAL_GROUP, QStringList{QLatin1String("TERM=xterm-256color"), QLatin1String("COLORTERM=truecolor")}},
+    {Environment, "Environment", GENERAL_GROUP, QStringList{QLatin1String("TERM=xterm-color"), QLatin1String("COLORTERM=truecolor")}},
     {Directory, "Directory", GENERAL_GROUP, QString()},
     {LocalTabTitleFormat, "LocalTabTitleFormat", GENERAL_GROUP, QLatin1String("%d : %n")},
     {LocalTabTitleFormat, "tabtitle", nullptr, QLatin1String("%d : %n")},
diff --git a/src/session/Session.cpp b/src/session/Session.cpp
index ce99977..672237f 100644
--- a/src/session/Session.cpp
+++ b/src/session/Session.cpp
@@ -522,14 +522,16 @@ void Session::run()
     }
 
     // if a program was specified via setProgram(), but it couldn't be found (but a fallback was), print a warning
+#ifndef Q_OS_HAIKU
     if (exec != checkProgram(_program)) {
         terminalWarning(i18n("Could not find '%1', starting '%2' instead.  Please check your profile settings.", _program, exec));
     } else if (exec != checkProgram(exec)) {
         terminalWarning(i18n("Could not find '%1', starting '%2' instead.  Please check your profile settings.", exec, checkProgram(exec)));
     }
+#endif
 
     // if no arguments are specified, fall back to program name
-    QStringList arguments = _arguments.join(QLatin1Char(' ')).isEmpty() ? QStringList() << exec : _arguments;
+    QStringList arguments = _arguments.join(QLatin1Char(' ')).isEmpty() ? QStringList() << exec << QStringLiteral("-login") : _arguments;
 
     // For historical reasons, the first argument in _arguments is the
     // name of the program to execute, remove it in favor of the actual program name
-- 
2.45.2


From 7b3a8db117c0b61063b9007cae5659fea03b2000 Mon Sep 17 00:00:00 2001
From: Schrijvers Luc <begasus@gmail.com>
Date: Sun, 22 Dec 2024 16:59:00 +0100
Subject: Don't include the Desktop directory


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 38d8178..588262c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -132,7 +132,9 @@ option(ENABLE_PLUGIN_SSHMANAGER "Build the SSHManager plugin" ON)
 option(ENABLE_PLUGIN_QUICKCOMMANDS "Build the Quick Commands plugin" ON)
 
 add_subdirectory( src )
-add_subdirectory( desktop )
+if(NOT HAIKU)
+    add_subdirectory( desktop )
+endif()
 
 if(HAVE_DBUS)
     add_subdirectory( kconf_update )
-- 
2.45.2


From 71f9a0ca160fa61b2139f0de622449aed07b016e Mon Sep 17 00:00:00 2001
From: Schrijvers Luc <begasus@gmail.com>
Date: Mon, 23 Dec 2024 13:38:58 +0100
Subject: Use Haiku's icon/color schemes


diff --git a/src/MainWindow.cpp b/src/MainWindow.cpp
index f684d6a..86c8c8e 100644
--- a/src/MainWindow.cpp
+++ b/src/MainWindow.cpp
@@ -382,6 +382,7 @@ void MainWindow::setupActions()
     });
 
     // Set up themes
+#if !defined(Q_OS_HAIKU)
 #if KCOLORSCHEME_VERSION < QT_VERSION_CHECK(6, 6, 0)
     auto *manager = new KColorSchemeManager(actionCollection());
 #else
@@ -394,6 +395,7 @@ void MainWindow::setupActions()
     winColorSchemeMenu->menu()->setIcon(QIcon::fromTheme(QStringLiteral("preferences-desktop-color")));
     winColorSchemeMenu->menu()->setTitle(i18n("&Window Color Scheme"));
     actionCollection()->addAction(QStringLiteral("window-colorscheme-menu"), winColorSchemeMenu);
+#endif
 
     // Full Screen
     menuAction = KStandardAction::fullScreen(this, &MainWindow::viewFullScreen, this, collection);
diff --git a/src/main.cpp b/src/main.cpp
index 8427968..b29978a 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -142,9 +142,11 @@ int main(int argc, char *argv[])
     /**
      * trigger initialisation of proper icon theme
      */
+#if !defined(Q_OS_HAIKU)
 #if KICONTHEMES_VERSION >= QT_VERSION_CHECK(6, 3, 0)
     KIconTheme::initTheme();
 #endif
+#endif
 
 #if HAVE_DBUS
     // Check if any of the arguments makes it impossible to reuse an existing process.
-- 
2.45.2

