From f47d3934b21ecfa6276914b66b62f496d61acf7f Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 1 Nov 2021 17:12:25 +1000
Subject: Fix install knsrc files


diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index a3f8d2d..440db55 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -3,4 +3,4 @@ add_subdirectory( color-schemes )
 add_subdirectory( keyboard-layouts )
 add_subdirectory( layouts )
 
-install( FILES konsole.knsrc DESTINATION ${KDE_INSTALL_KNSRCDIR})
+install( FILES konsole.knsrc DESTINATION ${KDE_INSTALL_DATADIR}/knsrcfiles)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index b4a569c..4752d9b 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -64,6 +64,7 @@ set(konsole_LIBS
     KF5::DBusAddons
     KF5::GlobalAccel
     KF5::NewStuff
+    network
 )
 
 if(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
-- 
2.30.2


From 7499aa75f4274c1ae8492af835cb1336b3386d54 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 1 Nov 2021 17:12:47 +1000
Subject: Shell login


diff --git a/src/session/Session.cpp b/src/session/Session.cpp
index 1d71ed5..77da3f3 100644
--- a/src/session/Session.cpp
+++ b/src/session/Session.cpp
@@ -486,7 +486,7 @@ void Session::run()
     }
 
     // if no arguments are specified, fall back to program name
-    QStringList arguments = _arguments.join(QLatin1Char(' ')).isEmpty() ? QStringList() << exec : _arguments;
+    QStringList arguments = _arguments.join(QLatin1Char(' ')).isEmpty() ? QStringList() << exec << QStringLiteral("-login") : _arguments;
 
     if (!_initialWorkingDir.isEmpty()) {
         _shellProcess->setInitialWorkingDirectory(_initialWorkingDir);
-- 
2.30.2


From 4be436af0615343adc7b85990ad00bcc6a324b15 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 1 Nov 2021 17:13:01 +1000
Subject: Use xterm-color by default


diff --git a/src/Pty.cpp b/src/Pty.cpp
index fa0cb2d..0140c43 100644
--- a/src/Pty.cpp
+++ b/src/Pty.cpp
@@ -231,7 +231,7 @@ void Pty::addEnvironmentVariables(const QStringList &environmentVariables)
 
     // extra safeguard to make sure $TERM is always set
     if (!isTermEnvAdded) {
-        setEnv(QStringLiteral("TERM"), QStringLiteral("xterm-256color"));
+        setEnv(QStringLiteral("TERM"), QStringLiteral("xterm-color"));
     }
 }
 
diff --git a/src/profile/Profile.cpp b/src/profile/Profile.cpp
index 1285357..e4fdcc7 100644
--- a/src/profile/Profile.cpp
+++ b/src/profile/Profile.cpp
@@ -172,7 +172,7 @@ void Profile::useFallback()
     // See Pty.cpp on why Arguments is populated
     setProperty(Arguments, QStringList() << QString::fromUtf8(qgetenv("SHELL")));
     setProperty(Icon, QStringLiteral("utilities-terminal"));
-    setProperty(Environment, QStringList() << QStringLiteral("TERM=xterm-256color") << QStringLiteral("COLORTERM=truecolor"));
+    setProperty(Environment, QStringList() << QStringLiteral("TERM=xterm-color") << QStringLiteral("COLORTERM=truecolor"));
     setProperty(LocalTabTitleFormat, QStringLiteral("%d : %n"));
     setProperty(RemoteTabTitleFormat, QStringLiteral("(%u) %H"));
     setProperty(ShowTerminalSizeHint, true);
-- 
2.30.2


From af0bba0fbab15909a804efcaeaf6fbf97215c039 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 1 Nov 2021 17:13:20 +1000
Subject: Change alt to control for Haiku


diff --git a/src/Vt102Emulation.cpp b/src/Vt102Emulation.cpp
index 0a18577..7977eb3 100644
--- a/src/Vt102Emulation.cpp
+++ b/src/Vt102Emulation.cpp
@@ -1851,11 +1851,19 @@ void Vt102Emulation::sendKeyEvent(QKeyEvent *event)
         // Alt+[Character] results in Esc+[Character] being sent
         // (unless there is an entry defined for this particular combination
         //  in the keyboard modifier)
+#ifdef Q_OS_HAIKU
+        const bool wantsControlModifier = ((entry.modifiers() & entry.modifierMask() & Qt::ControlModifier) != 0U);
+#else
         const bool wantsAltModifier = ((entry.modifiers() & entry.modifierMask() & Qt::AltModifier) != 0U);
+#endif
         const bool wantsMetaModifier = ((entry.modifiers() & entry.modifierMask() & Qt::MetaModifier) != 0U);
         const bool wantsAnyModifier = ((entry.state() & entry.stateMask() & KeyboardTranslator::AnyModifierState) != 0);
 
+#ifdef Q_OS_HAIKU
+        if (((modifiers & Qt::ControlModifier) != 0U) && !(wantsControlModifier || wantsAnyModifier) && !event->text().isEmpty()) {
+#else
         if (((modifiers & Qt::AltModifier) != 0U) && !(wantsAltModifier || wantsAnyModifier) && !event->text().isEmpty()) {
+#endif
             textToSend.prepend("\033");
         }
         if (((modifiers & Qt::MetaModifier) != 0U) && !(wantsMetaModifier || wantsAnyModifier) && !event->text().isEmpty()) {
-- 
2.30.2


From 7e35d104bfdd28306cf4490666d1757db20b5ca9 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 11 May 2022 18:12:54 +1000
Subject: Remove session warnings


diff --git a/src/session/Session.cpp b/src/session/Session.cpp
index 77da3f3..2af65b9 100644
--- a/src/session/Session.cpp
+++ b/src/session/Session.cpp
@@ -479,11 +479,13 @@ void Session::run()
     }
 
     // if a program was specified via setProgram(), but it couldn't be found (but a fallback was), print a warning
+#ifndef Q_OS_HAIKU
     if (exec != checkProgram(_program)) {
         terminalWarning(i18n("Could not find '%1', starting '%2' instead.  Please check your profile settings.", _program, exec));
     } else if (exec != checkProgram(exec)) {
         terminalWarning(i18n("Could not find '%1', starting '%2' instead.  Please check your profile settings.", exec, checkProgram(exec)));
     }
+#endif
 
     // if no arguments are specified, fall back to program name
     QStringList arguments = _arguments.join(QLatin1Char(' ')).isEmpty() ? QStringList() << exec << QStringLiteral("-login") : _arguments;
-- 
2.30.2

