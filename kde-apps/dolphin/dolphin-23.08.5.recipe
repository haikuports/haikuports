SUMMARY="KDE File Manager"
DESCRIPTION="Dolphin is a lightweight file manager. It has been designed with ease of \
use and simplicity in mind, while still allowing flexibility and customisation. This m\
eans that you can do your file management exactly the way you want to do it.

* Simple to use and dedicated file manager
* Focus on usability
* Breadcrumb navigation bar
* Optional panels for convenient navigation and information display
* Remote and pseudo-filesystem file management through KIO
* Tag files and folders, and find files by content, using Baloo

At first look, this is a simple file manager, but it has many talents. Some features include:

* Split windows - view and use two directories at the same time
* Viewing attributes can be set (and remembered) independently for each window
* Tabbed browsing
* Use the optional informational panel on the right
* Or elect to have essential attribute information displayed in the window
* Use 'breadcrumb' navigation for speed
* One-click change to editable navigation bar
* Add Folders panel for traditional navigation
* Add a terminal in the directory you are currently browsing
* Many functions controlled by keyboard shortcuts"
HOMEPAGE="https://userbase.kde.org/Dolphin"
COPYRIGHT="2000-2023 KDE"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/release-service/$portVersion/src/dolphin-$portVersion.tar.xz"
CHECKSUM_SHA256="6309abda566dfe890f6a3790f101198ed0f274728896054f21e24bdfc3e1f1f3"
PATCHES="dolphin-$portVersion.patchset"
ADDITIONAL_FILES="dolphin.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	dolphin$secondaryArchSuffix = $portVersion
	app:Dolphin$secondaryArchSuffix = $portVersion
	lib:libdolphinprivate$secondaryArchSuffix = 5.0.0 compat >= 5
	lib:libdolphinvcs$secondaryArchSuffix = 5.0.0 compat >= 5
	cmd:dolphin$commandSuffix = $portVersion
	cmd:servicemenuinstaller$commandSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	cmd:dbus_launch
	lib:libkdeinit5_klauncher$secondaryArchSuffix
	lib:libKF5Activities$secondaryArchSuffix
	lib:libKF5Archive$secondaryArchSuffix
	lib:libKF5Attica$secondaryArchSuffix
	lib:libKF5Auth$secondaryArchSuffix
	lib:libKF5Bookmarks$secondaryArchSuffix
	lib:libKF5Codecs$secondaryArchSuffix
	lib:libKF5Completion$secondaryArchSuffix
	lib:libKF5ConfigCore$secondaryArchSuffix
	lib:libKF5ConfigWidgets$secondaryArchSuffix
	lib:libKF5CoreAddons$secondaryArchSuffix
	lib:libKF5Crash$secondaryArchSuffix
	lib:libKF5DBusAddons$secondaryArchSuffix
	lib:libKF5DocTools$secondaryArchSuffix
	lib:libKF5FileMetadata$secondaryArchSuffix
	lib:libKF5GuiAddons$secondaryArchSuffix
	lib:libKF5I18n$secondaryArchSuffix
	lib:libKF5IconThemes$secondaryArchSuffix
	lib:libKF5ItemViews$secondaryArchSuffix
	lib:libKF5JobWidgets$secondaryArchSuffix
	lib:libKF5KCMUtils$secondaryArchSuffix
	lib:libKF5KIOCore$secondaryArchSuffix
	lib:libKF5NewStuff$secondaryArchSuffix
	lib:libKF5NewStuffCore$secondaryArchSuffix
	lib:libKF5Notifications$secondaryArchSuffix
	lib:libKF5Package$secondaryArchSuffix
	lib:libKF5Parts$secondaryArchSuffix
	lib:libKF5Service$secondaryArchSuffix
	lib:libKF5Solid$secondaryArchSuffix
	lib:libKF5SonnetCore$secondaryArchSuffix
	lib:libKF5TextWidgets$secondaryArchSuffix
	lib:libKF5Wallet$secondaryArchSuffix
	lib:libKF5WidgetsAddons$secondaryArchSuffix
	lib:libKF5WindowSystem$secondaryArchSuffix
	lib:libKF5XmlGui$secondaryArchSuffix
	lib:libphonon4qt5$secondaryArchSuffix
	lib:libphonon4qt5experimental$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5PrintSupport$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= 5.115
	devel:libkdeinit5_klauncher$secondaryArchSuffix
	devel:libKF5Activities$secondaryArchSuffix
	devel:libKF5Archive$secondaryArchSuffix
	devel:libKF5Attica$secondaryArchSuffix
	devel:libKF5Auth$secondaryArchSuffix
	devel:libKF5Bookmarks$secondaryArchSuffix
	devel:libKF5Codecs$secondaryArchSuffix
	devel:libKF5Completion$secondaryArchSuffix
	devel:libKF5ConfigCore$secondaryArchSuffix
	devel:libKF5ConfigWidgets$secondaryArchSuffix
	devel:libKF5CoreAddons$secondaryArchSuffix
	devel:libKF5Crash$secondaryArchSuffix
	devel:libKF5DBusAddons$secondaryArchSuffix
	devel:libKF5DocTools$secondaryArchSuffix
	devel:libKF5FileMetadata$secondaryArchSuffix
	devel:libKF5GuiAddons$secondaryArchSuffix
	devel:libKF5I18n$secondaryArchSuffix
	devel:libKF5IconThemes$secondaryArchSuffix
	devel:libKF5ItemViews$secondaryArchSuffix
	devel:libKF5JobWidgets$secondaryArchSuffix
	devel:libKF5KCMUtils$secondaryArchSuffix
	devel:libKF5KIOCore$secondaryArchSuffix
	devel:libKF5NewStuff$secondaryArchSuffix
	devel:libKF5Notifications$secondaryArchSuffix
	devel:libKF5Package$secondaryArchSuffix
	devel:libKF5Parts$secondaryArchSuffix
	devel:libKF5Service$secondaryArchSuffix
	devel:libKF5Solid$secondaryArchSuffix
	devel:libKF5SonnetCore$secondaryArchSuffix
	devel:libKF5TextWidgets$secondaryArchSuffix
	devel:libKF5Wallet$secondaryArchSuffix
	devel:libKF5WidgetsAddons$secondaryArchSuffix
	devel:libKF5WindowSystem$secondaryArchSuffix
	devel:libKF5XmlGui$secondaryArchSuffix
	devel:libphonon4qt5$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt5Gui$secondaryArchSuffix
	devel:libQt5PrintSupport$secondaryArchSuffix
	devel:libQt5Widgets$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	dolphin${secondaryArchSuffix}_devel = $portVersion
	devel:libdolphinprivate$secondaryArchSuffix = 5.0.0 compat >= 5
	devel:libdolphinvcs$secondaryArchSuffix = 5.0.0 compat >= 5
	"
REQUIRES_devel="
	dolphin$secondaryArchSuffix == $portVersion base
	"

BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:qdbuscpp2xml$secondaryArchSuffix >= 5
	"

BUILD()
{
	# disable docs
	sed -e '/add_subdirectory(doc)/ s/^#*/#/' -i CMakeLists.txt
	sed -e '/kdoctools_install(po)/ s/^#*/#/' -i CMakeLists.txt

	mkdir -p build
	cd build
	cmake .. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_BINDIR=$commandBinDir \
		-DKDE_INSTALL_DATAROOTDIR=$dataDir \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt5 \
		-DECM_DIR="/system/data/cmake/Modules/ECM/cmake"

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	mkdir -p $appsDir
	mv $commandBinDir/dolphin $appsDir/Dolphin
	ln -s $appsDir/Dolphin $commandBinDir/dolphin
	rm -rf $libDir/systemd

	local APP_SIGNATURE="application/x-vnd.kde-dolphin"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/dolphin.rdef.in > dolphin.rdef

	prepareInstalledDevelLibs \
		libdolphinprivate libdolphinvcs

	packageEntries devel \
		$libDir/cmake \
		$developDir

	addResourcesToBinaries dolphin.rdef $appsDir/Dolphin
	addAppDeskbarSymlink $appsDir/Dolphin
}
