From d90387e29f1030e40cc18143bc5cda3c49b438eb Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sun, 3 Mar 2024 20:23:08 +1000
Subject: dolphin: Fix for Haiku


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7c51f0b..7fa1fcb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -50,7 +50,7 @@ find_package(Qt${QT_MAJOR_VERSION} ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS
     DBus
 )
 
-if (UNIX AND NOT APPLE)
+if (UNIX AND NOT APPLE AND NOT HAIKU)
     set(HAVE_X11 TRUE)
 
     if (QT_MAJOR_VERSION STREQUAL "5")
@@ -156,7 +156,7 @@ ecm_set_disabled_deprecation_versions(
 )
 
 add_subdirectory(src)
-add_subdirectory(doc)
+#add_subdirectory(doc)
 
 # CMake files
 set(CMAKECONFIG_INSTALL_DIR "${KDE_INSTALL_CMAKEPACKAGEDIR}/DolphinVcs")
@@ -212,7 +212,7 @@ ecm_qt_install_logging_categories(
 
 ki18n_install(po)
 if(KF5DocTools_FOUND)
-    kdoctools_install(po)
+#    kdoctools_install(po)
 endif()
 
 install(FILES completions/dolphin.zsh RENAME _dolphin DESTINATION ${KDE_INSTALL_ZSHAUTOCOMPLETEDIR})
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 62c70ba..f064752 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -572,7 +572,7 @@ endif()
 
 if(NOT WIN32)
     add_subdirectory(settings/contextmenu/servicemenuinstaller)
-    install( FILES settings/contextmenu/servicemenu.knsrc DESTINATION ${KDE_INSTALL_KNSRCDIR} )
+    install( FILES settings/contextmenu/servicemenu.knsrc DESTINATION ${KDE_INSTALL_DATADIR}/knsrcfiles )
 endif()
 
 ########### install files ###############
diff --git a/src/dolphinviewcontainer.cpp b/src/dolphinviewcontainer.cpp
index 03e4998..e93338f 100644
--- a/src/dolphinviewcontainer.cpp
+++ b/src/dolphinviewcontainer.cpp
@@ -107,7 +107,7 @@ DolphinViewContainer::DolphinViewContainer(const QUrl &url, QWidget *parent)
     m_messageWidget->setCloseButtonVisible(true);
     m_messageWidget->hide();
 
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && !defined(Q_OS_HAIKU)
     if (getuid() == 0) {
         // We must be logged in as the root user; show a big scary warning
         showMessage(i18n("Running Dolphin as root can be dangerous. Please be careful."), Warning);
diff --git a/src/kitemviews/private/kdirectorycontentscounterworker.cpp b/src/kitemviews/private/kdirectorycontentscounterworker.cpp
index 2d60091..57cf7b1 100644
--- a/src/kitemviews/private/kdirectorycontentscounterworker.cpp
+++ b/src/kitemviews/private/kdirectorycontentscounterworker.cpp
@@ -8,7 +8,7 @@
 #include "kdirectorycontentscounterworker.h"
 
 // Required includes for countDirectoryContents():
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_HAIKU)
 #include <QDir>
 #else
 #include <QElapsedTimer>
@@ -23,7 +23,7 @@ KDirectoryContentsCounterWorker::KDirectoryContentsCounterWorker(QObject *parent
     qRegisterMetaType<KDirectoryContentsCounterWorker::Options>();
 }
 
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && !defined(Q_OS_HAIKU)
 void KDirectoryContentsCounterWorker::walkDir(const QString &dirPath, bool countHiddenFiles, uint allowedRecursiveLevel)
 {
     QByteArray text = dirPath.toLocal8Bit();
@@ -138,7 +138,7 @@ void KDirectoryContentsCounterWorker::countDirectoryContents(const QString &path
 {
     const bool countHiddenFiles = options & CountHiddenFiles;
 
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_HAIKU)
     QDir dir(path);
     QDir::Filters filters = QDir::NoDotAndDotDot | QDir::System | QDir::AllEntries;
     if (countHiddenFiles) {
diff --git a/src/main.cpp b/src/main.cpp
index 2d1ccd0..cd97cb1 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -46,6 +46,11 @@
 #ifndef Q_OS_WIN
 #include <unistd.h>
 #endif
+#ifdef Q_OS_HAIKU
+#include <QProcess>
+#include <QString>
+#include <QStringList>
+#endif
 #include <iostream>
 
 int main(int argc, char **argv)
@@ -208,6 +213,21 @@ int main(int argc, char **argv)
 
     mainWindow->show();
 
+#ifdef Q_OS_HAIKU
+	if (getenv("DBUS_SESSION_BUS_PID") == NULL) {
+		QProcess dbusProcess;
+		QString exec = "/bin/dbus-launch";
+		QStringList params;
+		dbusProcess.start(exec, params);
+		dbusProcess.waitForFinished();
+		QString output(dbusProcess.readAllStandardOutput());
+
+		QStringList list = output.split("\n", Qt::SkipEmptyParts);
+		for (int i = 0; i < list.count(); i++)
+			putenv(list.at(i).toLatin1().data());
+	}
+#endif
+
     // Allow starting Dolphin on a system that is not running DBus:
     KDBusService::StartupOptions serviceOptions = KDBusService::Multiple;
     if (!QDBusConnection::sessionBus().isConnected()) {
@@ -216,6 +236,11 @@ int main(int argc, char **argv)
     KDBusService dolphinDBusService(serviceOptions);
     DBusInterface interface;
 
+#ifdef Q_OS_HAIKU	
+	QProcess kwalletProcess;
+	kwalletProcess.start("/bin/kwalletd5", QStringList());
+#endif
+
     if (!app.isSessionRestored()) {
         KConfigGui::setSessionConfig(QStringLiteral("dolphin"), QStringLiteral("dolphin"));
     }
@@ -251,6 +276,12 @@ int main(int argc, char **argv)
     auto feedbackProvider = DolphinFeedbackProvider::instance();
     Q_UNUSED(feedbackProvider)
 #endif
-
+#ifdef Q_OS_HAIKU
+	int status=app.exec();
+	kwalletProcess.kill();
+	system("kill -3 $DBUS_SESSION_BUS_PID");
+	return status;
+#else
     return app.exec(); // krazy:exclude=crash;
+#endif
 }
-- 
2.43.2

