SUMMARY="KDE Frontend to mathematical applications"
DESCRIPTION="Cantor is a KDE Application aimed to provide a nice Interface for doing Mathematics \
and Scientific Computing. It doesn't implement its own Computation Logic, but instead is built \
around different Backends.

Available Backends
* Julia Programming Language: http://julialang.org/
* KAlgebra for Calculation and Plotting: http://edu.kde.org/kalgebra/
* Lua Programming Language: http://lua.org/
* Maxima Computer Algebra System: http://maxima.sourceforge.net/
* Octave for Numerical Computation: https://gnu.org/software/octave/
* Python 2 Programming Language: http://python.org/
* Python 3 Programming Language: http://python.org/
* Qalculate Desktop Calculator: http://qalculate.sourceforge.net/
* R Project for Statistical Computing: http://r-project.org/
* Sage Mathematics Software: http://sagemath.org/
* Scilab for Numerical Computation: http://scilab.org/"
HOMEPAGE="https://invent.kde.org/education/cantor"
COPYRIGHT="2016 Filipe Saraiva
	2009-2015 Alexander Rieder"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/release-service/$portVersion/src/cantor-$portVersion.tar.xz"
CHECKSUM_SHA256="3ed32518fa56e4ee3712afe5baba433eb44cadb4aad21284537cb773d3238cd3"
SOURCE_DIR="cantor-$portVersion"
PATCHES="cantor-$portVersion.patchset"
ADDITIONAL_FILES="cantor.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	cantor$secondaryArchSuffix = $portVersion
	cmd:cantor$secondaryArchSuffix = $portVersion
	cmd:cantor_pythonserver$secondaryArchSuffix = $portVersion
	cmd:cantor_rserver$secondaryArchSuffix = $portVersion
	cmd:cantor_scripteditor$secondaryArchSuffix = $portVersion
	lib:cantor_pythonbackend$secondaryArchSuffix = $libVersionCompat
	lib:libcantor_config$secondaryArchSuffix = $libVersionCompat
	lib:libcantorlibs$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libpoppler$secondaryArchSuffix
	lib:libpoppler_Qt6$secondaryArchSuffix
	lib:libspectre$secondaryArchSuffix
	# KF6
	lib:libKF6Archive$secondaryArchSuffix
	lib:libKF6Attica$secondaryArchSuffix
	lib:libKF6Bookmarks$secondaryArchSuffix
	lib:libKF6ColorScheme$secondaryArchSuffix
	lib:libKF6Completion$secondaryArchSuffix
	lib:libKF6ConfigCore$secondaryArchSuffix
	lib:libKF6ConfigWidgets$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libKF6Crash$secondaryArchSuffix
	lib:libKF6I18n$secondaryArchSuffix
	lib:libKF6IconThemes$secondaryArchSuffix
	lib:libKF6ItemViews$secondaryArchSuffix
	lib:libKF6KIOCore$secondaryArchSuffix
	lib:libKF6JobWidgets$secondaryArchSuffix
	lib:libKF6NewStuffCore$secondaryArchSuffix
	lib:libKF6Parts$secondaryArchSuffix
	lib:libKF6Service$secondaryArchSuffix
	lib:libKF6Solid$secondaryArchSuffix
	lib:libKF6SyntaxHighlighting$secondaryArchSuffix
	lib:libKF6TextEditor$secondaryArchSuffix
	lib:libKF6WidgetsAddons$secondaryArchSuffix
	lib:libKF6XmlGui$secondaryArchSuffix
	# Qt6
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Network$secondaryArchSuffix
	lib:libQt6Svg$secondaryArchSuffix
	lib:libQt6Widgets$secondaryArchSuffix
	lib:libQt6Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	cantor${secondaryArchSuffix}_devel = $portVersion
	devel:libcantorlibs$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	cantor$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	shared_mime_info$secondaryArchSuffix
	devel:libAnalitza$secondaryArchSuffix >= 9.0.0
	devel:libluajit_5.1$secondaryArchSuffix
	devel:libmarkdown$secondaryArchSuffix
	devel:libpoppler$secondaryArchSuffix >= 146
	devel:libpoppler_Qt6$secondaryArchSuffix
	devel:libqalculate$secondaryArchSuffix
#	devel:libRmath$secondaryArchSuffix
	devel:libspectre$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libxslt$secondaryArchSuffix
	# KF6
	extra_cmake_modules$secondaryArchSuffix
	devel:libKF6Archive$secondaryArchSuffix
	devel:libKF6Completion$secondaryArchSuffix
	devel:libKF6ConfigCore$secondaryArchSuffix
	devel:libKF6CoreAddons$secondaryArchSuffix
	devel:libKF6Crash$secondaryArchSuffix
	devel:libKF6I18n$secondaryArchSuffix
	devel:libKF6IconThemes$secondaryArchSuffix
	devel:libKF6KIOCore$secondaryArchSuffix
	devel:libKF6NewStuffCore$secondaryArchSuffix
	devel:libKF6Parts$secondaryArchSuffix
	devel:libKF6SyntaxHighlighting$secondaryArchSuffix
	devel:libKF6TextEditor$secondaryArchSuffix
	devel:libKF6TextWidgets$secondaryArchSuffix
	devel:libKF6XmlGui$secondaryArchSuffix
	# Qt6
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Core5Compat$secondaryArchSuffix
	devel:libQt6Svg$secondaryArchSuffix
	# required for embedded documentation
#	devel:libQt6Help$secondaryArchSuffix
#	devel:libQt6Webengine$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

TEST_REQUIRES="
	qthaikuplugins$secondaryArchSuffix
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt6 \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DENABLE_EMBEDDED_DOCUMENTATION=OFF \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	# don't mess with shared_mime_info files
	rm -rf $dataDir/mime/{aliases,generic-icons,globs,globs2,icons,magic}
	rm -rf $dataDir/mime/{mime.cache,subclasses,treemagic,types,version,XMLnamespaces}
	rm -rf $dataDir/{applications,metainfo}

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local APP_NAME="Cantor"
	local LONG_INFO="$SUMMARY"
	local APP_SIGNATURE="application/x-vnd.kde-cantor"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		-e "s|@APP_NAME@|$APP_NAME|" \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		$portDir/additional-files/cantor.rdef.in > cantor.rdef

	addResourcesToBinaries cantor.rdef $binDir/cantor

	prepareInstalledDevelLib \
		libcantorlibs

	packageEntries devel \
		$developDir \
		$libDir/cmake

	addAppDeskbarSymlink $binDir/cantor Cantor
}

TEST()
{
	export LIBRARY_PATH="$sourceDir/build/src/lib${LIBRARY_PATH:+:$LIBRARY_PATH}"
	export LIBRARY_PATH="$sourceDir/build/src/lib/test${LIBRARY_PATH:+:$LIBRARY_PATH}"
	make -C build test
}
