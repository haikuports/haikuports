SUMMARY="Core components for the KDE Activity concept"
DESCRIPTION="When a user is interacting with a computer, there are three main \
areas of contextual information that may affect the behaviour of the system: \
who the user is, where they are, and what they are doing.

Activities deal with the last one. An activity might be \"developing a KDE \
application\", \"studying 19th century art\", \"composing music\" or \"watching \
funny videos\". Each of these activites may involve multiple applications, \
and a single application may be used in multiple activities (for example, \
most activities are likely to involve using a web browser, but different \
activities will probably involve different websites).

KActivities provides the infrastructure needed to manage a user's activites, \
allowing them to switch between tasks, and for applications to update their \
state to match the user's current activity. This includes a daemon, a library \
for interacting with that daemon, and plugins for integration with other \
frameworks."
HOMEPAGE="https://invent.kde.org/plasma/plasma-activities"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/plasma/$portVersion/plasma-activities-$portVersion.tar.xz"
CHECKSUM_SHA256="7c975d2421e6792e8c3cca5f22611dac55f44e1ec8648df97712f00cbb907ccb"
SOURCE_DIR="plasma-activities-$portVersion"
PATCHES="plasma_activities-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	plasma_activities6$secondaryArchSuffix = $portVersion
	cmd:plasma_activities_cli6$secondaryArchSuffix = $portVersion
	lib:libPlasmaActivities$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	plasma_activities6${secondaryArchSuffix}_devel = $portVersion
	devel:libPlasmaActivities$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	plasma_activities6$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= 6.5.0
	qt6_tools${secondaryArchSuffix}_devel
	devel:libboost_system$secondaryArchSuffix >= 1.83.0
	devel:libKF6ConfigCore$secondaryArchSuffix
	devel:libKF6coreaddons$secondaryArchSuffix
	devel:libKF6windowsystem$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:dot
	cmd:doxygen
	cmd:g++$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	cmake -Bbuild -S. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt6 \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt6/qml \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DCMAKE_CXX_FLAGS=-DBOOST_NO_CXX11_CONSTEXPR \
		-DBUILD_QCH=ON \
		-DBUILD_TESTING=OFF
	make -Cbuild $jobArgs
}

INSTALL()
{
	make -Cbuild install

	prepareInstalledDevelLib \
		libPlasmaActivities
	fixPkgconfig

	packageEntries devel \
		$developDir \
		$dataDir/doc \
		$libDir/cmake
}

TEST()
{
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	make -Cbuild test
	# manual test (crashes)
	# build/bin/PlasmaActivitiesTest
}
