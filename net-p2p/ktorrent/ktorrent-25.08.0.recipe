SUMMARY="A powerful BitTorrent client"
DESCRIPTION="This package contains KTorrent, a BitTorrent peer-to-peer \
network client, that is based on the KDE platform. Obviously, KTorrent \
supports such basic features as downloading, uploading and seeding files \
on the BitTorrent network. However, lots of other additional features and \
intuitive GUI should make KTorrent a good choice for everyone. Some features \
are available as plugins hence you should make sure you have the ones you \
need enabled.

  - Support for HTTP and UDP trackers, trackerless DHT (mainline) and webseeds.
  - Alternative UI support including Web interface and Plasma widget.
  - Torrent grouping, speed capping, various download prioritization
    capabilities on both torrent and file level as well as bandwidth
    scheduling.
  - Support for fetching torrent files from many sources including any local
    file or remote URL, RSS feeds (with filtering) or actively monitored
    directory etc.
  - Integrated and customizable torrent search on the Web.
  - Various security features like IP blocking and protocol encryption.
  - Disk space preallocation to reduce fragmentation.
  - uTorrent compatible peer exchange.
  - Autoconfiguration for LANs like Zeroconf extension and port forwarding via
    uPnP.
  - Scripting support via Kross and interprocess control via DBus interface.
  - SOCKSv4 and SOCKSv5 proxy, IPv6 support.
  - Lots of other useful built-in features and plugins."
HOMEPAGE="https://www.kde.org/applications/internet/ktorrent/"
COPYRIGHT="2005 - 2011 Joris Guisson and Ivan Vasic
	2010-2025 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/release-service/$portVersion/src/ktorrent-$portVersion.tar.xz"
CHECKSUM_SHA256="4d69eb05ebbcbeea5abea2b4561bdaaa9ab323252281386af080013d0d35e35e"
PATCHES="ktorrent-$portVersion.patchset"
ADDITIONAL_FILES="ktorrent.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="!x86_gcc2 x86"

libVersion="16.0.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	ktorrent$secondaryArchSuffix = $portVersion
	app:KTorrent$secondaryArchSuffix = $portVersion
	cmd:ktmagnetdownloader$secondaryArchSuffix = $portVersion
	cmd:ktupnptest$secondaryArchSuffix = $portVersion
	lib:libktcore$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libgcrypt$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libKTorrent6$secondaryArchSuffix
	lib:libphonon4qt6$secondaryArchSuffix
	lib:libtag$secondaryArchSuffix
	# KF6
	lib:libKF6Archive$secondaryArchSuffix
	lib:libKF6Bookmarks$secondaryArchSuffix
	lib:libKF6ColorScheme$secondaryArchSuffix
	lib:libKF6Completion$secondaryArchSuffix
	lib:libKF6ConfigCore$secondaryArchSuffix
	lib:libKF6ConfigWidgets$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libKF6Crash$secondaryArchSuffix
	lib:libKF6DNSSD$secondaryArchSuffix
#		lib:libKF6DBusAddons$secondaryArchSuffix
	lib:libKF6GuiAddons$secondaryArchSuffix
	lib:libKF6I18n$secondaryArchSuffix
	lib:libKF6IconThemes$secondaryArchSuffix
	lib:libKF6ItemViews$secondaryArchSuffix
	lib:libKF6JobWidgets$secondaryArchSuffix
	lib:libKF6KCMUtils$secondaryArchSuffix
	lib:libKF6KIOCore$secondaryArchSuffix
	lib:libKF6Notifications$secondaryArchSuffix
	lib:libKF6NotifyConfig$secondaryArchSuffix
	lib:libKF6Parts$secondaryArchSuffix
	lib:libKF6Plotting$secondaryArchSuffix
	lib:libKF6Service$secondaryArchSuffix
	lib:libKF6Solid$secondaryArchSuffix
	lib:libKF6StatusNotifierItem$secondaryArchSuffix
	lib:libKF6Syndication$secondaryArchSuffix
	lib:libKF6TextWidgets$secondaryArchSuffix
	lib:libKF6WidgetsAddons$secondaryArchSuffix
	lib:libKF6WindowSystem$secondaryArchSuffix
	lib:libKF6XmlGui$secondaryArchSuffix
	# Qt6
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Core5Compat$secondaryArchSuffix
	lib:libQt6DBus$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Network$secondaryArchSuffix
	lib:libQt6Qml$secondaryArchSuffix
	lib:libQt6Widgets$secondaryArchSuffix
	lib:libQt6Xml$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libboost_system$secondaryArchSuffix >= 1.88.0
	devel:libgcrypt$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libKTorrent6$secondaryArchSuffix
	devel:libphonon4qt6$secondaryArchSuffix
	devel:libtag$secondaryArchSuffix
	# KF6
	extra_cmake_modules$secondaryArchSuffix
	devel:libKF6Archive$secondaryArchSuffix
	devel:libKF6ConfigCore$secondaryArchSuffix
	devel:libKF6ConfigWidgets$secondaryArchSuffix
	devel:libKF6CoreAddons$secondaryArchSuffix
	devel:libKF6Crash$secondaryArchSuffix
	devel:libKF6DNSSD$secondaryArchSuffix
#		devel:libKF6DBusAddons$secondaryArchSuffix
	devel:libKF6GuiAddons$secondaryArchSuffix
	devel:libKF6I18n$secondaryArchSuffix
	devel:libKF6IconThemes$secondaryArchSuffix
	devel:libKF6KCMUtils$secondaryArchSuffix
	devel:libKF6KIOCore$secondaryArchSuffix
	devel:libKF6Notifications$secondaryArchSuffix
	devel:libKF6NotifyConfig$secondaryArchSuffix
	devel:libKF6Parts$secondaryArchSuffix
	devel:libKF6Plotting$secondaryArchSuffix
	devel:libKF6Solid$secondaryArchSuffix
	devel:libKF6StatusNotifierItem$secondaryArchSuffix
	devel:libKF6Syndication$secondaryArchSuffix
	devel:libKF6TextWidgets$secondaryArchSuffix
	devel:libKF6WidgetsAddons$secondaryArchSuffix
	devel:libKF6WindowSystem$secondaryArchSuffix
	devel:libKF6XmlGui$secondaryArchSuffix
	# Qt6
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Core5Compat$secondaryArchSuffix
	devel:libQt6DBus$secondaryArchSuffix
	devel:libQt6Gui$secondaryArchSuffix
	devel:libQt6Network$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libQt6Widgets$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

TEST_REQUIRES="
	qthaikuplugins$secondaryArchSuffix
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_INSTALL_DATAROOTDIR=$dataDir \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt6 \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DENABLE_INFOWIDGET_PLUGIN=OFF \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	# cleanup
	rm -rf $dataDir/{applications,icons,knotifications6,kxmlgui5,metainfo}

	mkdir $appsDir
	mv $binDir/ktorrent $appsDir/KTorrent

	APP_SIGNATURE="application/x-vnd.kde-ktorrent"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/ktorrent.rdef.in > ktorrent.rdef

	addResourcesToBinaries ktorrent.rdef $appsDir/KTorrent
	addAppDeskbarSymlink $appsDir/KTorrent
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
