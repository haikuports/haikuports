SUMMARY="A standalone and lightweight BitTorrent tracker"
DESCRIPTION="Hefur is a standalone C++ BitTorrent tracker.

Features:
 - support HTTP, HTTPS and UPD announce and scrape
 - support both IPv4 and IPv6
 - no database required (everything in memory)
 - should be efficient
 - perfect for small setup
 - info_hash white list based on .torrent in a directory tree
 - control interface
 - control program: hefurctl"
HOMEPAGE="https://github.com/abique/hefur"
COPYRIGHT="2012 Alexandre Bique"
LICENSE="MIT"
REVISION="1"
srcGitRev="a3915fde59b17376384cda4da37391bd8817fbf1"
SOURCE_URI="https://github.com/abique/hefur/archive/$srcGitRev.tar.gz"
CHECKSUM_SHA256="9e8dac72d03fdc3e5e925257f320411a77730ca87c5f4ce30bac940014e821b6"
SOURCE_FILENAME="hefur-$srcGitRev.tar.gz"
SOURCE_DIR="hefur-$srcGitRev"
srcGitRev2="42c0041b570b55a24c606a7da79c70c9933c07d4"
SOURCE_URI_2="https://github.com/abique/mimosa/archive/$srcGitRev2.tar.gz"
CHECKSUM_SHA256_2="641c96c4d08e466bd7c34d0a8e5f6b05b44eaea1786491998ee84cbbe5dc535f"
SOURCE_FILENAME_2="mimosa-$srcGitRev2.tar.gz"
SOURCE_DIR_2="mimosa-$srcGitRev2"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ -z "${ARCHITECTURES##*!$targetArchitecture*}" ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	hefur$secondaryArchSuffix = $portVersion
	cmd:hefurctl$commandSuffix = $portVersion
	cmd:hefurd$commandSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:libgnutls$secondaryArchSuffix
	lib:libnettle$secondaryArchSuffix
	lib:libprotobuf$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libarchive$secondaryArchSuffix
	devel:libgnutls$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:libprotobuf$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:bison$secondaryArchSuffix
	cmd:cc$secondaryArchSuffix
	cmd:cmake
	cmd:flex
	cmd:make
	"

TEST_REQUIRES="
	devel:libgtest$secondaryArchSuffix
	devel:libgtest_main$secondaryArchSuffix
	"

BUILD()
{
	cp -rt mimosa "$sourceDir2"/*

	cmake -B build -S . \
		$cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_BINDIR=$commandBinDir \
		-DCMAKE_CXX_FLAGS="-D_BSD_SOURCE" \
		-DCMAKE_EXE_LINKER_FLAGS="-lnetwork -lgnu"
	make -C build $jobArgs
}

INSTALL()
{
	make -C build install
}

TEST()
{
	make -C build check
}
