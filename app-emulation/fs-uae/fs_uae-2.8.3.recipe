SUMMARY="FS-UAE is a cross platform Amiga emulator ported from WinUAE"
DESCRIPTION="Accurate Amiga Emulation

FS-UAE integrates the most accurate Amiga emulation code available from \
WinUAE. FS-UAE emulates A500, A500+, A600, A1200, A1000, A3000 and A4000 \
models, but you can tweak the hardware configuration and create customized \
Amigas.

On-Screen GUI With Gamepad Control

FS-UAE is fully controllable with a gamepad - you can easily swap floppies \
and load save states through the on-screen GUI. In addition to being great \
on your personal computer, FS-UAE is also well suited to be started from an \
emulator frontend running on a HTPC.

Emulate High-End Amigas

FS-UAE supports emulating an Amiga 4000 with an CPU as fast as your \
system can emulate it. Picasso96 drivers can be used with the built-in \
UAEgfx card to display Workbench in high resolutions and with up to 16.7 \
million colors, and the built-in bsdsocket.library means that the Amiga \
will have access to the Internet.

Community Support

There is a support forum for FS-UAE on the English Amiga Board with many \
active registered users. If you are stuck, you'll almost certainly get an \
answer to your questions there. You can also leave comments on fs-uae.net \
is you rather want that.

Online Documentation

A great deal of documentation about how to use and configure FS-UAE is \
available on fs-uae.net."
HOMEPAGE="https://fs-uae.net/"
COPYRIGHT="2011-2017 Frode Solheim"
LICENSE="GNU GPL v2"
REVISION="2"
SOURCE_URI="https://fs-uae.net/stable/${portVersion}/fs-uae-${portVersion}.tar.gz"
CHECKSUM_SHA256="e2d5414d07c8bd5b740716471183bc5516bec0ae2989449c3026374dc4b86292"
SOURCE_DIR="fs-uae-$portVersion"
PATCHES="fs_uae-$portVersion.patchset"

ARCHITECTURES="?x86 !x86_gcc2 x86_64"
SECONDARY_ARCHITECTURES="?x86"

PROVIDES="
	fs_uae$secondaryArchSuffix = $portVersion
	cmd:fs_uae$secondaryArchSuffix
	cmd:fs_uae_device_helper$secondaryArchSuffix
	"

REQUIRES="
        haiku$secondaryArchSuffix
        lib:libgl$secondaryArchSuffix
        lib:libglew$secondaryArchSuffix
        lib:libglib_2.0$secondaryArchSuffix
        lib:libglu$secondaryArchSuffix
        lib:libgthread_2.0$secondaryArchSuffix
        lib:libintl$secondaryArchSuffix
        lib:libmpeg2$secondaryArchSuffix
        lib:libopenal$secondaryArchSuffix
        lib:libpng16$secondaryArchSuffix
        lib:libsdl2_2.0$secondaryArchSuffix
        lib:libx11$secondaryArchSuffix
        lib:libz$secondaryArchSuffix
        "

BUILD_REQUIRES="
        haiku${secondaryArchSuffix}_devel
        devel:libglew$secondaryArchSuffix
        devel:libglib_2.0$secondaryArchSuffix
        devel:libgthread_2.0$secondaryArchSuffix
        devel:libmpeg2$secondaryArchSuffix
        devel:libopenal$secondaryArchSuffix
        devel:libpng16$secondaryArchSuffix
        devel:libsdl2_2.0$secondaryArchSuffix
        devel:libx11$secondaryArchSuffix
        "

BUILD_PREREQUIRES="
	cmd:aclocal$secondaryArchSuffix
	cmd:autoconf$secondaryArchSuffix
	cmd:awk$secondaryArchSuffix
	cmd:bison$secondaryArchSuffix
	cmd:flex$secondaryArchSuffix
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:perl$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	cmd:zip$secondaryArchSuffix
	"

BUILD()
{
	export CPPFLAGS="-D_BSD_SOURCE"
	export LDFLAGS="-lnetwork"
	runConfigure ./configure --disable-bsdsocket --disable-netplay --with-glew
	make $jobArgs
}

INSTALL()
{
	make install
}
