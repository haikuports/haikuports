From cc0a288e6be32cec310dcf31d43070385bcafdf0 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 25 Oct 2023 21:07:46 +1000
Subject: Add Haiku support


diff --git a/build/cmake/CMakeLists.txt b/build/cmake/CMakeLists.txt
index fa05f2f..1c40757 100644
--- a/build/cmake/CMakeLists.txt
+++ b/build/cmake/CMakeLists.txt
@@ -13,6 +13,7 @@ set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)
 option(USE_WX_WIDGETS "wxWidgets + OpenAL + OpenGL version" OFF)
 option(USE_SDL "SDL version" ON)
 option(USE_SDL2 "SDL2 version" OFF)
+option(USE_HAIKU "Haiku version" OFF)
 option(USE_BENCHMARK "benchmark mode (console)" OFF)
 option(USE_LIBRARY "library mode" OFF)
 option(USE_WEB "use web sources (SDL or iOS versions)" ON)
@@ -60,7 +61,7 @@ source_group("devices\\sound" FILES ${SRCCXX_DEVICES_SOUND} ${SRCH_DEVICES_SOUND
 
 #3rdparty libs
 
-if(NOT APPLE_IOS AND NOT ANDROID AND (USE_SDL OR USE_SDL2) AND USE_WEB AND NOT EMSCRIPTEN)
+if(NOT APPLE_IOS AND NOT ANDROID AND (USE_SDL OR USE_SDL2 OR USE_HAIKU) AND USE_WEB AND NOT EMSCRIPTEN)
 find_package(CURL REQUIRED)
 if(CURL_FOUND)
 	include_directories(${CURL_INCLUDE_DIRS})
@@ -144,7 +145,7 @@ source_group("platform\\oal" FILES ${SRCCXX_PLATFORM_OPENAL})
 
 endif(USE_WX_WIDGETS OR APPLE_IOS)
 
-if(NOT ANDROID AND (USE_SDL OR USE_SDL2 OR APPLE_IOS))
+if(NOT ANDROID AND (USE_SDL OR USE_SDL2 OR APPLE_IOS OR USE_HAIKU))
 
 file(GLOB SRCCXX_UI "../../ui/*.cpp")
 file(GLOB SRCH_UI "../../ui/*.h")
@@ -169,7 +170,7 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
 endif(NOT MSVC)
 endif(USE_WEB)
 
-endif(NOT ANDROID AND (USE_SDL OR USE_SDL2 OR APPLE_IOS))
+endif(NOT ANDROID AND (USE_SDL OR USE_SDL2 OR APPLE_IOS OR USE_HAIKU))
 
 if(USE_SDL2 OR APPLE_IOS OR ANDROID)
 
@@ -359,6 +360,22 @@ add_executable(${PROJECT} WIN32 ${SRCCXX} ${SRCC} ${SRCH} ${SRCRES})
 target_link_libraries(${PROJECT} wx::core wx::base wx::adv wx::aui wx::gl)
 target_link_libraries(${PROJECT} ${OPENGL_LIBRARIES})
 
+elseif(USE_HAIKU)
+
+#Haiku
+file(GLOB SRCCXX_PLATFORM_HAIKU "../../platform/haiku/*.cpp")
+add_definitions(-DAPP_SIGNATURE="application/x-vnd.unreal-speccy-portable" -DUSE_HAIKU -DUSE_PNG -DUSE_UI -DUSE_CONFIG -DUSE_ZIP)
+if(USE_WEB)
+add_definitions(-DUSE_WEB)
+endif(USE_WEB)
+list(APPEND SRCCXX ${SRCCXX_PLATFORM_HAIKU})
+source_group("platform\\haiku" FILES ${SRCCXX_PLATFORM_HAIKU})
+
+add_platform_io_stuff()
+
+add_executable(${PROJECT} WIN32 ${SRCCXX} ${SRCC} ${SRCH})
+target_link_libraries(${PROJECT} -lbe -lmedia -ldevice -lgame -ltracker -llocalestub -lpng)
+
 elseif(USE_SDL)
 
 #SDL
@@ -540,6 +557,24 @@ endif(APPLE_IOS)
 
 target_link_libraries(${PROJECT} ${THIRDPARTY_LIBRARIES})
 
+if(HAIKU)
+add_custom_target(Resources ALL
+	DEPENDS ${PROJECT}
+	SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/../../platform/haiku/resources.rdef)
+add_custom_command(TARGET Resources
+	COMMAND rc -o resources.rsrc ${CMAKE_CURRENT_SOURCE_DIR}/../../platform/haiku/resources.rdef
+	COMMENT "${P} Compiling resource file."
+	VERBATIM)
+add_custom_command(TARGET Resources
+	COMMAND xres -o ${PROJECT} resources.rsrc
+	COMMENT "${P} Adding compiled resources to '${PROJECT}' executable."
+	VERBATIM)
+add_custom_command(TARGET Resources
+	COMMAND mimeset --all ${PROJECT}
+	COMMENT "${P} Updating MIME types for '${PROJECT}' executable."
+	VERBATIM)
+endif(HAIKU)
+
 if(MSVC AND NOT UWP)
 set_target_properties(${PROJECT} PROPERTIES LINK_FLAGS "/MANIFEST:NO /LARGEADDRESSAWARE")
 endif(MSVC AND NOT UWP)
diff --git a/platform/haiku/haiku.cpp b/platform/haiku/haiku.cpp
new file mode 100644
index 0000000..6b11b13
--- /dev/null
+++ b/platform/haiku/haiku.cpp
@@ -0,0 +1,139 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../options_common.h"
+#include "../../tools/tick.h"
+#include "../io.h"
+
+#include <AppKit.h>
+#include <StorageKit.h>
+#include <FindDirectory.h>
+
+#include "haiku_app.h"
+
+namespace xPlatform
+{
+
+void InitAudio();
+void DoneAudio();
+void UpdateAudio();
+
+bool InitVideo();
+void DoneVideo();
+void UpdateScreen();
+
+bool InitJoystick();
+void DoneJoystick();
+void ProcessJoystick();
+
+static int32 appThreadFunc(void *data)
+{
+	USPApplication *application = new USPApplication(APP_SIGNATURE);
+
+	app_info theInfo;
+	application->GetAppInfo(&theInfo);
+	BPath appPath(&theInfo.ref);
+	BPath dirPath;
+	appPath.GetParent(&dirPath);
+	chdir(dirPath.Path());
+
+	application->Run();
+
+	return 0;
+}
+
+static bool Init()
+{
+	thread_id appThreadId = spawn_thread(appThreadFunc, "USPApplication", B_NORMAL_PRIORITY, NULL);
+	resume_thread(appThreadId);
+	
+	while(true) {
+		if (be_app) {
+			if (!be_app->IsLaunching())
+				break;
+		}
+		snooze(1000);
+	}
+
+    BPath settings_path;
+    if (find_directory(B_USER_SETTINGS_DIRECTORY, &settings_path) == B_OK) {
+    	settings_path.Append("USP");
+    	BString usp_home_path(settings_path.Path());
+    	usp_home_path += "/";
+		xIo::PathCreate(usp_home_path.String());
+		xIo::SetProfilePath(usp_home_path.String());
+		OpLastFile(usp_home_path.String());
+ 	}
+
+	Handler()->OnInit();
+
+	InitJoystick();
+	InitAudio();
+	InitVideo();
+
+	return true;
+}
+
+static void Done()
+{
+	DoneJoystick();
+	DoneAudio();
+	DoneVideo();
+
+	Handler()->OnDone();
+}
+
+static bool quit = false;
+
+void Loop()
+{
+	eTick last_tick;
+	last_tick.SetCurrent();
+	while(!quit) {
+		Handler()->OnLoop();
+		UpdateScreen();
+		ProcessJoystick();
+		UpdateAudio();
+
+		while(last_tick.Passed().Ms() < 15)
+			snooze(3000);
+
+		last_tick.SetCurrent();
+		if(OpQuit())
+			quit = true;
+	}
+}
+
+}
+
+int main(int argc, char* argv[])
+{
+	if(!xPlatform::Init()) {
+		xPlatform::Done();
+		return -1;
+	}
+
+	if(argc > 1)
+		xPlatform::Handler()->OnOpenFile(argv[1]);
+
+	xPlatform::Loop();	
+	xPlatform::Done();
+
+	return 0;
+}
diff --git a/platform/haiku/haiku_app.cpp b/platform/haiku/haiku_app.cpp
new file mode 100644
index 0000000..52d2d12
--- /dev/null
+++ b/platform/haiku/haiku_app.cpp
@@ -0,0 +1,47 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../tools/options.h"
+#include "../../options_common.h"
+
+#include "haiku_app.h"
+#include "haiku_window.h"
+
+namespace xPlatform
+{
+
+USPApplication::USPApplication(const char *signature) : BApplication(signature),
+	refsReceived(NULL)
+{
+}
+
+void
+USPApplication::RefsReceived(BMessage* message)
+{
+	refsReceived = new BMessage(*message);
+	for (int i = 0; i < CountWindows(); i++) {
+		HaikuPlatformWindow *window = dynamic_cast <HaikuPlatformWindow*>(WindowAt(i));
+		if (window) {
+			window->PostMessage(refsReceived);
+			break;
+		}
+	}
+}
+
+}
diff --git a/platform/haiku/haiku_app.h b/platform/haiku/haiku_app.h
new file mode 100644
index 0000000..17e8421
--- /dev/null
+++ b/platform/haiku/haiku_app.h
@@ -0,0 +1,40 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _HAIKU_APPLICATION_H
+#define _HAIKU_APPLICATION_H
+
+#include <Application.h>
+#include <Message.h>
+
+namespace xPlatform
+{
+
+class USPApplication : public BApplication {
+	public:
+						USPApplication(const char *signature);
+		virtual void 	RefsReceived(BMessage* message);
+
+		BMessage*		GetRefsMessage() { return refsReceived; }
+	private:
+		BMessage*		refsReceived;
+};
+
+}
+
+#endif
diff --git a/platform/haiku/haiku_filters.cpp b/platform/haiku/haiku_filters.cpp
new file mode 100644
index 0000000..95c7c55
--- /dev/null
+++ b/platform/haiku/haiku_filters.cpp
@@ -0,0 +1,339 @@
+/*
+ * XBR filter extracted from FFmpeg into a separate library.
+ *
+ *
+ * Copyright (c) 2011, 2012 Hyllian/Jararaca <sergiogdb@gmail.com>
+ * Copyright (c) 2014 Arwa Arif <arwaarif1994@gmail.com>
+ * Copyright (c) 2015 Treeki <treeki@gmail.com>
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+/**
+ * @file
+ * XBR Filter is used for depixelization of image.
+ * This is based on Hyllian's xBR shader.
+ *
+ * @see http://www.libretro.com/forums/viewtopic.php?f=6&t=134
+ * @see https://github.com/yoyofr/iFBA/blob/master/fba_src/src/intf/video/scalers/xbr.cpp
+ */
+
+#define XBR_INTERNAL
+#include "haiku_filters.h"
+#include <stdlib.h>
+
+#define abs32(x) (x < 0 ? -x : x)
+
+#define LB_MASK       0x00FEFEFE
+#define RED_BLUE_MASK 0x00FF00FF
+#define GREEN_MASK    0x0000FF00
+#define PART_MASK     0x00FF00FF
+
+static uint32 pixel_diff(uint32 x, uint32 y, const uint32 *r2y)
+{
+#define YMASK 0xff0000
+#define UMASK 0x00ff00
+#define VMASK 0x0000ff
+
+    uint32 yuv1 = r2y[x & 0xffffff];
+    uint32 yuv2 = r2y[y & 0xffffff];
+
+    return (abs32((x >> 24) - (y >> 24))) +
+           (abs32((yuv1 & YMASK) - (yuv2 & YMASK)) >> 16) +
+           (abs32((yuv1 & UMASK) - (yuv2 & UMASK)) >>  8) +
+           abs32((yuv1 & VMASK) - (yuv2 & VMASK));
+}
+
+#define ALPHA_BLEND_BASE(a, b, m, s) (  (PART_MASK & (((a) & PART_MASK) + (((((b) & PART_MASK) - ((a) & PART_MASK)) * (m)) >> (s)))) \
+                                      | ((PART_MASK & ((((a) >> 8) & PART_MASK) + ((((((b) >> 8) & PART_MASK) - (((a) >> 8) & PART_MASK)) * (m)) >> (s)))) << 8))
+
+#define ALPHA_BLEND_32_W(a, b)  ALPHA_BLEND_BASE(a, b, 1, 3)
+#define ALPHA_BLEND_64_W(a, b)  ALPHA_BLEND_BASE(a, b, 1, 2)
+#define ALPHA_BLEND_128_W(a, b) ALPHA_BLEND_BASE(a, b, 1, 1)
+#define ALPHA_BLEND_192_W(a, b) ALPHA_BLEND_BASE(a, b, 3, 2)
+#define ALPHA_BLEND_224_W(a, b) ALPHA_BLEND_BASE(a, b, 7, 3)
+
+
+
+#define df(A, B) pixel_diff(A, B, r2y)
+#define eq(A, B) (df(A, B) < 155)
+
+#define FILT2(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1,   \
+              N0, N1, N2, N3) do {                                                                  \
+    if (PE != PH && PE != PF) {                                                                     \
+        const unsigned e = df(PE,PC) + df(PE,PG) + df(PI,H5) + df(PI,F4) + (df(PH,PF)<<2);          \
+        const unsigned i = df(PH,PD) + df(PH,I5) + df(PF,I4) + df(PF,PB) + (df(PE,PI)<<2);          \
+        if (e <= i) {                                                                               \
+            const unsigned px = df(PE,PF) <= df(PE,PH) ? PF : PH;                                   \
+            if (e < i && (!eq(PF,PB) && !eq(PH,PD) || eq(PE,PI)                                     \
+                          && (!eq(PF,I4) && !eq(PH,I5))                                             \
+                          || eq(PE,PG) || eq(PE,PC))) {                                             \
+                const unsigned ke = df(PF,PG);                                                      \
+                const unsigned ki = df(PH,PC);                                                      \
+                const int left    = ke<<1 <= ki && PE != PG && PD != PG;                            \
+                const int up      = ke >= ki<<1 && PE != PC && PB != PC;                            \
+                if (left && up) {                                                                   \
+                    E[N3] = ALPHA_BLEND_224_W(E[N3], px);                                           \
+                    E[N2] = ALPHA_BLEND_64_W( E[N2], px);                                           \
+                    E[N1] = E[N2];                                                                  \
+                } else if (left) {                                                                  \
+                    E[N3] = ALPHA_BLEND_192_W(E[N3], px);                                           \
+                    E[N2] = ALPHA_BLEND_64_W( E[N2], px);                                           \
+                } else if (up) {                                                                    \
+                    E[N3] = ALPHA_BLEND_192_W(E[N3], px);                                           \
+                    E[N1] = ALPHA_BLEND_64_W( E[N1], px);                                           \
+                } else { /* diagonal */                                                             \
+                    E[N3] = ALPHA_BLEND_128_W(E[N3], px);                                           \
+                }                                                                                   \
+            } else {                                                                                \
+                E[N3] = ALPHA_BLEND_128_W(E[N3], px);                                               \
+            }                                                                                       \
+        }                                                                                           \
+    }                                                                                               \
+} while (0)
+
+#define FILT3(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1,   \
+              N0, N1, N2, N3, N4, N5, N6, N7, N8) do {                                              \
+    if (PE != PH && PE != PF) {                                                                     \
+        const unsigned e = df(PE,PC) + df(PE,PG) + df(PI,H5) + df(PI,F4) + (df(PH,PF)<<2);          \
+        const unsigned i = df(PH,PD) + df(PH,I5) + df(PF,I4) + df(PF,PB) + (df(PE,PI)<<2);          \
+        if (e <= i) {                                                                               \
+            const unsigned px = df(PE,PF) <= df(PE,PH) ? PF : PH;                                   \
+            if (e < i && (!eq(PF,PB) && !eq(PF,PC) || !eq(PH,PD) && !eq(PH,PG) || eq(PE,PI)         \
+                          && (!eq(PF,F4) && !eq(PF,I4) || !eq(PH,H5) && !eq(PH,I5))                 \
+                          || eq(PE,PG) || eq(PE,PC))) {                                             \
+                const unsigned ke = df(PF,PG);                                                      \
+                const unsigned ki = df(PH,PC);                                                      \
+                const int left    = ke<<1 <= ki && PE != PG && PD != PG;                            \
+                const int up      = ke >= ki<<1 && PE != PC && PB != PC;                            \
+                if (left && up) {                                                                   \
+                    E[N7] = ALPHA_BLEND_192_W(E[N7], px);                                           \
+                    E[N6] = ALPHA_BLEND_64_W( E[N6], px);                                           \
+                    E[N5] = E[N7];                                                                  \
+                    E[N2] = E[N6];                                                                  \
+                    E[N8] = px;                                                                     \
+                } else if (left) {                                                                  \
+                    E[N7] = ALPHA_BLEND_192_W(E[N7], px);                                           \
+                    E[N5] = ALPHA_BLEND_64_W( E[N5], px);                                           \
+                    E[N6] = ALPHA_BLEND_64_W( E[N6], px);                                           \
+                    E[N8] = px;                                                                     \
+                } else if (up) {                                                                    \
+                    E[N5] = ALPHA_BLEND_192_W(E[N5], px);                                           \
+                    E[N7] = ALPHA_BLEND_64_W( E[N7], px);                                           \
+                    E[N2] = ALPHA_BLEND_64_W( E[N2], px);                                           \
+                    E[N8] = px;                                                                     \
+                } else { /* diagonal */                                                             \
+                    E[N8] = ALPHA_BLEND_224_W(E[N8], px);                                           \
+                    E[N5] = ALPHA_BLEND_32_W( E[N5], px);                                           \
+                    E[N7] = ALPHA_BLEND_32_W( E[N7], px);                                           \
+                }                                                                                   \
+            } else {                                                                                \
+                E[N8] = ALPHA_BLEND_128_W(E[N8], px);                                               \
+            }                                                                                       \
+        }                                                                                           \
+    }                                                                                               \
+} while (0)
+
+#define FILT4(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1,   \
+              N15, N14, N11, N3, N7, N10, N13, N12, N9, N6, N2, N1, N5, N8, N4, N0) do {            \
+    if (PE != PH && PE != PF) {                                                                     \
+        const unsigned e = df(PE,PC) + df(PE,PG) + df(PI,H5) + df(PI,F4) + (df(PH,PF)<<2);          \
+        const unsigned i = df(PH,PD) + df(PH,I5) + df(PF,I4) + df(PF,PB) + (df(PE,PI)<<2);          \
+        if (e <= i) {                                                                               \
+            const unsigned px = df(PE,PF) <= df(PE,PH) ? PF : PH;                                   \
+            if (e < i && (!eq(PF,PB) && !eq(PH,PD) || eq(PE,PI)                                     \
+                          && (!eq(PF,I4) && !eq(PH,I5))                                             \
+                          || eq(PE,PG) || eq(PE,PC))) {                                             \
+                const unsigned ke = df(PF,PG);                                                      \
+                const unsigned ki = df(PH,PC);                                                      \
+                const int left    = ke<<1 <= ki && PE != PG && PD != PG;                            \
+                const int up      = ke >= ki<<1 && PE != PC && PB != PC;                            \
+                if (left && up) {                                                                   \
+                    E[N13] = ALPHA_BLEND_192_W(E[N13], px);                                         \
+                    E[N12] = ALPHA_BLEND_64_W( E[N12], px);                                         \
+                    E[N15] = E[N14] = E[N11] = px;                                                  \
+                    E[N10] = E[N3]  = E[N12];                                                       \
+                    E[N7]  = E[N13];                                                                \
+                } else if (left) {                                                                  \
+                    E[N11] = ALPHA_BLEND_192_W(E[N11], px);                                         \
+                    E[N13] = ALPHA_BLEND_192_W(E[N13], px);                                         \
+                    E[N10] = ALPHA_BLEND_64_W( E[N10], px);                                         \
+                    E[N12] = ALPHA_BLEND_64_W( E[N12], px);                                         \
+                    E[N14] = px;                                                                    \
+                    E[N15] = px;                                                                    \
+                } else if (up) {                                                                    \
+                    E[N14] = ALPHA_BLEND_192_W(E[N14], px);                                         \
+                    E[N7 ] = ALPHA_BLEND_192_W(E[N7 ], px);                                         \
+                    E[N10] = ALPHA_BLEND_64_W( E[N10], px);                                         \
+                    E[N3 ] = ALPHA_BLEND_64_W( E[N3 ], px);                                         \
+                    E[N11] = px;                                                                    \
+                    E[N15] = px;                                                                    \
+                } else { /* diagonal */                                                             \
+                    E[N11] = ALPHA_BLEND_128_W(E[N11], px);                                         \
+                    E[N14] = ALPHA_BLEND_128_W(E[N14], px);                                         \
+                    E[N15] = px;                                                                    \
+                }                                                                                   \
+            } else {                                                                                \
+                E[N15] = ALPHA_BLEND_128_W(E[N15], px);                                             \
+            }                                                                                       \
+        }                                                                                           \
+    }                                                                                               \
+} while (0)
+
+static XBR_INLINE void xbr_filter(const xbr_params *params, int n)
+{
+    int x, y;
+    const uint32 *r2y = params->data->rgbtoyuv;
+    const int nl = params->outPitch >> 2;
+    const int nl1 = nl + nl;
+    const int nl2 = nl1 + nl;
+
+    for (y = 0; y < params->inHeight; y++) {
+
+        uint32 *E = (uint32 *)(params->output + y * params->outPitch * n);
+        const uint32 *sa2 = (uint32 *)(params->input + y * params->inPitch - 8); /* center */
+        const uint32 *sa1 = sa2 - (params->inPitch>>2); /* up x1 */
+        const uint32 *sa0 = sa1 - (params->inPitch>>2); /* up x2 */
+        const uint32 *sa3 = sa2 + (params->inPitch>>2); /* down x1 */
+        const uint32 *sa4 = sa3 + (params->inPitch>>2); /* down x2 */
+
+        if (y <= 1) {
+            sa0 = sa1;
+            if (y == 0) {
+                sa0 = sa1 = sa2;
+            }
+        }
+
+        if (y >= params->inHeight - 2) {
+            sa4 = sa3;
+            if (y == params->inHeight - 1) {
+                sa4 = sa3 = sa2;
+            }
+        }
+
+        for (x = 0; x < params->inWidth; x++) {
+            const uint32 B1 = sa0[2];
+            const uint32 PB = sa1[2];
+            const uint32 PE = sa2[2];
+            const uint32 PH = sa3[2];
+            const uint32 H5 = sa4[2];
+
+            const int pprev = 2 - (x > 0);
+            const uint32 A1 = sa0[pprev];
+            const uint32 PA = sa1[pprev];
+            const uint32 PD = sa2[pprev];
+            const uint32 PG = sa3[pprev];
+            const uint32 G5 = sa4[pprev];
+
+            const int pprev2 = pprev - (x > 1);
+            const uint32 A0 = sa1[pprev2];
+            const uint32 D0 = sa2[pprev2];
+            const uint32 G0 = sa3[pprev2];
+
+            const int pnext = 3 - (x == params->inWidth - 1);
+            const uint32 C1 = sa0[pnext];
+            const uint32 PC = sa1[pnext];
+            const uint32 PF = sa2[pnext];
+            const uint32 PI = sa3[pnext];
+            const uint32 I5 = sa4[pnext];
+
+            const int pnext2 = pnext + 1 - (x >= params->inWidth - 2);
+            const uint32 C4 = sa1[pnext2];
+            const uint32 F4 = sa2[pnext2];
+            const uint32 I4 = sa3[pnext2];
+
+            if (n == 2) {
+                E[0]  = E[1]      =     // 0, 1
+                E[nl] = E[nl + 1] = PE; // 2, 3
+
+                FILT2(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1, 0, 1, nl, nl+1);
+                FILT2(PE, PC, PF, PB, PI, PA, PH, PD, PG, I4, A1, I5, H5, A0, D0, B1, C1, F4, C4, G5, G0, nl, 0, nl+1, 1);
+                FILT2(PE, PA, PB, PD, PC, PG, PF, PH, PI, C1, G0, C4, F4, G5, H5, D0, A0, B1, A1, I4, I5, nl+1, nl, 1, 0);
+                FILT2(PE, PG, PD, PH, PA, PI, PB, PF, PC, A0, I5, A1, B1, I4, F4, H5, G5, D0, G0, C1, C4, 1, nl+1, 0, nl);
+            } else if (n == 3) {
+                E[0]   = E[1]     = E[2]     =     // 0, 1, 2
+                E[nl]  = E[nl+1]  = E[nl+2]  =     // 3, 4, 5
+                E[nl1] = E[nl1+1] = E[nl1+2] = PE; // 6, 7, 8
+
+                FILT3(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1, 0, 1, 2, nl, nl+1, nl+2, nl1, nl1+1, nl1+2);
+                FILT3(PE, PC, PF, PB, PI, PA, PH, PD, PG, I4, A1, I5, H5, A0, D0, B1, C1, F4, C4, G5, G0, nl1, nl, 0, nl1+1, nl+1, 1, nl1+2, nl+2, 2);
+                FILT3(PE, PA, PB, PD, PC, PG, PF, PH, PI, C1, G0, C4, F4, G5, H5, D0, A0, B1, A1, I4, I5, nl1+2, nl1+1, nl1, nl+2, nl+1, nl, 2, 1, 0);
+                FILT3(PE, PG, PD, PH, PA, PI, PB, PF, PC, A0, I5, A1, B1, I4, F4, H5, G5, D0, G0, C1, C4, 2, nl+2, nl1+2, 1, nl+1, nl1+1, 0, nl, nl1);
+            } else if (n == 4) {
+                E[0]   = E[1]     = E[2]     = E[3]     =     //  0,  1,  2,  3
+                E[nl]  = E[nl+1]  = E[nl+2]  = E[nl+3]  =     //  4,  5,  6,  7
+                E[nl1] = E[nl1+1] = E[nl1+2] = E[nl1+3] =     //  8,  9, 10, 11
+                E[nl2] = E[nl2+1] = E[nl2+2] = E[nl2+3] = PE; // 12, 13, 14, 15
+
+                FILT4(PE, PI, PH, PF, PG, PC, PD, PB, PA, G5, C4, G0, D0, C1, B1, F4, I4, H5, I5, A0, A1, nl2+3, nl2+2, nl1+3, 3, nl+3, nl1+2, nl2+1, nl2, nl1+1, nl+2, 2, 1, nl+1, nl1, nl, 0);
+                FILT4(PE, PC, PF, PB, PI, PA, PH, PD, PG, I4, A1, I5, H5, A0, D0, B1, C1, F4, C4, G5, G0, 3, nl+3, 2, 0, 1, nl+2, nl1+3, nl2+3, nl1+2, nl+1, nl, nl1, nl1+1, nl2+2, nl2+1, nl2);
+                FILT4(PE, PA, PB, PD, PC, PG, PF, PH, PI, C1, G0, C4, F4, G5, H5, D0, A0, B1, A1, I4, I5, 0, 1, nl, nl2, nl1, nl+1, 2, 3, nl+2, nl1+1, nl2+1, nl2+2, nl1+2, nl+3, nl1+3, nl2+3);
+                FILT4(PE, PG, PD, PH, PA, PI, PB, PF, PC, A0, I5, A1, B1, I4, F4, H5, G5, D0, G0, C1, C4, nl2, nl1, nl2+1, nl2+3, nl2+2, nl1+1, nl, 0, nl+1, nl1+2, nl1+3, nl+3, nl+2, 1, 2, 3);
+            }
+
+            sa0 += 1;
+            sa1 += 1;
+            sa2 += 1;
+            sa3 += 1;
+            sa4 += 1;
+
+            E += n;
+        }
+    }
+}
+
+#define XBR_FUNC(size) \
+void xbr_filter_xbr##size##x(const xbr_params *params) \
+{ \
+    xbr_filter(params, size); \
+}
+
+XBR_FUNC(2)
+XBR_FUNC(3)
+XBR_FUNC(4)
+
+
+static XBR_INLINE int _max(int a, int b)
+{
+	return (a > b) ? a : b;
+}
+
+static XBR_INLINE int _min(int a, int b)
+{
+	return (a < b) ? a : b;
+}
+
+
+void xbr_init_data(xbr_data *data)
+{
+    uint32 c;
+    int bg, rg, g;
+
+    for (bg = -255; bg < 256; bg++) {
+        for (rg = -255; rg < 256; rg++) {
+            const uint32 u = (uint32)((-169*rg + 500*bg)/1000) + 128;
+            const uint32 v = (uint32)(( 500*rg -  81*bg)/1000) + 128;
+            int startg = _max(-bg, _max(-rg, 0));
+            int endg = _min(255-bg, _min(255-rg, 255));
+            uint32 y = (uint32)(( 299*rg + 1000*startg + 114*bg)/1000);
+            c = bg + (rg<<16) + 0x010101 * startg;
+            for (g = startg; g <= endg; g++) {
+                data->rgbtoyuv[c] = ((y++) << 16) + (u << 8) + v;
+                c+= 0x010101;
+            }
+        }
+    }
+}
+
diff --git a/platform/haiku/haiku_filters.h b/platform/haiku/haiku_filters.h
new file mode 100644
index 0000000..a06f0ef
--- /dev/null
+++ b/platform/haiku/haiku_filters.h
@@ -0,0 +1,65 @@
+/*
+ * XBR filter: from the FFmpeg project
+ *
+ * Copyright (c) 2011, 2012 Hyllian/Jararaca <sergiogdb@gmail.com>
+ * Copyright (c) 2014 Arwa Arif <arwaarif1994@gmail.com>
+ * Copyright (c) 2015 Treeki <treeki@gmail.com>
+ *
+ *
+ * hqx filter: from the hqx project
+ * Copyright (C) 2003 Maxim Stepin ( maxst@hiend3d.com )
+ * Copyright (C) 2010 Cameron Zemek ( grom@zeminvaders.net)
+ * Copyright (c) 2015 Treeki <treeki@gmail.com>
+ *
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef __LIBXBR_FILTERS_H_INCLUDED
+#define __LIBXBR_FILTERS_H_INCLUDED
+
+#include <SupportDefs.h>
+
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define XBR_INLINE inline
+
+typedef struct {
+    uint32 rgbtoyuv[1<<24];
+} xbr_data;
+
+typedef struct {
+    const uint8 *input;
+    uint8 *output;
+    int inWidth, inHeight;
+    int inPitch, outPitch;
+    const xbr_data *data;
+} xbr_params;
+
+void xbr_filter_xbr2x(const xbr_params *ctx);
+void xbr_filter_xbr3x(const xbr_params *ctx);
+void xbr_filter_xbr4x(const xbr_params *ctx);
+
+void xbr_init_data(xbr_data *data);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
+
diff --git a/platform/haiku/haiku_joystick.cpp b/platform/haiku/haiku_joystick.cpp
new file mode 100644
index 0000000..ddc3bda
--- /dev/null
+++ b/platform/haiku/haiku_joystick.cpp
@@ -0,0 +1,213 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../tools/options.h"
+#include "../../options_common.h"
+
+#include <Joystick.h>
+
+namespace xPlatform
+{
+
+enum { AXES_COUNT = 8 };
+enum ePadButton
+{
+	PB_A, PB_B, PB_X, PB_Y,
+	PB_LTRIGGER, PB_RTRIGGER,
+	PB_LSHIFT, PB_RSHIFT,
+	PB_SELECT, PB_START,
+	PB_STICK1, PB_STICK2,
+	PB_UP, PB_DOWN,
+	PB_LEFT, PB_RIGHT,
+	PB_SYSTEM, PB_COUNT
+};
+enum eHatButton
+{
+	HAT_CENTERED, HAT_UP,
+	HAT_RIGHT_UP, HAT_RIGHT,
+	HAT_RIGHT_DOWN, HAT_DOWN,
+	HAT_LEFT_DOWN, HAT_LEFT,
+	HAT_LEFT_UP, HAT_COUNT
+};
+
+static BJoystick *joystick = NULL;
+static uint32 lastButtonValues = 0;
+static uint32 lastHatBitValues = 0;
+static float lastAxisValues[AXES_COUNT];
+
+static uint32 HatToBitValues(uint8 hat)
+{
+	uint32 bits[] = { 0x00, 0x01, 0x03, 0x02, 0x06, 0x04, 0x0A, 0x08, 0x09 };
+	if (hat > 8)
+		return 0;
+	return bits[hat];
+}
+
+static void ProcessKey(bool state, bool state_prev, byte key)
+{
+	if(state == state_prev)
+		return;
+	if(state)
+		Handler()->OnKey(key, KF_DOWN | OpJoyKeyFlags());
+	else
+		Handler()->OnKey(key, OpJoyKeyFlags());
+}
+
+static void ProcessAxis(float value, float lastValue, byte key1, byte key2)
+{
+	bool b0 = lastValue > 0.5f;
+	bool b1 = value > 0.5f;
+	ProcessKey(b1, b0, key1);
+	b0 = lastValue < -0.5f;
+	b1 = value < -0.5f;
+	ProcessKey(b1, b0, key2);
+}
+
+bool InitJoystick()
+{
+	joystick = new BJoystick();
+	if (joystick->CountDevices() > 0) {
+		char devName[B_OS_NAME_LENGTH];
+		memset(devName, 0, B_OS_NAME_LENGTH);
+		joystick->GetDeviceName(0, devName);
+		if (joystick->Open(devName) != B_ERROR)
+			return true;
+	}
+	delete joystick;
+	joystick = NULL;
+	return false;
+}
+
+void DoneJoystick()
+{
+	if (joystick != NULL)
+		delete joystick;
+}
+
+bool CheckJoystick()
+{
+	return (joystick != NULL);
+}
+
+void ProcessJoystick()
+{
+	if (joystick == NULL)
+		return;
+
+	joystick->Update();
+
+	uint32 buttonValues = joystick->ButtonValues();
+	for (int buttonIdx = 0; buttonIdx < joystick->CountButtons(); buttonIdx++) {
+		bool buttonValue = buttonValues & (1 << buttonIdx);
+		bool lastButtonValue = lastButtonValues & (1 << buttonIdx);
+		if (buttonValue != lastButtonValue) {
+			switch (buttonIdx) {
+				case PB_UP:
+					ProcessKey(buttonValue, lastButtonValue, 'u');
+					break;
+				case PB_DOWN:
+					ProcessKey(buttonValue, lastButtonValue, 'd');
+					break;
+				case PB_LEFT:
+					ProcessKey(buttonValue, lastButtonValue, 'l');
+					break;
+				case PB_RIGHT:
+					ProcessKey(buttonValue, lastButtonValue, 'r');
+					break;
+				case PB_A:
+					ProcessKey(buttonValue, lastButtonValue, 'f');
+					break;
+				case PB_B:
+					ProcessKey(buttonValue, lastButtonValue, 'e');
+					break;
+				case PB_X:
+					ProcessKey(buttonValue, lastButtonValue, '1');
+					break;
+				case PB_Y:
+					ProcessKey(buttonValue, lastButtonValue, ' ');
+					break;
+				case PB_LSHIFT:
+					ProcessKey(buttonValue, lastButtonValue, 'm');
+					break;
+				case PB_RSHIFT:
+					ProcessKey(buttonValue, lastButtonValue, 'k');
+					break;
+				case PB_SELECT:
+					Handler()->OnAction(A_RESET);
+					break;
+				case PB_START:
+					if(!buttonValue) {
+						using namespace xOptions;
+						eOptionB* o = eOptionB::Find("pause");
+						SAFE_CALL(o)->Change();
+					}
+					break;
+			}
+		}
+	}
+	lastButtonValues = buttonValues;
+	
+	int hatsCount = joystick->CountHats();
+	uint8 hatsValues[hatsCount];
+	joystick->GetHatValues(hatsValues, 0);
+	
+	if (hatsCount > 0) {
+		uint32 hatBitValues = HatToBitValues(hatsValues[0]);
+		for (int hatButtonIdx = 0; hatButtonIdx < joystick->CountButtons(); hatButtonIdx++) {
+			bool hatValue = hatBitValues & (1 << hatButtonIdx);
+			bool lastHatValue = lastHatBitValues & (1 << hatButtonIdx);
+			if (hatValue != lastHatValue) {
+				switch (hatButtonIdx) {
+					case 0:
+						ProcessKey(hatValue, lastHatValue, 'u');
+						break;
+					case 1:
+						ProcessKey(hatValue, lastHatValue, 'r');
+						break;
+					case 2:
+						ProcessKey(hatValue, lastHatValue, 'd');
+						break;
+					case 3:
+						ProcessKey(hatValue, lastHatValue, 'l');
+						break;
+				}
+			}
+		}
+		lastHatBitValues = hatBitValues;
+	}
+
+	int16 axes[joystick->CountAxes()];
+	joystick->GetAxisValues(axes);
+	for (int axesIdx = 0; axesIdx < joystick->CountAxes() && axesIdx < AXES_COUNT; axesIdx++) {
+		double value = 0;
+		if (axes[axesIdx] >= 0)
+			value = axes[axesIdx] / 32767.0;
+		else
+			value = axes[axesIdx] / 32768.0;
+		
+		if (axesIdx == 0 || axesIdx == 3 || axesIdx == 6)
+			ProcessAxis(value, lastAxisValues[axesIdx], 'r', 'l');
+
+		if (axesIdx == 1 || axesIdx == 4 || axesIdx == 7)
+			ProcessAxis(value, lastAxisValues[axesIdx], 'd', 'u');
+		lastAxisValues[axesIdx] = value;
+	}
+}
+
+}
diff --git a/platform/haiku/haiku_keyboard_window.cpp b/platform/haiku/haiku_keyboard_window.cpp
new file mode 100644
index 0000000..6daf943
--- /dev/null
+++ b/platform/haiku/haiku_keyboard_window.cpp
@@ -0,0 +1,366 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "haiku_keyboard_window.h"
+
+#undef  B_TRANSLATION_CONTEXT
+#define B_TRANSLATION_CONTEXT "USPKeyboardWindow"
+
+static zxbutton zxkeymap[] = {
+	{100,	ZXB_BUTTON,		"BREAK",		NULL,		NULL,		-1,	NULL,	NULL,	0x01 },
+	{100,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"ABOUT",		"F1",		NULL,		-1,	NULL,	NULL,	0x02 },
+	{100,	ZXB_BUTTON,		"SAVE",			"F2",		NULL,		-1,	NULL,	NULL,	0x03 },
+	{100,	ZXB_BUTTON,		"OPEN",			"F3",		NULL,		-1,	NULL,	NULL,	0x04 },
+	{100,	ZXB_BUTTON,		"WEB\nOPEN",	"F4",		NULL,		-1,	NULL,	NULL,	0x05 },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"TAPE",			"F5",		NULL,		-1,	NULL,	NULL,	0x06 },
+	{100,	ZXB_BUTTON,		"QUICK\nSAVE",	"F6",		NULL,		-1,	NULL,	NULL,	0x07 },
+	{100,	ZXB_BUTTON,		"QUICK\nLOAD",	"F7",		NULL,		-1,	NULL,	NULL,	0x08 },
+	{100,	ZXB_BUTTON,		"VIRT.\nKEYB.",	"F8",		NULL,		-1,	NULL,	NULL,	0x09 },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"OSD\nKEYB.",	"F9",		NULL,		-1,	NULL,	NULL,	0x0A },
+	{100,	ZXB_BUTTON,		"OSD\nMENU",	"F10",		NULL,		-1,	NULL,	NULL,	0x0B },
+	{100,	ZXB_BUTTON,		"48K\n128K",	"F11",		NULL,		-1,	NULL,	NULL,	0x0C },
+	{100,	ZXB_BUTTON,		"RESET",		"F12",		NULL,		-1,	NULL,	NULL,	0x0D },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x0E },
+	{100,	ZXB_BUTTON,		NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x0F },
+	{100,	ZXB_BUTTON,		"PAUSE",		NULL,		NULL,		-1,	NULL,	NULL,	0x10 },
+	{140,	ZXB_NEWLINE,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"`",			NULL,		NULL,		-1,	NULL,	NULL,	0x11 },
+	{100,	ZXB_BUTTON,		"1",			"EDIT",		"DEF FN",	2,	"!",	NULL,	0x12 },
+	{100,	ZXB_BUTTON,		"2",			"C.LOCK",	"FN",		1,	"@",	NULL,	0x13 },
+	{100,	ZXB_BUTTON,		"3",			"TR.VIDEO",	"LINE",		3,	"#",	NULL,	0x14 },
+	{100,	ZXB_BUTTON,		"4",			"IN.VIDEO",	"OPEN#",	8,	"$",	NULL,	0x15 },
+	{100,	ZXB_BUTTON,		"5",			"←",		"CLOSE#",	10,	"%",	NULL,	0x16 },
+	{100,	ZXB_BUTTON,		"6",			"↓",		"MOVE",		9,	"&",	NULL,	0x17 },
+	{100,	ZXB_BUTTON,		"7",			"↑",		"ERASE",	11,	"`",	NULL,	0x18 },
+	{100,	ZXB_BUTTON,		"8",			"→",		"POINT",	0,	"(",	NULL,	0x19 },
+	{100,	ZXB_BUTTON,		"9",			"GRAPHICS",	"CAT",		-1,	")",	NULL,	0x1A },
+	{100,	ZXB_BUTTON,		"0",			"DELETE",	"FORMAT",	-1,	"_",	NULL,	0x1B },
+	{100,	ZXB_BUTTON,		"_\n-",			NULL,		NULL,		-1,	NULL,	NULL,	0x1C },
+	{100,	ZXB_BUTTON,		"+\n=",			NULL,		NULL,		-1,	NULL,	NULL,	0x1D },
+	{150,	ZXB_BUTTON,		"DELETE",		NULL,		NULL,		-1,	NULL,	NULL,	0x1E },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"EDIT",			NULL,		NULL,		-1,	NULL,	NULL,	0x1F },
+	{100,	ZXB_BUTTON,		"TRUE\nVIDEO",	NULL,		NULL,		-1,	NULL,	NULL,	0x20 },
+	{100,	ZXB_BUTTON,		"VOL+",			NULL,		NULL,		-1,	NULL,	NULL,	0x21 },
+	{100,	ZXB_NEWLINE,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{150,	ZXB_BUTTON,		"EXTENDED",		NULL,		NULL,		-1,	NULL,	NULL,	0x26 },
+	{100,	ZXB_BUTTON,		"Q",			"SIN",		"ASN",		-1,	"<=",	"PLOT",	0x27 },
+	{100,	ZXB_BUTTON,		"W",			"COS",		"ACS",		-1,	"<>",	"DRAW",	0x28 },
+	{100,	ZXB_BUTTON,		"E",			"TAN",		"ATN",		-1,	">=",	"REM",	0x29 },
+	{100,	ZXB_BUTTON,		"R",			"INT",		"VERIFY",	-1,	"<",	"RUN",	0x2A },
+	{100,	ZXB_BUTTON,		"T",			"RND",		"MERGE",	-1,	">",	"RAND",	0x2B },
+	{100,	ZXB_BUTTON,		"Y",			"STR$",		"[",		-1,	"AND",	"RETURN",0x2C},
+	{100,	ZXB_BUTTON,		"U",			"CHR$",		"]",		-1,	"OR",	"IF",	0x2D },
+	{100,	ZXB_BUTTON,		"I",			"CODE",		"IN",		-1,	"AT",	"INPUT",0x2E },
+	{100,	ZXB_BUTTON,		"O",			"PEEK",		"OUT",		-1,	";",	"POKE",	0x2F },
+	{100,	ZXB_BUTTON,		"P",			"TAB",		"©",		-1,	"\"",	"PRINT",0x30 },
+	{100,	ZXB_BUTTON,		"{\n[",			NULL,		NULL,		-1,	NULL,	NULL,	0x31 },
+	{100,	ZXB_BUTTON,		"}\n]",			NULL,		NULL,		-1,	NULL,	NULL,	0x32 },
+	{100,	ZXB_BUTTON,		"\\",			NULL,		NULL,		-1,	NULL,	NULL,	0x33 },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"DELETE",		NULL,		NULL,		-1,	NULL,	NULL,	0x34 },
+	{100,	ZXB_BUTTON,		"INV.\nVIDEO",	NULL,		NULL,		-1,	NULL,	NULL,	0x35 },
+	{100,	ZXB_BUTTON,		"VOL-",			NULL,		NULL,		-1,	NULL,	NULL,	0x36 },
+	{100,	ZXB_NEWLINE,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{180,	ZXB_BUTTON,		"CAPS LOCK",	NULL,		NULL,		-1,	NULL,	NULL,	0x3B },
+	{100,	ZXB_BUTTON,		"A",			"READ",		"~",		-1,	"STOP",	"NEW",	0x3C },
+	{100,	ZXB_BUTTON,		"S",			"RESTORE",	"|",		-1,	"NOT",	"SAVE",	0x3D },
+	{100,	ZXB_BUTTON,		"D",			"DATA",		"\\",		-1,	"STEP",	"DIM",	0x3E },
+	{100,	ZXB_BUTTON,		"F",			"SGN",		"{",		-1,	"TO",	"FOR",	0x3F },
+	{100,	ZXB_BUTTON,		"G",			"ABS",		"}",		-1,	"THEN",	"GOTO",	0x40 },
+	{100,	ZXB_BUTTON,		"H",			"SQR",		"CIRCLE",	-1,	"^",	"GOSUB",0x41 },
+	{100,	ZXB_BUTTON,		"J",			"VAL",		"VAL$",		-1,	"-",	"LOAD",	0x42 },
+	{100,	ZXB_BUTTON,		"K",			"LEN",		"SCREEN$",	-1,	"+",	"LIST",	0x43 },
+	{100,	ZXB_BUTTON,		"L",			"USR",		"ATTR",		-1,	"=",	"LET",	0x44 },
+	{100,	ZXB_BUTTON,		":\n;",			NULL,		NULL,		-1,	NULL,	NULL,	0x45 },
+	{100,	ZXB_BUTTON,		"\"\n'",		NULL,		NULL,		-1,	NULL,	NULL,	0x46 },
+	{170,	ZXB_BUTTON,		"ENTER",		NULL,		NULL,		-1,	NULL,	NULL,	0x47 },
+	{100,	ZXB_NEWLINE,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{225,	ZXB_BUTTON,		"CAPS SHIFT",	NULL,		NULL,		-1,	NULL,	NULL,	0x4B },
+	{100,	ZXB_BUTTON,		"Z",			"LN",		"BEEP",		-1,	":",	"COPY",	0x4C },
+	{100,	ZXB_BUTTON,		"X",			"EXP",		"INK",		-1,	"₤",	"CLEAR",0x4D },
+	{100,	ZXB_BUTTON,		"C",			"LPRINT",	"PAPER",	-1,	"?",	"COUNT",0x4E },
+	{100,	ZXB_BUTTON,		"V",			"LLIST",	"FLASH",	-1,	"/",	"CLS",	0x4F },
+	{100,	ZXB_BUTTON,		"B",			"BIN",		"BRIGHT",	-1,	"*",	"BORDER",0x50},
+	{100,	ZXB_BUTTON,		"N",			"INKEY$",	"OVER",		-1,	",",	"NEXT",	0x51 },
+	{100,	ZXB_BUTTON,		"M",			"PI",		"INVERSE",	-1,	".",	"PAUSE",0x52 },
+	{100,	ZXB_BUTTON,		"<\n,",			NULL,		NULL,		-1,	NULL,	NULL,	0x53 },
+	{100,	ZXB_BUTTON,		">\n.",			NULL,		NULL,		-1,	NULL,	NULL,	0x54 },
+	{100,	ZXB_BUTTON,		"?\n/",			NULL,		NULL,		-1,	NULL,	NULL,	0x55 },
+	{225,	ZXB_BUTTON,		"CAPS SHIFT",	NULL,		NULL,		-1,	NULL,	NULL,	0x56 },
+	{125,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"↑",			NULL,		NULL,		-1,	NULL,	NULL,	0x57 },	
+	{100,	ZXB_NEWLINE,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{125,	ZXB_BUTTON,		"SYMBOL\nSHIFT",NULL,		NULL,		-1,	NULL,	NULL,	0x5C },
+	{125,	ZXB_BUTTON,		"GRAPH.",		NULL,		NULL,		-1,	NULL,	NULL,	0x66 },
+	{125,	ZXB_BUTTON,		"ALT",			NULL,		NULL,		-1,	NULL,	NULL,	0x5D },
+	{575,	ZXB_BUTTON,		"BREAK SPACE",	NULL,		NULL,		-1,	NULL,	NULL,	0x5E },
+	{125,	ZXB_BUTTON,		"ALT",			NULL,		NULL,		-1,	NULL,	NULL,	0x5F },
+	{125,	ZXB_BUTTON,		"GRAPH.",		NULL,		NULL,		-1,	NULL,	NULL,	0x67 },
+	{125,	ZXB_BUTTON,		"OSD\nMENU",	NULL,		NULL,		-1,	NULL,	NULL,	0x68 },
+	{125,	ZXB_BUTTON,		"SYMBOL\nSHIFT",NULL,		NULL,		-1,	NULL,	NULL,	0x60 },
+	{25,	ZXB_SEPARATOR,	NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+	{100,	ZXB_BUTTON,		"←",			NULL,		NULL,		-1,	NULL,	NULL,	0x61 },
+	{100,	ZXB_BUTTON,		"↓",			NULL,		NULL,		-1,	NULL,	NULL,	0x62 },
+	{100,	ZXB_BUTTON,		"→",			NULL,		NULL,		-1,	NULL,	NULL,	0x63 },
+	{0,		ZXB_END,		NULL,			NULL,		NULL,		-1,	NULL,	NULL,	0x00 },
+};
+
+ZXButton::ZXButton(BRect rect, zxbutton *button)
+: BButton(rect, button->label, NULL, NULL, 0, 0),
+	fButtonData(button),
+	fButtonHighlight(false)
+{
+	BFont font;
+	GetFont(&font);
+	fLabelFont = font;
+	fCommandFont = font;
+	fExtendFont = font;
+
+	fLabelFont.SetSize(11);
+	fLabelFont.SetFamilyAndFace("Noto Sans", B_BOLD_FACE);
+
+	fCommandFont.SetSize(8);
+	fCommandFont.SetFamilyAndFace("Noto Sans", B_REGULAR_FACE);
+
+	fExtendFont.SetSize(8);
+	fExtendFont.SetFamilyAndFace("Noto Sans", B_REGULAR_FACE);
+}
+
+void
+ZXButton::SetHighlight(bool enable)
+{
+	fButtonHighlight = enable;
+	Invalidate();
+}
+
+void 
+ZXButton::Draw(BRect rect)
+{
+	BButton::Draw(rect);
+
+	bool simpleButton = fButtonData->label &&
+		!fButtonData->bottom &&
+		!fButtonData->command &&
+		!fButtonData->symbol;
+
+	if (fButtonHighlight) {
+		SetDrawingMode(B_OP_ALPHA);
+		rgb_color color = ui_color(B_CONTROL_HIGHLIGHT_COLOR);
+		color.alpha = 80;
+		SetHighColor(color);
+		FillRect(Bounds());
+		SetDrawingMode(B_OP_COPY);
+	}
+
+	if (fButtonData->label) {
+		if (simpleButton) {
+			SetHighColor(ui_color(B_CONTROL_TEXT_COLOR));
+			SetFont(&fLabelFont);
+			font_height heighdata;
+			fLabelFont.GetHeight(&heighdata);
+			BStringList lines;
+			BString label(fButtonData->label);
+			label.Split("\n", false, lines);
+			float height = heighdata.ascent + heighdata.descent - 3;
+			float totalHeight = lines.CountStrings() * height;		
+			for (int i = 0; i < lines.CountStrings(); i++) {
+				float width = fLabelFont.StringWidth(lines.StringAt(i).String());
+				BPoint pos((Bounds().Width() - width) / 2,
+					(Bounds().Height() - totalHeight) / 2 + heighdata.ascent + (height * i));
+				DrawString(lines.StringAt(i).String(), pos);
+			}
+		} else {
+			SetHighColor(ui_color(B_CONTROL_TEXT_COLOR));
+			SetFont(&fLabelFont);
+			font_height heighdata;
+			fLabelFont.GetHeight(&heighdata);
+			float height = heighdata.ascent + heighdata.descent;
+			BPoint pos(Bounds().left + 4, ((Bounds().Height() - height) / 2) + heighdata.ascent);
+			DrawString(fButtonData->label, pos);
+		}
+	}
+
+	if (fButtonData->top) {
+		SetHighColor(0, 100, 0);
+		SetFont(&fExtendFont);
+		font_height heighdata;
+		fExtendFont.GetHeight(&heighdata);
+		float height = heighdata.ascent + heighdata.descent;
+		float width = fExtendFont.StringWidth(fButtonData->top);
+		BPoint pos((Bounds().Width() - width) / 2, Bounds().top + heighdata.ascent + 3);
+		DrawString(fButtonData->top, pos);
+	}
+
+	if (fButtonData->bottom) {
+		SetHighColor(0, 0, 100);
+		SetFont(&fExtendFont);
+		font_height heighdata;
+		fExtendFont.GetHeight(&heighdata);
+		float height = heighdata.ascent + heighdata.descent;
+		float width = fExtendFont.StringWidth(fButtonData->bottom);
+		BPoint pos((Bounds().Width() - width) / 2, Bounds().bottom - (heighdata.descent + 2));
+		DrawString(fButtonData->bottom, pos);
+	}
+
+	if (fButtonData->command) {
+		SetHighColor(ui_color(B_CONTROL_TEXT_COLOR));
+		SetFont(&fCommandFont);
+		font_height heighdata;
+		fCommandFont.GetHeight(&heighdata);
+		float height = heighdata.ascent + heighdata.descent;
+		float width = fCommandFont.StringWidth(fButtonData->command);
+		BPoint pos(Bounds().Width() - (width + 3), ((Bounds().Height() - height) / 2) + height + 4);
+		DrawString(fButtonData->command, pos);
+	}
+
+	if (fButtonData->symbol) {
+		SetHighColor(100, 0, 0);
+		SetFont(&fCommandFont);
+		font_height heighdata;
+		fCommandFont.GetHeight(&heighdata);
+		float height = heighdata.ascent + heighdata.descent;
+		float width = fCommandFont.StringWidth(fButtonData->symbol);
+		BPoint pos(Bounds().Width() - (width + 3), ((Bounds().Height() - height) / 2) + heighdata.ascent - (heighdata.descent + 2));
+		DrawString(fButtonData->symbol, pos);
+	}
+
+	if (fButtonData->udg >= 0) {
+		SetHighColor(ui_color(B_CONTROL_TEXT_COLOR));
+		SetFont(&fLabelFont);
+		font_height heighdata;
+		fLabelFont.GetHeight(&heighdata);
+		int size = ((heighdata.ascent + heighdata.descent) / 2) - 3;
+		BPoint point(Bounds().Width() / 2, Bounds().Height() /2);
+		StrokeRect(BRect(point.x - size, point.y - size, point.x + size, point.y + size));
+		if (fButtonData->udg & 0x01)
+			FillRect(BRect(point.x - size, point.y - size, point.x, point.y));
+		if (fButtonData->udg & 0x02)
+			FillRect(BRect(point.x, point.y - size, point.x + size, point.y));
+		if (fButtonData->udg & 0x04)
+			FillRect(BRect(point.x - size, point.y, point.x, point.y + size));
+		if (fButtonData->udg & 0x08)
+			FillRect(BRect(point.x, point.y, point.x + size, point.y + size));			
+	}
+}
+
+void
+ZXButton::MouseDown(BPoint where)
+{
+	BMessage *message = new BMessage(B_KEY_DOWN);
+	message->AddInt32("key", fButtonData->key);
+	Window()->PostMessage(message);
+	BButton::MouseDown(where);
+}
+
+void
+ZXButton::MouseUp(BPoint where)
+{
+	BMessage *message = new BMessage(B_KEY_UP);
+	message->AddInt32("key", fButtonData->key);
+	Window()->PostMessage(message);
+	BButton::MouseUp(where);
+}
+
+KeyboardWindow::KeyboardWindow(BRect frame, BWindow *win)
+: BWindow(frame, B_TRANSLATE("Keyboard layout"), B_FLOATING_WINDOW_LOOK, B_NORMAL_WINDOW_FEEL,
+	B_NOT_RESIZABLE | B_NOT_ZOOMABLE | B_WILL_ACCEPT_FIRST_CLICK),
+	fButtonSize(48),
+	fButtonSpace(1),
+	fMainWindow(win)
+{
+	fView = new BView(Bounds(), "view", B_FOLLOW_ALL, B_WILL_DRAW);
+	fView->SetViewColor(ui_color(B_PANEL_BACKGROUND_COLOR));
+	AddChild(fView);
+	fButtonPosition = BPoint(10, 10);
+	int buttonIndex = 0;
+	while (zxkeymap[buttonIndex].type != ZXB_END)
+		AddButton(&zxkeymap[buttonIndex++]);
+
+	fButtonPosition.x += 10;
+	fButtonPosition.y += fButtonSize + 10;
+	ResizeTo(fButtonPosition.x, fButtonPosition.y);
+}
+
+void
+KeyboardWindow::AddButton(zxbutton *buttonData)
+{
+	if (buttonData->type == ZXB_BUTTON ) {
+		BRect rect(fButtonPosition.x,
+			fButtonPosition.y,
+			fButtonPosition.x + (fButtonSize * buttonData->size) / 100,
+			fButtonPosition.y + fButtonSize);
+		rect.InsetBy(fButtonSpace, fButtonSpace);
+		ZXButton *button = new ZXButton(rect, buttonData);
+		button->SetTarget(this);
+		if (!buttonData->label)
+			button->SetEnabled(false);
+		fView->AddChild(button);
+		fButtonPosition.x += (fButtonSize * buttonData->size) / 100;
+	} else if (buttonData->type == ZXB_SEPARATOR ) {
+		fButtonPosition.x += (fButtonSize * buttonData->size) / 100;
+	} else if (buttonData->type == ZXB_NEWLINE ) {
+		fButtonPosition.x = 10;
+		fButtonPosition.y += (fButtonSize * buttonData->size) / 100;
+	}
+}
+
+void
+KeyboardWindow::MessageReceived(BMessage *msg)
+{
+	switch(msg->what) {
+		case kKeyHighlight:
+		{
+			uint32 key = msg->FindInt32("key");
+			bool highlight = msg->FindBool("highlight");
+			for (int i = 0; i < fView->CountChildren(); i++) {
+				ZXButton *button = dynamic_cast<ZXButton*>(fView->ChildAt(i));
+				if (button) {
+					if (button->ButtonData()->key != 0 &&
+						button->ButtonData()->key == key) {
+						button->SetHighlight(highlight);
+						break;
+					}
+				}
+			}
+			break;
+		}
+		case B_UNMAPPED_KEY_UP:
+		case B_KEY_UP:
+		case B_UNMAPPED_KEY_DOWN:
+		case B_KEY_DOWN:
+		{
+			fMainWindow->PostMessage(msg);
+			break;
+		}
+	default:
+		BWindow::MessageReceived(msg);
+		break;
+	}
+}
+
+bool
+KeyboardWindow::QuitRequested()
+{
+	fMainWindow->PostMessage(kHelpKeyboardLayout);
+	return false;
+}
diff --git a/platform/haiku/haiku_keyboard_window.h b/platform/haiku/haiku_keyboard_window.h
new file mode 100644
index 0000000..79fef9a
--- /dev/null
+++ b/platform/haiku/haiku_keyboard_window.h
@@ -0,0 +1,82 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _KEYBOARD_WINDOW_H
+#define _KEYBOARD_WINDOW_H
+
+#include <stdio.h>
+
+#include <AppKit.h>
+#include <InterfaceKit.h>
+#include <StringList.h>
+#include <Catalog.h>
+
+#define ZXB_BUTTON		0
+#define ZXB_SEPARATOR	1
+#define ZXB_NEWLINE		2
+#define ZXB_END			3
+
+const uint32 kHelpKeyboardLayout = 'HKBD';
+const uint32 kKeyHighlight = 'HGLT';
+
+typedef struct {
+	int32 size;
+	int32 type;
+	const char *label;
+	const char *top;
+	const char *bottom;
+	int8 udg;
+	const char *symbol;
+	const char *command;
+	uint32 key;
+} zxbutton;
+
+class ZXButton : public BButton
+{
+public:
+					ZXButton(BRect rect, zxbutton *button);
+	virtual void	Draw(BRect r);
+	virtual	void	MouseDown(BPoint where);
+	virtual	void	MouseUp(BPoint where);
+	void			SetHighlight(bool enable);
+	zxbutton*		ButtonData(void) { return fButtonData; }
+private:
+	zxbutton*		fButtonData;
+	bool			fButtonHighlight;
+	BFont			fLabelFont;
+	BFont			fCommandFont;
+	BFont			fExtendFont;
+};
+
+class KeyboardWindow : public BWindow
+{
+public:
+					KeyboardWindow(BRect frame, BWindow *win);
+	virtual void	MessageReceived(BMessage *msg);
+	virtual bool	QuitRequested();
+
+	void			AddButton(zxbutton *button);
+private:
+	BView*			fView;
+	BWindow*		fMainWindow;
+	BPoint			fButtonPosition;
+	float			fButtonSize;
+	float			fButtonSpace;
+};
+//------------------------------------------------------------------------------
+#endif
diff --git a/platform/haiku/haiku_list_item.cpp b/platform/haiku/haiku_list_item.cpp
new file mode 100644
index 0000000..0ce9812
--- /dev/null
+++ b/platform/haiku/haiku_list_item.cpp
@@ -0,0 +1,75 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "haiku_list_item.h"
+
+IconListItem::IconListItem(BBitmap *icon,const char *text, uint32 data, int level, bool expanded) :
+	BListItem(level, expanded),
+	fIcon(icon),
+	fLabel(text),
+	fExtraDate(data)
+{
+	BFont font(be_plain_font);
+	font_height heighdata;
+	font.GetHeight(&heighdata);
+	SetHeight(heighdata.ascent + heighdata.descent + 2);
+	SetWidth(font.StringWidth(text));
+}
+
+void
+IconListItem::DrawItem(BView *owner, BRect frame, bool complete)
+{
+	owner->SetDrawingMode(B_OP_OVER);
+
+	owner->SetHighColor((IsSelected() || complete ) ? ui_color(B_LIST_SELECTED_BACKGROUND_COLOR) : owner->ViewColor());
+	owner->FillRect(frame);
+
+	if (fIcon) {
+		owner->MovePenTo(fIcon->Bounds().Width(), frame.top);
+		owner->SetDrawingMode(B_OP_ALPHA);
+		owner->DrawBitmap(fIcon);
+	}
+
+	owner->MovePenTo(frame.left + ((fIcon == NULL) ? 0 : fIcon->Bounds().Width() * 2 ) + 8,
+		(frame.bottom + frame.top) / 2.0 + 4.0);
+	owner->SetHighColor(ui_color(IsSelected() ? B_LIST_SELECTED_ITEM_TEXT_COLOR : B_LIST_ITEM_TEXT_COLOR));
+	owner->DrawString(fLabel.String());
+} 
+
+
+IconMenuListItem::IconMenuListItem(BBitmap *icon,const char *label, BMessage *message) :
+	BMenuItem(label, message),
+	fIcon(icon)
+{
+}
+
+void
+IconMenuListItem::DrawContent(void)
+{
+	if (fIcon) {
+		Menu()->MovePenTo(fIcon->Bounds().Width(), Frame().top);
+		Menu()->SetDrawingMode(B_OP_ALPHA);
+		Menu()->DrawBitmap(fIcon);
+	}
+
+	Menu()->SetDrawingMode(B_OP_OVER);
+	Menu()->MovePenTo(Frame().left + ((fIcon == NULL) ? 0 : fIcon->Bounds().Width() * 2 ) + 8,
+		(Frame().bottom + Frame().top) / 2.0 + 4.0);
+	Menu()->SetHighColor(ui_color(IsSelected() ? B_MENU_SELECTED_ITEM_TEXT_COLOR : B_MENU_ITEM_TEXT_COLOR));
+	Menu()->DrawString(Label());
+} 
diff --git a/platform/haiku/haiku_list_item.h b/platform/haiku/haiku_list_item.h
new file mode 100644
index 0000000..346eb75
--- /dev/null
+++ b/platform/haiku/haiku_list_item.h
@@ -0,0 +1,51 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _ICON_LIST_ITEM_H
+#define _ICON_LIST_ITEM_H
+
+#include <InterfaceKit.h>
+
+class IconListItem : public BListItem
+{ 
+	public:
+						IconListItem(BBitmap *icon, const char *text, uint32 data, int level, bool expanded); 
+		virtual 		~IconListItem() { };
+		const char*		GetLabel() { return fLabel.String(); }
+		const uint32	GetData() { return fExtraDate; }
+
+		virtual void 	DrawItem(BView *owner, BRect frame, bool complete = false); 
+		virtual void 	Update(BView *owner, const BFont *font) { };
+
+	private:
+		BBitmap*		fIcon;
+		BString			fLabel;
+		uint32			fExtraDate;
+};
+
+class IconMenuListItem : public BMenuItem
+{ 
+	public:
+						IconMenuListItem(BBitmap *icon, const char *label, BMessage* message);
+		virtual void	DrawContent();
+	private:
+		BBitmap*		fIcon;
+};
+
+
+#endif
diff --git a/platform/haiku/haiku_sound.cpp b/platform/haiku/haiku_sound.cpp
new file mode 100644
index 0000000..31cd2b0
--- /dev/null
+++ b/platform/haiku/haiku_sound.cpp
@@ -0,0 +1,102 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <Locker.h>
+#include <SoundPlayer.h>
+
+#include "../platform.h"
+#include "../../options_common.h"
+#include "../../tools/options.h"
+#include "../../tools/sound_mixer.h"
+
+namespace xPlatform
+{
+#define HAIKU_SOUND_BUFFER_SIZE (3528 * 4)
+
+static BSoundPlayer *sound_player;
+static BLocker sound_locker("sound_locker");
+static eSoundMixer sound_mixer;
+
+static void AudioCallback(void *cookie, void *buf, size_t length, const media_raw_audio_format &format)
+{
+	sound_locker.Lock();
+
+	if(length <= sound_mixer.Ready()) {
+		memcpy(buf, sound_mixer.Ptr(), length);
+		sound_mixer.Use(length);
+	} else {
+		memcpy(buf, sound_mixer.Ptr(), sound_mixer.Ready());
+		memset((byte*)buf + sound_mixer.Ready(), 0, length - sound_mixer.Ready());
+		sound_mixer.Use(sound_mixer.Ready());
+	}
+	
+	sound_locker.Unlock();
+}
+
+void InitAudio()
+{
+	using namespace xOptions;
+	struct eOptionBX : public eOptionB
+	{
+		void Unuse() { customizable = false; storeable = false; }
+	};
+	eOptionBX* o = (eOptionBX*)eOptionB::Find("sound");
+	SAFE_CALL(o)->Unuse();
+
+	media_raw_audio_format spec = {
+		44100,
+		2,
+		media_raw_audio_format::B_AUDIO_SHORT,
+		B_MEDIA_LITTLE_ENDIAN,
+		HAIKU_SOUND_BUFFER_SIZE
+	};
+
+	sound_player = new BSoundPlayer(&spec, "USP", AudioCallback);
+	sound_player->Start();
+	sound_player->SetHasData(true);
+}
+
+void VolumeAudio(float volume)
+{
+	float db = 20 * log(volume / 10.0);
+	sound_player->SetVolumeDB(db);
+}
+
+void UpdateAudio()
+{
+	sound_locker.Lock();
+	sound_mixer.Update();
+
+	static bool audio_filled = false;
+	bool audio_filled_new = sound_mixer.Ready() > HAIKU_SOUND_BUFFER_SIZE;
+	if(audio_filled != audio_filled_new)
+	{
+		audio_filled = audio_filled_new;
+		Handler()->VideoPaused(audio_filled);
+	}
+	
+	sound_locker.Unlock();
+}
+
+void DoneAudio()
+{
+	sound_player->SetHasData(false);
+	delete sound_player;
+}
+
+}
diff --git a/platform/haiku/haiku_surface.cpp b/platform/haiku/haiku_surface.cpp
new file mode 100644
index 0000000..cd0538a
--- /dev/null
+++ b/platform/haiku/haiku_surface.cpp
@@ -0,0 +1,303 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../tools/point.h"
+#include "../../ui/ui.h"
+
+#include "haiku_surface.h"
+
+namespace xPlatform
+{
+static void OpZoomGet(float* sx, float* sy, const ePoint& org_size, const ePoint& size)
+{
+	*sx = ((float)org_size.x) / size.x;
+	*sy = ((float)org_size.y) / size.y;
+}
+
+struct eMouseDelta
+{
+	eMouseDelta() : x(0.0f), y(0.0f) {}
+	eMouseDelta(const ePoint& d, float sx, float sy)
+	{
+		x = sx*d.x;
+		y = sy*d.y;
+	}
+	eMouseDelta& operator+=(const eMouseDelta& d) { x += d.x; y += d.y; return *this; }
+	float x;
+	float y;
+};
+
+static eMouseDelta mouse_delta;
+
+static uint32* memset32(uint32 *buf, uint32 val, size_t count)
+{
+	while(count--) *buf++ = val;
+		return buf;
+}
+
+SurfaceView::SurfaceView(BRect rect, int width, int height) :
+	BView(rect, "SurfaceView", B_FOLLOW_ALL, B_WILL_DRAW | B_PULSE_NEEDED),
+	fBilinear(false),
+	fXBRFiltering(false),
+	fSmartBorder(false),
+	fMouseGrab(false),
+	fLastMouseButtons(0),
+	fTimerMessageRunner(NULL)
+{
+	fPixelBufferWidth = width;
+	fPixelBufferHeight = height;
+
+	fBufferBitmap = new BBitmap(BRect(0, 0, width - 1, height - 1), B_RGB32);
+	width = fPixelBufferWidth * 2;	height = fPixelBufferHeight * 2;
+	fBufferBitmap2x = new BBitmap(BRect(0, 0, width - 1, height - 1), B_RGB32);
+	width = fPixelBufferWidth * 3;	height = fPixelBufferHeight * 3;
+	fBufferBitmap3x = new BBitmap(BRect(0, 0, width - 1, height - 1), B_RGB32);
+	width = fPixelBufferWidth * 4;	height = fPixelBufferHeight * 4;
+	fBufferBitmap4x = new BBitmap(BRect(0, 0, width - 1, height - 1), B_RGB32);
+
+	fXbrData = (xbr_data*)malloc(sizeof(xbr_data));
+	xbr_init_data(fXbrData);
+
+	fXbrParams.data = fXbrData;
+	fXbrParams.input = (uint8*)fBufferBitmap->Bits();
+	fXbrParams.output = (uint8*)fBufferBitmap2x->Bits();
+	fXbrParams.inWidth = fPixelBufferWidth;
+	fXbrParams.inHeight = fPixelBufferHeight;
+	fXbrParams.inPitch = fBufferBitmap->BytesPerRow();
+	fXbrParams.outPitch = fBufferBitmap2x->BytesPerRow();
+
+	fBufferOffscreenView = new BView(Bounds(), "bufferOffscreenView", B_FOLLOW_ALL_SIDES, 0);
+	fBufferOffscreenBitmap = new BBitmap(Bounds(), B_RGB32, true);
+	fBufferOffscreenBitmap->AddChild(fBufferOffscreenView);
+	fBufferOffscreenView->SetDrawingMode(B_OP_COPY);
+	SetDrawingMode(B_OP_COPY);
+}
+
+SurfaceView::~SurfaceView()
+{
+	if (fTimerMessageRunner)
+		delete fTimerMessageRunner;
+	if (fBufferBitmap)
+		delete fBufferBitmap;
+	if (fBufferBitmap2x)
+		delete fBufferBitmap2x;
+	if (fBufferBitmap3x)
+		delete fBufferBitmap3x;
+	if (fBufferBitmap4x)
+		delete fBufferBitmap4x;
+	if (fBufferOffscreenBitmap)
+		delete fBufferOffscreenBitmap;
+}
+
+void
+SurfaceView::AttachedToWindow()
+{
+	BMessenger messenger(this, Window());
+	BMessage message(kRepaintEvent);
+	fTimerMessageRunner = new BMessageRunner(messenger, &message, 1000000 / 50);
+}
+
+void
+SurfaceView::MessageReceived(BMessage *message)
+{
+	switch (message->what) {
+		case kRepaintEvent:
+		{
+			Repaint();
+			return;
+		}
+		default:
+			break;
+	}
+	BView::MessageReceived(message);
+}
+
+void 
+SurfaceView::Draw(BRect rect)
+{
+	DrawBitmap(fBufferOffscreenBitmap, rect, rect);
+}
+
+void 
+SurfaceView::MouseMoved(BPoint p, uint32 transit, const BMessage *message)
+{
+	if (fMouseGrab) {
+		ePoint size;
+		size.x = Bounds().Width();
+		size.y = Bounds().Height();
+
+		float sx, sy;
+		OpZoomGet(&sx, &sy, ePoint(xUi::WIDTH, xUi::HEIGHT), size);
+
+		BPoint center(Bounds().Width() / 2, Bounds().Height() / 2);
+		BPoint shift = p - center;
+
+		float scale_x = float(xUi::WIDTH) / size.x / sx;
+		float scale_y = float(xUi::HEIGHT) / size.y / sy;
+		mouse_delta += eMouseDelta(ePoint(shift.x, shift.y), scale_x, scale_y);
+
+		int dx = mouse_delta.x;
+		int dy = mouse_delta.y;
+		if(dx || dy) {
+			mouse_delta.x -= dx;
+			mouse_delta.y -= dy;
+			Handler()->OnMouse(MA_MOVE, dx, -dy);
+			center = ConvertToScreen(center);
+			set_mouse_position(center.x, center.y);
+		}
+	}
+}
+
+void
+SurfaceView::MouseDown(BPoint p)
+{
+	if (fMouseGrab) {
+		uint32 buttons = Window()->CurrentMessage()->FindInt32("buttons");
+		Handler()->OnMouse(MA_BUTTON, buttons & B_PRIMARY_MOUSE_BUTTON ? 0 : 1, 1);
+		fLastMouseButtons = buttons;
+	}
+}
+
+void
+SurfaceView::MouseUp(BPoint p)
+{	
+	if (fMouseGrab) {
+		uint32 buttons = 0;
+		GetMouse(&p, &buttons, false);
+		Handler()->OnMouse(MA_BUTTON,
+			((fLastMouseButtons & B_PRIMARY_MOUSE_BUTTON) &&
+			!(buttons & B_PRIMARY_MOUSE_BUTTON)) ? 0 : 1, 0);
+	}
+}
+
+void
+SurfaceView::EnableMouseGrab(bool enabled)
+{
+	fMouseGrab = enabled;
+	if (enabled) {
+		BPoint center(Bounds().Width() / 2, Bounds().Height() / 2);
+		center = ConvertToScreen(center);
+		set_mouse_position(center.x, center.y);
+	}
+}
+
+void 
+SurfaceView::Repaint()
+{
+	ResizeOffscreenBitmap(Bounds().Width(), Bounds().Height());
+	fBufferOffscreenBitmap->Lock();
+
+	BRect rect = Bounds();
+	BRect bmpRect = fBufferOffscreenBitmap->Bounds();
+
+	float kx = rect.Width() / (float)fPixelBufferWidth;
+	float ky = rect.Height() / (float)fPixelBufferHeight;
+
+	BRect dstRect = rect;
+	if (kx >= ky) {
+		float w = fPixelBufferWidth * ky;
+		float h = fPixelBufferHeight * ky;
+		dstRect.left = (rect.Width() - w) / 2 - 1;
+		dstRect.top = 0;
+		dstRect.right = dstRect.left + w + 3;
+		dstRect.bottom = h;
+	} else {
+		float w = fPixelBufferWidth * kx;
+		float h = fPixelBufferHeight * kx;
+		dstRect.left = 0;
+		dstRect.top = (rect.Height() - h) / 2;
+		dstRect.right = w;
+		dstRect.bottom = dstRect.top + h;
+	}
+
+	bool scale1x = bmpRect.Width() - 1 <= xUi::WIDTH && bmpRect.Height() - 1 <= xUi::HEIGHT;
+
+	if (!fSmartBorder)
+		memset(fBufferOffscreenBitmap->Bits(), 0, fBufferOffscreenBitmap->BitsLength());
+
+	int multiplyIndex = ceilf(bmpRect.Width() / xUi::WIDTH) - 1;
+
+	if (fXBRFiltering && multiplyIndex > 1) {
+		if (multiplyIndex == 2) {
+			fXbrParams.output = (uint8*)fBufferBitmap2x->Bits();
+			fXbrParams.outPitch = fBufferBitmap2x->BytesPerRow();
+			xbr_filter_xbr2x(&fXbrParams);
+			fBufferOffscreenView->DrawBitmap(fBufferBitmap2x, fBufferBitmap2x->Bounds(),
+				dstRect, (fBilinear && !scale1x) ? B_FILTER_BITMAP_BILINEAR : 0);
+		} else if (multiplyIndex == 3) {
+			fXbrParams.output = (uint8*)fBufferBitmap3x->Bits();
+			fXbrParams.outPitch = fBufferBitmap3x->BytesPerRow();
+			xbr_filter_xbr3x(&fXbrParams);
+			fBufferOffscreenView->DrawBitmap(fBufferBitmap3x, fBufferBitmap3x->Bounds(),
+				dstRect, (fBilinear && !scale1x) ? B_FILTER_BITMAP_BILINEAR : 0);
+		} else {
+			fXbrParams.output = (uint8*)fBufferBitmap4x->Bits();
+			fXbrParams.outPitch = fBufferBitmap4x->BytesPerRow();
+			xbr_filter_xbr4x(&fXbrParams);
+			fBufferOffscreenView->DrawBitmap(fBufferBitmap4x, fBufferBitmap4x->Bounds(),
+				dstRect, (fBilinear && !scale1x) ? B_FILTER_BITMAP_BILINEAR : 0);
+		}
+	} else {
+		fBufferOffscreenView->DrawBitmap(fBufferBitmap, fBufferBitmap->Bounds(),
+			dstRect, (fBilinear && !scale1x) ? B_FILTER_BITMAP_BILINEAR : 0);
+	}
+
+	if (fSmartBorder) {
+		uint32 *bmp = (uint32*)fBufferOffscreenBitmap->Bits();
+		uint32 *endBuffer = bmp + (fBufferOffscreenBitmap->BitsLength() / 4);
+		int32 rowSize = fBufferOffscreenBitmap->BytesPerRow() / 4;
+		if (kx > ky) {
+			for (int y = 0; y < bmpRect.Height() + 1; y++) {
+				uint32 value = bmp[y * rowSize + (uint32)dstRect.left + 1];
+				uint32 *dst = bmp + y * rowSize;
+				memset32(dst, value, MIN((uint32)dstRect.left + 1, endBuffer - dst));
+				value = bmp[y * rowSize + (uint32)dstRect.right - 1];
+				dst = bmp + y * rowSize + (uint32)dstRect.right;
+				memset32(dst, value, MIN(rowSize - (uint32)dstRect.right, endBuffer - dst));
+			}
+		} else {
+			uint32 topColor = bmp[int32(dstRect.top + 0.5) * rowSize];
+			uint32 bottomColor = bmp[int32(dstRect.bottom - 0.5) * rowSize];
+			memset32(bmp, topColor, int32(dstRect.top + 0.5) * rowSize);
+			uint32 *dst = bmp + int32(dstRect.bottom + 0.5) * rowSize;
+			memset32(dst, bottomColor, MIN(int32(rect.bottom - dstRect.bottom + 1) * rowSize, endBuffer - dst));
+		}
+	}
+
+	DrawBitmap(fBufferOffscreenBitmap);
+	fBufferOffscreenBitmap->Unlock();
+}
+
+void
+SurfaceView::ResizeOffscreenBitmap(int width, int height)
+{
+	if (((int)fBufferOffscreenBitmap->Bounds().Width()) == width &&
+		((int)fBufferOffscreenBitmap->Bounds().Height()) == height) {
+		return;
+	}
+
+	fBufferOffscreenBitmap->RemoveChild(fBufferOffscreenView);
+	delete fBufferOffscreenBitmap;
+
+	fBufferOffscreenView->ResizeTo(width, height);
+	fBufferOffscreenBitmap = new BBitmap(BRect(0, 0, width, height), B_RGB32, true);
+	fBufferOffscreenBitmap->AddChild(fBufferOffscreenView);
+}
+
+}
diff --git a/platform/haiku/haiku_surface.h b/platform/haiku/haiku_surface.h
new file mode 100644
index 0000000..84d5993
--- /dev/null
+++ b/platform/haiku/haiku_surface.h
@@ -0,0 +1,91 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _HAIKU_SURFACE_VIEW_H
+#define _HAIKU_SURFACE_VIEW_H
+
+#include <stdio.h>
+
+#include <AppKit.h>
+#include <KernelKit.h>
+#include <InterfaceKit.h>
+#include <Cursor.h>
+#include <game/WindowScreen.h>
+
+#include "haiku_filters.h"
+
+namespace xPlatform
+{
+
+const uint32 kRepaintEvent = 'RPNT';
+
+class SurfaceView : public BView 
+{
+ public:
+							SurfaceView(BRect rect, int width, int height);
+							~SurfaceView();
+
+		virtual void		MouseDown(BPoint point);
+		virtual void		MouseUp(BPoint point);
+		virtual void		MouseMoved(BPoint p, uint32 transit, const BMessage *message);
+		virtual void		MessageReceived(BMessage *msg);
+		virtual	void		AttachedToWindow();
+		virtual void		Draw(BRect r);
+
+		void				LockBuffer() { fBufferBitmap->Lock(); }
+		void				UnlockBuffer() { fBufferBitmap->Unlock(); }
+		uint32*				GetBuffer() { return (uint32*)fBufferBitmap->Bits(); }
+		uint32				GetBufferSize() { return fBufferBitmap->BitsLength(); }
+
+		void				EnableBilinear(bool enabled) {fBilinear = enabled; }
+		void				EnableXBR(bool enabled) {fXBRFiltering = enabled; }
+		void				EnableSmartBorder(bool enabled) {fSmartBorder = enabled; }
+		void				EnableMouseGrab(bool enabled);
+
+		int					Width() { return fPixelBufferWidth; }
+		int					Height() { return fPixelBufferHeight; }
+
+ private:
+		void				ResizeOffscreenBitmap(int width, int height);
+ 		void 				Repaint();
+
+ 		BMessageRunner*		fTimerMessageRunner;
+
+ 		BView*				fBufferOffscreenView;
+		BBitmap*			fBufferOffscreenBitmap;
+		BBitmap*			fBufferBitmap;
+		BBitmap*			fBufferBitmap2x;
+		BBitmap*			fBufferBitmap3x;
+		BBitmap*			fBufferBitmap4x;
+
+ 		int					fPixelBufferWidth;
+ 		int					fPixelBufferHeight;
+
+ 		bool				fBilinear;
+ 		bool				fXBRFiltering;
+ 		bool				fSmartBorder;
+ 		bool				fMouseGrab;
+
+ 		uint32				fLastMouseButtons;
+
+		xbr_data*			fXbrData;
+		xbr_params 			fXbrParams;
+};
+
+}
+#endif
diff --git a/platform/haiku/haiku_video.cpp b/platform/haiku/haiku_video.cpp
new file mode 100644
index 0000000..55ffe57
--- /dev/null
+++ b/platform/haiku/haiku_video.cpp
@@ -0,0 +1,96 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../ui/ui.h"
+
+#include "haiku_window.h"
+
+namespace xPlatform
+{
+
+static HaikuPlatformWindow* window = NULL;
+static bigtime_t lastRepaintTime;
+
+static inline dword BGRX(byte r, byte g, byte b)
+{
+	return (r << 16) | (g << 8) | b;
+}
+
+static struct eCachedColors
+{
+	eCachedColors()
+	{
+		const byte brightness = 200;
+		const byte bright_intensity = 55;
+		for(int c = 0; c < 16; ++c) {
+			byte i = c & 8 ? brightness + bright_intensity : brightness;
+			byte b = c & 1 ? i : 0;
+			byte r = c & 2 ? i : 0;
+			byte g = c & 4 ? i : 0;
+			items[c] = BGRX(r, g, b);
+		}
+	} dword items[16];
+} color_cache;
+
+bool InitVideo()
+{
+	window = new HaikuPlatformWindow(BRect(100, 100, 100 + 640, 100 + 515), xUi::WIDTH, xUi::HEIGHT,
+		Handler()->WindowCaption(), B_TITLED_WINDOW, 0);
+	window->Show();
+
+	lastRepaintTime = system_time();
+
+	return true;
+}
+
+void DoneVideo()
+{
+	window->Lock();
+	window->Quit();
+}
+
+void UpdateScreen()
+{
+	if (system_time() - lastRepaintTime < 1000000 / 50)
+		return;
+
+	window->View()->LockBuffer();
+
+	byte* data = (byte*)Handler()->VideoData();	
+	dword* hscr = (dword*)window->View()->GetBuffer(); 
+	byte* data_ui = (byte*)Handler()->VideoDataUI();
+
+	if(data_ui)	{
+		for(int y = 0; y < xUi::HEIGHT; ++y)
+			for(int x = 0; x < xUi::WIDTH; ++x) {
+				xUi::eRGBAColor c_ui = xUi::palette[*data_ui++];
+				xUi::eRGBAColor c = color_cache.items[*data++];
+				*hscr++ = BGRX((c.b >> c_ui.a) + c_ui.r, (c.g >> c_ui.a) + c_ui.g, (c.r >> c_ui.a) + c_ui.b);
+			}
+	} else {
+		for(int y = 0; y < xUi::HEIGHT; ++y)
+			for(int x = 0; x < xUi::WIDTH; ++x)
+				*hscr++ = color_cache.items[*data++];
+	}
+
+	window->View()->UnlockBuffer();
+	lastRepaintTime = system_time();
+}
+
+}
diff --git a/platform/haiku/haiku_web_window.cpp b/platform/haiku/haiku_web_window.cpp
new file mode 100644
index 0000000..db87012
--- /dev/null
+++ b/platform/haiku/haiku_web_window.cpp
@@ -0,0 +1,291 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../io.h"
+#include "../../tools/options.h"
+#include "../../options_common.h"
+#include "../../tools/io_select.h"
+
+#include "haiku_web_window.h"
+#include "haiku_list_item.h"
+
+#undef  B_TRANSLATION_CONTEXT
+#define B_TRANSLATION_CONTEXT "USPWebWindow"
+
+namespace xIo
+{
+	eFileSelect* FileSelectWEB(const char* path);
+	const char* FileSelectWEB_Open(const char* name);
+}
+
+namespace xPlatform
+{
+
+WebWindow::WebWindow(BRect frame, BWindow *win)
+: BWindow(frame, B_TRANSLATE("Open file from web" B_UTF8_ELLIPSIS), B_DOCUMENT_WINDOW_LOOK, B_MODAL_APP_WINDOW_FEEL, B_CLOSE_ON_ESCAPE),
+	fMainWindow(win)
+{
+	BFont font(be_plain_font);
+	font_height heighdata;
+	font.GetHeight(&heighdata);
+	float height = heighdata.ascent + heighdata.descent;
+
+	BMimeType folder("application/x-vnd.Be-directory");
+	BMimeType script("text/x-makefile");
+	BMimeType regular("application/octet-stream");
+	BMimeType zip("application/zip");
+
+	fFolderIcon = new BBitmap(BRect(0, 0, height, height), B_RGBA32);
+	fScriptIcon = new BBitmap(BRect(0, 0, height, height), B_RGBA32);
+	fRegularIcon = new BBitmap(BRect(0, 0, height, height), B_RGBA32);
+	fZipIcon = new BBitmap(BRect(0, 0, height, height), B_RGBA32);
+	fUpIcon = new BBitmap(BRect(0, 0, height, height), B_RGBA32);
+
+	folder.GetIcon(fFolderIcon, B_MINI_ICON);
+	script.GetIcon(fScriptIcon, B_MINI_ICON);
+	regular.GetIcon(fRegularIcon, B_MINI_ICON);
+	zip.GetIcon(fZipIcon, B_MINI_ICON);
+	
+	BResources trackerResource("/system/lib/libtracker.so");
+	size_t length = 0;
+	const void* data = trackerResource.LoadResource('VICN', 1044, &length);
+	BIconUtils::GetVectorIcon((uint8*)data, length, fUpIcon);
+	
+	if (find_directory(B_USER_SETTINGS_DIRECTORY, &fLastDownloadedPath) == B_OK)
+		fLastDownloadedPath.Append("USP");
+	else
+		fLastDownloadedPath.SetTo("/boot/home/config/settings/USP");
+	
+	fMenuBar = new BMenuBar("menu_bar", B_ITEMS_IN_ROW, B_INVALIDATE_AFTER_LAYOUT);
+	BMenu* menu = new BMenu(B_TRANSLATE("File"));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Open"), new BMessage(kFileInvocated), 'O'));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Download file"), new BMessage(kFileDownload), 'D'));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Open download folder"), new BMessage(kFileOpenDowloadFolder), 'J'));
+	fMenuBar->AddItem(menu);
+	menu->SetTargetForItems(this);
+
+	fPathPopupMenu = new BPopUpMenu("Root");
+	fPathMenuField = new BMenuField("path", "", fPathPopupMenu);
+	fPathMenuField->SetDivider(0);
+
+	fListView = new BListView("list view", B_SINGLE_SELECTION_LIST);
+	fListView->SetInvocationMessage(new BMessage(kFileInvocated));
+
+	fScrollView = new BScrollView("web scroll", fListView, 0, false, true);
+
+	fUpButton = new BButton("", new BMessage(kGoToParent));
+	fUpButton->SetIcon(fUpIcon, 0);
+	fUpButton->SetFlat(true);
+
+	fCancelButton = new BButton(B_TRANSLATE("Cancel"), new BMessage(kCancelButtonPush));
+	fOpenButton = new BButton(B_TRANSLATE("Open"), new BMessage(kOpenButtonPush));
+	fOpenButton->MakeDefault(true);
+	
+	BFont smallFont(be_plain_font);
+	smallFont.SetSize(ceilf(font.Size() * 0.75));
+	fStatusView = new BStringView("list status", B_TRANSLATE("items"));
+	fStatusView->SetFont(&smallFont, B_FONT_SIZE);
+	fStatusView->SetAlignment(B_ALIGN_LEFT);
+
+	fPath.SetTo("");
+
+	const float spacing = be_control_look->DefaultItemSpacing();
+
+	BGroupLayout* statusGroup = BLayoutBuilder::Group<>(B_VERTICAL, 0.0)
+		.Add(new BSeparatorView(B_HORIZONTAL, B_PLAIN_BORDER))
+		.Add(BLayoutBuilder::Group<>(B_HORIZONTAL, 0)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.Add(fStatusView)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.AddGlue()
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.SetInsets(0, 0, 0, 0))
+		.Add(new BSeparatorView(B_HORIZONTAL, B_PLAIN_BORDER))
+		.SetInsets(1, 0, 1, 0);
+
+	BLayoutBuilder::Group<>(this, B_VERTICAL, 0)
+		.Add(fMenuBar)
+		.Add(BLayoutBuilder::Group<>(B_VERTICAL, B_USE_DEFAULT_SPACING)
+			.AddGroup(B_HORIZONTAL, 0)
+				.Add(fUpButton)
+				.Add(fPathMenuField)
+				.AddGlue()
+				.AddGlue()
+				.AddGlue()
+				.AddGlue()
+			.End()
+			.AddGroup(B_VERTICAL, 0)
+				.Add(fScrollView)
+				.Add(statusGroup)
+			.End()
+			.AddGroup(B_HORIZONTAL, B_USE_DEFAULT_SPACING)
+				.AddGlue()
+				.Add(fCancelButton)
+				.Add(fOpenButton)
+				.AddStrut(B_USE_DEFAULT_SPACING)
+			.End()
+			.SetInsets(B_USE_WINDOW_SPACING))
+		.End();
+
+	SetSizeLimits(512, 2048, 320, 2048);
+
+	AddShortcut(B_UP_ARROW, 0, new BMessage(kGoToParent));
+	AddShortcut(B_DOWN_ARROW, 0, new BMessage(kFileInvocated));
+
+	CenterOnScreen();
+	UpdateList();
+}
+
+static int _StrICmp(const void* item1,	const void* item2)
+{
+	IconListItem *i1 = *((IconListItem**)item1);
+	IconListItem *i2 = *((IconListItem**)item2);
+	return strcasecmp(i1->GetLabel(), i2->GetLabel());
+}
+
+void
+WebWindow::UpdateList(void)
+{
+	fListView->MakeEmpty();
+	fPathPopupMenu->RemoveItems(0, fPathPopupMenu->CountItems(), true);
+
+	BList dirs;
+	xIo::eFileSelect* fs = xIo::FileSelectWEB(fPath.String());
+	for(; fs->Valid(); fs->Next()) {
+		if(fs->IsDir())
+			dirs.AddItem(new IconListItem(fFolderIcon, fs->Name(), B_DIRECTORY_NODE, 0, false));
+	}
+
+	BList files;
+	fs = xIo::FileSelectWEB(fPath.String());
+	for(; fs->Valid(); fs->Next()) {
+		if(fs->IsFile()) {
+			BString fileName(fs->Name());
+			BBitmap *icon = fRegularIcon;
+			if (fileName.IEndsWith(".zip") || fileName.IEndsWith(".rar"))
+				icon = fZipIcon;
+			if (fileName.IEndsWith(".rzx"))
+				icon = fScriptIcon;
+			files.AddItem(new IconListItem(icon, fs->Name(), B_FILE_NODE, 0, false));
+		}
+	}
+	dirs.SortItems(_StrICmp);
+	files.SortItems(_StrICmp);
+	fListView->AddList(&dirs);
+	fListView->AddList(&files);
+	
+	BStringList pathList;
+	fPath.Split("/", true, pathList);
+	BString path;
+	BMessage *message = new BMessage(kPathSelect);
+	message->AddString("path", path);
+	BMenuItem *item = new IconMenuListItem(fFolderIcon, "/", message);
+	fPathPopupMenu->AddItem(item);
+	for (int i = 0; i < pathList.CountStrings(); i++) {
+		message = new BMessage(kPathSelect);
+		path << pathList.StringAt(i) << "/";
+		message->AddString("path", path);
+		item = new IconMenuListItem(fFolderIcon, pathList.StringAt(i).String(), message);
+		fPathPopupMenu->AddItem(item);
+	}
+	item->SetMarked(true);
+
+	fUpButton->SetEnabled(pathList.CountStrings() != 0);
+
+	BString statusText;
+	statusText << " " << fListView->CountItems() << " " << B_TRANSLATE("items") << " ";
+	fStatusView->SetText(statusText);
+}
+
+void
+WebWindow::MessageReceived(BMessage *message)
+{
+	switch(message->what) {
+		case kCancelButtonPush:
+		{
+			Hide();
+			break;
+		}
+		case kGoToParent:
+		{
+			char parent[MAXPATHLEN];
+			xIo::GetPathParent(parent, fPath.String());
+			if(strlen(parent))
+				strcat(parent, "/");
+			fPath = parent;
+			UpdateList();
+			break;
+		}
+		case kPathSelect:
+		{
+			fPath = message->FindString("path");
+			UpdateList();
+			break;
+		}
+		case kFileOpenDowloadFolder:
+		{
+			BString path("open ");
+			path << "\"" << fLastDownloadedPath.Path() << "\"";
+			system(path.String());
+			break;
+		}
+		case kFileDownload:
+		case kOpenButtonPush:
+		case kFileInvocated:
+		{
+			int32 index = fListView->CurrentSelection();
+			if (index < 0)
+				break;
+			IconListItem *item = dynamic_cast<IconListItem*>(fListView->ItemAt(index));
+			if (item) {
+				if (item->GetData() == B_DIRECTORY_NODE) {
+					fPath << item->GetLabel() << "/";
+					UpdateList();
+				}
+				if (item->GetData() == B_FILE_NODE) {
+					BString file = fPath;
+					file << item->GetLabel();
+					const char *selected = xIo::FileSelectWEB_Open(file.String());
+					if (selected) {
+						if (message->what != kFileDownload) {
+							Handler()->OnOpenFile(selected);
+							Hide();
+						}
+						BPath file(selected);
+						file.GetParent(&fLastDownloadedPath);
+					}
+					break;
+				}
+			}
+			break;
+		}
+	default:
+		BWindow::MessageReceived(message);
+		break;
+	}
+}
+
+bool
+WebWindow::QuitRequested()
+{
+	Hide();
+	return false;
+}
+
+}
diff --git a/platform/haiku/haiku_web_window.h b/platform/haiku/haiku_web_window.h
new file mode 100644
index 0000000..fc9ddf2
--- /dev/null
+++ b/platform/haiku/haiku_web_window.h
@@ -0,0 +1,77 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _HAIKU_WEB_WINDOW_H
+#define _HAIKU_WEB_WINDOW_H
+
+#include <stdio.h>
+
+#include <AppKit.h>
+#include <InterfaceKit.h>
+#include <SupportKit.h>
+#include <StorageKit.h>
+#include <IconUtils.h>
+#include <ControlLook.h>
+#include <LayoutBuilder.h>
+#include <SeparatorView.h>
+#include <StringList.h>
+#include <Catalog.h>
+
+const uint32 kFileInvocated = 'SINV';
+const uint32 kFileDownload = 'FDNL';
+const uint32 kFileOpenDowloadFolder = 'ODNL';
+const uint32 kGoToParent = 'GOUP';
+const uint32 kPathSelect = 'PSEL';
+const uint32 kCancelButtonPush = 'BCAN';
+const uint32 kOpenButtonPush = 'BOPN';
+
+namespace xPlatform
+{
+
+class WebWindow : public BWindow
+{
+public:
+					WebWindow(BRect frame, BWindow *win);
+	virtual void 	MessageReceived(BMessage *msg);
+	virtual bool 	QuitRequested();
+private:
+	void 			UpdateList(void);
+
+	BString			fPath;
+	BPath			fLastDownloadedPath;
+
+	BMenuBar*		fMenuBar;
+	BListView*		fListView;
+	BStringView*	fStatusView;
+	BScrollView*	fScrollView;
+	BButton*		fUpButton;
+	BButton*		fCancelButton;
+	BButton*		fOpenButton;
+	BPopUpMenu*		fPathPopupMenu;
+	BMenuField*		fPathMenuField;
+	BWindow*		fMainWindow;
+	BBitmap*		fFolderIcon;
+	BBitmap*		fZipIcon;	
+	BBitmap*		fScriptIcon;
+	BBitmap*		fRegularIcon;
+	BBitmap*		fUpIcon;
+};
+
+}
+
+#endif
diff --git a/platform/haiku/haiku_window.cpp b/platform/haiku/haiku_window.cpp
new file mode 100644
index 0000000..a7d3c48
--- /dev/null
+++ b/platform/haiku/haiku_window.cpp
@@ -0,0 +1,1504 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "../platform.h"
+#include "../../tools/options.h"
+#include "../../options_common.h"
+#include "../../ui/ui.h"
+
+#include "haiku_app.h"
+#include "haiku_window.h"
+
+#undef  B_TRANSLATION_CONTEXT
+#define B_TRANSLATION_CONTEXT "USPWindow"
+
+namespace xPlatform
+{
+
+bool CheckJoystick();
+void VolumeAudio(float volume);
+
+static struct eOptionWindowState : public xOptions::eOptionString
+{
+	eOptionWindowState() { customizable = false; }
+	virtual const char* Name() const { return "window state"; }
+	const char* FormatStr() const { return "position(%d, %d); client_size(%d, %d)"; }
+} op_window_state;
+
+static struct eOptionKeyboardWindowState : public xOptions::eOptionString
+{
+	eOptionKeyboardWindowState() { customizable = false; }
+	virtual const char* Name() const { return "keyboard window state"; }
+	const char* FormatStr() const { return "position(%d, %d)"; }
+} op_keyboard_window_state;
+
+static struct eOptionFullScreen : public xOptions::eOptionBool
+{
+	eOptionFullScreen() { customizable = false; }
+	virtual const char* Name() const { return "full screen"; }
+} op_full_screen;
+
+static struct eOptionBilinear : public xOptions::eOptionBool
+{
+	eOptionBilinear() { customizable = false; }
+	virtual const char* Name() const { return "scale bilinear"; }
+} op_scale_bilinear;
+
+static struct eOptionXBRFiltering : public xOptions::eOptionBool
+{
+	eOptionXBRFiltering() { customizable = false; }
+	virtual const char* Name() const { return "xbr scale"; }
+} op_xbr_scale;
+
+static struct eOptionVirtualKeyboard : public xOptions::eOptionBool
+{
+	eOptionVirtualKeyboard() { customizable = false; }
+	virtual const char* Name() const { return "virtual keyboard"; }
+} op_virtual_keyboard;
+
+static struct eOptionSmartBorderDisabled : public xOptions::eOptionBool
+{
+	eOptionSmartBorderDisabled() { customizable = false; }
+	virtual const char* Name() const { return "smart border disabled"; }
+} op_smart_border_disabled;
+
+static bool UpdateBoolOption(BMenuItem *item, const char* name, bool toggle)
+{
+	xOptions::eOption<bool>* op = xOptions::eOption<bool>::Find(name);
+	if(op && toggle)
+		op->Change();
+	bool on = op && *op;
+	item->SetMarked(on);
+	return on;
+}
+
+HaikuPlatformWindow::HaikuPlatformWindow(BRect frame, int w, int h, const char* title, window_type type, uint32 flags)
+	: BWindow(frame, title, type, flags),
+	fScaleFactor(-1),
+	fOpenPanel(NULL),
+	fSavePanel(NULL),
+	fSaveScreenPanel(NULL),
+	fFullscreen(false),
+	fSkipScale(false),
+	fFiltering(false),
+	fXBRFiltering(false),
+	fKempsonMouseGrab(false),
+	fKeyboardWindow(NULL),
+	fWebWindow(NULL),
+	fLastPressedKey(0),
+	fStateInfoTimer(0)
+{
+	fMenuBar = new BMenuBar("menu_bar", B_ITEMS_IN_ROW, B_INVALIDATE_AFTER_LAYOUT);
+	BMenu* menu = new BMenu(B_TRANSLATE("File"));
+	BMenuItem *item = new BMenuItem(BRecentFilesList::NewFileListMenu(B_TRANSLATE("Open" B_UTF8_ELLIPSIS),
+		NULL, NULL, this, 9, true, NULL, APP_SIGNATURE),
+		new BMessage(kFileOpen));
+	item->SetShortcut('O', 0);
+	menu->AddItem(item);	
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Open from web" B_UTF8_ELLIPSIS), new BMessage(kFileOpenWeb)));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Save" B_UTF8_ELLIPSIS), new BMessage(kFileSave), 'S'));
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Save screenshot" B_UTF8_ELLIPSIS), new BMessage(kFileSaveScreen)));
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Quick load"), new BMessage(kFileQuickOpen), 'O', B_SHIFT_KEY));
+	fQuickSaveMenuItem = new BMenuItem(B_TRANSLATE("Quick save"), new BMessage(kFileQuickSave), 'S', B_SHIFT_KEY);
+	fQuickSaveMenuItem->SetEnabled(false);
+	menu->AddItem(fQuickSaveMenuItem);
+	fQuickSaveSlotMenu = new BMenu(B_TRANSLATE("Save slot"));
+	for (int slot = 1; slot < 10; slot++) {
+		BMessage *message =  new BMessage(kFileQuickSaveSlot);
+		message->AddInt32("slot", slot);
+		BString title;
+		title << slot;
+		fQuickSaveSlotMenu->AddItem(new BMenuItem(title, message));
+	}
+	fQuickSaveSlotMenu->SetRadioMode(true);
+	menu->AddItem(fQuickSaveSlotMenu);
+	menu->AddSeparatorItem();
+	fAutoPlayMenuItem = new BMenuItem(B_TRANSLATE("Auto launch programs"), new BMessage(kFileAutoPlay));
+	menu->AddItem(fAutoPlayMenuItem);
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Quit"), new BMessage(B_QUIT_REQUESTED), 'Q'));
+	fMenuBar->AddItem(menu);
+	menu = new BMenu(B_TRANSLATE("View"));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("100% scale"), new BMessage(kViewScale1x), '1'));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("200% scale"), new BMessage(kViewScale2x), '2'));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("300% scale"), new BMessage(kViewScale3x), '3'));
+	menu->AddSeparatorItem();
+	fFilteringMenu = new BMenu(B_TRANSLATE("Filtering"));
+	fFilteringMenuItem = new BMenuItem(B_TRANSLATE("Bilinear"), new BMessage(kViewFiltering));
+	fFilteringMenu->AddItem(fFilteringMenuItem);
+	fXBRFilteringMenuItem = new BMenuItem(B_TRANSLATE("XBR"), new BMessage(kViewXBRFiltering));
+	fFilteringMenu->AddItem(fXBRFilteringMenuItem);
+	menu->AddItem(fFilteringMenu);
+	fSmartBorderScaleMenuItem = new BMenuItem(B_TRANSLATE("Smart border scale"), new BMessage(kViewSmartBorder));
+	menu->AddItem(fSmartBorderScaleMenuItem);
+	menu->AddSeparatorItem();
+	fVirtualKeyboardMenuItem = new BMenuItem(B_TRANSLATE("Virtual keyboard"), new BMessage(kHelpKeyboardLayout));
+	menu->AddItem(fVirtualKeyboardMenuItem);
+	menu->AddItem(new BMenuItem(B_TRANSLATE("OSD keyboard"), new BMessage(kViewOnScreenKeyboard), 'K'));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("OSD menu"), new BMessage(kViewOnScreenMenu)));
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Full screen"), new BMessage(kViewFullScreen), B_ENTER));
+	fMenuBar->AddItem(menu);
+	menu = new BMenu(B_TRANSLATE("Device"));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Start / Stop tape"), new BMessage(kDeviceStartStopTape)));
+	fFastTapeMenuItem = new BMenuItem(B_TRANSLATE("Tape fast"), new BMessage(kDeviceFastTape));
+	menu->AddItem(fFastTapeMenuItem);
+	menu->AddSeparatorItem();
+	fBetaDiskMenu = new BMenu(B_TRANSLATE("Beta disk drive"));
+	fBetaDiskMenu->AddItem(new BMenuItem("A", new BMessage(kDeviceBetaDiskA)));
+	fBetaDiskMenu->AddItem(new BMenuItem("B", new BMessage(kDeviceBetaDiskB)));
+	fBetaDiskMenu->AddItem(new BMenuItem("C", new BMessage(kDeviceBetaDiskC)));
+	fBetaDiskMenu->AddItem(new BMenuItem("D", new BMessage(kDeviceBetaDiskD)));
+	menu->AddItem(fBetaDiskMenu);
+	menu->AddSeparatorItem();
+	fSoundChipMenu = new BMenu(B_TRANSLATE("Sound chip"));
+	fSoundChipMenu->AddItem(new BMenuItem(B_TRANSLATE("AY-3-8910"), new BMessage(kDeviceSoundChipAY)));
+	fSoundChipMenu->AddItem(new BMenuItem(B_TRANSLATE("YM2149F"), new BMessage(kDeviceSoundChipYM)));
+	menu->AddItem(fSoundChipMenu);
+	fAYStereoMenu = new BMenu(B_TRANSLATE("AY Stereo"));
+	fAYStereoMenu->AddItem(new BMenuItem("ABC", new BMessage(kDeviceSoundChipStereoABC)));
+	fAYStereoMenu->AddItem(new BMenuItem("ACB", new BMessage(kDeviceSoundChipStereoACB)));
+	fAYStereoMenu->AddItem(new BMenuItem("BAC", new BMessage(kDeviceSoundChipStereoBAC)));
+	fAYStereoMenu->AddItem(new BMenuItem("BCA", new BMessage(kDeviceSoundChipStereoBCA)));
+	fAYStereoMenu->AddItem(new BMenuItem("CAB", new BMessage(kDeviceSoundChipStereoCAB)));
+	fAYStereoMenu->AddItem(new BMenuItem("CBA", new BMessage(kDeviceSoundChipStereoCBA)));
+	fAYStereoMenu->AddItem(new BMenuItem(B_TRANSLATE("Mono"), new BMessage(kDeviceSoundChipStereoMono)));
+	fAYStereoMenu->SetRadioMode(true);
+	menu->AddItem(fAYStereoMenu);
+	fSoundVolumeMenu = new BMenu(B_TRANSLATE("Volume"));
+	for (int volume = 0; volume <= 10; volume++) {
+		BMessage *message =  new BMessage(kDeviceSoundVolume);
+		message->AddInt32("volume", volume);
+		BString title;
+		if (volume == 0)
+			title = B_TRANSLATE("Mute");
+		else
+			title << (volume * 10) << " %";
+		fSoundVolumeMenu->AddItem(new BMenuItem(title, message));
+	}
+	fSoundVolumeMenu->SetRadioMode(true);
+	menu->AddItem(fSoundVolumeMenu);
+	menu->AddSeparatorItem();
+	fJoystickMenu = new BMenu(B_TRANSLATE("Joystick"));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("Cursor"), new BMessage(kDeviceJoystickCursor)));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("Cursor + Enter"), new BMessage(kDeviceJoystickCursorEnter)));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("Kempston"), new BMessage(kDeviceJoystickKempston)));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("Sinclair 2"), new BMessage(kDeviceJoystickSinclair2)));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("QAOPM"), new BMessage(kDeviceJoystickQAOPM)));
+	fJoystickMenu->AddItem(new BMenuItem(B_TRANSLATE("QAOP + Space"), new BMessage(kDeviceJoystickQAOPSpace)));
+	fJoystickMenu->SetRadioMode(true);
+	menu->AddItem(fJoystickMenu);
+	menu->AddSeparatorItem();
+	fKempstonMouseGrabMenuItem = new BMenuItem(B_TRANSLATE("Kempson mouse grab"), new BMessage(kDeviceKempsonMouse), 'G');
+	menu->AddItem(fKempstonMouseGrabMenuItem);
+	menu->AddSeparatorItem();
+	f48kModeMenuItem = new BMenuItem(B_TRANSLATE("Mode 48k"), new BMessage(kDeviceMode48k), 'M');
+	menu->AddItem(f48kModeMenuItem);
+	menu->AddSeparatorItem();
+	fPauseMenuItem = new BMenuItem(B_TRANSLATE("Pause"), new BMessage(kDevicePause), 'P');
+	menu->AddItem(fPauseMenuItem);
+	fResetToServiceROMMenuItem = new BMenuItem(B_TRANSLATE("Reset to service ROM"), new BMessage(kDeviceResetToServiceROM));
+	menu->AddItem(fResetToServiceROMMenuItem);
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Reset"), new BMessage(kDeviceReset), 'R'));
+	fMenuBar->AddItem(menu);
+	menu = new BMenu(B_TRANSLATE("Help"));
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Register filetypes"), new BMessage(kHelpRegisterMime)));
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("Visit homepage"), new BMessage(kHelpOpenHomePage)));
+	menu->AddSeparatorItem();
+	menu->AddItem(new BMenuItem(B_TRANSLATE("About"), new BMessage(B_ABOUT_REQUESTED)));
+	fMenuBar->AddItem(menu);
+
+	AddShortcut('F', B_COMMAND_KEY, new BMessage(kViewFullScreen));
+
+	fView = new SurfaceView(Bounds(), w, h);
+	fView->SetExplicitMinSize(BSize(xUi::WIDTH, xUi::HEIGHT));
+	fView->SetViewColor(B_TRANSPARENT_COLOR);
+
+	BFont font(be_plain_font);
+	font.SetSize(ceilf(font.Size() * 0.75));
+
+	fStatusMode = new BStringView("status", B_TRANSLATE("128k"));
+	fStatusMode->SetFont(&font, B_FONT_SIZE);
+	fStatusMode->SetAlignment(B_ALIGN_LEFT);
+
+	fStatusDisk = new BStringView("disk status", "[A] b c d");
+	fStatusDisk->SetFont(&font, B_FONT_SIZE);
+	fStatusDisk->SetAlignment(B_ALIGN_LEFT);
+
+	fStatusJoystick = new BStringView("joystick status", B_TRANSLATE("Cursor"));
+	fStatusJoystick->SetFont(&font, B_FONT_SIZE);
+	fStatusJoystick->SetAlignment(B_ALIGN_LEFT);
+
+	fStatusSound = new BStringView("sound status", "AY:ABC");
+	fStatusSound->SetFont(&font, B_FONT_SIZE);
+	fStatusSound->SetAlignment(B_ALIGN_LEFT);
+
+	fStatusInfo = new BStringView("status info", B_TRANSLATE("Ready"));
+	fStatusInfo->SetFont(&font, B_FONT_SIZE);
+	fStatusInfo->SetAlignment(B_ALIGN_LEFT);
+
+	const float kElementSpacing = 2;
+
+	BGroupLayout* statusGroup = BLayoutBuilder::Group<>(B_VERTICAL, 0.0)
+		.Add(new BSeparatorView(B_HORIZONTAL, B_PLAIN_BORDER))
+		.Add(BLayoutBuilder::Group<>(B_HORIZONTAL, kElementSpacing)
+			.Add(fStatusMode)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.Add(fStatusDisk)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.Add(fStatusJoystick)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.Add(fStatusSound)
+			.Add(new BSeparatorView(B_VERTICAL, B_PLAIN_BORDER))
+			.Add(fStatusInfo)
+			.AddGlue()
+			.SetInsets(kElementSpacing, 0, kElementSpacing, 0)
+		);
+
+	const float spacing = be_control_look->DefaultItemSpacing();
+	BGroupLayout* pathLayout;
+	BLayoutBuilder::Group<>(this, B_VERTICAL, 0)
+		.Add(fMenuBar)
+		.AddGroup(B_VERTICAL, B_USE_ITEM_SPACING)
+			.Add(fView)		
+		.End()
+		.Add(statusGroup);
+
+	VolumeAudio(OpVolume());
+	UpdateMenus();
+	UpdateCursor();
+
+	fTimerMessageRunner = new BMessageRunner(BMessenger(this), new BMessage(kPulseEvent), 1000000);
+}
+
+HaikuPlatformWindow::~HaikuPlatformWindow()
+{
+	char buf[PATH_MAX];
+
+	if (!fFullscreen) {
+		int x = Frame().left;
+		int y = Frame().top;
+		int w = Frame().Width();
+		int h = Frame().Height();
+
+		sprintf(buf, op_window_state.FormatStr(), x, y, w, h);
+		op_window_state.Value(buf);
+	}
+
+	if (fKeyboardWindow) {
+		int x = fKeyboardWindow->Frame().left;
+		int y = fKeyboardWindow->Frame().top;
+
+		sprintf(buf, op_keyboard_window_state.FormatStr(), x, y);
+		op_keyboard_window_state.Value(buf);
+
+		fKeyboardWindow->Lock();
+		fKeyboardWindow->Quit();
+	}
+	
+	delete fTimerMessageRunner;
+}
+
+void
+HaikuPlatformWindow::SetStatusInfo(const char *text, int time, color_which color)
+{
+	fStateInfoTimer = time;
+	fStatusInfo->SetHighColor(ui_color(color));
+	fStatusInfo->SetText(text);
+}
+
+void
+HaikuPlatformWindow::UpdateMenus()
+{
+	xOptions::eOption<bool>* op_reset_to_service_rom = xOptions::eOption<bool>::Find("reset to service rom");
+	xOptions::eOption<bool>* op_mode_48k = xOptions::eOption<bool>::Find("mode 48k");
+	xOptions::eOption<bool>* op_auto_play = xOptions::eOption<bool>::Find("auto play image");
+	xOptions::eOption<bool>* op_tape_fast = xOptions::eOption<bool>::Find("fast tape");
+	xOptions::eOption<int>* op_sound_chip = xOptions::eOption<int>::Find("sound chip");
+	xOptions::eOption<int>* op_ay_stereo = xOptions::eOption<int>::Find("ay stereo");
+	xOptions::eOption<int>* op_save_slot = xOptions::eOption<int>::Find("save slot");
+
+	eDrive drive = OpDrive();
+	fBetaDiskMenu->FindItem(kDeviceBetaDiskA)->SetMarked(drive == D_A);
+	fBetaDiskMenu->FindItem(kDeviceBetaDiskB)->SetMarked(drive == D_B);
+	fBetaDiskMenu->FindItem(kDeviceBetaDiskC)->SetMarked(drive == D_C);
+	fBetaDiskMenu->FindItem(kDeviceBetaDiskD)->SetMarked(drive == D_D);
+
+	f48kModeMenuItem->SetMarked(op_mode_48k && *op_mode_48k);
+	fResetToServiceROMMenuItem->SetMarked(op_reset_to_service_rom && *op_reset_to_service_rom);
+	fFilteringMenuItem->SetMarked(op_scale_bilinear);
+	fXBRFilteringMenuItem->SetMarked(op_xbr_scale);
+	fSmartBorderScaleMenuItem->SetMarked(!op_smart_border_disabled);
+	fVirtualKeyboardMenuItem->SetMarked(op_virtual_keyboard);
+	fAutoPlayMenuItem->SetMarked(op_auto_play && *op_auto_play);
+	fFastTapeMenuItem->SetMarked(op_tape_fast && *op_tape_fast);
+
+	if (op_save_slot) {
+		int index = *op_save_slot - 1;		
+		if (BMenuItem *item = fQuickSaveSlotMenu->ItemAt(index))
+			item->SetMarked(true);
+	}
+
+	if (op_sound_chip) {
+		fSoundChipMenu->FindItem(kDeviceSoundChipAY)->SetMarked(*op_sound_chip == 0);
+		fSoundChipMenu->FindItem(kDeviceSoundChipYM)->SetMarked(*op_sound_chip == 1);
+	}
+
+	if (op_ay_stereo) {
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoABC)->SetMarked(*op_ay_stereo == 0);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoACB)->SetMarked(*op_ay_stereo == 1);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoBAC)->SetMarked(*op_ay_stereo == 2);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoBCA)->SetMarked(*op_ay_stereo == 3);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoCAB)->SetMarked(*op_ay_stereo == 4);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoCBA)->SetMarked(*op_ay_stereo == 5);
+		fAYStereoMenu->FindItem(kDeviceSoundChipStereoMono)->SetMarked(*op_ay_stereo == 6);
+	}
+
+	if (BMenuItem *item = fSoundVolumeMenu->ItemAt(OpVolume()))
+		item->SetMarked(true);
+
+	eJoystick joy = OpJoystick();
+	fJoystickMenu->FindItem(kDeviceJoystickCursor)->SetMarked(joy == J_CURSOR);
+	fJoystickMenu->FindItem(kDeviceJoystickCursorEnter)->SetMarked(joy == J_CURSORENTER);
+	fJoystickMenu->FindItem(kDeviceJoystickKempston)->SetMarked(joy == J_KEMPSTON);
+	fJoystickMenu->FindItem(kDeviceJoystickSinclair2)->SetMarked(joy == J_SINCLAIR2);
+	fJoystickMenu->FindItem(kDeviceJoystickQAOPM)->SetMarked(joy == J_QAOPM);
+	fJoystickMenu->FindItem(kDeviceJoystickQAOPSpace)->SetMarked(joy == J_QAOPSPACE);
+
+	fKempstonMouseGrabMenuItem->SetMarked(fKempsonMouseGrab);
+
+	// update status line
+	if (op_mode_48k && *op_mode_48k)
+		fStatusMode->SetText(B_TRANSLATE("48k"));
+	else
+		fStatusMode->SetText(B_TRANSLATE("128k"));
+
+	if (drive == D_A)fStatusDisk->SetText("[A] b c d");
+	if (drive == D_B)fStatusDisk->SetText("a [B] c d");
+	if (drive == D_C)fStatusDisk->SetText("a b [C] d");
+	if (drive == D_D)fStatusDisk->SetText("a b c [D]");
+
+	if (BMenuItem *item = fJoystickMenu->FindMarked())
+		fStatusJoystick->SetText(item->Label());
+
+	BString soundStatus;
+	soundStatus += (op_sound_chip && *op_sound_chip == 0) ? "AY: " : "YM: ";
+
+	if (BMenuItem *item = fAYStereoMenu->FindMarked())
+		soundStatus << item->Label();
+	else
+		soundStatus << "ABC";
+
+	BString volumeTxt;
+	volumeTxt << (OpVolume() * 10) << "%";
+	soundStatus += " ";
+	soundStatus += ((OpVolume() == 0) ? B_TRANSLATE("Mute") : volumeTxt.String());
+	fStatusSound->SetText(soundStatus);
+}
+
+void
+HaikuPlatformWindow::UpdateCursor()
+{
+	BCursor cursor((fFullscreen || fKempsonMouseGrab) ? B_CURSOR_ID_NO_CURSOR : B_CURSOR_ID_SYSTEM_DEFAULT);
+	fView->SetViewCursor(&cursor);
+}
+
+void
+HaikuPlatformWindow::ResizeToScale(int scale)
+{
+	if (scale == 0) {
+		fSkipScale = true;
+		if (fFullscreen) {
+			MoveTo(fLastRect.left, fLastRect.top);
+			ResizeTo(fLastRect.Width(), fLastRect.Height());
+		} else {
+			fLastRect = Frame();
+			BScreen scr(B_MAIN_SCREEN_ID);
+			float height = fMenuBar->Bounds().Height() + fStatusMode->Bounds().Height() + 2;
+			MoveTo(0, -(fMenuBar->Bounds().Height() + 1));
+			ResizeTo(scr.Frame().Width() + 1, scr.Frame().Height() + height + 2);
+		}
+		fScaleFactor = -1;
+		fFullscreen = !fFullscreen;
+		op_full_screen.Set(fFullscreen);
+		UpdateCursor();
+	}
+	if (scale >= 1 && scale <= 3) {
+		if (scale != fScaleFactor) {
+			fSkipScale = true;
+
+			if (fFullscreen)
+				MoveTo(fLastRect.left, fLastRect.top);
+
+			int w = xUi::WIDTH * scale;
+			int h = xUi::HEIGHT * scale;
+			h += fMenuBar->Bounds().Height() + fStatusMode->Bounds().Height() + 2;
+			ResizeTo(w + 1, h + 1);
+			fScaleFactor = scale;
+			fFullscreen = false;
+		}
+	}
+}
+
+void
+HaikuPlatformWindow::InstallMimeType(const char *_mime, const char *_icon, const char *_description, const char *_exts)
+{
+	// install mime type of document
+	BMimeType mime(_mime);
+	status_t ret = mime.InitCheck();
+	if (ret != B_OK) {
+		fprintf(stderr, B_TRANSLATE("Could not init native document mime type (%s): %s.\n"),
+			_mime, strerror(ret));
+		return;
+	}
+
+	ret = mime.Install();
+	if (ret != B_OK && ret != B_FILE_EXISTS) {
+		fprintf(stderr, B_TRANSLATE("Could not install native document mime type (%s): %s.\n"),
+			_mime, strerror(ret));
+		return;
+	}
+
+	mime.SetPreferredApp(APP_SIGNATURE);
+	mime.SetShortDescription(_description);
+
+	// set extensions
+	BString extensions(_exts);
+	BStringList extList;
+	extensions.Split(",", true, extList);
+	BMessage message;
+	for (int i = 0; i < extList.CountStrings(); i++)
+		message.AddString("extensions", extList.StringAt(i));
+	mime.SetFileExtensions(&message);
+
+	// set mime icon
+	BResources* resources = be_app->AppResources();
+	if (resources != NULL) {
+		size_t size;
+		const void* iconData = resources->LoadResource('VICN', _icon, &size);
+		if (iconData != NULL && size > 0) {
+			if (mime.SetIcon(reinterpret_cast<const uint8*>(iconData), size) != B_OK)
+				fprintf(stderr, B_TRANSLATE("Could not set vector icon of mime type.\n"));
+		} else {
+			fprintf(stderr, B_TRANSLATE("Could not find icon in app resources (data: %p, size: %ld).\n"), iconData, size);
+		}
+	} else
+		fprintf(stderr, B_TRANSLATE("Could not find app resources.\n"));
+}
+
+void 
+HaikuPlatformWindow::MessageReceived(BMessage *message)
+{
+	if (message->WasDropped())
+		message->what = B_REFS_RECEIVED;
+
+	switch (message->what) {
+		case kPulseEvent:
+		{
+			if (fStateInfoTimer > 0) {
+				fStateInfoTimer--;
+				if (fStateInfoTimer == 0)
+					SetStatusInfo(B_TRANSLATE("Ready"));
+			}
+			break;
+		}
+		case kFileOpen:
+		{
+			if (!fOpenPanel) {
+				fOpenPanel = new BFilePanel(B_OPEN_PANEL, NULL, NULL, 0, true, NULL, NULL, true, true);
+				fOpenPanel->Window()->SetTitle(B_TRANSLATE("Open file" B_UTF8_ELLIPSIS));
+				fOpenPanel->SetTarget(this);
+			}
+			Handler()->VideoPaused(true);
+			fOpenPanel->Show();
+			break;
+		}
+		case kFileOpenWeb:
+		{
+			if (!fWebWindow) {
+				fWebWindow = new WebWindow(BRect(100, 100, 640, 480), this);
+			}
+			if (fWebWindow->IsHidden())
+				fWebWindow->Show();
+			break;
+		}
+		case kFileQuickOpen:
+		{
+			using namespace xOptions;
+			eOption<bool>* loadState = eOption<bool>::Find("load state");
+			if(loadState)
+				loadState->Change();
+			if (*loadState) {
+				SetStatusInfo(B_TRANSLATE("Quick load OK"), STATUS_TIME_DEFAULT);
+				fQuickSaveMenuItem->SetEnabled(true);
+			} else
+				SetStatusInfo(B_TRANSLATE("Quick load FAILED"), STATUS_TIME_DEFAULT, B_FAILURE_COLOR);
+			break;
+		}
+		case kFileQuickSave:
+		{
+			using namespace xOptions;
+			eOption<bool>* saveState = eOption<bool>::Find("save state");
+			if(saveState) {
+				Handler()->VideoPaused(true);
+				saveState->Change();
+				Handler()->VideoPaused(false);
+			}
+			if (*saveState)
+				SetStatusInfo(B_TRANSLATE("Quick save OK"), STATUS_TIME_DEFAULT);
+			else
+				SetStatusInfo(B_TRANSLATE("Quick save FAILED"), STATUS_TIME_DEFAULT, B_FAILURE_COLOR);
+			break;
+		}
+		case kFileQuickSaveSlot:
+		{
+			using namespace xOptions;
+			eOption<int>* saveStateSlot = eOption<int>::Find("save slot");
+			int32 slot = message->FindInt32("slot");
+			if(saveStateSlot)
+				saveStateSlot->Set(slot);
+			UpdateMenus();
+			break;
+		}
+		case kFileSave:
+		{
+			if (!fSavePanel) {
+				fSavePanel = new BFilePanel(B_SAVE_PANEL, NULL, NULL, 0, true, NULL, NULL, true, true);
+				fSavePanel->Window()->SetTitle(B_TRANSLATE("Save SNA snapshot" B_UTF8_ELLIPSIS));
+				fSavePanel->SetTarget(this);
+			}
+			Handler()->VideoPaused(true);
+			fSavePanel->Show();
+			break;
+		}
+		case kFileSaveScreen:
+		{
+			if (!fSaveScreenPanel) {
+				fSaveScreenPanel = new BFilePanel(B_SAVE_PANEL, NULL, NULL, 0, true, NULL, NULL, true, true);
+				fSaveScreenPanel->SetMessage(new BMessage(B_SAVE_SCREEN_REQUESTED));
+				fSaveScreenPanel->Window()->SetTitle(B_TRANSLATE("Save screenshot" B_UTF8_ELLIPSIS));
+				fSaveScreenPanel->SetTarget(this);
+			}
+			Handler()->VideoPaused(true);
+			fSaveScreenPanel->Show();
+			break;
+		}
+		case kFileAutoPlay:
+		{
+			if(UpdateBoolOption(fAutoPlayMenuItem, "auto play image", true)) {
+				SetStatusInfo(B_TRANSLATE("Auto launch on"), STATUS_TIME_DEFAULT);
+			} else {
+				SetStatusInfo(B_TRANSLATE("Auto launch off"), STATUS_TIME_DEFAULT);
+			}
+			UpdateMenus();
+			break;
+		}
+		case B_REFS_RECEIVED:
+		{
+			entry_ref ref;
+			if (message->FindRef("refs", 0, &ref) == B_OK) {
+				BEntry entry(&ref, true);
+				if (!entry.Exists())
+					break;
+				BPath path;
+				if (entry.GetPath(&path) != B_OK)
+					break;
+
+				BString text;
+				bool status = Handler()->OnOpenFile(path.Path());
+				if (status) {
+					text << B_TRANSLATE("File was successfully opened");
+					fQuickSaveMenuItem->SetEnabled(true);
+				} else
+					text << B_TRANSLATE("Could not open file");
+
+				SetStatusInfo(text.String(), STATUS_TIME_DEFAULT, status ? B_PANEL_TEXT_COLOR : B_FAILURE_COLOR);
+			}
+			break;
+		}
+		case B_SAVE_REQUESTED:
+		{
+			entry_ref dir;
+			BDirectory directory;
+			if (message->FindRef("directory", &dir) == B_OK) {
+				BString name = message->FindString("name");
+				directory.SetTo(&dir);
+				if (directory.InitCheck() == B_NO_ERROR) {
+					BPath pathname(&dir);
+					if (!name.IEndsWith(".sna"))
+						name += ".sna";
+					pathname.Append(name);
+					if(Handler()->OnSaveFile(pathname.Path()))
+						SetStatusInfo(B_TRANSLATE("File save OK"), STATUS_TIME_DEFAULT);
+					else
+						SetStatusInfo(B_TRANSLATE("File save FAILED"), STATUS_TIME_DEFAULT, B_FAILURE_COLOR);
+				}
+			}
+			break;
+		}
+		case B_SAVE_SCREEN_REQUESTED:
+		{
+			entry_ref dir;
+			BDirectory directory;
+			if (message->FindRef("directory", &dir) == B_OK) {
+				BString name = message->FindString("name");
+				directory.SetTo(&dir);
+				if (directory.InitCheck() == B_NO_ERROR) {
+					BPath pathname(&dir);
+					if (!name.IEndsWith(".png"))
+						name += ".png";
+					pathname.Append(name);
+					if (Handler()->OnSaveFile(pathname.Path()))
+						SetStatusInfo(B_TRANSLATE("Screenshot save OK"), STATUS_TIME_DEFAULT);
+					else
+						SetStatusInfo(B_TRANSLATE("Screenshot save FAILED"), STATUS_TIME_DEFAULT, B_FAILURE_COLOR);
+				}
+			}
+			break;
+		}
+		case B_OK:
+		case B_CANCEL:
+		{
+			Handler()->VideoPaused(false);
+			break;
+		}
+		case kViewScale1x:
+		{
+			ResizeToScale(1);
+			break;
+		}
+		case kViewScale2x:
+		{
+			ResizeToScale(2);
+			break;
+		}
+		case kViewScale3x:
+		{
+			ResizeToScale(3);
+			break;
+		}
+		case kViewFullScreen:
+		{
+			ResizeToScale(0);
+			break;
+		}		
+		case kViewFiltering:
+		{
+			fFiltering = !fFiltering;
+			fView->EnableBilinear(fFiltering);
+			op_scale_bilinear.Set(fFiltering);
+			SetStatusInfo(fFiltering ? B_TRANSLATE("Filtering enabled") : B_TRANSLATE("Filtering disabled"), STATUS_TIME_DEFAULT);
+			UpdateMenus();
+			break;
+		}
+		case kViewXBRFiltering:
+		{
+			fXBRFiltering = !fXBRFiltering;
+			fView->EnableXBR(fXBRFiltering);
+			op_xbr_scale.Set(fXBRFiltering);
+			SetStatusInfo(fXBRFiltering ? B_TRANSLATE("XBR Filtering enabled") : B_TRANSLATE("XBR Filtering disabled"), STATUS_TIME_DEFAULT);
+			UpdateMenus();
+			break;
+		}
+		case kViewSmartBorder:
+		{
+			op_smart_border_disabled.Set(!op_smart_border_disabled);
+			fView->EnableSmartBorder(!op_smart_border_disabled);
+			SetStatusInfo(op_smart_border_disabled ? B_TRANSLATE("Smart border disabled") : B_TRANSLATE("Smart border enabled"), STATUS_TIME_DEFAULT);
+			UpdateMenus();
+			break;
+		}
+		case kViewOnScreenKeyboard:
+		{
+			Handler()->OnKey('k', KF_DOWN);
+			Handler()->OnKey('k', 0);
+			break;
+		}
+		case kViewOnScreenMenu:
+		{
+			Handler()->OnKey('m', KF_DOWN);
+			Handler()->OnKey('m', 0);
+			break;
+		}
+		case kDeviceStartStopTape:
+		{
+			switch(Handler()->OnAction(A_TAPE_TOGGLE))
+			{
+				case AR_TAPE_STARTED:
+					SetStatusInfo(B_TRANSLATE("Tape started"), STATUS_TIME_DEFAULT);
+					break;
+				case AR_TAPE_STOPPED:
+					SetStatusInfo(B_TRANSLATE("Tape stopped"), STATUS_TIME_DEFAULT);
+					break;
+				case AR_TAPE_NOT_INSERTED:
+					SetStatusInfo(B_TRANSLATE("Tape not inserted"), STATUS_TIME_DEFAULT);
+					break;
+				default:
+					SetStatusInfo(B_TRANSLATE("Ready"));
+					break;
+			}
+			break;
+		}
+		case kDeviceFastTape:
+		{
+			using namespace xOptions;
+			eOption<bool>* op_tape_fast = eOption<bool>::Find("fast tape");
+			SAFE_CALL(op_tape_fast)->Change();
+			bool tape_fast = op_tape_fast && *op_tape_fast;
+			SetStatusInfo(tape_fast ? B_TRANSLATE("Fast tape on") : B_TRANSLATE("Fast tape off"), STATUS_TIME_DEFAULT);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceBetaDiskA:
+		{
+			OpDrive(D_A);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceBetaDiskB:
+		{
+			OpDrive(D_B);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceBetaDiskC:
+		{
+			OpDrive(D_C);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceBetaDiskD:
+		{
+			OpDrive(D_D);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceSoundVolume:
+		{
+			using namespace xOptions;
+			eOption<int>* op_volume = xOptions::eOption<int>::Find("volume");
+			uint32 volume = message->FindInt32("volume");
+			op_volume->Set(volume);
+			VolumeAudio(volume);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceSoundChipAY:
+		{
+			using namespace xOptions;
+			eOption<int>* op_sound_chip = eOption<int>::Find("sound chip");
+			op_sound_chip->Set(0);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceSoundChipYM:
+		{
+			using namespace xOptions;
+			eOption<int>* op_sound_chip = eOption<int>::Find("sound chip");
+			op_sound_chip->Set(1);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceSoundChipStereoABC:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(0);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoACB:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(1);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoBAC:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(2);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoBCA:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(3);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoCAB:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(4);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoCBA:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(5);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}		
+		case kDeviceSoundChipStereoMono:
+		{
+			using namespace xOptions;
+			eOption<int>* op_ay_stereo = eOption<int>::Find("ay stereo");
+			op_ay_stereo->Set(6);
+			op_ay_stereo->Apply();
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickCursor:
+		{
+			OpJoystick(J_CURSOR);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickCursorEnter:
+		{
+			OpJoystick(J_CURSORENTER);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickKempston:
+		{
+			OpJoystick(J_KEMPSTON);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickSinclair2:
+		{
+			OpJoystick(J_SINCLAIR2);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickQAOPM:
+		{
+			OpJoystick(J_QAOPM);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceJoystickQAOPSpace:
+		{
+			OpJoystick(J_QAOPSPACE);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceKempsonMouse:
+		{
+			fKempsonMouseGrab = !fKempsonMouseGrab;
+			fView->EnableMouseGrab(fKempsonMouseGrab);
+			SetStatusInfo(fKempsonMouseGrab ? B_TRANSLATE("Mouse grabbed (Alt+G)") : B_TRANSLATE("Ready"));
+			UpdateMenus();
+			UpdateCursor();
+			break;
+		}
+		case kDevicePause:
+		{
+			bool marked = fPauseMenuItem->IsMarked();
+			fPauseMenuItem->SetMarked(!marked);
+			Handler()->VideoPaused(!marked);
+			SetStatusInfo(marked ? B_TRANSLATE("Ready") : B_TRANSLATE("Paused"));
+			break;
+		}
+		case kDeviceReset:
+		{
+			SetStatusInfo(B_TRANSLATE("Reset"), STATUS_TIME_DEFAULT);
+			Handler()->OnAction(A_RESET);
+			break;
+		}
+		case kDeviceMode48k:
+		{
+			if (UpdateBoolOption(f48kModeMenuItem, "mode 48k", true))
+				SetStatusInfo(B_TRANSLATE("48k mode enabled"), STATUS_TIME_DEFAULT);
+			else
+				SetStatusInfo(B_TRANSLATE("128k mode enabled"), STATUS_TIME_DEFAULT);
+			UpdateMenus();
+			break;
+		}
+		case kDeviceResetToServiceROM:
+		{
+			if (UpdateBoolOption(fResetToServiceROMMenuItem, "reset to service rom", true))
+				SetStatusInfo(B_TRANSLATE("Reset to service ROM"), STATUS_TIME_DEFAULT);
+			else
+				SetStatusInfo(B_TRANSLATE("Reset to usual ROM"), STATUS_TIME_DEFAULT);
+			break;
+		}
+		case kHelpKeyboardLayout:
+		{
+			if (!fKeyboardWindow) {
+				int x, y;
+				BRect rect(100, 100, 950, 450);
+				if (sscanf(op_keyboard_window_state, op_keyboard_window_state.FormatStr(), &x, &y) == 2)
+					rect.OffsetTo(x, y);	
+				fKeyboardWindow = new KeyboardWindow(rect, this);
+			}
+			if (fKeyboardWindow->IsHidden()) {
+				fKeyboardWindow->Show();
+				Activate(true);
+				op_virtual_keyboard.Set(true);
+			} else {
+				fKeyboardWindow->Hide();
+				op_virtual_keyboard.Set(false);
+			}
+			UpdateMenus();
+			break;
+		}
+		case kHelpRegisterMime:
+		{
+			InstallMimeType("application/x-spectrum-sna", "snapshot_icon", "ZX-Spectrum emulator snapshot (SNA)", "sna");
+			InstallMimeType("application/x-spectrum-z80", "snapshot_icon", "ZX-Spectrum emulator snapshot (Z80)", "z80");
+			InstallMimeType("application/x-spectrum-trd", "disk_icon", "TR-DOS floppy disk image (TRD)", "trd");
+			InstallMimeType("application/x-spectrum-udi", "disk_icon", "TR-DOS floppy disk image (UDI)", "udi");
+			InstallMimeType("application/x-spectrum-fdi", "disk_icon", "TR-DOS floppy disk image (FDI)", "fdi");
+			InstallMimeType("application/x-spectrum-scl", "disk_icon", "TR-DOS floppy disk image (SCL)", "scl");
+			InstallMimeType("application/x-spectrum-tap", "tape_icon", "ZX-Spectrum emulator tape data (TAP)", "tap");
+			InstallMimeType("application/x-spectrum-tzx", "tape_icon", "ZX-Spectrum emulator tape data (TZX)", "tzx");
+			BAlert *alert = new BAlert(B_TRANSLATE("Register filetypes"), B_TRANSLATE("Filetypes registered!"), B_TRANSLATE("OK"));
+			alert->Go(NULL);
+			break;
+		}
+		case kHelpOpenHomePage:
+		{
+			entry_ref ref;
+			get_ref_for_path("/bin/open", &ref);
+			const char* args[] = { "/bin/open", "https://bitbucket.org/djdron/unrealspeccyp", NULL };
+			be_roster->Launch(&ref, 2, args);
+			break;
+		}
+		case B_ABOUT_REQUESTED:
+		{
+			BAboutWindow* wind = new BAboutWindow("Unreal Speccy Portable", APP_SIGNATURE);
+			const char *backendCopyrights[]={"2021-2023 Haiku UI by Gerasim Troeglazov (3dEyes**)\n", NULL};
+			wind->AddCopyright(2022, "SMT, Dexus, Alone Coder, deathsoft, djdron, scor.", (const char**)&backendCopyrights);
+			wind->SetVersion("0.0.86.21");
+			wind->AddDescription("Portable ZX Spectrum emulator.");
+			wind->AddExtraInfo(
+"This program is free software: you can redistribute it and/or modify\n\
+it under the terms of the GNU General Public License as published by\n\
+the Free Software Foundation, either version 3 of the License, or\n\
+(at your option) any later version.\n\
+\n\
+This program is distributed in the hope that it will be useful,\n\
+but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
+GNU General Public License for more details.\n\
+\n\
+You should have received a copy of the GNU General Public License\n\
+along with this program.  If not, see <http://www.gnu.org/licenses/>.\n");
+			wind->ResizeTo(wind->Frame().Width() * 1.4, wind->Frame().Height() * 1.8);
+			wind->CenterOnScreen();
+			wind->Show();
+			break;
+		}
+		case B_UNMAPPED_KEY_UP:
+		case B_KEY_UP:
+		{
+			int32 key, mod;
+			message->FindInt32("key", &key);
+			message->FindInt32("modifiers", &mod);
+
+			if (fKeyboardWindow) {
+				message->AddBool("highlight", false);
+				message->what = kKeyHighlight;
+				fKeyboardWindow->PostMessage(message);
+			}
+
+			dword flags = 0;
+			if(mod & B_CONTROL_KEY)
+				flags |= KF_ALT;
+			if(mod & B_SHIFT_KEY)
+				flags |= KF_SHIFT;
+			if (key == 0x26) {
+				Handler()->OnKey('c', 0);
+				Handler()->OnKey('s', 0);
+			} else if (key == 0x31) {
+				SEND_EXTEND_KEY('F', 'Y', flags);
+			} else if (key == 0x32) {
+				SEND_EXTEND_KEY('G', 'U', flags);
+			} else if (key == 0x33) {
+				SEND_EXTEND_KEY('S', 'D', flags);
+			} else {
+				if (!CheckFuncKey(key, flags)) {
+					byte keycode = TranslateKey(key, fLastPressedKey, flags);
+					Handler()->OnKey(keycode, flags);
+					if ((keycode >= '0' && keycode <= '9') || (keycode >= 'A' && keycode <= 'Z'))
+						fLastPressedKey = 0;
+					if (keycode == 'm' || (keycode == 'e' && !Handler()->VideoDataUI()))
+						UpdateMenus();
+				}
+			}
+			break;
+		}
+		case B_UNMAPPED_KEY_DOWN:
+		case B_KEY_DOWN:
+		{
+			int32 key, mod;
+			message->FindInt32("key", &key);
+			message->FindInt32("modifiers", &mod);
+			printf("key: %x\n", key);
+
+			if (fKeyboardWindow) {
+				message->AddBool("highlight", true);
+				message->what = kKeyHighlight;
+				fKeyboardWindow->PostMessage(message);
+			}
+
+			dword flags = KF_DOWN;
+			if(mod & B_CONTROL_KEY)
+				flags |= KF_ALT;
+			if(mod & B_SHIFT_KEY)
+				flags |= KF_SHIFT;			
+			if (key == 0x26 || key == 0x31 || key == 0x32 || key == 0x33) {
+				Handler()->OnKey('c', KF_DOWN | KF_ALT | KF_SHIFT);
+				Handler()->OnKey('s', KF_DOWN | KF_ALT | KF_SHIFT);
+			} else {
+				if (!CheckFuncKey(key, flags)) {
+					byte keycode = TranslateKey(key, fLastPressedKey, flags);
+					Handler()->OnKey(keycode, flags);
+					if ((keycode >= '0' && keycode <= '9') || (keycode >= 'A' && keycode <= 'Z'))
+						fLastPressedKey = keycode;
+				}
+			}
+			break;
+		}
+		default:
+			break;
+	}
+	BWindow::MessageReceived(message);
+}
+
+byte
+HaikuPlatformWindow::TranslateKey(uint32 _key, byte _last, dword& _flags)
+{
+	byte* data_ui = (byte*)Handler()->VideoDataUI();
+
+	switch(_key)
+	{
+	case 0x4B:	// Left Shift
+	case 0x56:	// Right Shift
+		return 'c';
+	case 0x5c:	// Left Control
+	case 0x60:	// Right Control
+		return 's';
+	case 0x47:	// Enter
+		return 'e';
+	case 0x34:	// Delete
+	case 0x1E:	// Backspace
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '0';
+	case 0x1F:	// Insert
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '1';
+	case 0x20:	// Home
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '3';
+	case 0x35:	// End
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '4';
+	case 0x66:	// Left Win
+	case 0x67:	// Right Win
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '9';
+	case 0x46:	//	'"
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'P') {
+			_flags &= ~KF_SHIFT;
+			return 'P';
+		} else
+			return '7';
+	case 0x53:	// ,<
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'R')
+		{
+			_flags &= ~KF_SHIFT;
+			return 'R';
+		}
+		else
+			return 'N';
+	case 0x54:	// .>
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'T')
+		{
+			_flags &= ~KF_SHIFT;
+			return 'T';
+		}
+		else
+			return 'M';
+	case 0x55:	// ?/
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'C')
+		{
+			_flags &= ~KF_SHIFT;
+			return 'C';
+		}
+		else
+			return 'V';
+	case 0x45:	// :;
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'Z')
+		{
+			_flags &= ~KF_SHIFT;
+			return 'Z';
+		}
+		else
+			return 'O';
+	case 0x1C:	// -_
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == '0')
+		{
+			_flags &= ~KF_SHIFT;
+			return '0';
+		}
+		else
+			return 'J';
+	case 0x1D:	// +=
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		if(_flags & KF_SHIFT || _last == 'K')
+		{
+			_flags &= ~KF_SHIFT;
+			return 'K';
+		}
+		else
+			return 'L';
+	case 0x3b:	// Caps Lock
+		if (_flags & KF_DOWN)
+			_flags |= KF_SHIFT;
+		return '2';
+	case 0x11:	// `
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return '7';
+
+	case 0x23:	// NumPad /
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return 'V';
+	case 0x24:	// NumPad *
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return 'B';
+	case 0x25:	// NumPad -
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return 'J';
+	case 0x3a:	// NumPad +
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return 'K';
+	case 0x65:	// NumPad .
+		if (_flags & KF_DOWN)
+			_flags |= KF_ALT;
+		return 'M';
+
+	case 0x27: return 'Q';
+	case 0x28: return 'W';
+	case 0x29: return 'E';
+	case 0x2A: return 'R';
+	case 0x2B: return 'T';
+	case 0x2C: return 'Y';
+	case 0x2D: return 'U';
+	case 0x2E: return 'I';
+	case 0x2F: return 'O';
+	case 0x30: return 'P';
+
+	case 0x3C: return 'A';
+	case 0x3D: return 'S';
+	case 0x3E: return 'D';
+	case 0x3F: return 'F';
+	case 0x40: return 'G';
+	case 0x41: return 'H';
+	case 0x42: return 'J';
+	case 0x43: return 'K';
+	case 0x44: return 'L';
+
+	case 0x4C: return 'Z';
+	case 0x4D: return 'X';
+	case 0x4E: return 'C';
+	case 0x4F: return 'V';
+	case 0x50: return 'B';
+	case 0x51: return 'N';
+	case 0x52: return 'M';
+
+	default:
+		break;		
+	}
+	// Cursor
+	if (data_ui) {
+		switch(_key) {
+			case 0x01:
+				if (_flags & KF_DOWN)
+					PostMessage(kViewOnScreenMenu);
+				return 0;
+			case 0x61:		return 'l';
+			case 0x63:		return 'r';
+			case 0x57:		return 'u';
+			case 0x62:		return 'd';
+			default:
+				break;
+		}
+	} else {
+		switch(_key) {
+			case 0x01:	// ESC
+				if (_flags & KF_DOWN)
+					_flags |= KF_SHIFT;
+				return ' ';
+			case 0x61:  // Cursor Left
+				if (_flags & KF_DOWN)
+					_flags |= KF_SHIFT;
+				return '5';
+			case 0x63:  // Cursor Right
+				if (_flags & KF_DOWN)
+					_flags |= KF_SHIFT;
+				return '8';
+			case 0x57:  // Cursor Up
+				if (_flags & KF_DOWN)
+					_flags |= KF_SHIFT;
+				return '7';
+			case 0x62:  // Cursor Down
+				if (_flags & KF_DOWN)
+					_flags |= KF_SHIFT;
+				return '6';
+			default:
+				break;
+		}
+	}
+	// 0
+	if(_key == 0x1B)
+		return '0';
+	// 1-9
+	if(_key >= 0x12 && _key <= 0x1A)
+		return (_key - 0x12) + '1';	
+	// Space
+	if(_key == 0x5E)
+		return ' ';
+
+	// NumPad
+	if (modifiers() & B_NUM_LOCK) {
+		switch (_key) {
+			case 0x64:	// 0
+				return '0';
+			case 0x58:	// 1
+				return '1';
+			case 0x59:	// 2
+				return '2';
+			case 0x5a:	// 3
+				return '3';
+			case 0x48:	// 4
+				return '4';
+			case 0x49:	// 5
+				return '5';
+			case 0x4a:	// 6
+				return '6';
+			case 0x37:	// 7
+				return '7';
+			case 0x38:	// 8
+				return '8';
+			case 0x39:	// 9
+				return '9';
+			case 0x5b:	// Enter
+				return 'e';
+			default:
+				break;
+		}
+	} else {
+		switch (_key) {
+			case 0x64:	// 0
+			case 0x49:	// 5
+			case 0x5b:	// Enter
+				_flags |= OpJoyKeyFlags();
+				return 'f';
+			case 0x59:	// 2
+				_flags |= OpJoyKeyFlags();
+				return 'd';
+			case 0x48:	// 4
+				_flags |= OpJoyKeyFlags();
+				return 'l';
+			case 0x4a:	// 6
+				_flags |= OpJoyKeyFlags();
+				return 'r';
+			case 0x38:	// 8
+				_flags |= OpJoyKeyFlags();
+				return 'u';
+			default:
+				break;
+		}
+	}
+
+	return 0;
+}
+
+bool
+HaikuPlatformWindow::CheckFuncKey(uint32 key, dword flags)
+{
+	if (!(flags & KF_DOWN))
+		return false;
+
+	switch(key) {
+		case B_F1_KEY:	// F1
+			PostMessage(B_ABOUT_REQUESTED);
+			break;
+		case B_F2_KEY:	// F2
+			PostMessage(kFileSave);
+			break;
+		case B_F3_KEY:	// F3
+			PostMessage(kFileOpen);
+			break;
+		case B_F4_KEY:	// F4
+			PostMessage(kFileOpenWeb);
+			break;
+		case B_F5_KEY:	// F5
+			PostMessage(kDeviceStartStopTape);
+			break;
+		case B_F6_KEY:	// F6
+			PostMessage(kFileQuickSave);
+			break;
+		case B_F7_KEY:	// F7
+			PostMessage(kFileQuickOpen);
+			break;
+		case B_F8_KEY:	// F7
+			PostMessage(kHelpKeyboardLayout);
+			break;
+		case B_F9_KEY:
+			PostMessage(kViewOnScreenKeyboard);
+			break;
+		case 0x68:		// Menu
+		case B_F10_KEY: // F10
+			PostMessage(kViewOnScreenMenu);
+			break;
+		case B_F11_KEY:	// F11
+			PostMessage(kDeviceMode48k);
+			break;
+		case B_F12_KEY:	// F12
+			PostMessage(kDeviceReset);
+			break;
+		case 0x10:		// Pause
+			PostMessage(kDevicePause);
+			break;
+		case 0x21:		// PgUp
+		{
+			BMessage *message = new BMessage(kDeviceSoundVolume);
+			int volume = OpVolume() > 9 ? 10 : OpVolume() + 1;
+			message->AddInt32("volume", volume);
+			PostMessage(message);
+			break;
+		}
+		case 0x36:		// PgDown
+		{
+			BMessage *message = new BMessage(kDeviceSoundVolume);
+			int volume = OpVolume() < 1 ? 0 : OpVolume() - 1;
+			message->AddInt32("volume", volume);
+			PostMessage(message);
+			break;
+		}
+		default:
+			return false;
+	}
+	return true;
+}
+
+void
+HaikuPlatformWindow::FrameResized(float width, float height)
+{
+	BWindow::FrameResized(width, height);
+	if (fSkipScale)
+		fSkipScale = false;
+	else
+		fScaleFactor = -1;
+
+	int multiplyIndex = ceilf(fView->Bounds().Width() / xUi::WIDTH) - 1;
+	fXBRFilteringMenuItem->SetEnabled(multiplyIndex > 1);
+}
+
+void
+HaikuPlatformWindow::WindowActivated(bool active)
+{
+}
+
+void
+HaikuPlatformWindow::Show()
+{
+	int w = xUi::WIDTH;
+	int h = xUi::HEIGHT;
+	fMenuBar->ResizeToPreferred();
+	fStatusMode->ResizeToPreferred();	
+	h += fMenuBar->Bounds().Height() + fStatusMode->Bounds().Height() + 2;
+	SetSizeLimits(w, 4096, h, 4096);
+
+	int x, y;
+	if (sscanf(op_window_state, op_window_state.FormatStr(), &x, &y, &w, &h) == 4) {
+		MoveTo(x, y);
+		ResizeTo(w, h);
+	} else
+		PostMessage(kViewScale2x);
+
+	if (op_scale_bilinear)
+		PostMessage(kViewFiltering);
+	if (op_xbr_scale)
+		PostMessage(kViewXBRFiltering);
+	if (op_full_screen)
+		ResizeToScale(0);
+	if (op_virtual_keyboard)
+		PostMessage(kHelpKeyboardLayout);
+	
+	BMessage *refsMessage = ((USPApplication*)be_app)->GetRefsMessage();
+	if (refsMessage)
+		PostMessage(refsMessage);
+
+	fView->EnableSmartBorder(!op_smart_border_disabled);
+
+	BWindow::Show();
+}
+
+bool
+HaikuPlatformWindow::QuitRequested()
+{
+	OpQuit(true);
+	return false;
+}
+
+}
diff --git a/platform/haiku/haiku_window.h b/platform/haiku/haiku_window.h
new file mode 100644
index 0000000..8394024
--- /dev/null
+++ b/platform/haiku/haiku_window.h
@@ -0,0 +1,175 @@
+/*
+Portable ZX-Spectrum emulator.
+Copyright (C) 2001-2021 SMT, Dexus, Alone Coder, deathsoft, djdron, scor, 3dEyes
+
+This program is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef _HAIKU_PLATFORM_WINDOW_H
+#define _HAIKU_PLATFORM_WINDOW_H
+
+#include <stdio.h>
+
+#include <AppKit.h>
+#include <InterfaceKit.h>
+#include <SupportKit.h>
+#include <StorageKit.h>
+#include <Catalog.h>
+#include <ControlLook.h>
+#include <LayoutBuilder.h>
+#include <SeparatorView.h>
+#include <StringList.h>
+#include <RecentItems.h>
+#include <private/interface/AboutWindow.h>
+
+#include "haiku_surface.h"
+#include "haiku_keyboard_window.h"
+#include "haiku_web_window.h"
+
+const uint32 kFileOpen = 'FOPN';
+const uint32 kFileSave = 'FSVE';
+const uint32 kFileOpenWeb = 'FWEB';
+const uint32 kFileQuickOpen = 'QOPN';
+const uint32 kFileQuickSave = 'QSAV';
+const uint32 kFileQuickSaveSlot = 'QSSL';
+const uint32 kFileSaveScreen = 'QSVS';
+const uint32 kFileAutoPlay = 'APLA';
+const uint32 kViewScale1x = 'S100';
+const uint32 kViewScale2x = 'S200';
+const uint32 kViewScale3x = 'S300';
+const uint32 kViewFullScreen = 'FULL';
+const uint32 kViewFiltering = 'SFIL';
+const uint32 kViewXBRFiltering = 'SXBR';
+const uint32 kViewSmartBorder = 'SBRD';
+const uint32 kViewOnScreenKeyboard = 'OKBD';
+const uint32 kViewOnScreenMenu = 'OMNU';
+const uint32 kDeviceStartStopTape = 'SSTP';
+const uint32 kDeviceFastTape = 'FSTP';
+const uint32 kDeviceJoystickCursor = 'JCUR';
+const uint32 kDeviceJoystickCursorEnter = 'JCEN';
+const uint32 kDeviceJoystickKempston = 'JKEM';
+const uint32 kDeviceJoystickSinclair2 = 'JSN2';
+const uint32 kDeviceJoystickQAOPM = 'JQAM';
+const uint32 kDeviceJoystickQAOPSpace = 'JQAS';
+const uint32 kDeviceMode48k = 'M48K';
+const uint32 kDevicePause = 'PAUS';
+const uint32 kDeviceReset = 'REST';
+const uint32 kDeviceResetToServiceROM = 'RROM';
+const uint32 kDeviceSoundChipAY = 'SCAY';
+const uint32 kDeviceSoundChipYM = 'SCYM';
+const uint32 kDeviceSoundChipStereoABC = 'SABC';
+const uint32 kDeviceSoundChipStereoACB = 'SACB';
+const uint32 kDeviceSoundChipStereoBAC = 'SBAC';
+const uint32 kDeviceSoundChipStereoBCA = 'SBCA';
+const uint32 kDeviceSoundChipStereoCAB = 'SCAB';
+const uint32 kDeviceSoundChipStereoCBA = 'SCBA';
+const uint32 kDeviceSoundChipStereoMono = 'SMON';
+const uint32 kDeviceSoundVolume = 'SVOL';
+const uint32 kDeviceBetaDiskA = 'BD_A';
+const uint32 kDeviceBetaDiskB = 'BD_B';
+const uint32 kDeviceBetaDiskC = 'BD_C';
+const uint32 kDeviceBetaDiskD = 'BD_D';
+const uint32 kDeviceKempsonMouse = 'KMOU';
+const uint32 kHelpRegisterMime = 'RMIM';
+const uint32 kHelpOpenHomePage = 'HOME';
+const uint32 kPulseEvent = 'TIME';
+const uint32 B_SAVE_SCREEN_REQUESTED = 'SSRQ';
+
+#define STATUS_TIME_INFINITE	-1
+#define STATUS_TIME_DEFAULT		4
+
+#define SEND_EXTEND_KEY(key, shifted, flags) \
+	Handler()->OnKey('c', 0); \
+	Handler()->OnKey('s', 0); \
+	snooze(25000); \
+	Handler()->OnKey(flags & KF_SHIFT ? key : shifted, KF_DOWN | KF_ALT); \
+	snooze(25000); \
+	Handler()->OnKey(flags & KF_SHIFT ? key : shifted, 0)
+
+namespace xPlatform
+{
+
+class HaikuPlatformWindow : public BWindow {
+	public:
+						HaikuPlatformWindow(BRect frame, int w, int h,
+							const char* title, window_type type, uint32 flags);
+		virtual			~HaikuPlatformWindow();
+
+		virtual void	MessageReceived(BMessage *msg);
+		virtual	bool	QuitRequested();
+		virtual void	FrameResized(float width, float height);
+		virtual void	WindowActivated(bool active);
+		virtual void	Show();
+
+		SurfaceView*	View(void) { return fView; }
+
+	private:
+		bool			CheckFuncKey(uint32 key, dword flags);
+		byte			TranslateKey(uint32 key, byte last, dword& flags);
+		void 			ResizeToScale(int scale);
+		void			InstallMimeType(const char *_mime, const char *_icon, const char *_description, const char *_exts);
+		void			SetStatusInfo(const char *text, int time = STATUS_TIME_INFINITE, color_which color = B_PANEL_TEXT_COLOR);
+		void 			UpdateMenus();
+		void			UpdateCursor();
+
+		BMenuBar*		fMenuBar;
+		BMenu*			fBetaDiskMenu;
+		BMenu*			fSoundChipMenu;
+		BMenu*			fSoundVolumeMenu;
+		BMenu*			fAYStereoMenu;
+		BMenu*			fJoystickMenu;
+		BMenu*			fQuickSaveSlotMenu;
+		BMenu*			fFilteringMenu;
+		BMenuItem*		fFastTapeMenuItem;
+		BMenuItem*		fQuickSaveMenuItem;
+		BMenuItem*		fVirtualKeyboardMenuItem;
+		BMenuItem*		fFilteringMenuItem;
+		BMenuItem*		fXBRFilteringMenuItem;
+		BMenuItem*		fSmartBorderScaleMenuItem;
+		BMenuItem*		fPauseMenuItem;
+		BMenuItem*		f48kModeMenuItem;
+		BMenuItem*		fResetToServiceROMMenuItem;
+		BMenuItem*		fKempstonMouseGrabMenuItem;
+		BMenuItem*		fAutoPlayMenuItem;
+
+		BStringView*	fStatusMode;
+		BStringView*	fStatusDisk;
+		BStringView*	fStatusJoystick;
+		BStringView*	fStatusSound;
+		BStringView*	fStatusInfo;
+
+		BFilePanel*		fOpenPanel;
+		BFilePanel*		fSavePanel;
+		BFilePanel*		fSaveScreenPanel;
+		
+		BMessageRunner* fTimerMessageRunner;
+
+		KeyboardWindow*	fKeyboardWindow;
+		WebWindow*		fWebWindow;
+		SurfaceView*	fView;
+
+		BRect 			fLastRect;
+		bool 			fFullscreen;
+		bool			fFiltering;
+		bool			fXBRFiltering;
+		bool			fKempsonMouseGrab;
+		bool			fSkipScale;
+		int				fScaleFactor;
+		byte			fLastPressedKey;
+		int				fStateInfoTimer;
+};
+
+}
+
+#endif
diff --git a/platform/haiku/locales/ca.catkeys b/platform/haiku/locales/ca.catkeys
new file mode 100644
index 0000000..269a6ab
--- /dev/null
+++ b/platform/haiku/locales/ca.catkeys
@@ -0,0 +1,98 @@
+1	Catalan	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Escala al 100 %
+128k	USPWindow		128 k
+128k mode enabled	USPWindow		Mode de 128 k habilitat
+200% scale	USPWindow		Escala al 200%
+300% scale	USPWindow		Escala al 300 %
+48k	USPWindow		48 k
+48k mode enabled	USPWindow		Mode de 48 k habilitat
+About	USPWindow		Quant a
+Auto launch off	USPWindow		Arrencada automàtica inhabilitada
+Auto launch on	USPWindow		Arrencada automàtica habilitada
+Auto launch programs	USPWindow		Obre programes automàticament
+AY Stereo	USPWindow		Estèreo AY
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Unitat de disc beta
+Bilinear	USPWindow		Bilineal
+Could not find app resources.\n	USPWindow		No s'han pogut trobar els recursos de l'aplicació.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		No s'ha pogut trobar la icona als recursos de l'aplicació (dades: %p, mida: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		No s'ha pogut iniciar el tipus MIME de document natiu (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		No s'ha pogut instal·lar el tipus MIME de document natiu (%s): %s.\n
+Could not open file	USPWindow		No s'ha pogut obrir el fitxer.
+Could not set vector icon of mime type.\n	USPWindow		No s'ha pogut establir la icona vectorial del tipus MIME.\n
+Cursor	USPWindow		Cursor
+Cursor + Enter	USPWindow		Cursor + Retorn
+Device	USPWindow		Dispositiu
+Fast tape off	USPWindow		Cinta ràpida inhabilitada
+Fast tape on	USPWindow		Cinta ràpida habilitada
+File	USPWindow		Fitxer
+File save FAILED	USPWindow		S'ha produït un error en desar el fitxer.
+File save OK	USPWindow		El fitxer s'ha desat correctament.
+File was successfully opened	USPWindow		El fitxer s'ha obert correctament.
+Filetypes registered!	USPWindow		Tipus de fitxers registrats!
+Filtering	USPWindow		Filtratge
+Filtering disabled	USPWindow		Filtratge inhabilitat
+Filtering enabled	USPWindow		Filtratge habilitat
+Full screen	USPWindow		Pantalla completa
+Help	USPWindow		Ajuda
+Joystick	USPWindow		Palanca de control
+Kempson mouse grab	USPWindow		Agafador del ratolí Kempson
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Mode de 48 k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Ratolí agafat (Alt+G)
+Mute	USPWindow		Silencia
+OK	USPWindow		D'acord
+Open file…	USPWindow		Obre un fitxer...
+Open from web…	USPWindow		Obre des del web...
+Open…	USPWindow		Obre...
+OSD keyboard	USPWindow		Teclat OSD
+OSD menu	USPWindow		Menú OSD
+Pause	USPWindow		Interromp
+Paused	USPWindow		Interromput
+QAOP + Space	USPWindow		QAOP + Espai
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Càrrega ràpida
+Quick load FAILED	USPWindow		Ha fallat la càrrega ràpida
+Quick load OK	USPWindow		Càrrega ràpida correcta
+Quick save	USPWindow		Desament ràpid
+Quick save FAILED	USPWindow		Ha fallat el desament ràpid.
+Quick save OK	USPWindow		Desament ràpid correcte
+Quit	USPWindow		Surt
+Ready	USPWindow		A punt
+Register filetypes	USPWindow		Registra els tipus de fitxer
+Reset	USPWindow		Restableix
+Reset to service ROM	USPWindow		Restableix a la ROM de servei
+Reset to usual ROM	USPWindow		Restableix a la ROM habitual
+Save screenshot…	USPWindow		Desa la captura de pantalla...
+Save slot	USPWindow		Desa la ranura
+Save SNA snapshot…	USPWindow		Desa la instantània de l'SNA...
+Save…	USPWindow		Desa...
+Screenshot save FAILED	USPWindow		Ha fallat desar la captura de pantalla.
+Screenshot save OK	USPWindow		Captura de pantalla desada correctament
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Vora intel·ligent inhabilitada
+Smart border enabled	USPWindow		Vora intel·ligent habilitada
+Smart border scale	USPWindow		Escala de la vora intel·ligent
+Sound chip	USPWindow		Xip de so
+Start / Stop tape	USPWindow		Inicia / atura la cinta
+Tape fast	USPWindow		Cinta ràpida
+Tape not inserted	USPWindow		No s'ha inserit la cinta.
+Tape started	USPWindow		Cinta iniciada
+Tape stopped	USPWindow		Cinta aturada
+View	USPWindow		Visualització
+Virtual keyboard	USPWindow		Teclat virtual
+Visit homepage	USPWindow		Visteu la pàgina d'inici
+Volume	USPWindow		Volum
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		Filtre XBR inhabilitat
+XBR Filtering enabled	USPWindow		Filtre XBR habilitat
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Cancel·la
+Download file	USPWebWindow		Baixa el fitxer
+File	USPWebWindow		Fitxer
+items	USPWebWindow		elements
+Open	USPWebWindow		Obre
+Open download folder	USPWebWindow		Obre la carpeta de baixades
+Open file from web…	USPWebWindow		Obre el fitxer des del web...
+Keyboard layout	USPKeyboardWindow		Disposició del teclat
diff --git a/platform/haiku/locales/de.catkeys b/platform/haiku/locales/de.catkeys
new file mode 100644
index 0000000..f1c9a01
--- /dev/null
+++ b/platform/haiku/locales/de.catkeys
@@ -0,0 +1,98 @@
+1	German	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		100% Zoom
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k Modus aktiviert
+200% scale	USPWindow		200% Zoom
+300% scale	USPWindow		300% Zoom
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k Modus aktiviert
+About	USPWindow		Über
+Auto launch off	USPWindow		Autostart aus
+Auto launch on	USPWindow		Autostart an
+Auto launch programs	USPWindow		Programme auto-starten
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta Disk Drive
+Bilinear	USPWindow		Bilinear
+Could not find app resources.\n	USPWindow		App-Ressourcen nicht gefunden.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Kein Icon in App-Ressourcen gefunden (Daten: %p, Größe: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Nativen Dokumenten MIME Typ nicht gefunden (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Nativer Dokumenten MIME Typ konnte nicht installiert werden (%s): %s.\n
+Could not open file	USPWindow		Datei konnte nicht geöffnet werden
+Could not set vector icon of mime type.\n	USPWindow		Vektoricon des MIME Typs konnte nicht gesetzt werden.\n
+Cursor	USPWindow		Cursor
+Cursor + Enter	USPWindow		Cursor + Enter
+Device	USPWindow		Gerät
+Fast tape off	USPWindow		Fast Tape aus
+Fast tape on	USPWindow		Fast Tape ein
+File	USPWindow		Datei
+File save FAILED	USPWindow		Datei speichern fehlgeschlagen
+File save OK	USPWindow		Datei speichern erfolgreich
+File was successfully opened	USPWindow		Datei wurde erfolgreich geöffnet
+Filetypes registered!	USPWindow		Dateitypen registriert!
+Filtering	USPWindow		Filter
+Filtering disabled	USPWindow		Filter aus
+Filtering enabled	USPWindow		Filter ein
+Full screen	USPWindow		Vollbild
+Help	USPWindow		Hilfe
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Kempson Maus fangen
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		48k Modus
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Maus fangen (Alt+G)
+Mute	USPWindow		Stumm
+OK	USPWindow		OK
+Open file…	USPWindow		Datei öffnen…
+Open from web…	USPWindow		Datei aus Web…
+Open…	USPWindow		Öffnen…
+OSD keyboard	USPWindow		Bildschirm-Tastatur
+OSD menu	USPWindow		Bildschirm-Menü
+Pause	USPWindow		Pause
+Paused	USPWindow		Pausiert
+QAOP + Space	USPWindow		QAOP + Space
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Quick Load
+Quick load FAILED	USPWindow		Quick Load fehlgeschlagen
+Quick load OK	USPWindow		Quick Load erfolgreich
+Quick save	USPWindow		Quick Save
+Quick save FAILED	USPWindow		Quick Save fehlgeschlagen
+Quick save OK	USPWindow		Quick Save erfolgreich
+Quit	USPWindow		Beenden
+Ready	USPWindow		Bereit
+Register filetypes	USPWindow		Dateitypen registrieren
+Reset	USPWindow		Zurücksetzen
+Reset to service ROM	USPWindow		Zurücksetzen auf Service-ROM
+Reset to usual ROM	USPWindow		Zurücksetzen auf Standard-ROM
+Save screenshot…	USPWindow		Screenshot speichern…
+Save slot	USPWindow		Slot speichern
+Save SNA snapshot…	USPWindow		SNA Snapshot speichern…
+Save…	USPWindow		Speichern…
+Screenshot save FAILED	USPWindow		Screenshot speichern fehlgeschlagen
+Screenshot save OK	USPWindow		Screenshot speichern erfolgreich
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Smart-Zoom aus
+Smart border enabled	USPWindow		Smarr-Zoom ein
+Smart border scale	USPWindow		Smart-Zoom
+Sound chip	USPWindow		Soundchip
+Start / Stop tape	USPWindow		Start / Stopp Tape
+Tape fast	USPWindow		Tape Fast
+Tape not inserted	USPWindow		Kein Tape eingelegt
+Tape started	USPWindow		Tape gestartet
+Tape stopped	USPWindow		Tape gestoppt
+View	USPWindow		Ansicht
+Virtual keyboard	USPWindow		Virtuelle Tastatur
+Visit homepage	USPWindow		Homepage öffnen
+Volume	USPWindow		Lautstärke
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR Filter aus
+XBR Filtering enabled	USPWindow		XBR Filter ein
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Abbrechen
+Download file	USPWebWindow		Datei herunterladen
+File	USPWebWindow		Datei
+items	USPWebWindow		Objekte
+Open	USPWebWindow		Öffnen
+Open download folder	USPWebWindow		Download-Ordner öffnen
+Open file from web…	USPWebWindow		Datei aus Web öffnen…
+Keyboard layout	USPKeyboardWindow		Tastatur-Layout
diff --git a/platform/haiku/locales/en.catkeys b/platform/haiku/locales/en.catkeys
new file mode 100644
index 0000000..910caeb
--- /dev/null
+++ b/platform/haiku/locales/en.catkeys
@@ -0,0 +1,98 @@
+1	English	application/x-vnd.unreal-speccy-portable	2972438328
+Could not find app resources.\n	USPWindow		Could not find app resources.\n
+Smart border enabled	USPWindow		Smart border enabled
+QAOPM	USPWindow		QAOPM
+Cancel	USPWebWindow		Cancel
+Auto launch on	USPWindow		Auto launch on
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
+OK	USPWindow		OK
+Quick load FAILED	USPWindow		Quick load FAILED
+Register filetypes	USPWindow		Register filetypes
+Ready	USPWindow		Ready
+Paused	USPWindow		Paused
+Filetypes registered!	USPWindow		Filetypes registered!
+Open from web…	USPWindow		Open from web…
+Volume	USPWindow		Volume
+Tape started	USPWindow		Tape started
+Fast tape off	USPWindow		Fast tape off
+300% scale	USPWindow		300% scale
+48k mode enabled	USPWindow		48k mode enabled
+XBR Filtering disabled	USPWindow		XBR Filtering disabled
+QAOP + Space	USPWindow		QAOP + Space
+48k	USPWindow		48k
+Visit homepage	USPWindow		Visit homepage
+128k mode enabled	USPWindow		128k mode enabled
+200% scale	USPWindow		200% scale
+Keyboard layout	USPKeyboardWindow		Keyboard layout
+items	USPWebWindow		items
+About	USPWindow		About
+Save…	USPWindow		Save…
+Save slot	USPWindow		Save slot
+Could not set vector icon of mime type.\n	USPWindow		Could not set vector icon of mime type.\n
+Smart border scale	USPWindow		Smart border scale
+100% scale	USPWindow		100% scale
+Filtering	USPWindow		Filtering
+Open file from web…	USPWebWindow		Open file from web…
+View	USPWindow		View
+Mute	USPWindow		Mute
+Help	USPWindow		Help
+Cursor + Enter	USPWindow		Cursor + Enter
+File save FAILED	USPWindow		File save FAILED
+AY Stereo	USPWindow		AY Stereo
+Save SNA snapshot…	USPWindow		Save SNA snapshot…
+AY-3-8910	USPWindow		AY-3-8910
+File	USPWebWindow		File
+Cursor	USPWindow		Cursor
+Full screen	USPWindow		Full screen
+Quit	USPWindow		Quit
+Fast tape on	USPWindow		Fast tape on
+Quick load	USPWindow		Quick load
+Sinclair 2	USPWindow		Sinclair 2
+File	USPWindow		File
+Mode 48k	USPWindow		Mode 48k
+Screenshot save FAILED	USPWindow		Screenshot save FAILED
+Open file…	USPWindow		Open file…
+128k	USPWindow		128k
+File was successfully opened	USPWindow		File was successfully opened
+XBR	USPWindow		XBR
+Auto launch programs	USPWindow		Auto launch programs
+Joystick	USPWindow		Joystick
+Save screenshot…	USPWindow		Save screenshot…
+Filtering disabled	USPWindow		Filtering disabled
+Could not open file	USPWindow		Could not open file
+Kempson mouse grab	USPWindow		Kempson mouse grab
+XBR Filtering enabled	USPWindow		XBR Filtering enabled
+Reset to service ROM	USPWindow		Reset to service ROM
+OSD keyboard	USPWindow		OSD keyboard
+Open download folder	USPWebWindow		Open download folder
+Virtual keyboard	USPWindow		Virtual keyboard
+YM2149F	USPWindow		YM2149F
+Bilinear	USPWindow		Bilinear
+Screenshot save OK	USPWindow		Screenshot save OK
+Tape not inserted	USPWindow		Tape not inserted
+Tape stopped	USPWindow		Tape stopped
+Download file	USPWebWindow		Download file
+Filtering enabled	USPWindow		Filtering enabled
+Quick load OK	USPWindow		Quick load OK
+Quick save FAILED	USPWindow		Quick save FAILED
+Quick save	USPWindow		Quick save
+Tape fast	USPWindow		Tape fast
+Start / Stop tape	USPWindow		Start / Stop tape
+Beta disk drive	USPWindow		Beta disk drive
+Mono	USPWindow		Mono
+Open	USPWebWindow		Open
+Quick save OK	USPWindow		Quick save OK
+Open…	USPWindow		Open…
+Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
+Reset	USPWindow		Reset
+Device	USPWindow		Device
+File save OK	USPWindow		File save OK
+Sound chip	USPWindow		Sound chip
+Pause	USPWindow		Pause
+Mouse grabbed (Alt+G)	USPWindow		Mouse grabbed (Alt+G)
+Kempston	USPWindow		Kempston
+Could not install native document mime type (%s): %s.\n	USPWindow		Could not install native document mime type (%s): %s.\n
+OSD menu	USPWindow		OSD menu
+Smart border disabled	USPWindow		Smart border disabled
+Reset to usual ROM	USPWindow		Reset to usual ROM
+Auto launch off	USPWindow		Auto launch off
diff --git a/platform/haiku/locales/en_AU.catkeys b/platform/haiku/locales/en_AU.catkeys
new file mode 100644
index 0000000..e703bc0
--- /dev/null
+++ b/platform/haiku/locales/en_AU.catkeys
@@ -0,0 +1,98 @@
+1	English (Australian)	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		100% scale
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k mode enabled
+200% scale	USPWindow		200% scale
+300% scale	USPWindow		300% scale
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k mode enabled
+About	USPWindow		About
+Auto launch off	USPWindow		Auto launch off
+Auto launch on	USPWindow		Auto launch on
+Auto launch programs	USPWindow		Auto launch programs
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta disk drive
+Bilinear	USPWindow		Bilinear
+Could not find app resources.\n	USPWindow		Could not find app resources.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Could not install native document mime type (%s): %s.\n
+Could not open file	USPWindow		Could not open file
+Could not set vector icon of mime type.\n	USPWindow		Could not set vector icon of mime type.\n
+Cursor	USPWindow		Cursor
+Cursor + Enter	USPWindow		Cursor + Enter
+Device	USPWindow		Device
+Fast tape off	USPWindow		Fast tape off
+Fast tape on	USPWindow		Fast tape on
+File	USPWindow		File
+File save FAILED	USPWindow		File save FAILED
+File save OK	USPWindow		File save OK
+File was successfully opened	USPWindow		File was successfully opened
+Filetypes registered!	USPWindow		Filetypes registered!
+Filtering	USPWindow		Filtering
+Filtering disabled	USPWindow		Filtering disabled
+Filtering enabled	USPWindow		Filtering enabled
+Full screen	USPWindow		Full screen
+Help	USPWindow		Help
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Kempson mouse grab
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Mode 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Mouse grabbed (Alt+G)
+Mute	USPWindow		Mute
+OK	USPWindow		OK
+Open file…	USPWindow		Open file…
+Open from web…	USPWindow		Open from web…
+Open…	USPWindow		Open…
+OSD keyboard	USPWindow		OSD keyboard
+OSD menu	USPWindow		OSD menu
+Pause	USPWindow		Pause
+Paused	USPWindow		Paused
+QAOP + Space	USPWindow		QAOP + Space
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Quick load
+Quick load FAILED	USPWindow		Quick load FAILED
+Quick load OK	USPWindow		Quick load OK
+Quick save	USPWindow		Quick save
+Quick save FAILED	USPWindow		Quick save FAILED
+Quick save OK	USPWindow		Quick save OK
+Quit	USPWindow		Quit
+Ready	USPWindow		Ready
+Register filetypes	USPWindow		Register filetypes
+Reset	USPWindow		Reset
+Reset to service ROM	USPWindow		Reset to service ROM
+Reset to usual ROM	USPWindow		Reset to usual ROM
+Save screenshot…	USPWindow		Save screenshot…
+Save slot	USPWindow		Save slot
+Save SNA snapshot…	USPWindow		Save SNA snapshot…
+Save…	USPWindow		Save…
+Screenshot save FAILED	USPWindow		Screenshot save FAILED
+Screenshot save OK	USPWindow		Screenshot save OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Smart border disabled
+Smart border enabled	USPWindow		Smart border enabled
+Smart border scale	USPWindow		Smart border scale
+Sound chip	USPWindow		Sound chip
+Start / Stop tape	USPWindow		Start / Stop tape
+Tape fast	USPWindow		Tape fast
+Tape not inserted	USPWindow		Tape not inserted
+Tape started	USPWindow		Tape started
+Tape stopped	USPWindow		Tape stopped
+View	USPWindow		View
+Virtual keyboard	USPWindow		Virtual keyboard
+Visit homepage	USPWindow		Visit homepage
+Volume	USPWindow		Volume
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR Filtering disabled
+XBR Filtering enabled	USPWindow		XBR Filtering enabled
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Cancel
+Download file	USPWebWindow		Download file
+File	USPWebWindow		File
+items	USPWebWindow		items
+Open	USPWebWindow		Open
+Open download folder	USPWebWindow		Open download folder
+Open file from web…	USPWebWindow		Open file from web…
+Keyboard layout	USPKeyboardWindow		Keyboard layout
diff --git a/platform/haiku/locales/es.catkeys b/platform/haiku/locales/es.catkeys
new file mode 100644
index 0000000..3a2d7a7
--- /dev/null
+++ b/platform/haiku/locales/es.catkeys
@@ -0,0 +1,98 @@
+1	Spanish	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Escala 100%
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k mode enabled
+200% scale	USPWindow		Escala 200%
+300% scale	USPWindow		Escala 300%
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k mode enabled
+About	USPWindow		Acerca de
+Auto launch off	USPWindow		Auto launch off
+Auto launch on	USPWindow		Auto launch on
+Auto launch programs	USPWindow		Auto launch programs
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta disk drive
+Bilinear	USPWindow		Bilinear
+Could not find app resources.\n	USPWindow		Could not find app resources.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Could not install native document mime type (%s): %s.\n
+Could not open file	USPWindow		No se pudo abrir archivo
+Could not set vector icon of mime type.\n	USPWindow		Could not set vector icon of mime type.\n
+Cursor	USPWindow		Cursor
+Cursor + Enter	USPWindow		Cursor + Enter
+Device	USPWindow		Dispositivo
+Fast tape off	USPWindow		Fast tape off
+Fast tape on	USPWindow		Fast tape on
+File	USPWindow		Archivo
+File save FAILED	USPWindow		File save FAILED
+File save OK	USPWindow		File save OK
+File was successfully opened	USPWindow		El archivo se ha abierto exitosamente
+Filetypes registered!	USPWindow		Tipos de archivo registrados.
+Filtering	USPWindow		Filtering
+Filtering disabled	USPWindow		Filtering disabled
+Filtering enabled	USPWindow		Filtering enabled
+Full screen	USPWindow		Pantalla completa
+Help	USPWindow		Ayuda
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Kempson mouse grab
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Mode 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Mouse grabbed (Alt+G)
+Mute	USPWindow		Silencio
+OK	USPWindow		Aceptar
+Open file…	USPWindow		Abrir archivo…
+Open from web…	USPWindow		Open from web…
+Open…	USPWindow		Abrir…
+OSD keyboard	USPWindow		OSD keyboard
+OSD menu	USPWindow		OSD menu
+Pause	USPWindow		Pausa
+Paused	USPWindow		Pausado
+QAOP + Space	USPWindow		QAOP + Space
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Quick load
+Quick load FAILED	USPWindow		Quick load FAILED
+Quick load OK	USPWindow		Quick load OK
+Quick save	USPWindow		Quick save
+Quick save FAILED	USPWindow		Quick save FAILED
+Quick save OK	USPWindow		Quick save OK
+Quit	USPWindow		Salir
+Ready	USPWindow		Ready
+Register filetypes	USPWindow		Register filetypes
+Reset	USPWindow		Restablecer
+Reset to service ROM	USPWindow		Reset to service ROM
+Reset to usual ROM	USPWindow		Reset to usual ROM
+Save screenshot…	USPWindow		Guardar captura de pantalla…
+Save slot	USPWindow		Save slot
+Save SNA snapshot…	USPWindow		Save SNA snapshot…
+Save…	USPWindow		Guardar…
+Screenshot save FAILED	USPWindow		Screenshot save FAILED
+Screenshot save OK	USPWindow		Screenshot save OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Smart border disabled
+Smart border enabled	USPWindow		Smart border enabled
+Smart border scale	USPWindow		Smart border scale
+Sound chip	USPWindow		Sound chip
+Start / Stop tape	USPWindow		Start / Stop tape
+Tape fast	USPWindow		Tape fast
+Tape not inserted	USPWindow		Tape not inserted
+Tape started	USPWindow		Tape started
+Tape stopped	USPWindow		Tape stopped
+View	USPWindow		View
+Virtual keyboard	USPWindow		Teclado virtual
+Visit homepage	USPWindow		Visit homepage
+Volume	USPWindow		Volumen
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR Filtering disabled
+XBR Filtering enabled	USPWindow		XBR Filtering enabled
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Cancelar
+Download file	USPWebWindow		Descargar archivo
+File	USPWebWindow		Archivo
+items	USPWebWindow		elementos
+Open	USPWebWindow		Abrir
+Open download folder	USPWebWindow		Abrir carpeta de descargas
+Open file from web…	USPWebWindow		Abrir archivo remoto…
+Keyboard layout	USPKeyboardWindow		Distribución del teclado
diff --git a/platform/haiku/locales/fr.catkeys b/platform/haiku/locales/fr.catkeys
new file mode 100644
index 0000000..6fc0b31
--- /dev/null
+++ b/platform/haiku/locales/fr.catkeys
@@ -0,0 +1,98 @@
+1	French	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Échelle 100%
+128k	USPWindow		128k
+128k mode enabled	USPWindow		Mode 128k activé
+200% scale	USPWindow		Échelle 200%
+300% scale	USPWindow		Échelle 300%
+48k	USPWindow		48k
+48k mode enabled	USPWindow		Mode 48k activé
+About	USPWindow		À propos de
+Auto launch off	USPWindow		Lancement automatique désactivé
+Auto launch on	USPWindow		Lancement automatique activé
+Auto launch programs	USPWindow		Lancement automatique des programmes
+AY Stereo	USPWindow		AY Stéréo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta disk drive
+Bilinear	USPWindow		Bilinéaire
+Could not find app resources.\n	USPWindow		Could not find app resources.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Could not install native document mime type (%s): %s.\n
+Could not open file	USPWindow		Could not open file
+Could not set vector icon of mime type.\n	USPWindow		Could not set vector icon of mime type.\n
+Cursor	USPWindow		Curseur
+Cursor + Enter	USPWindow		Cursor + Enter
+Device	USPWindow		Device
+Fast tape off	USPWindow		Fast tape off
+Fast tape on	USPWindow		Fast tape on
+File	USPWindow		Fichier
+File save FAILED	USPWindow		File save FAILED
+File save OK	USPWindow		File save OK
+File was successfully opened	USPWindow		File was successfully opened
+Filetypes registered!	USPWindow		Filetypes registered!
+Filtering	USPWindow		Filtrage
+Filtering disabled	USPWindow		Filtrage désactivé
+Filtering enabled	USPWindow		Filtrage activé
+Full screen	USPWindow		Plein écran
+Help	USPWindow		Aide
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Capture de la souris Kempston
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Mode 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Souris capturée (Alt+G)
+Mute	USPWindow		Silencieux
+OK	USPWindow		D'accord
+Open file…	USPWindow		Ouvrir un fichier...
+Open from web…	USPWindow		Ouvrir depuis la toile...
+Open…	USPWindow		Ouvrir…
+OSD keyboard	USPWindow		Clavier OSD
+OSD menu	USPWindow		Menu OSD
+Pause	USPWindow		Pause
+Paused	USPWindow		En pause
+QAOP + Space	USPWindow		QAOP + Space
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Chargement rapide
+Quick load FAILED	USPWindow		Chargement rapide ÉCHOUÉ
+Quick load OK	USPWindow		Chargement rapide RÉUSSI
+Quick save	USPWindow		Sauvegarde rapide
+Quick save FAILED	USPWindow		Sauvegarde rapide ÉCHOUÉE
+Quick save OK	USPWindow		Sauvegarde rapide RÉUSSIE
+Quit	USPWindow		Quitter
+Ready	USPWindow		Prêt
+Register filetypes	USPWindow		Register filetypes
+Reset	USPWindow		Réinitialiser
+Reset to service ROM	USPWindow		Reset to service ROM
+Reset to usual ROM	USPWindow		Reset to usual ROM
+Save screenshot…	USPWindow		Sauvegarde de capture d'écran...
+Save slot	USPWindow		Save slot
+Save SNA snapshot…	USPWindow		Save SNA snapshot…
+Save…	USPWindow		Sauvegarder…
+Screenshot save FAILED	USPWindow		Sauvegarde de la capture d'écran ÉCHOUÉE
+Screenshot save OK	USPWindow		Sauvegarde de la capture d'écran RÉUSSIE
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Bordure intelligente désactivée
+Smart border enabled	USPWindow		Bordure intelligente activée
+Smart border scale	USPWindow		Échelle de la bordure intelligente
+Sound chip	USPWindow		Puce sonore
+Start / Stop tape	USPWindow		Start / Stop tape
+Tape fast	USPWindow		Tape fast
+Tape not inserted	USPWindow		Tape not inserted
+Tape started	USPWindow		Tape started
+Tape stopped	USPWindow		Tape stopped
+View	USPWindow		Vue
+Virtual keyboard	USPWindow		Clavier virtuel
+Visit homepage	USPWindow		Visiter le site
+Volume	USPWindow		Volume
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		Filtrage XBR désactivé
+XBR Filtering enabled	USPWindow		Filtrage XBR activé
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Annuler
+Download file	USPWebWindow		Télécharger le fichier
+File	USPWebWindow		Fichier
+items	USPWebWindow		éléments
+Open	USPWebWindow		Ouvrir
+Open download folder	USPWebWindow		Ouvrir le dossier de téléchargement
+Open file from web…	USPWebWindow		Ouvrir un fichier depuis la toile...
+Keyboard layout	USPKeyboardWindow		Disposition du clavier
diff --git a/platform/haiku/locales/ru.catkeys b/platform/haiku/locales/ru.catkeys
new file mode 100755
index 0000000..5cbd2cc
--- /dev/null
+++ b/platform/haiku/locales/ru.catkeys
@@ -0,0 +1,98 @@
+1	Russian	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Масштаб 100%
+128k	USPWindow		128кб
+128k mode enabled	USPWindow		128кб режим включен
+200% scale	USPWindow		Масштаб 200%
+300% scale	USPWindow		Масштаб 300%
+48k	USPWindow		48кб
+48k mode enabled	USPWindow		48кб режим включен
+About	USPWindow		О программе
+Auto launch off	USPWindow		Автозапуск выключен
+Auto launch on	USPWindow		Автозапуск включен
+Auto launch programs	USPWindow		Автозапуск программ
+AY Stereo	USPWindow		AY Стерео
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Дисковод
+Bilinear	USPWindow		Билинейное
+Could not find app resources.\n	USPWindow		Не могу найти файлы ресурсов программы.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Иконка не найдена в ресурсах приложения (data: %p, size: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Не могу инициализировать mime-тип(%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Не могу установить mime-тип (%s): %s.\n
+Could not open file	USPWindow		Ошибка открытия файла
+Could not set vector icon of mime type.\n	USPWindow		Не могу установить иконку для mime-типа.\n
+Cursor	USPWindow		Курсор
+Cursor + Enter	USPWindow		Курсор + Enter
+Device	USPWindow		Периферия
+Fast tape off	USPWindow		Быстрая загрузка с ленты выключена
+Fast tape on	USPWindow		Быстрая загрузка с ленты включена
+File	USPWindow		Файл
+File save FAILED	USPWindow		Ошибка сохранения файла
+File save OK	USPWindow		Сохранение выполнено
+File was successfully opened	USPWindow		Файл успешно загружен
+Filetypes registered!	USPWindow		Файловые типы зарегистрированы!
+Filtering	USPWindow		Сглаживание
+Filtering disabled	USPWindow		Сглаживание выключено
+Filtering enabled	USPWindow		Сглаживание включено
+Full screen	USPWindow		Полноэкранный режим
+Help	USPWindow		Справка
+Joystick	USPWindow		Джойстик
+Kempson mouse grab	USPWindow		Кемпстон мышь (захват)
+Kempston	USPWindow		Кемпстон
+Mode 48k	USPWindow		Режим 48кб
+Mono	USPWindow		Моно
+Mouse grabbed (Alt+G)	USPWindow		Мышь захвачена (Alt+G)
+Mute	USPWindow		Без звука
+OK	USPWindow		ОК
+Open file…	USPWindow		Открыть файл…
+Open from web…	USPWindow		Открыть из интернета…
+Open…	USPWindow		Открыть…
+OSD keyboard	USPWindow		OSD клавиатура
+OSD menu	USPWindow		OSD меню
+Pause	USPWindow		Пауза
+Paused	USPWindow		Пауза
+QAOP + Space	USPWindow		QAOP + Пробел
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Быстрая загрузка
+Quick load FAILED	USPWindow		Ошибка быстрой загрузки
+Quick load OK	USPWindow		Быстрая загрузка выполнена
+Quick save	USPWindow		Быстрое сохранение
+Quick save FAILED	USPWindow		Ошибка быстрого сохранения
+Quick save OK	USPWindow		Быстрое сохранение выполнено
+Quit	USPWindow		Выход
+Ready	USPWindow		Готов
+Register filetypes	USPWindow		Зарегистрировать файловые типы
+Reset	USPWindow		Сброс
+Reset to service ROM	USPWindow		Сброс в сервисное ПЗУ
+Reset to usual ROM	USPWindow		Сброс в стандартное ПЗУ
+Save screenshot…	USPWindow		Сохранить снимок экрана…
+Save slot	USPWindow		Сохранить в слот
+Save SNA snapshot…	USPWindow		Сохранить SNA снапшот…
+Save…	USPWindow		Сохранить…
+Screenshot save FAILED	USPWindow		Ошибка сохранения снимка экрана
+Screenshot save OK	USPWindow		Снимок экрана сохранён
+Sinclair 2	USPWindow		Синклер 2
+Smart border disabled	USPWindow		Умное масштабирование выключено
+Smart border enabled	USPWindow		Умное масштабирование включено
+Smart border scale	USPWindow		Умное масштабирование бордюра
+Sound chip	USPWindow		Звуковой чип
+Start / Stop tape	USPWindow		Старт / Стоп загрузки с ленты
+Tape fast	USPWindow		Быстрая загрузка с ленты
+Tape not inserted	USPWindow		Лента отсутсвует
+Tape started	USPWindow		Лента включена
+Tape stopped	USPWindow		Лента остановлена
+View	USPWindow		Вид
+Virtual keyboard	USPWindow		Виртуальная клавиатура
+Visit homepage	USPWindow		Открыть сайт проекта
+Volume	USPWindow		Громкость
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR сглаживание выключено
+XBR Filtering enabled	USPWindow		XBR сглаживание включено
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Отмена
+Download file	USPWebWindow		Загрузить файл
+File	USPWebWindow		Файл
+items	USPWebWindow		объектов
+Open	USPWebWindow		Открыть
+Open download folder	USPWebWindow		Открыть каталог с загрузками
+Open file from web…	USPWebWindow		Открыть файл из интернета…
+Keyboard layout	USPKeyboardWindow		Виртуальная клавиатура
diff --git a/platform/haiku/locales/tr.catkeys b/platform/haiku/locales/tr.catkeys
new file mode 100755
index 0000000..ec0e447
--- /dev/null
+++ b/platform/haiku/locales/tr.catkeys
@@ -0,0 +1,98 @@
+1	Turkish	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		%100 ölçek
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k kipi etkin
+200% scale	USPWindow		%200 ölçek
+300% scale	USPWindow		%300 ölçek
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k kipi etkin
+About	USPWindow		Hakkında
+Auto launch off	USPWindow		Otomatik başlatma kapalı
+Auto launch on	USPWindow		Otomatik başlatma açık
+Auto launch programs	USPWindow		Programları otomatik başlat
+AY Stereo	USPWindow		AY iki kanallı
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta disk sürücüsü
+Bilinear	USPWindow		İki doğrusal
+Could not find app resources.\n	USPWindow		Uygulama özkaynakları bulunamadı.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Uygulama özkaynaklarında simge bulunamadı (veri: %p, boyut: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Yerel belge MIME türü ilklendirilemedi (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Yerel belge MIME türü kurulamadı (%s): %s.\n
+Could not open file	USPWindow		Dosya açılamadı
+Could not set vector icon of mime type.\n	USPWindow		MIME türünün vektör simgesi ayarlanamadı.\n
+Cursor	USPWindow		İmleç
+Cursor + Enter	USPWindow		İmleç + Giriş
+Device	USPWindow		Aygıt
+Fast tape off	USPWindow		Hızlı teyp kapalı
+Fast tape on	USPWindow		Hızlı teyp açık
+File	USPWindow		Dosya
+File save FAILED	USPWindow		Dosya kaydet BAŞARISIZ
+File save OK	USPWindow		Dosya kaydet BAŞARILI
+File was successfully opened	USPWindow		Dosya başarıyla açıldı
+Filetypes registered!	USPWindow		Dosya türleri kaydedildi!
+Filtering	USPWindow		Süzme
+Filtering disabled	USPWindow		Süzme devre dışı
+Filtering enabled	USPWindow		Süzme etkin
+Full screen	USPWindow		Tam ekran
+Help	USPWindow		Yardım
+Joystick	USPWindow		Oyun çubuğu
+Kempson mouse grab	USPWindow		Kempson fare yakalama
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		48k kipi
+Mono	USPWindow		Tek kanallı
+Mouse grabbed (Alt+G)	USPWindow		Fare yakalandı (Alt+G)
+Mute	USPWindow		Sessize al
+OK	USPWindow		Tamam
+Open file…	USPWindow		Dosya aç…
+Open from web…	USPWindow		İnternetten dosya aç…
+Open…	USPWindow		Aç…
+OSD keyboard	USPWindow		Ekran üzeri klavye
+OSD menu	USPWindow		Ekran üzeri menü
+Pause	USPWindow		Duraklat
+Paused	USPWindow		Duraklatıldı
+QAOP + Space	USPWindow		QAOP + Boşluk
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Hızlı yükle
+Quick load FAILED	USPWindow		Hızlı yükle BAŞARISIZ
+Quick load OK	USPWindow		Hızlı yükle BAŞARILI
+Quick save	USPWindow		Hızlı yükle
+Quick save FAILED	USPWindow		Hızlı kaydet BAŞARISIZ
+Quick save OK	USPWindow		Hızlı kaydet BAŞARILI
+Quit	USPWindow		Çık
+Ready	USPWindow		Hazır
+Register filetypes	USPWindow		Dosya türlerini kaydet
+Reset	USPWindow		Sıfırla
+Reset to service ROM	USPWindow		Servis ROM"una sıfırla
+Reset to usual ROM	USPWindow		Olağan ROM'a sıfırla
+Save screenshot…	USPWindow		Ekran görüntüsü kaydet…
+Save slot	USPWindow		Yuva kaydet
+Save SNA snapshot…	USPWindow		SNA ekran görüntüsü kaydet…
+Save…	USPWindow		Kaydet…
+Screenshot save FAILED	USPWindow		Ekran görüntüsü kaydet BAŞARISIZ
+Screenshot save OK	USPWindow		Ekran görüntüsü kaydet BAŞARILI
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Akıllı kenar devre dışı
+Smart border enabled	USPWindow		Akıllı kenar etkin
+Smart border scale	USPWindow		Akıllı kenar ölçeği
+Sound chip	USPWindow		Ses yongası
+Start / Stop tape	USPWindow		Teybi başlat/durdur
+Tape fast	USPWindow		Hızlı teyp
+Tape not inserted	USPWindow		Teyp takılı değil
+Tape started	USPWindow		Teyp başlatıldı
+Tape stopped	USPWindow		Teyp durduruldu
+View	USPWindow		Görüntü
+Virtual keyboard	USPWindow		Sanal klavye
+Visit homepage	USPWindow		Ana sayfayı ziyaret et
+Volume	USPWindow		Ses düzeyi
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR süzme devre dışı
+XBR Filtering enabled	USPWindow		XBR süzme etkin
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Vazgeç
+Download file	USPWebWindow		Dosyayı indir
+File	USPWebWindow		Dosya
+items	USPWebWindow		ögeler
+Open	USPWebWindow		Aç
+Open download folder	USPWebWindow		İndirme klasörünü aç
+Open file from web…	USPWebWindow		İnternetten dosya aç…
+Keyboard layout	USPKeyboardWindow		Klavye dizilimi
diff --git a/platform/haiku/resources.rdef b/platform/haiku/resources.rdef
new file mode 100644
index 0000000..919ae1b
--- /dev/null
+++ b/platform/haiku/resources.rdef
@@ -0,0 +1,120 @@
+resource app_flags B_SINGLE_LAUNCH;
+
+resource app_signature "application/x-vnd.unreal-speccy-portable";
+
+resource app_version {
+	major  = 0,
+	middle = 0,
+	minor  = 86,
+	variety = 21,
+	internal = 0,
+	short_info = "Unreal Speccy Portable",
+	long_info = "Portable ZX-Spectrum emulator"
+};
+
+resource file_types message {
+	"types" = "application/x-spectrum-sna",
+	"types" = "application/x-spectrum-z80",
+	"types" = "application/x-spectrum-trd",
+	"types" = "application/x-spectrum-udi",
+	"types" = "application/x-spectrum-fdi",
+	"types" = "application/x-spectrum-scl",
+	"types" = "application/x-spectrum-tap",
+	"types" = "application/x-spectrum-tzx"
+};
+
+resource vector_icon {
+	$"6E6369660A050003FF000003FFE9000335FF000377C9F6020016033A7CA23D5A"
+	$"7DBEF0223C2DC34B1DB3499FBD000136EEFF4602001602BCFDFBBDC23F3DB9F8"
+	$"BCF765472A854C1EE00001FF46020016023DB67E3DE576BC38853C1DC048E572"
+	$"402EE000FFFF2705FF0401690D0208303530BA6430BDCF304B30C1AD30C51A35"
+	$"50BA5D50BDDC504B50C1BB50C50A50504B50C51A50C1B7503550BDD750BA554B"
+	$"30C52130C1AF303530BDCF30BA5D300A04234E235A6647663A0A042D383B3157"
+	$"4648500804373B34393A363D380802383839390804383D3F393B3F423B080242"
+	$"3C473F0802453D3E4208044546424448404B4208024542484404053A0146484D"
+	$"434E464F454C484A4B0A04485548505646564B0A042E38484F48552E3D0C0A09"
+	$"01000241A71A00000000000041971AC8EE34C8BE340A0501000241671A000000"
+	$"00000041671AC8EE34C8EE340A010101023F381B0000000000003EA0CA41072A"
+	$"BEA70C0A020101023F381B0000000000003E81CF3F64FC4616710A030101023F"
+	$"381B0000000000003E62D43FF3BD4814BC0A040101023F381B0000000000003E"
+	$"154D4242494944690A00010012418615000000000000418615C92C2AC92C2A01"
+	$"178200040A070102024059E8000000000000403489C65D18C604D30A00080403"
+	$"05070608090A124070D6000000000000406B28C695A0C7251D01178103040A08"
+	$"08040305070608090A124059E8000000000000403489C65D18C604D301178103"
+	$"040A06010C024059E8000000000000403489C65D18C604D30A00010B024059E8"
+	$"000000000000403489C65D18C604D3"
+};
+
+resource(0, "disk_icon") #'VICN' array {
+	$"6E636966070101000069050102001602386AE138EB85B8EB85386AE1498F854A"
+	$"0B99007AFF1C0200160239C66636A7AEB6A7AE39C6664B6D5C48CB0A003AFF5D"
+	$"02001602B715C2BA87FF3A87FFB715C24567AE4A563D0175FEC402000602371F"
+	$"433A82A6BD80923A2D884BFDA5487CE900FFFFFFFFE8E6B60200060831F0F537"
+	$"B9D9BB38D23568794B3BC84AF95A00FF000025FF000033FFAA0062FF94007167"
+	$"FF44A435FF06B100AAFFFF00AAFF0C0605FF00424042C334C400405E40C83F40"
+	$"5E405E455E45C8C84C495AC64153C2AB5A420608FF7F43584358C400C6645A42"
+	$"C70DC3775AC0475A405AC004C5FE3C3B34C1DF38BAB6BD5FB49FC22DB7AABFC6"
+	$"B49CC2B12449B49AC2D1B8B6C5324358BCD3C7734358580607FF1F425642564A"
+	$"C5985A4052C2ABC5FE3C3B34C1DF38BAB6BD5FB49FC22DB7AABFC6B491C286B4"
+	$"77C33AB484C2E0B87EC4FD4256BC85C6C04256560606FF074258425838C77324"
+	$"492EC5322448244724482EC443425538C66442C8A5425842C8C84258580606FF"
+	$"07425942594AC6A75A4252C39A5AC0045A405AC04852C2AB42564AC59842C92E"
+	$"425942C90B4259590A04523E4C4336393B350606BA0E374D3A4A39473C48BC6D"
+	$"C25C3648334B334E314DBB94C5D508023B36463B080239383F3B0802413C483F"
+	$"020441454343BF84C25F3B463E4738453A413942BDFDBF8440403E3F42410A03"
+	$"35504D4C4356090A00010002401A05000000000000407152C0333BC6BB0D0A01"
+	$"02010A12401A05000000000000407152C0333BC6BB0D01178400040A0402020A"
+	$"02401A05000000000000407152C0333BC6BB0D0A03010402401A050000000000"
+	$"00407152C0333BC6BB0D0A02010302402B16000000000000407152C0777FC67B"
+	$"0D0A05010502401A05000000000000407152C0333BC6BB0D0A02010602401A05"
+	$"000000000000407152C0333BC6BB0D0A010309080712401A0500000000000040"
+	$"7152C0333BC6BB0D01178100040A06010B02401A05000000000000407152C033"
+	$"3BC6BB0D"
+};
+
+resource(1, "tape_icon") #'VICN' array {
+	$"6E636966090101000070030100000200160239C6663B870ABB870A39C666499A"
+	$"8F4A45700068FF3902001602B85851B787AE3787AEB858514A6A664BA1470050"
+	$"FF2202001602390B853BB2E1BBB2E1390B854AC58549117000AEFF7C02001602"
+	$"3AF23D3AB4CCBAB4CC3AF23D4A3828497614008EFF5A02001603BA2D6ABA1981"
+	$"38806BB898234A141B4A559E00C9ED73FF21020006082D6C4836BE03BB3F5E32"
+	$"06DF4AFFBE4A42EA00FFF8E333FF000047FFAA0071FF94008167FF44B035FF06"
+	$"C400AAFFFF00AAFF01603D0FBD0E0607FF1F465A465AC2CE5A4B5AC3775A52C7"
+	$"30604459C443CB6FC0D05840CA60C047524046404C4046C334465A46C6A7465A"
+	$"5A060ABFA207352EB8D7BAB4C047BA6F5A3EC532BD185AC0035A445AC047C773"
+	$"C400465740543D294A28482245224522C0AD3E0A0E46563F533D542A4A274722"
+	$"45223F27412A413D4A3F4D46504656465606049F465646C73046565A445A445A"
+	$"3F3E46500608BEAA223F352EB923BA73C047BA6F5A3EC532BD18C7C4C10F4750"
+	$"3F4D3D4A2A4128420A04303E41463F4C2A410606FF0737363736BB8036343834"
+	$"BC1E34BD00373ABB803ABCD23A3A383ABD003ABC1E3736BCD2363736360606FF"
+	$"0748BEB448BEB4C246BEB445BF8045BF0F45BFF048C04CC246C04CC398C04C4B"
+	$"BF804BBFF04BBF0F48BEB4C398BEB448BEB4BEB40A044140393C3D38453C0802"
+	$"3633503F0A0423412C462C4923440A042E47394D39502E4A0A043B4E45534556"
+	$"3B5102062E3B303C293932332E36372F393237313B334F3C4D3B513D5440573E"
+	$"51434B484D494B480E0A000100000A0101011001178422040A020102000A0301"
+	$"03000A040104000A050105000A07010D000A010106000A010107000A06010800"
+	$"0A0001091001178100040A08030A0B0C000A000106023EAAAA0000000000003E"
+	$"000041555548C0000A000106023EAAAA0000000000003E000046EAAA496000"
+};
+
+resource(2, "snapshot_icon") #'VICN' array {
+	$"6E6369660703010000010100006A0533020006023A5D2B39F8B0B9DBF03A4C0F"
+	$"48AEEA4A809100747474FF3E3D3D020016023C40A33251B1B294FA3C81FE4956"
+	$"204903D700B0FF830200160336EDEB36B94ABA0AF63A326E4A79EF4AC3E7005A"
+	$"38DCFF7E0200060A358A6B399462BB27AC371EE44AEDD24A159800D3D3D326A5"
+	$"A5A548FF060662FF000073FFAA0098FF9400B067FF44CD35FF06DC00AAFFFF00"
+	$"AAFF050A043C565A385A323C4E0A0422493C563C4E22430607AA3F422A22433C"
+	$"4E5A32512F512F50304B2F4D30492E492C482D492C0608FAFA424C3E5040513F"
+	$"C65341C6B942C7B742C74142C8A8C0F15945C8E946C61F46C71046C5A9444D45"
+	$"C52143C4BB0A073C584058425A485A4A5846564547100A010104023FCA1A0000"
+	$"00000000406BCA4906BCCA035E0A010104023FCA1A0000000000004000004814"
+	$"35C780000A010104023FCA1A00000000000040000046435EC500000A01010402"
+	$"3FCA1A00000000000040000040F2860000000A00030201001001178422040A02"
+	$"0100000A030101000A060102000A000103123FC7130000000000003F9C004907"
+	$"28C7E05901178422040A050103023FC7130000000000003F9C00490728C7E059"
+	$"0A000103123FC7130000000000003F9C00481563C6125801178422040A050103"
+	$"023FC7130000000000003F9C00481563C612580A000103123FC7130000000000"
+	$"003F9C0046473DC022C301178422040A050103023FC7130000000000003F9C00"
+	$"46473DC022C30A000103123FC7130000000000003F9C00411D99451350011784"
+	$"22040A050103023FC7130000000000003F9C00411D99451350"
+};
diff --git a/platform/linux/io_select_linux.cpp b/platform/linux/io_select_linux.cpp
old mode 100755
new mode 100644
index cb3d1f0..58070b7
--- a/platform/linux/io_select_linux.cpp
+++ b/platform/linux/io_select_linux.cpp
@@ -25,7 +25,11 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #include <dirent.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#ifdef __HAIKU__
+#include <errno.h>
+#else
 #include <sys/errno.h>
+#endif
 
 namespace xIo
 {
@@ -73,6 +77,11 @@ bool PathIsRoot(const char* path) {	return !strcmp(path, root_path); }
 
 bool MkDir(const char* path)
 {
+#ifdef __HAIKU__
+	struct stat st;
+	if (stat(path, &st) == 0)
+		return true;
+#endif
 	if(mkdir(path, 0777) != 0)
 	{
 		if(errno != EEXIST)
diff --git a/platform/platform.h b/platform/platform.h
index 63a179a..3fb042b 100644
--- a/platform/platform.h
+++ b/platform/platform.h
@@ -24,7 +24,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #pragma once
 
 
-#if defined(_WINDOWS) || defined(_LINUX) || defined(_MAC)
+#if defined(_WINDOWS) || defined(_LINUX) || defined(_MAC) || defined(_HAIKU)
 
 #ifndef USE_BENCHMARK
 #ifndef USE_LIBRARY
diff --git a/platform/symbian/tick.h b/platform/symbian/tick.h
old mode 100755
new mode 100644
diff --git a/platform/win/tick_qpc.h b/platform/win/tick_qpc.h
old mode 100755
new mode 100644
-- 
2.42.0


From 39c474a828d53ed59069b62805628b030e59899f Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 25 Oct 2023 21:17:52 +1000
Subject: Update catkeys from Polyglot


diff --git a/platform/haiku/locales/es-419.catkeys b/platform/haiku/locales/es-419.catkeys
new file mode 100644
index 0000000..ae6fe91
--- /dev/null
+++ b/platform/haiku/locales/es-419.catkeys
@@ -0,0 +1,98 @@
+1	Spanish (Latin American)	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Escala 100%
+128k	USPWindow		128K
+128k mode enabled	USPWindow		Modo 128K activado
+200% scale	USPWindow		Escala 200%
+300% scale	USPWindow		Escala 300%
+48k	USPWindow		48K
+48k mode enabled	USPWindow		Modo 48K activado
+About	USPWindow		Acerca de
+Auto launch off	USPWindow		Auto-lanzar: desactivado
+Auto launch on	USPWindow		Auto-lanzar: activado
+Auto launch programs	USPWindow		Auto-lanzar programas
+AY Stereo	USPWindow		AY Estéreo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Unidad de disco Beta
+Bilinear	USPWindow		Bilinear
+Could not find app resources.\n	USPWindow		No se pudo encontrar los recursos de aplicación.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		No se pudo encontrar el ícono en los recursos de aplicación (datos: %p, tamaño: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		No se pudo inicializar el tipo MIME del documento nativo (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		No se pudo instalar el tipo MIME del documento nativo (%s): %s.\n
+Could not open file	USPWindow		No se pudo abrir el archivo
+Could not set vector icon of mime type.\n	USPWindow		No se pudo establecer el ícono vectorial de tipo MIME.\n
+Cursor	USPWindow		Cursor
+Cursor + Enter	USPWindow		Cursor + Enter
+Device	USPWindow		Dispositivo
+Fast tape off	USPWindow		Cinta rápida: apagado
+Fast tape on	USPWindow		Cinta rápida: encendido
+File	USPWindow		Archivo
+File save FAILED	USPWindow		Guardar archivo FALLIDO
+File save OK	USPWindow		Guardar archivo OK
+File was successfully opened	USPWindow		El archivo se abrió correctamente
+Filetypes registered!	USPWindow		¡Tipos de archivo registrados!
+Filtering	USPWindow		Filtrado
+Filtering disabled	USPWindow		Filtrado: desactivado
+Filtering enabled	USPWindow		Filtrado: activado
+Full screen	USPWindow		Pantalla completa
+Help	USPWindow		Ayuda
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Captura de ratón Kempston
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Modo 48K
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Ratón capturado (Alt+G)
+Mute	USPWindow		Silenciado
+OK	USPWindow		Aceptar
+Open file…	USPWindow		Abrir archivo...
+Open from web…	USPWindow		Abrir desde web...
+Open…	USPWindow		Abrir…
+OSD keyboard	USPWindow		Teclado OSD
+OSD menu	USPWindow		Menú OSD
+Pause	USPWindow		Pausa
+Paused	USPWindow		En pausa
+QAOP + Space	USPWindow		QAOP + Espacio
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Carga rápida
+Quick load FAILED	USPWindow		Carga rápida FALLIDA
+Quick load OK	USPWindow		Carga rápida OK
+Quick save	USPWindow		Guardado rápido
+Quick save FAILED	USPWindow		Guardado rápido FALLIDO
+Quick save OK	USPWindow		Guardado rápido OK
+Quit	USPWindow		Salir
+Ready	USPWindow		Listo
+Register filetypes	USPWindow		Registrar tipos de archivo
+Reset	USPWindow		Restablecer
+Reset to service ROM	USPWindow		Resetear hacia ROM de servicio
+Reset to usual ROM	USPWindow		Resetear hacia ROM habitual
+Save screenshot…	USPWindow		Guardar captura de pantalla...
+Save slot	USPWindow		Ranura de guardado
+Save SNA snapshot…	USPWindow		Guardar instantánea SNA...
+Save…	USPWindow		Guardar…
+Screenshot save FAILED	USPWindow		Captura de pantalla FALLIDA
+Screenshot save OK	USPWindow		Captura de pantalla OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Borde inteligente: desactivado
+Smart border enabled	USPWindow		Borde inteligente: activado
+Smart border scale	USPWindow		Escala de borde inteligente
+Sound chip	USPWindow		Chip de sonido
+Start / Stop tape	USPWindow		Iniciar / Detener cinta
+Tape fast	USPWindow		Cinta rápida
+Tape not inserted	USPWindow		Cinta no insertada
+Tape started	USPWindow		Cinta iniciada
+Tape stopped	USPWindow		Cinta detenida
+View	USPWindow		Vista
+Virtual keyboard	USPWindow		Teclado virtual
+Visit homepage	USPWindow		Visitar página de inicio
+Volume	USPWindow		Volumen
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		Filtrado XBR: desactivado
+XBR Filtering enabled	USPWindow		Filtrado XBR: activado
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Cancelar
+Download file	USPWebWindow		Descargar archivo
+File	USPWebWindow		Archivo
+items	USPWebWindow		ítems
+Open	USPWebWindow		Abrir
+Open download folder	USPWebWindow		Abrir carpeta de descarga
+Open file from web…	USPWebWindow		Abrir archivo desde web...
+Keyboard layout	USPKeyboardWindow		Disposición del teclado
diff --git a/platform/haiku/locales/es.catkeys b/platform/haiku/locales/es.catkeys
index 3a2d7a7..82c9540 100644
--- a/platform/haiku/locales/es.catkeys
+++ b/platform/haiku/locales/es.catkeys
@@ -1,11 +1,11 @@
 1	Spanish	application/x-vnd.unreal-speccy-portable	2972438328
 100% scale	USPWindow		Escala 100%
 128k	USPWindow		128k
-128k mode enabled	USPWindow		128k mode enabled
+128k mode enabled	USPWindow		Modo 128k habilitado
 200% scale	USPWindow		Escala 200%
 300% scale	USPWindow		Escala 300%
 48k	USPWindow		48k
-48k mode enabled	USPWindow		48k mode enabled
+48k mode enabled	USPWindow		Modo 48k habilitado
 About	USPWindow		Acerca de
 Auto launch off	USPWindow		Auto launch off
 Auto launch on	USPWindow		Auto launch on
@@ -13,7 +13,7 @@ Auto launch programs	USPWindow		Auto launch programs
 AY Stereo	USPWindow		AY Stereo
 AY-3-8910	USPWindow		AY-3-8910
 Beta disk drive	USPWindow		Beta disk drive
-Bilinear	USPWindow		Bilinear
+Bilinear	USPWindow		Bilineal
 Could not find app resources.\n	USPWindow		Could not find app resources.\n
 Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
 Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
@@ -26,13 +26,13 @@ Device	USPWindow		Dispositivo
 Fast tape off	USPWindow		Fast tape off
 Fast tape on	USPWindow		Fast tape on
 File	USPWindow		Archivo
-File save FAILED	USPWindow		File save FAILED
-File save OK	USPWindow		File save OK
+File save FAILED	USPWindow		Error al guardar archivo
+File save OK	USPWindow		Archivo guardado exitosamente
 File was successfully opened	USPWindow		El archivo se ha abierto exitosamente
 Filetypes registered!	USPWindow		Tipos de archivo registrados.
-Filtering	USPWindow		Filtering
-Filtering disabled	USPWindow		Filtering disabled
-Filtering enabled	USPWindow		Filtering enabled
+Filtering	USPWindow		Filtrado
+Filtering disabled	USPWindow		Filtrado deshabilitado
+Filtering enabled	USPWindow		Filtrado habilitado
 Full screen	USPWindow		Pantalla completa
 Help	USPWindow		Ayuda
 Joystick	USPWindow		Joystick
diff --git a/platform/haiku/locales/fr.catkeys b/platform/haiku/locales/fr.catkeys
index 6fc0b31..230b4b2 100644
--- a/platform/haiku/locales/fr.catkeys
+++ b/platform/haiku/locales/fr.catkeys
@@ -12,30 +12,30 @@ Auto launch on	USPWindow		Lancement automatique activé
 Auto launch programs	USPWindow		Lancement automatique des programmes
 AY Stereo	USPWindow		AY Stéréo
 AY-3-8910	USPWindow		AY-3-8910
-Beta disk drive	USPWindow		Beta disk drive
+Beta disk drive	USPWindow		Lecteur de disque Bêta
 Bilinear	USPWindow		Bilinéaire
-Could not find app resources.\n	USPWindow		Could not find app resources.\n
-Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Could not find icon in app resources (data: %p, size: %ld).\n
-Could not init native document mime type (%s): %s.\n	USPWindow		Could not init native document mime type (%s): %s.\n
-Could not install native document mime type (%s): %s.\n	USPWindow		Could not install native document mime type (%s): %s.\n
-Could not open file	USPWindow		Could not open file
-Could not set vector icon of mime type.\n	USPWindow		Could not set vector icon of mime type.\n
+Could not find app resources.\n	USPWindow		Impossible de trouver les ressources de l'application.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Impossible de trouver l’icône dans les ressources de l'application (donnée : %p, taille : %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Impossible d'initialiser le type mime de document natif (%s) : %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Impossible d'installer le type mime de document natif (%s) : %s.\n
+Could not open file	USPWindow		Impossible d'ouvrir le fichier
+Could not set vector icon of mime type.\n	USPWindow		Impossible définir l’icône vectorielle du type mime.\n
 Cursor	USPWindow		Curseur
-Cursor + Enter	USPWindow		Cursor + Enter
-Device	USPWindow		Device
-Fast tape off	USPWindow		Fast tape off
-Fast tape on	USPWindow		Fast tape on
+Cursor + Enter	USPWindow		Curseur + Entrée
+Device	USPWindow		Appareil
+Fast tape off	USPWindow		Défilement rapide désactivé
+Fast tape on	USPWindow		Défilement rapide activé
 File	USPWindow		Fichier
-File save FAILED	USPWindow		File save FAILED
-File save OK	USPWindow		File save OK
-File was successfully opened	USPWindow		File was successfully opened
-Filetypes registered!	USPWindow		Filetypes registered!
+File save FAILED	USPWindow		La sauvegarde du fichier a ÉCHOUÉ
+File save OK	USPWindow		La sauvegarde du fichier a RÉUSSI
+File was successfully opened	USPWindow		Le fichier a été ouvert avec succès
+Filetypes registered!	USPWindow		Types de fichiers enregistrés !
 Filtering	USPWindow		Filtrage
 Filtering disabled	USPWindow		Filtrage désactivé
 Filtering enabled	USPWindow		Filtrage activé
 Full screen	USPWindow		Plein écran
 Help	USPWindow		Aide
-Joystick	USPWindow		Joystick
+Joystick	USPWindow		Manette de jeu
 Kempson mouse grab	USPWindow		Capture de la souris Kempston
 Kempston	USPWindow		Kempston
 Mode 48k	USPWindow		Mode 48k
@@ -50,7 +50,7 @@ OSD keyboard	USPWindow		Clavier OSD
 OSD menu	USPWindow		Menu OSD
 Pause	USPWindow		Pause
 Paused	USPWindow		En pause
-QAOP + Space	USPWindow		QAOP + Space
+QAOP + Space	USPWindow		QAOP + Espace
 QAOPM	USPWindow		QAOPM
 Quick load	USPWindow		Chargement rapide
 Quick load FAILED	USPWindow		Chargement rapide ÉCHOUÉ
@@ -60,13 +60,13 @@ Quick save FAILED	USPWindow		Sauvegarde rapide ÉCHOUÉE
 Quick save OK	USPWindow		Sauvegarde rapide RÉUSSIE
 Quit	USPWindow		Quitter
 Ready	USPWindow		Prêt
-Register filetypes	USPWindow		Register filetypes
+Register filetypes	USPWindow		Enregistrer les types de fichier
 Reset	USPWindow		Réinitialiser
-Reset to service ROM	USPWindow		Reset to service ROM
-Reset to usual ROM	USPWindow		Reset to usual ROM
+Reset to service ROM	USPWindow		Réinitialiser la ROM de service
+Reset to usual ROM	USPWindow		Réinitialiser la ROM habituelle
 Save screenshot…	USPWindow		Sauvegarde de capture d'écran...
-Save slot	USPWindow		Save slot
-Save SNA snapshot…	USPWindow		Save SNA snapshot…
+Save slot	USPWindow		Sauvegarder l'emplacement.
+Save SNA snapshot…	USPWindow		Sauvegarder l’instantané SNA…
 Save…	USPWindow		Sauvegarder…
 Screenshot save FAILED	USPWindow		Sauvegarde de la capture d'écran ÉCHOUÉE
 Screenshot save OK	USPWindow		Sauvegarde de la capture d'écran RÉUSSIE
@@ -75,11 +75,11 @@ Smart border disabled	USPWindow		Bordure intelligente désactivée
 Smart border enabled	USPWindow		Bordure intelligente activée
 Smart border scale	USPWindow		Échelle de la bordure intelligente
 Sound chip	USPWindow		Puce sonore
-Start / Stop tape	USPWindow		Start / Stop tape
-Tape fast	USPWindow		Tape fast
-Tape not inserted	USPWindow		Tape not inserted
-Tape started	USPWindow		Tape started
-Tape stopped	USPWindow		Tape stopped
+Start / Stop tape	USPWindow		Lancer / Arrêter le défilement
+Tape fast	USPWindow		Défilement rapide
+Tape not inserted	USPWindow		Pas de cassette insérée
+Tape started	USPWindow		Défilement lancé
+Tape stopped	USPWindow		Défilement arrêté
 View	USPWindow		Vue
 Virtual keyboard	USPWindow		Clavier virtuel
 Visit homepage	USPWindow		Visiter le site
@@ -94,5 +94,5 @@ File	USPWebWindow		Fichier
 items	USPWebWindow		éléments
 Open	USPWebWindow		Ouvrir
 Open download folder	USPWebWindow		Ouvrir le dossier de téléchargement
-Open file from web…	USPWebWindow		Ouvrir un fichier depuis la toile...
+Open file from web…	USPWebWindow		Ouvrir un fichier sur la toile...
 Keyboard layout	USPKeyboardWindow		Disposition du clavier
diff --git a/platform/haiku/locales/fur.catkeys b/platform/haiku/locales/fur.catkeys
new file mode 100644
index 0000000..0bcea3f
--- /dev/null
+++ b/platform/haiku/locales/fur.catkeys
@@ -0,0 +1,98 @@
+1	Friulian	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		scjale al 100%
+128k	USPWindow		128k
+128k mode enabled	USPWindow		modalitât 128k abilitade
+200% scale	USPWindow		scjale al 200%
+300% scale	USPWindow		scjale al 300%
+48k	USPWindow		48k
+48k mode enabled	USPWindow		modalitât 48k abilitade
+About	USPWindow		Informazions
+Auto launch off	USPWindow		Auto inviâ disativât
+Auto launch on	USPWindow		Auto inviâ ativât
+Auto launch programs	USPWindow		Auto invie i programs
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Unitât disc beta
+Bilinear	USPWindow		Bilineâr
+Could not find app resources.\n	USPWindow		Impussibil cjatâ lis risorsis de aplicazion.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Impussibil cjatâ la icone tes risorsis de aplicazion (dâts: %p, dimension: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Impussibil inizializâ il gjenar mime dal document natîf (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Impussibil instalâ il gjenar mime dal document natîf (%s): %s.\n
+Could not open file	USPWindow		Impussibil vierzi il file
+Could not set vector icon of mime type.\n	USPWindow		Impussibil configurâ la icone vetoriâl dal gjenar mime.\n
+Cursor	USPWindow		Cursôr
+Cursor + Enter	USPWindow		Cursôr + Invie
+Device	USPWindow		Dispositîf
+Fast tape off	USPWindow		Cassete svelte off
+Fast tape on	USPWindow		Cassete svelte on
+File	USPWindow		File
+File save FAILED	USPWindow		Salvament file FALÎT
+File save OK	USPWindow		Salvament file LÂT BEN
+File was successfully opened	USPWindow		Il file al è stât viert cun sucès
+Filetypes registered!	USPWindow		Gjenars di file regjistrâts!
+Filtering	USPWindow		Filtrament
+Filtering disabled	USPWindow		Filtrament disativât
+Filtering enabled	USPWindow		Filtrament ativât
+Full screen	USPWindow		Plen visôr
+Help	USPWindow		Jutori
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Prese mouse Kempson
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Modalitât 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Mouse cjapât (Alt+G)
+Mute	USPWindow		Cidin
+OK	USPWindow		Va ben
+Open file…	USPWindow		Vierç file…
+Open from web…	USPWindow		Vierç dal web…
+Open…	USPWindow		Vierç…
+OSD keyboard	USPWindow		Tastiere su schermi
+OSD menu	USPWindow		Menù su schermi
+Pause	USPWindow		Pause
+Paused	USPWindow		In pause
+QAOP + Space	USPWindow		QAOP + Spazi
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Cjariament svelt
+Quick load FAILED	USPWindow		Cjariament svelt FALÎT
+Quick load OK	USPWindow		Cjariament svelt LÂT BEN
+Quick save	USPWindow		Salvament svelt
+Quick save FAILED	USPWindow		Salvament svelt FALÎT
+Quick save OK	USPWindow		Salvament svelt LÂT BEN
+Quit	USPWindow		Jes
+Ready	USPWindow		Pront
+Register filetypes	USPWindow		Regjistre gjenars di files
+Reset	USPWindow		Ripristine
+Reset to service ROM	USPWindow		Ripristine a ROM di servizi
+Reset to usual ROM	USPWindow		Ripristine a ROM usuâl
+Save screenshot…	USPWindow		Salve videade…
+Save slot	USPWindow		Salve fressure
+Save SNA snapshot…	USPWindow		Salve istantanie SNA…
+Save…	USPWindow		Salve…
+Screenshot save FAILED	USPWindow		Salvament videade FALÎT
+Screenshot save OK	USPWindow		Salvament videade LÂT BEN
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Ôr inteligjent disativât
+Smart border enabled	USPWindow		Ôr inteligjent ativât
+Smart border scale	USPWindow		Scjale ôr inteligjent
+Sound chip	USPWindow		Chip audio
+Start / Stop tape	USPWindow		Invie / Ferme cassete
+Tape fast	USPWindow		Cassete svelte
+Tape not inserted	USPWindow		Cassete no inseride
+Tape started	USPWindow		Cassete inviade
+Tape stopped	USPWindow		Cassete fermade
+View	USPWindow		Visualize
+Virtual keyboard	USPWindow		Tastiere virtuâl
+Visit homepage	USPWindow		Visite pagjine principâl
+Volume	USPWindow		Volum
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		Filtrament XBR disativât
+XBR Filtering enabled	USPWindow		Filtrament XBR ativât
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Anule
+Download file	USPWebWindow		Discjame il file
+File	USPWebWindow		File
+items	USPWebWindow		elements
+Open	USPWebWindow		Vierç
+Open download folder	USPWebWindow		Vierç cartele discjariâts
+Open file from web…	USPWebWindow		Vierç file dal web…
+Keyboard layout	USPKeyboardWindow		Disposizion tastiere
diff --git a/platform/haiku/locales/it.catkeys b/platform/haiku/locales/it.catkeys
new file mode 100644
index 0000000..c689d03
--- /dev/null
+++ b/platform/haiku/locales/it.catkeys
@@ -0,0 +1,98 @@
+1	Italian	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		Ingrandimento al 100%
+128k	USPWindow		128k
+128k mode enabled	USPWindow		Modalità 128k abilitata
+200% scale	USPWindow		Ingrandimento al 200%
+300% scale	USPWindow		Ingrandimento al 300%
+48k	USPWindow		48k
+48k mode enabled	USPWindow		Modalità 48k abilitata
+About	USPWindow		Informazioni su
+Auto launch off	USPWindow		Avvio automatico disattivo
+Auto launch on	USPWindow		Avvio automatico attivo
+Auto launch programs	USPWindow		Avvio automatico programmi
+AY Stereo	USPWindow		Stereo AY
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Unità disco beta
+Bilinear	USPWindow		Bilineare
+Could not find app resources.\n	USPWindow		Impossibile trovare risorse app.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Impossibile trovare icona nelle risorse app (dati: %p, dimensione: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Impossibile inizializzare tipo documento MIME nativo (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Impossibile installare tipo documento MIME nativo (%s): %s.\n
+Could not open file	USPWindow		Impossibile aprire file
+Could not set vector icon of mime type.\n	USPWindow		Impossibile impostare icona vettoriale del tipo MIME.\n
+Cursor	USPWindow		Cursore
+Cursor + Enter	USPWindow		Cursore + Invio
+Device	USPWindow		Dispositivo
+Fast tape off	USPWindow		Avanzamento rapido nastro disattivo
+Fast tape on	USPWindow		Avanzamento rapido nastro attivo
+File	USPWindow		File
+File save FAILED	USPWindow		Salvataggio file KO
+File save OK	USPWindow		Salvataggio file OK
+File was successfully opened	USPWindow		Il file è stato aperto correttamente
+Filetypes registered!	USPWindow		Tipo di file registrato!
+Filtering	USPWindow		Filtro
+Filtering disabled	USPWindow		Filtro disattivo
+Filtering enabled	USPWindow		Filtro attivo
+Full screen	USPWindow		Schermo intero
+Help	USPWindow		Aiuto
+Joystick	USPWindow		Leva di comando
+Kempson mouse grab	USPWindow		Presa mouse Kempson
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Modalità 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Mouse preso (Alt+G)
+Mute	USPWindow		Silenzia
+OK	USPWindow		OK
+Open file…	USPWindow		Apri file…
+Open from web…	USPWindow		Apri dal web…
+Open…	USPWindow		Apri…
+OSD keyboard	USPWindow		Tastiera a schermo
+OSD menu	USPWindow		Menu a schermo
+Pause	USPWindow		Pausa
+Paused	USPWindow		In pausa
+QAOP + Space	USPWindow		QAOP + spazio
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Caricamento rapido
+Quick load FAILED	USPWindow		Caricamento rapido KO
+Quick load OK	USPWindow		Caricamento rapido OK
+Quick save	USPWindow		Salvataggio rapido
+Quick save FAILED	USPWindow		Salvataggio rapido KO
+Quick save OK	USPWindow		Salvataggio rapido OK
+Quit	USPWindow		Esci
+Ready	USPWindow		Pronto
+Register filetypes	USPWindow		Registra tipi di file
+Reset	USPWindow		Reimposta
+Reset to service ROM	USPWindow		Reimposta la ROM di servizio
+Reset to usual ROM	USPWindow		Reimposta la solita ROM
+Save screenshot…	USPWindow		Salva istantanea schermo…
+Save slot	USPWindow		Salva scomparto
+Save SNA snapshot…	USPWindow		Salva istantanea stato SNA…
+Save…	USPWindow		Salva…
+Screenshot save FAILED	USPWindow		Salvataggio istantanea KO
+Screenshot save OK	USPWindow		Salvataggio istantanea OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Bordo intelligente disattivo
+Smart border enabled	USPWindow		Bordo intelligente attivo
+Smart border scale	USPWindow		Ridimensionamento intelligente bordi
+Sound chip	USPWindow		Chip sonoro
+Start / Stop tape	USPWindow		Avvia / ferma nastro
+Tape fast	USPWindow		Avanzamento rapido nastro
+Tape not inserted	USPWindow		Nastro non inserito
+Tape started	USPWindow		Nastro avviato
+Tape stopped	USPWindow		Nastro fermo
+View	USPWindow		Visualizza
+Virtual keyboard	USPWindow		Tastiera virtuale
+Visit homepage	USPWindow		Visita sito web
+Volume	USPWindow		Volume
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		Filtro XBR disattivo
+XBR Filtering enabled	USPWindow		Filtro XBR attivo
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Annulla
+Download file	USPWebWindow		Scarica file
+File	USPWebWindow		File
+items	USPWebWindow		elementi
+Open	USPWebWindow		Apri
+Open download folder	USPWebWindow		Apri cartella scaricamenti
+Open file from web…	USPWebWindow		Apri file dal web…
+Keyboard layout	USPKeyboardWindow		Mappa tastiera
diff --git a/platform/haiku/locales/nb.catkeys b/platform/haiku/locales/nb.catkeys
new file mode 100644
index 0000000..ca48685
--- /dev/null
+++ b/platform/haiku/locales/nb.catkeys
@@ -0,0 +1,98 @@
+1	Norwegian	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		100% skala
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k-modus aktivert
+200% scale	USPWindow		200% skala
+300% scale	USPWindow		300% skala
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k-modus aktivert
+About	USPWindow		Om
+Auto launch off	USPWindow		Autostart av
+Auto launch on	USPWindow		Autostart på
+Auto launch programs	USPWindow		Autostart programmer
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta diskstasjon
+Bilinear	USPWindow		Bilinær
+Could not find app resources.\n	USPWindow		Kunne ikke finne appressurser.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Kunne ikke finne ikon i appressurser (data: %p, størrelse: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Kunne ikke initiere original mime-type (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Kunne ikke installere original mime-type for dokumentet (%s): %s.\n
+Could not open file	USPWindow		Kunne ikke åpne filen
+Could not set vector icon of mime type.\n	USPWindow		Kunne ikke sette vektor-ikon for mime-typen.\n
+Cursor	USPWindow		Musepeker
+Cursor + Enter	USPWindow		Musepeker + Enter
+Device	USPWindow		Enhet
+Fast tape off	USPWindow		Fast tape off
+Fast tape on	USPWindow		Fast tape on
+File	USPWindow		Fil
+File save FAILED	USPWindow		Fillagring MISLYKTES
+File save OK	USPWindow		Fillagring OK
+File was successfully opened	USPWindow		Filen ble åpnet
+Filetypes registered!	USPWindow		Filtyper registrert!
+Filtering	USPWindow		Filtrering
+Filtering disabled	USPWindow		Filtrering deaktivert
+Filtering enabled	USPWindow		Filtrering aktivert
+Full screen	USPWindow		Fullskjerm
+Help	USPWindow		Hjelp
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Kempson mouse grab
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		48k-modus
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Mouse grabbed (Alt+G)
+Mute	USPWindow		Mute
+OK	USPWindow		OK
+Open file…	USPWindow		Åpne fil…
+Open from web…	USPWindow		Åpne fra nettet…
+Open…	USPWindow		Åpne…
+OSD keyboard	USPWindow		OSD keyboard
+OSD menu	USPWindow		OSD menu
+Pause	USPWindow		Pause
+Paused	USPWindow		Pauset
+QAOP + Space	USPWindow		QAOP + Space
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Quick load
+Quick load FAILED	USPWindow		Quick load FAILED
+Quick load OK	USPWindow		Quick load OK
+Quick save	USPWindow		Hurtiglagring
+Quick save FAILED	USPWindow		Hurtiglagring MISLYKTES
+Quick save OK	USPWindow		Hurtiglagring OK
+Quit	USPWindow		Avslutt
+Ready	USPWindow		Klar
+Register filetypes	USPWindow		Registrer filtyper
+Reset	USPWindow		Nullstill
+Reset to service ROM	USPWindow		Reset to service ROM
+Reset to usual ROM	USPWindow		Reset to usual ROM
+Save screenshot…	USPWindow		Lagre skjermbilde…
+Save slot	USPWindow		Save slot
+Save SNA snapshot…	USPWindow		Save SNA snapshot…
+Save…	USPWindow		Lagre…
+Screenshot save FAILED	USPWindow		Lagring av skjermbilde MISLYKTES
+Screenshot save OK	USPWindow		Lagring av skjermbilde OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Smart ramme deaktivert
+Smart border enabled	USPWindow		Smart ramme aktivert
+Smart border scale	USPWindow		Smart ramme skala
+Sound chip	USPWindow		Sound chip
+Start / Stop tape	USPWindow		Start / Stopp bånd
+Tape fast	USPWindow		Tape fast
+Tape not inserted	USPWindow		Bånd ikke satt inn
+Tape started	USPWindow		Bånd startet
+Tape stopped	USPWindow		Bånd stoppet
+View	USPWindow		Vis
+Virtual keyboard	USPWindow		Virtual keyboard
+Visit homepage	USPWindow		Visit homepage
+Volume	USPWindow		Volume
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR Filtering disabled
+XBR Filtering enabled	USPWindow		XBR Filtering enabled
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Avbryt
+Download file	USPWebWindow		Last ned fil
+File	USPWebWindow		Fil
+items	USPWebWindow		elementer
+Open	USPWebWindow		Åpne
+Open download folder	USPWebWindow		Åpne nedlastingsmappe
+Open file from web…	USPWebWindow		Åpne fil fra nettet…
+Keyboard layout	USPKeyboardWindow		Tastaturoppsett
diff --git a/platform/haiku/locales/sv.catkeys b/platform/haiku/locales/sv.catkeys
new file mode 100644
index 0000000..92c45b3
--- /dev/null
+++ b/platform/haiku/locales/sv.catkeys
@@ -0,0 +1,98 @@
+1	Swedish	application/x-vnd.unreal-speccy-portable	2972438328
+100% scale	USPWindow		100% skala
+128k	USPWindow		128k
+128k mode enabled	USPWindow		128k-läge aktiverat
+200% scale	USPWindow		200% skala
+300% scale	USPWindow		300% skala
+48k	USPWindow		48k
+48k mode enabled	USPWindow		48k läge aktiverat
+About	USPWindow		Om
+Auto launch off	USPWindow		Autostart av
+Auto launch on	USPWindow		Automatisk start på
+Auto launch programs	USPWindow		Starta program automatiskt
+AY Stereo	USPWindow		AY Stereo
+AY-3-8910	USPWindow		AY-3-8910
+Beta disk drive	USPWindow		Beta diskenhet
+Bilinear	USPWindow		Bilinjär
+Could not find app resources.\n	USPWindow		Det gick inte att hitta appresurser.\n
+Could not find icon in app resources (data: %p, size: %ld).\n	USPWindow		Det gick inte att hitta ikonen i appresurser (data: %p, storlek: %ld).\n
+Could not init native document mime type (%s): %s.\n	USPWindow		Kunde inte initiera inbyggd dokumentmime-typ (%s): %s.\n
+Could not install native document mime type (%s): %s.\n	USPWindow		Kunde inte installera inbyggd dokumentmime-typ (%s): %s.\n
+Could not open file	USPWindow		Kunde inte öppna filen
+Could not set vector icon of mime type.\n	USPWindow		Det gick inte att ställa in vektorikon av mimetyp.\n
+Cursor	USPWindow		Markör
+Cursor + Enter	USPWindow		Markör + Enter
+Device	USPWindow		Enhet
+Fast tape off	USPWindow		Snabb tejp av
+Fast tape on	USPWindow		Snabb tejp på
+File	USPWindow		Fil
+File save FAILED	USPWindow		Spara fil misslyckades
+File save OK	USPWindow		Spara fil OK
+File was successfully opened	USPWindow		Filen har öppnats
+Filetypes registered!	USPWindow		Filtyper registrerade!
+Filtering	USPWindow		Filtering
+Filtering disabled	USPWindow		Filtrering inaktiverad
+Filtering enabled	USPWindow		Filtrering aktiverad
+Full screen	USPWindow		Fullskärm
+Help	USPWindow		Hjälp
+Joystick	USPWindow		Joystick
+Kempson mouse grab	USPWindow		Kempson-musgrepp
+Kempston	USPWindow		Kempston
+Mode 48k	USPWindow		Läge 48k
+Mono	USPWindow		Mono
+Mouse grabbed (Alt+G)	USPWindow		Musen greps (Alt+G)
+Mute	USPWindow		Tyst
+OK	USPWindow		OK
+Open file…	USPWindow		Öppna fil…
+Open from web…	USPWindow		Öppna från webben...
+Open…	USPWindow		Öppen…
+OSD keyboard	USPWindow		OSD-tangentbord
+OSD menu	USPWindow		OSD-menyn
+Pause	USPWindow		Paus
+Paused	USPWindow		Pausad
+QAOP + Space	USPWindow		QAOP + Mellanslag
+QAOPM	USPWindow		QAOPM
+Quick load	USPWindow		Snabb laddning
+Quick load FAILED	USPWindow		Snabb laddning MISSLYCKADES
+Quick load OK	USPWindow		Snabb laddning OK
+Quick save	USPWindow		Snabbspara
+Quick save FAILED	USPWindow		Snabbspara MISSLYCKADES
+Quick save OK	USPWindow		Snabbspara OK
+Quit	USPWindow		Avbryt
+Ready	USPWindow		Redo
+Register filetypes	USPWindow		Registrera filtyper
+Reset	USPWindow		Återställa
+Reset to service ROM	USPWindow		Återställ till service-ROM
+Reset to usual ROM	USPWindow		Återställ till vanligt ROM
+Save screenshot…	USPWindow		Spara skärmdump...
+Save slot	USPWindow		Spara plats
+Save SNA snapshot…	USPWindow		Spara SNA-ögonblicksbild...
+Save…	USPWindow		Spara…
+Screenshot save FAILED	USPWindow		Spara skärmdumpen MISSLYCKades
+Screenshot save OK	USPWindow		Spara skärmdump OK
+Sinclair 2	USPWindow		Sinclair 2
+Smart border disabled	USPWindow		Smart border inaktiverad
+Smart border enabled	USPWindow		Smart kantlinje aktiverad
+Smart border scale	USPWindow		Smart gränsskala
+Sound chip	USPWindow		Ljudchip
+Start / Stop tape	USPWindow		Starta/Stoppa band
+Tape fast	USPWindow		Tejpa snabbt
+Tape not inserted	USPWindow		Tejp inte isatt
+Tape started	USPWindow		Bandet startade
+Tape stopped	USPWindow		Bandet stannade
+View	USPWindow		Vy
+Virtual keyboard	USPWindow		Virtuellt tangentbord
+Visit homepage	USPWindow		Besök hemsidan
+Volume	USPWindow		Volym
+XBR	USPWindow		XBR
+XBR Filtering disabled	USPWindow		XBR-filtrering inaktiverad
+XBR Filtering enabled	USPWindow		XBR-filtrering aktiverad
+YM2149F	USPWindow		YM2149F
+Cancel	USPWebWindow		Avbryt
+Download file	USPWebWindow		Nedladdning fil
+File	USPWebWindow		Fil
+items	USPWebWindow		enheter
+Open	USPWebWindow		Öppen
+Open download folder	USPWebWindow		Öppna nedladdningsmappen
+Open file from web…	USPWebWindow		Öppna fil från webben...
+Keyboard layout	USPKeyboardWindow		Tangentbordslayout
-- 
2.42.0

