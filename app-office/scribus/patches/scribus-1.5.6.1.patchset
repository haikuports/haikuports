From da8d77a216c8855827466a9bf9d0c77de9a5e4f2 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 16 Nov 2020 21:51:24 +1000
Subject: Fix build


diff --git a/CMakeLists.txt b/CMakeLists.txt
index a8401b8..40860ff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -383,7 +383,7 @@ include(CMakeLists_Dependencies.cmake)
 ##############################################################################################################
 ########## Include Setup                                                                            ##########
 
-TEST_BIG_ENDIAN(WORDS_BIGENDIAN)
+#TEST_BIG_ENDIAN(WORDS_BIGENDIAN)
 
 CHECK_INCLUDE_FILE("dlfcn.h" HAVE_DLFCN_H)
 if(HAVE_DLFCN_H)
diff --git a/cmake/modules/CAIROConfig.cmake b/cmake/modules/CAIROConfig.cmake
index c047da3..3a35d4c 100644
--- a/cmake/modules/CAIROConfig.cmake
+++ b/cmake/modules/CAIROConfig.cmake
@@ -19,7 +19,7 @@ else(PREFIX_CAIRO)
   # use pkgconfig to get the directories and then use these values
   # in the find_path() and find_library() calls
   include(FindPkgConfig)
-  pkg_search_module(CAIRO REQUIRED libcairo>=1.14.0 cairo>=1.14.0)
+#  pkg_search_module(CAIRO REQUIRED libcairo>=1.14.0 cairo>=1.14.0)
 endif(PREFIX_CAIRO)
 
 find_path(CAIRO_INCLUDE_DIR 
diff --git a/scribus/scpaths.cpp b/scribus/scpaths.cpp
index 2f68eb5..b5918f9 100644
--- a/scribus/scpaths.cpp
+++ b/scribus/scpaths.cpp
@@ -322,6 +322,15 @@ QStringList ScPaths::spellDirs() const
 	d.setPath(linuxLocalPath);
 	if (d.exists())
 		spellDirs.append(linuxLocalPath);
+#elif defined(Q_OS_HAIKU)
+	QString haikuSystemHunspellPath("/system/data/hunspell/");
+	QString haikuUserHunspellPath("/boot/home/config/non-packaged/data/hunspell/");
+	d.setPath(haikuSystemHunspellPath);
+	if (d.exists())
+		spellDirs.append(haikuSystemHunspellPath);
+	d.setPath(haikuUserHunspellPath);
+	if (d.exists())
+		spellDirs.append(haikuUserHunspellPath);
 #endif
 	return spellDirs;
 }
@@ -388,6 +397,19 @@ QStringList ScPaths::hyphDirs() const
 	d.setPath(linuxLocalPath);
 	if (d.exists())
 		hyphDirs.append(linuxLocalPath);
+#elif defined(Q_OS_HAIKU)
+	QString haikuSystemHyphenPath("/system/data/hyphen/");
+	QString haikuSystemHunspellPath("/system/data/hunspell/");
+	QString haikuUserHunspellPath("/boot/home/config/non-packaged/data/hunspell/");
+	d.setPath(haikuSystemHyphenPath);
+	if (d.exists())
+		hyphDirs.append(haikuSystemHyphenPath);
+	d.setPath(haikuSystemHunspellPath);
+	if (d.exists())
+		hyphDirs.append(haikuSystemHunspellPath);
+	d.setPath(haikuUserHunspellPath);
+	if (d.exists())
+		hyphDirs.append(haikuUserHunspellPath);
 #endif
 	return hyphDirs;
 }
@@ -411,6 +433,9 @@ QStringList ScPaths::systemFontDirs()
 	if (d.exists())
 		fontDirs.append(roamingFontDir);
 	fontDirs.append(windowsSpecialDir(CSIDL_FONTS));
+#elif defined(Q_OS_HAIKU)
+	fontDirs.append("/system/data/fonts/ttfonts");
+	fontDirs.append("/boot/home/config/non-packaged/data/fonts");
 #endif
 	return fontDirs;
 }
diff --git a/scribus/third_party/pgf/PGFplatform.h b/scribus/third_party/pgf/PGFplatform.h
index 55a5828..f421582 100644
--- a/scribus/third_party/pgf/PGFplatform.h
+++ b/scribus/third_party/pgf/PGFplatform.h
@@ -529,7 +529,7 @@ __inline OSError FileWrite(HANDLE hFile, int *count, void *buffPtr) {
 }
 
 __inline OSError GetFPos(HANDLE hFile, UINT64 *pos) {
-	#ifdef __APPLE__
+	#if defined(__APPLE__) || defined(__HAIKU__)
 		off_t ret;
 		if ((ret = lseek(hFile, 0, SEEK_CUR)) == -1) {
 			return errno;
@@ -549,7 +549,7 @@ __inline OSError GetFPos(HANDLE hFile, UINT64 *pos) {
 }
 
 __inline OSError SetFPos(HANDLE hFile, int posMode, INT64 posOff) {
-	#ifdef __APPLE__
+	#if defined(__APPLE__) || defined(__HAIKU__)
 		if ((lseek(hFile, (off_t)posOff, posMode)) == -1) {
 			return errno;
 		} else {
diff --git a/scribus/util_debug.cpp b/scribus/util_debug.cpp
index 5adfab7..ebf0bdb 100644
--- a/scribus/util_debug.cpp
+++ b/scribus/util_debug.cpp
@@ -54,7 +54,7 @@ void tDebug(const QString& message)
  */
 void printBacktrace ( int nFrames )
 {
-#if !defined(_WIN32) && !defined(Q_OS_MAC) && !defined(Q_OS_OPENBSD) && !defined(Q_OS_FREEBSD)
+#if !defined(_WIN32) && !defined(Q_OS_MAC) && !defined(Q_OS_OPENBSD) && !defined(Q_OS_FREEBSD) && !defined(Q_OS_HAIKU)
 	void ** trace = new void*[nFrames + 1];
 	char **messages = ( char ** ) nullptr;
 	int i, trace_size = 0;
-- 
2.28.0

