From 0bb763bb5d2dacb5cf46ce34fa5ecd593d18c73c Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 15 Feb 2020 14:52:59 +0300
Subject: Make Elementary the default on Haiku


diff --git a/vcl/source/app/IconThemeSelector.cxx b/vcl/source/app/IconThemeSelector.cxx
index 225414f..a971e11 100644
--- a/vcl/source/app/IconThemeSelector.cxx
+++ b/vcl/source/app/IconThemeSelector.cxx
@@ -58,6 +58,9 @@ IconThemeSelector::GetIconThemeForDesktopEnvironment(const OUString& desktopEnvi
 #ifdef _WIN32
     (void)desktopEnvironment;
     return "colibre";
+#elif defined(__HAIKU__)
+    (void)desktopEnvironment;
+    return "elementary";
 #else
     OUString r;
     if ( desktopEnvironment.equalsIgnoreAsciiCase("plasma5") ||
-- 
2.30.2


From bcc81cc6748d015cf6cbe88a465fc8962efef46c Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Wed, 24 Oct 2018 17:01:09 +0300
Subject: Show used vcl backend on Haiku


diff --git a/vcl/source/app/svapp.cxx b/vcl/source/app/svapp.cxx
index c4c3be9..119380d 100644
--- a/vcl/source/app/svapp.cxx
+++ b/vcl/source/app/svapp.cxx
@@ -1155,7 +1155,7 @@ OUString Application::GetHWOSConfInfo()
         aDetails.append( VclResId(SV_APP_DEFAULT) );
     aDetails.append( "; " );
 
-#if (defined LINUX || defined _WIN32 || defined MACOSX)
+#if (defined LINUX || defined _WIN32 || defined MACOSX || defined (__HAIKU__))
     aDetails.append( SV_APP_VCLBACKEND );
     aDetails.append( GetToolkitName() );
     aDetails.append( "; " );
-- 
2.30.2


From a348b5a98ef5743344e48dca7002cceaa7ac6e77 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Wed, 24 Oct 2018 17:01:34 +0300
Subject: Identify Haiku in about window


diff --git a/vcl/unx/generic/app/geninst.cxx b/vcl/unx/generic/app/geninst.cxx
index b661163..329265a 100644
--- a/vcl/unx/generic/app/geninst.cxx
+++ b/vcl/unx/generic/app/geninst.cxx
@@ -70,6 +70,8 @@ OUString SalGenericInstance::getOSVersion()
         }
         fclose( pVersion );
     }
+#elif defined(__HAIKU__)
+	aKernelVer = "Haiku";
 #endif
     return aKernelVer;
 }
-- 
2.30.2


From aaca9fc6a9e04b9f47c659d10a2c69a61354da15 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Wed, 24 Oct 2018 17:02:04 +0300
Subject: Workaround a crash on quit. See Haiku #13159


diff --git a/desktop/source/app/main.c b/desktop/source/app/main.c
index 643c42a..d4b47cb 100644
--- a/desktop/source/app/main.c
+++ b/desktop/source/app/main.c
@@ -17,6 +17,12 @@
  *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
  */
 
+#ifdef __HAIKU__
+#include <unistd.h>
+#include <sys/types.h>
+#include <signal.h>
+#endif
+
 #include <sal/main.h>
 
 #include "sofficemain.h"
@@ -50,6 +56,9 @@ SAL_IMPLEMENT_MAIN() {
 #ifdef __gnu_linux__
     g_Exiting = 1;
 #endif
+#endif
+#ifdef __HAIKU__
+    kill (getpid(), SIGKILL);
 #endif
     return ret;
 }
-- 
2.30.2


From 5c40a7220191c8c1a3fac7966e04b46e4ec88f81 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 15 Feb 2020 15:04:53 +0300
Subject: Implement ShellExec on Haiku


diff --git a/shell/source/unix/exec/shellexec.cxx b/shell/source/unix/exec/shellexec.cxx
index 3daea4a..d114d79 100644
--- a/shell/source/unix/exec/shellexec.cxx
+++ b/shell/source/unix/exec/shellexec.cxx
@@ -180,6 +180,9 @@ void SAL_CALL ShellExec::execute( const OUString& aCommand, const OUString& aPar
             aBuffer.append(" -R");
         }
         aBuffer.append(" --");
+
+#elif __HAIKU__
+		aBuffer.append("open");
 #else
         // Just use xdg-open on non-Mac
         aBuffer.append("/usr/bin/xdg-open");
-- 
2.30.2


From 6bccf753a406adbafe86fa8a87636c07d37e8e14 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 20 Jul 2019 01:18:50 +0300
Subject: Comment out linking with pthread


diff --git a/solenv/gbuild/platform/unxgcc.mk b/solenv/gbuild/platform/unxgcc.mk
index 8854aab..f0489a8 100644
--- a/solenv/gbuild/platform/unxgcc.mk
+++ b/solenv/gbuild/platform/unxgcc.mk
@@ -45,9 +45,9 @@ gb_CFLAGS := \
 # At least libstdc++ (which is approximated here with !HAVE_LIBCXX) needs -pthread when including
 # various C++ headers like <thread>, see <https://gcc.gnu.org/onlinedocs/gcc-8.3.0/libstdc++/manual/
 # manual/using.html#manual.intro.using.flags>:
-ifeq ($(HAVE_LIBCXX),)
-gb_CXX_LINKFLAGS := -pthread
-endif
+#ifeq ($(HAVE_LIBCXX),)
+#gb_CXX_LINKFLAGS := -pthread
+#endif
 
 gb_CXXFLAGS := \
 	$(gb_CXXFLAGS_COMMON) \
-- 
2.30.2


From 6626f1029555b766c370b44ae41d36a358a43164 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sun, 11 Aug 2019 11:46:49 +1000
Subject: Workaround for ambiguous methods


diff --git a/include/o3tl/sorted_vector.hxx b/include/o3tl/sorted_vector.hxx
index 088f5a2..1288061 100644
--- a/include/o3tl/sorted_vector.hxx
+++ b/include/o3tl/sorted_vector.hxx
@@ -92,6 +92,17 @@ public:
         return 0;
     }
 
+    size_type erase2( const Value& x )
+    {
+        std::pair<const_iterator, bool> const ret(Find_t()(m_vector.begin(), m_vector.end(), x));
+        if (ret.second)
+        {
+            m_vector.erase(m_vector.begin() + (ret.first - m_vector.begin()));
+            return 1;
+        }
+        return 0;
+    }
+
     void erase( size_t index )
     {
         m_vector.erase(m_vector.begin() + index);
diff --git a/sc/source/core/data/attarray.cxx b/sc/source/core/data/attarray.cxx
index 8636d6b..0defdfc 100644
--- a/sc/source/core/data/attarray.cxx
+++ b/sc/source/core/data/attarray.cxx
@@ -375,7 +375,7 @@ void ScAttrArray::RemoveCondFormat( SCROW nStartRow, SCROW nEndRow, sal_uInt32 n
                     if(itr != rCondFormatData.end())
                     {
                         ScCondFormatIndexes aNewCondFormatData(rCondFormatData);
-                        aNewCondFormatData.erase(nIndex);
+                        aNewCondFormatData.erase2(nIndex);
                         ScCondFormatItem aItem( std::move(aNewCondFormatData) );
                         pPatternAttr->GetItemSet().Put( aItem );
                         SetPatternArea( nTempStartRow, nTempEndRow, std::move(pPatternAttr), true );
-- 
2.30.2


From f5df5a1d76dc4722c3b4cd8601ae715060728cb6 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sun, 11 Aug 2019 11:47:40 +1000
Subject: Add XP_HAIKU defs for xmlsec


diff --git a/svl/Library_svl.mk b/svl/Library_svl.mk
index c49417d..ec75755 100644
--- a/svl/Library_svl.mk
+++ b/svl/Library_svl.mk
@@ -95,6 +95,12 @@ $(eval $(call gb_Library_use_system_win32_libs,svl,\
     shlwapi \
 ))
 
+ifeq ($(OS),HAIKU)
+$(eval $(call gb_Library_add_defs,svl,\
+    -DXP_HAIKU=1 \
+))
+endif
+
 ifeq ($(OS),WNT)
 $(eval $(call gb_Library_add_defs,svl,\
     -DSVL_CRYPTO_MSCRYPTO \
diff --git a/xmlsecurity/Library_xsec_xmlsec.mk b/xmlsecurity/Library_xsec_xmlsec.mk
index bd2cb6a..9d6a90c 100644
--- a/xmlsecurity/Library_xsec_xmlsec.mk
+++ b/xmlsecurity/Library_xsec_xmlsec.mk
@@ -116,6 +116,12 @@ $(eval $(call gb_Library_add_defs,xsec_xmlsec,\
 	-DXMLSEC_CRYPTO_NSS \
 ))
 
+ifeq ($(OS),HAIKU)
+$(eval $(call gb_Library_add_defs,xsec_xmlsec,\
+	-DXP_HAIKU=1 \
+))
+endif
+
 ifeq ($(SYSTEM_XMLSEC),)
 $(eval $(call gb_Library_add_libs,xsec_xmlsec,\
 	$(call gb_UnpackedTarball_get_dir,xmlsec)/src/nss/.libs/libxmlsec1-nss.a \
-- 
2.30.2


From a3922f48f0e259e07ca28db04321d862d7214ca4 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 15 Feb 2020 15:08:51 +0300
Subject: Cast to boolean


diff --git a/vcl/source/filter/jpeg/jpegc.cxx b/vcl/source/filter/jpeg/jpegc.cxx
index 8a57f55..4835901 100644
--- a/vcl/source/filter/jpeg/jpegc.cxx
+++ b/vcl/source/filter/jpeg/jpegc.cxx
@@ -163,13 +163,13 @@ static void ReadJPEG(JpegStuff& rContext, JPEGReader* pJPEGReader, void* pInputS
     rContext.aOwner.set(&rContext.cinfo);
     jpeg_svstream_src(&rContext.cinfo, pInputStream);
     SourceManagerStruct *source = reinterpret_cast<SourceManagerStruct*>(rContext.cinfo.src);
-    jpeg_read_header(&rContext.cinfo, TRUE);
+    jpeg_read_header(&rContext.cinfo, static_cast<boolean>(TRUE));
 
     rContext.cinfo.scale_num = 1;
     rContext.cinfo.scale_denom = 1;
     rContext.cinfo.output_gamma = 1.0;
-    rContext.cinfo.raw_data_out = FALSE;
-    rContext.cinfo.quantize_colors = FALSE;
+    rContext.cinfo.raw_data_out = static_cast<boolean>(FALSE);
+    rContext.cinfo.quantize_colors = static_cast<boolean>(FALSE);
 
     /* change scale for preview import */
     long nPreviewWidth = previewSize.Width();
@@ -204,8 +204,8 @@ static void ReadJPEG(JpegStuff& rContext, JPEGReader* pJPEGReader, void* pInputS
         if (rContext.cinfo.scale_denom > 1)
         {
             rContext.cinfo.dct_method            = JDCT_FASTEST;
-            rContext.cinfo.do_fancy_upsampling   = FALSE;
-            rContext.cinfo.do_block_smoothing    = FALSE;
+            rContext.cinfo.do_fancy_upsampling   = static_cast<boolean>(FALSE);
+            rContext.cinfo.do_block_smoothing    = static_cast<boolean>(FALSE);
         }
     }
 
@@ -394,7 +394,7 @@ bool WriteJPEG( JPEGWriter* pJPEGWriter, void* pOutputStream,
     }
 
     jpeg_set_defaults( &cinfo );
-    jpeg_set_quality( &cinfo, static_cast<int>(nQualityPercent), FALSE );
+    jpeg_set_quality( &cinfo, static_cast<int>(nQualityPercent), static_cast<boolean>(FALSE) );
 
     cinfo.density_unit = 1;
     cinfo.X_density = rPPI.getX();
@@ -419,7 +419,7 @@ bool WriteJPEG( JPEGWriter* pJPEGWriter, void* pOutputStream,
         cinfo.comp_info[0].v_samp_factor = 2;
     }
 
-    jpeg_start_compress( &cinfo, TRUE );
+    jpeg_start_compress( &cinfo, static_cast<boolean>(TRUE) );
 
     for( nY = 0; nY < nHeight; nY++ )
     {
@@ -454,10 +454,10 @@ void Transform(void* pInputStream, void* pOutputStream, long nAngle)
     jvirt_barray_ptr* aSourceCoefArrays      = nullptr;
     jvirt_barray_ptr* aDestinationCoefArrays = nullptr;
 
-    aTransformOption.force_grayscale = FALSE;
-    aTransformOption.trim            = FALSE;
-    aTransformOption.perfect         = FALSE;
-    aTransformOption.crop            = FALSE;
+    aTransformOption.force_grayscale = static_cast<boolean>(FALSE);
+    aTransformOption.trim            = static_cast<boolean>(FALSE);
+    aTransformOption.perfect         = static_cast<boolean>(FALSE);
+    aTransformOption.crop            = static_cast<boolean>(FALSE);
 
     // Angle to transform option
     // 90 Clockwise = 270 Counterclockwise
@@ -486,7 +486,7 @@ void Transform(void* pInputStream, void* pOutputStream, long nAngle)
     aDestinationInfo.err->error_exit     = errorExit;
     aDestinationInfo.err->output_message = outputMessage;
 
-    aDestinationInfo.optimize_coding = TRUE;
+    aDestinationInfo.optimize_coding = static_cast<boolean>(TRUE);
 
     JpegDecompressOwner aDecompressOwner;
     JpegCompressOwner aCompressOwner;
@@ -506,7 +506,7 @@ void Transform(void* pInputStream, void* pOutputStream, long nAngle)
     jpeg_svstream_src (&aSourceInfo, pInputStream);
 
     jcopy_markers_setup(&aSourceInfo, aCopyOption);
-    jpeg_read_header(&aSourceInfo, TRUE);
+    jpeg_read_header(&aSourceInfo, static_cast<boolean>(TRUE));
     jtransform_request_workspace(&aSourceInfo, &aTransformOption);
 
     aSourceCoefArrays = jpeg_read_coefficients(&aSourceInfo);
@@ -516,7 +516,7 @@ void Transform(void* pInputStream, void* pOutputStream, long nAngle)
     jpeg_svstream_dest (&aDestinationInfo, pOutputStream);
 
     // Compute optimal Huffman coding tables instead of precomputed tables
-    aDestinationInfo.optimize_coding = TRUE;
+    aDestinationInfo.optimize_coding = static_cast<boolean>(TRUE);
     jpeg_write_coefficients(&aDestinationInfo, aDestinationCoefArrays);
     jcopy_markers_execute(&aSourceInfo, &aDestinationInfo, aCopyOption);
     jtransform_execute_transformation(&aSourceInfo, &aDestinationInfo, aSourceCoefArrays, &aTransformOption);
-- 
2.30.2


From a119c4663301e7455449fcc6c11f8be93697435c Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 15 Feb 2020 17:45:08 +0300
Subject: Revert fstack-protector check removal in
 9db11a8ab648f4d04e59e6bb94cd640f64835447


diff --git a/config_host.mk.in b/config_host.mk.in
index 1b5fa47..0e4d79e 100644
--- a/config_host.mk.in
+++ b/config_host.mk.in
@@ -244,6 +244,7 @@ export USING_X11=@USING_X11@
 export HAMCREST_JAR=@HAMCREST_JAR@
 export HAVE_BROKEN_GCC_WMAYBE_UNINITIALIZED=@HAVE_BROKEN_GCC_WMAYBE_UNINITIALIZED@
 export HAVE_GCC_AVX=@HAVE_GCC_AVX@
+export HAVE_GCC_STACK_PROTECTOR_STRONG=@HAVE_GCC_STACK_PROTECTOR_STRONG@
 export HAVE_GCC_BUILTIN_ATOMIC=@HAVE_GCC_BUILTIN_ATOMIC@
 export HAVE_GCC_BUILTIN_FFS=@HAVE_GCC_BUILTIN_FFS@
 export HAVE_GCC_FNO_ENFORCE_EH_SPECS=@HAVE_GCC_FNO_ENFORCE_EH_SPECS@
diff --git a/configure.ac b/configure.ac
index 388bee3..352aa6a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -6213,6 +6213,17 @@ if test "$GCC" = "yes" -o "$COM_IS_CLANG" = TRUE; then
         AC_MSG_RESULT([no])
     fi
 
+    AC_MSG_CHECKING([whether $CC_BASE supports -fstack-protector-strong])
+    save_CFLAGS=$CFLAGS
+    CFLAGS="$CFLAGS -O0 -Werror -fstack-protector-strong"
+    AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[ char a[8]; a[7] = 0; ]])],[ HAVE_GCC_STACK_PROTECTOR_STRONG=TRUE ],[])
+    CFLAGS=$save_CFLAGS
+    if test "$HAVE_GCC_STACK_PROTECTOR_STRONG" = "TRUE"; then
+        AC_MSG_RESULT([yes])
+    else
+        AC_MSG_RESULT([no])
+    fi
+
     AC_MSG_CHECKING([whether $CC_BASE supports atomic functions])
     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[
     int v = 0;
@@ -6384,6 +6395,7 @@ AC_LANG_POP([C++])
 fi
 
 AC_SUBST(HAVE_GCC_AVX)
+AC_SUBST(HAVE_GCC_STACK_PROTECTOR_STRONG)
 AC_SUBST(HAVE_GCC_BUILTIN_ATOMIC)
 AC_SUBST(HAVE_GCC_BUILTIN_FFS)
 AC_SUBST(HAVE_GCC_STACK_CLASH_PROTECTION)
diff --git a/solenv/gbuild/platform/com_GCC_defs.mk b/solenv/gbuild/platform/com_GCC_defs.mk
index 712a61d..2c3d5f1 100644
--- a/solenv/gbuild/platform/com_GCC_defs.mk
+++ b/solenv/gbuild/platform/com_GCC_defs.mk
@@ -67,7 +67,6 @@ gb_CFLAGS_COMMON := \
 	-fmessage-length=0 \
 	-fno-common \
 	-pipe \
-	-fstack-protector-strong \
 
 gb_CXXFLAGS_COMMON := \
 	-Wall \
@@ -82,7 +81,6 @@ gb_CXXFLAGS_COMMON := \
 	-fmessage-length=0 \
 	-fno-common \
 	-pipe \
-	-fstack-protector-strong \
 
 gb_CXXFLAGS_DISABLE_WARNINGS = -w
 
@@ -136,7 +134,11 @@ endif
 gb_VISIBILITY_FLAGS_CXX := -fvisibility-inlines-hidden
 gb_CXXFLAGS_COMMON += $(gb_VISIBILITY_FLAGS_CXX)
 
+ifeq ($(HAVE_GCC_STACK_PROTECTOR_STRONG),TRUE)
+gb_CFLAGS_COMMON += -fstack-protector-strong
+gb_CXXFLAGS_COMMON += -fstack-protector-strong
 gb_LinkTarget_LDFLAGS += -fstack-protector-strong
+endif
 
 ifneq ($(ENABLE_PCH),)
 ifeq ($(COM_IS_CLANG),TRUE)
-- 
2.30.2


From 7dee13bc3536e97794ffa0e226b326d26e7835da Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Tue, 9 Feb 2022 12:15:02 +0300
Subject: Add CSTDDEF include to O3TL


diff --git a/include/o3tl/lru_map.hxx b/include/o3tl/lru_map.hxx
index e822fde..33a1487 100644
--- a/include/o3tl/lru_map.hxx
+++ b/include/o3tl/lru_map.hxx
@@ -14,6 +14,7 @@
 #include <cassert>
 #include <list>
 #include <unordered_map>
+#include <cstddef>
 
 namespace o3tl
 {
-- 
2.30.2


From e6981799e2b90e34dff31190c163a10ee8e6d407 Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Tue, 9 Feb 2022 12:26:19 +0300
Subject: Fix Bison 3.8 issue with SQLbison.y


diff --git a/connectivity/source/parse/sqlbison.y b/connectivity/source/parse/sqlbison.y
index c9d423e..b444277 100644
--- a/connectivity/source/parse/sqlbison.y
+++ b/connectivity/source/parse/sqlbison.y
@@ -74,10 +74,15 @@ inline connectivity::OSQLInternalNode* newNode(const OUString& _newValue,
 
 // yyi is the internal number of the rule that is currently being reduced
 // This can be mapped to external rule number via the yyrmap.
+#if YYBISON >= 30800
+#define SQL_NEW_RULE 			newNode("", SQLNodeType::Rule, yyr1[yyrule])
+#define SQL_NEW_LISTRULE 		newNode("", SQLNodeType::ListRule, yyr1[yyrule])
+#define SQL_NEW_COMMALISTRULE   newNode("", SQLNodeType::CommaListRule, yyr1[yynrule])
+#else
 #define SQL_NEW_RULE 			newNode("", SQLNodeType::Rule, yyr1[yyn])
 #define SQL_NEW_LISTRULE 		newNode("", SQLNodeType::ListRule, yyr1[yyn])
 #define SQL_NEW_COMMALISTRULE   newNode("", SQLNodeType::CommaListRule, yyr1[yyn])
-
+#endif
 
 extern connectivity::OSQLParser* xxx_pGLOBAL_SQLPARSER;
 
-- 
2.30.2


From e942cd3ff9f320b1dc168d59179293b928a6bd3f Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Tue, 9 Feb 2022 13:15:24 +0300
Subject: Fix GCC11/12 issue with SAL_STREAM


diff --git a/include/sal/log.hxx b/include/sal/log.hxx
index 00d533a..1618222 100644
--- a/include/sal/log.hxx
+++ b/include/sal/log.hxx
@@ -161,13 +161,12 @@ inline char const * unwrapStream(SAL_UNUSED_PARAMETER StreamIgnore const &) {
 
     @since LibreOffice 3.5
 */
-#if defined _LIBCPP_VERSION || (defined _MSC_VER && _MSC_VER >= 1915)
+#if defined _LIBCPP_VERSION || (defined _GLIBCXX_RELEASE && _GLIBCXX_RELEASE >= 12) \
+#if defined _LIBCPP_VERSION \
+	|| (defined _GLIBCXX_RELEASE >= 12 || (_GLIBCXX_RELEASE == 11 && __GLIBCXX__ > 20210428))) \
+	|| (defined _MSC_VER && _MSC_VER >= 1915)
 #define SAL_STREAM(stream) \
-    (::std::ostringstream() << stream).str()
-#else
-#define SAL_STREAM(stream) \
-    (dynamic_cast< ::std::ostringstream & >(::std::ostringstream() << stream).str())
-#endif
+	(::std::ostringstream() << stream).str()
 
 /**
     @page sal_log Basic logging functionality.
-- 
2.30.2


From 35e272a5c21f7b1b36b58b3693b5d880cb22a6ee Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Sun, 20 Dec 2020 12:05:51 +1000
Subject: Upgrade orcus to 0.16


diff --git a/RepositoryExternal.mk b/RepositoryExternal.mk
index 9597ccc..3b51851 100644
--- a/RepositoryExternal.mk
+++ b/RepositoryExternal.mk
@@ -3247,7 +3247,7 @@ $(call gb_LinkTarget_set_include,$(1),\
 )
 
 $(call gb_LinkTarget_add_libs,$(1),\
-       -L$(call gb_UnpackedTarball_get_dir,liborcus)/src/liborcus/.libs -lorcus-0.15 \
+       -L$(call gb_UnpackedTarball_get_dir,liborcus)/src/liborcus/.libs -lorcus-0.16 \
 )
 
 $(if $(SYSTEM_BOOST), \
@@ -3266,7 +3266,7 @@ $(call gb_LinkTarget_set_include,$(1),\
 )
 
 $(call gb_LinkTarget_add_libs,$(1),\
-	-L$(call gb_UnpackedTarball_get_dir,liborcus)/src/parser/.libs -lorcus-parser-0.15 \
+	-L$(call gb_UnpackedTarball_get_dir,liborcus)/src/parser/.libs -lorcus-parser-0.16 \
 )
 
 endef
diff --git a/configure.ac b/configure.ac
index 352aa6a..9ec656d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -9711,7 +9711,7 @@ AC_SUBST(ENABLE_FUZZERS)
 dnl ===================================================================
 dnl Orcus
 dnl ===================================================================
-libo_CHECK_SYSTEM_MODULE([orcus],[ORCUS],[liborcus-0.15 >= 0.15.0])
+libo_CHECK_SYSTEM_MODULE([orcus],[ORCUS],[liborcus-0.16 >= 0.16.0])
 if test "$with_system_orcus" != "yes"; then
     if test "$SYSTEM_BOOST" = "TRUE"; then
         # ===========================================================
diff --git a/download.lst b/download.lst
index 856885c..3dc62fe 100644
--- a/download.lst
+++ b/download.lst
@@ -196,8 +196,8 @@ export OPENLDAP_SHA256SUM := cdd6cffdebcd95161a73305ec13fc7a78e9707b46ca9f84fb89
 export OPENLDAP_TARBALL := openldap-2.4.45.tgz
 export OPENSSL_SHA256SUM := 14cb464efe7ac6b54799b34456bd69558a749a4931ecfd9cf9f71d7881cac7bc
 export OPENSSL_TARBALL := openssl-1.0.2t.tar.gz
-export ORCUS_SHA256SUM := 0dd26f3f2e611c51df9ee02d6dbf08887989eaa417b73f6877cd0d94df795fc2
-export ORCUS_TARBALL := liborcus-0.15.3.tar.gz
+export ORCUS_SHA256SUM := 854c6ec167ace59baa2984e175bac7b5b2af91bfde4bb10d2088b87a51ed76ec
+export ORCUS_TARBALL := liborcus-0.16.0.tar.bz2
 export OWNCLOUD_ANDROID_LIB_SHA256SUM := b18b3e3ef7fae6a79b62f2bb43cc47a5346b6330f6a383dc4be34439aca5e9fb
 export OWNCLOUD_ANDROID_LIB_TARBALL := owncloud-android-library-0.9.4-no-binary-deps.tar.gz
 export PAGEMAKER_SHA256SUM := 66adacd705a7d19895e08eac46d1e851332adf2e736c566bef1164e7a442519d
diff --git a/external/liborcus/0001-Mark-all-untentionally-unused-variables.patch b/external/liborcus/0001-Mark-all-untentionally-unused-variables.patch
new file mode 100644
index 0000000..b0f6a57
--- /dev/null
+++ b/external/liborcus/0001-Mark-all-untentionally-unused-variables.patch
@@ -0,0 +1,376 @@
+From 6d34c41b661a9e8dddf6d08bf1f3c1fd4f5581da Mon Sep 17 00:00:00 2001
+From: Kohei Yoshida <kohei.yoshida@gmail.com>
+Date: Fri, 11 Sep 2020 21:39:09 -0400
+Subject: [PATCH] Mark all untentionally unused variables.
+
+---
+ include/orcus/css_parser.hpp       | 70 ++++++++++++++++++++++++------
+ include/orcus/csv_parser.hpp       |  5 ++-
+ include/orcus/json_parser.hpp      | 15 +++++--
+ include/orcus/sax_parser.hpp       | 35 ++++++++++++---
+ include/orcus/sax_token_parser.hpp | 20 +++++++--
+ include/orcus/yaml_parser.hpp      | 10 ++++-
+ 6 files changed, 124 insertions(+), 31 deletions(-)
+
+diff --git a/include/orcus/css_parser.hpp b/include/orcus/css_parser.hpp
+index cdfae5e0..3e96980b 100644
+--- a/include/orcus/css_parser.hpp
++++ b/include/orcus/css_parser.hpp
+@@ -31,23 +31,44 @@ namespace orcus {
+ class css_handler
+ {
+ public:
+-    void at_rule_name(const char* p, size_t n) {}
++    void at_rule_name(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+-    void simple_selector_type(const char* p, size_t n) {}
++    void simple_selector_type(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+-    void simple_selector_class(const char* p, size_t n) {}
++    void simple_selector_class(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+-    void simple_selector_pseudo_element(orcus::css::pseudo_element_t pe) {}
++    void simple_selector_pseudo_element(orcus::css::pseudo_element_t pe)
++    {
++        (void)pe;
++    }
+ 
+-    void simple_selector_pseudo_class(orcus::css::pseudo_class_t pc) {}
++    void simple_selector_pseudo_class(orcus::css::pseudo_class_t pc)
++    {
++        (void)pc;
++    }
+ 
+-    void simple_selector_id(const char* p, size_t n) {}
++    void simple_selector_id(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+     void end_simple_selector() {}
+ 
+     void end_selector() {}
+ 
+-    void combinator(orcus::css::combinator_t combinator) {}
++    void combinator(orcus::css::combinator_t combinator)
++    {
++        (void)combinator;
++    }
+ 
+     /**
+      * Called at each property name.
+@@ -55,7 +76,10 @@ public:
+      * @param p pointer to the char-array containing the property name string.
+      * @param n length of the property name string.
+      */
+-    void property_name(const char* p, size_t n) {}
++    void property_name(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+     /**
+      * Called at each ordinary property value string.
+@@ -63,7 +87,10 @@ public:
+      * @param p pointer to the char-array containing the value string.
+      * @param n length of the value string.
+      */
+-    void value(const char* p, size_t n) {}
++    void value(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+     /**
+      * Called at each RGB color value of a property.
+@@ -72,7 +99,10 @@ public:
+      * @param green value of green (0-255)
+      * @param blue value of blue (0-255)
+      */
+-    void rgb(uint8_t red, uint8_t green, uint8_t blue) {}
++    void rgb(uint8_t red, uint8_t green, uint8_t blue)
++    {
++        (void)red; (void)green; (void)blue;
++    }
+ 
+     /**
+      * Called at each RGB color value of a property with alpha transparency
+@@ -83,7 +113,10 @@ public:
+      * @param blue value of blue (0-255)
+      * @param alpha alpha transparency value
+      */
+-    void rgba(uint8_t red, uint8_t green, uint8_t blue, double alpha) {}
++    void rgba(uint8_t red, uint8_t green, uint8_t blue, double alpha)
++    {
++        (void)red; (void)green; (void)blue; (void)alpha;
++    }
+ 
+     /**
+      * Called at each HSL color value of a property.
+@@ -92,7 +125,10 @@ public:
+      * @param sat saturation
+      * @param light lightness
+      */
+-    void hsl(uint8_t hue, uint8_t sat, uint8_t light) {}
++    void hsl(uint8_t hue, uint8_t sat, uint8_t light)
++    {
++        (void)hue; (void)sat; (void)light;
++    }
+ 
+     /**
+      * Called at each HSL color value of a property with alpha transparency
+@@ -103,7 +139,10 @@ public:
+      * @param light lightness
+      * @param alpha alpha value
+      */
+-    void hsla(uint8_t hue, uint8_t sat, uint8_t light, double alpha) {}
++    void hsla(uint8_t hue, uint8_t sat, uint8_t light, double alpha)
++    {
++        (void)hue; (void)sat; (void)light; (void)alpha;
++    }
+ 
+     /**
+      * Called at each URL value of a property.
+@@ -111,7 +150,10 @@ public:
+      * @param p pointer to the char-array containing the URL value string.
+      * @param n length of the URL value string.
+      */
+-    void url(const char* p, size_t n) {}
++    void url(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+     /**
+      * Called when the parsing begins.
+diff --git a/include/orcus/csv_parser.hpp b/include/orcus/csv_parser.hpp
+index a873b0f2..27b4f924 100644
+--- a/include/orcus/csv_parser.hpp
++++ b/include/orcus/csv_parser.hpp
+@@ -47,7 +47,10 @@ public:
+      *                  the text content is guaranteed to be valid so long as
+      *                  the original CSV stream content is valid.
+      */
+-    void cell(const char* p, size_t n, bool transient) {}
++    void cell(const char* p, size_t n, bool transient)
++    {
++        (void)p; (void)n; (void)transient;
++    }
+ };
+ 
+ template<typename _Handler>
+diff --git a/include/orcus/json_parser.hpp b/include/orcus/json_parser.hpp
+index 51a3d7cc..ef22b3a8 100644
+--- a/include/orcus/json_parser.hpp
++++ b/include/orcus/json_parser.hpp
+@@ -54,7 +54,10 @@ public:
+      *                  pointer points to somewhere in the JSON stream being
+      *                  parsed.
+      */
+-    void object_key(const char* p, size_t len, bool transient) {}
++    void object_key(const char* p, size_t len, bool transient)
++    {
++        (void)p; (void)len; (void)transient;
++    }
+ 
+     /**
+      * Called when the closing curly brace of an object is encountered.
+@@ -87,14 +90,20 @@ public:
+      *                  pointer points to somewhere in the JSON stream being
+      *                  parsed.
+      */
+-    void string(const char* p, size_t len, bool transient) {}
++    void string(const char* p, size_t len, bool transient)
++    {
++        (void)p; (void)len; (void)transient;
++    }
+ 
+     /**
+      * Called when a numeric value is encountered.
+      *
+      * @param val numeric value.
+      */
+-    void number(double val) {}
++    void number(double val)
++    {
++        (void)val;
++    }
+ };
+ 
+ /**
+diff --git a/include/orcus/sax_parser.hpp b/include/orcus/sax_parser.hpp
+index 73c17d06..3b21bfdf 100644
+--- a/include/orcus/sax_parser.hpp
++++ b/include/orcus/sax_parser.hpp
+@@ -30,7 +30,10 @@ public:
+      *
+      * @param param struct containing doctype declaration data.
+      */
+-    void doctype(const orcus::sax::doctype_declaration& param) {}
++    void doctype(const orcus::sax::doctype_declaration& param)
++    {
++        (void)param;
++    }
+ 
+     /**
+      * Called when &lt;?... is encountered, where the '...' may be an
+@@ -39,28 +42,40 @@ public:
+      *
+      * @param decl name of the identifier.
+      */
+-    void start_declaration(const orcus::pstring& decl) {}
++    void start_declaration(const orcus::pstring& decl)
++    {
++        (void)decl;
++    }
+ 
+     /**
+      * Called when the closing tag (&gt;) of a &lt;?... ?&gt; is encountered.
+      *
+      * @param decl name of the identifier.
+      */
+-    void end_declaration(const orcus::pstring& decl) {}
++    void end_declaration(const orcus::pstring& decl)
++    {
++        (void)decl;
++    }
+ 
+     /**
+      * Called at the start of each element.
+      *
+      * @param elem information of the element being parsed.
+      */
+-    void start_element(const orcus::sax::parser_element& elem) {}
++    void start_element(const orcus::sax::parser_element& elem)
++    {
++        (void)elem;
++    }
+ 
+     /**
+      * Called at the end of each element.
+      *
+      * @param elem information of the element being parsed.
+      */
+-    void end_element(const orcus::sax::parser_element& elem) {}
++    void end_element(const orcus::sax::parser_element& elem)
++    {
++        (void)elem;
++    }
+ 
+     /**
+      * Called when a segment of a text content is parsed.  Each text content
+@@ -76,7 +91,10 @@ public:
+      *                  a non-text value or be interned within the scope of
+      *                  the callback</em>.
+      */
+-    void characters(const orcus::pstring& val, bool transient) {}
++    void characters(const orcus::pstring& val, bool transient)
++    {
++        (void)val; (void)transient;
++    }
+ 
+     /**
+      * Called upon parsing of an attribute of an element.  Note that <em>when
+@@ -86,7 +104,10 @@ public:
+      *
+      * @param attr struct containing attribute information.
+      */
+-    void attribute(const orcus::sax::parser_attribute& attr) {}
++    void attribute(const orcus::sax::parser_attribute& attr)
++    {
++        (void)attr;
++    }
+ };
+ 
+ /**
+diff --git a/include/orcus/sax_token_parser.hpp b/include/orcus/sax_token_parser.hpp
+index 1452bc27..6b1b1de4 100644
+--- a/include/orcus/sax_token_parser.hpp
++++ b/include/orcus/sax_token_parser.hpp
+@@ -71,7 +71,10 @@ public:
+      *
+      * @param decl struct containing the attributes of the XML declaration.
+      */
+-    void declaration(const orcus::xml_declaration_t& decl) {}
++    void declaration(const orcus::xml_declaration_t& decl)
++    {
++        (void)decl;
++    }
+ 
+     /**
+      * Called at the start of each element.
+@@ -79,7 +82,10 @@ public:
+      * @param elem struct containing the element's information as well as all
+      *             the attributes that belong to the element.
+      */
+-    void start_element(const orcus::xml_token_element_t& elem) {}
++    void start_element(const orcus::xml_token_element_t& elem)
++    {
++        (void)elem;
++    }
+ 
+     /**
+      * Called at the end of each element.
+@@ -87,7 +93,10 @@ public:
+      * @param elem struct containing the element's information as well as all
+      *             the attributes that belong to the element.
+      */
+-    void end_element(const orcus::xml_token_element_t& elem) {}
++    void end_element(const orcus::xml_token_element_t& elem)
++    {
++        (void)elem;
++    }
+ 
+     /**
+      * Called when a segment of a text content is parsed.  Each text content
+@@ -103,7 +112,10 @@ public:
+      *                  a non-text value or be interned within the scope of
+      *                  the callback</em>.
+      */
+-    void characters(const orcus::pstring& val, bool transient) {}
++    void characters(const orcus::pstring& val, bool transient)
++    {
++        (void)val; (void)transient;
++    }
+ };
+ 
+ /**
+diff --git a/include/orcus/yaml_parser.hpp b/include/orcus/yaml_parser.hpp
+index 797ebbec..8d16fbc7 100644
+--- a/include/orcus/yaml_parser.hpp
++++ b/include/orcus/yaml_parser.hpp
+@@ -72,14 +72,20 @@ public:
+      * @param p pointer to the first character of the string value.
+      * @param len length of the string value.
+      */
+-    void string(const char* p, size_t n) {}
++    void string(const char* p, size_t n)
++    {
++        (void)p; (void)n;
++    }
+ 
+     /**
+      * Called when a numeric value is encountered.
+      *
+      * @param val numeric value.
+      */
+-    void number(double val) {}
++    void number(double val)
++    {
++        (void)val;
++    }
+ 
+     /**
+      * Called when a boolean 'true' keyword is encountered.
+-- 
+2.25.1
+
diff --git a/external/liborcus/ExternalPackage_liborcus.mk b/external/liborcus/ExternalPackage_liborcus.mk
index 21dd1bf..7476918 100644
--- a/external/liborcus/ExternalPackage_liborcus.mk
+++ b/external/liborcus/ExternalPackage_liborcus.mk
@@ -12,11 +12,11 @@ $(eval $(call gb_ExternalPackage_ExternalPackage,liborcus,liborcus))
 $(eval $(call gb_ExternalPackage_use_external_project,liborcus,liborcus))
 
 ifeq ($(OS),MACOSX)
-$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-0.15.0.dylib,src/liborcus/.libs/liborcus-0.15.0.dylib))
-$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-parser-0.15.0.dylib,src/parser/.libs/liborcus-parser-0.15.0.dylib))
+$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-0.16.0.dylib,src/liborcus/.libs/liborcus-0.16.0.dylib))
+$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-parser-0.16.0.dylib,src/parser/.libs/liborcus-parser-0.16.0.dylib))
 else ifeq ($(DISABLE_DYNLOADING),)
-$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-0.15.so.0,src/liborcus/.libs/liborcus-0.15.so.0.0.0))
-$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-parser-0.15.so.0,src/parser/.libs/liborcus-parser-0.15.so.0.0.0))
+$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-0.16.so.0,src/liborcus/.libs/liborcus-0.16.so.0.0.0))
+$(eval $(call gb_ExternalPackage_add_file,liborcus,$(LIBO_LIB_FOLDER)/liborcus-parser-0.16.so.0,src/parser/.libs/liborcus-parser-0.16.so.0.0.0))
 endif
 
 # vim: set noet sw=4 ts=4:
diff --git a/external/liborcus/ExternalProject_liborcus.mk b/external/liborcus/ExternalProject_liborcus.mk
index 0bd36c3..778095e 100644
--- a/external/liborcus/ExternalProject_liborcus.mk
+++ b/external/liborcus/ExternalProject_liborcus.mk
@@ -122,8 +122,8 @@ $(call gb_ExternalProject_get_state_target,liborcus,build) :
 		   $(MAKE) \
 		$(if $(filter MACOSX,$(OS)),\
 			&& $(PERL) $(SRCDIR)/solenv/bin/macosx-change-install-names.pl shl OOO \
-				$(EXTERNAL_WORKDIR)/src/liborcus/.libs/liborcus-0.15.0.dylib \
-				$(EXTERNAL_WORKDIR)/src/parser/.libs/liborcus-parser-0.15.0.dylib \
+				$(EXTERNAL_WORKDIR)/src/liborcus/.libs/liborcus-0.16.0.dylib \
+				$(EXTERNAL_WORKDIR)/src/parser/.libs/liborcus-parser-0.16.0.dylib \
 		) \
 	)
 
diff --git a/external/liborcus/Library_orcus-parser.mk b/external/liborcus/Library_orcus-parser.mk
index d3cbddb..4e46591 100644
--- a/external/liborcus/Library_orcus-parser.mk
+++ b/external/liborcus/Library_orcus-parser.mk
@@ -63,6 +63,7 @@ $(eval $(call gb_Library_add_generated_exception_objects,orcus-parser,\
 	UnpackedTarball/liborcus/src/parser/tokens \
 	UnpackedTarball/liborcus/src/parser/types \
 	UnpackedTarball/liborcus/src/parser/xml_namespace \
+	UnpackedTarball/liborcus/src/parser/xml_writer \
 	UnpackedTarball/liborcus/src/parser/yaml_parser_base \
 	UnpackedTarball/liborcus/src/parser/zip_archive \
 	UnpackedTarball/liborcus/src/parser/zip_archive_stream \
diff --git a/external/liborcus/Library_orcus.mk b/external/liborcus/Library_orcus.mk
index ea99e75..0a0ca58 100644
--- a/external/liborcus/Library_orcus.mk
+++ b/external/liborcus/Library_orcus.mk
@@ -85,6 +85,7 @@ $(eval $(call gb_Library_add_generated_exception_objects,orcus,\
 	UnpackedTarball/liborcus/src/liborcus/odf_tokens \
 	UnpackedTarball/liborcus/src/liborcus/ods_content_xml_context \
 	UnpackedTarball/liborcus/src/liborcus/ods_content_xml_handler \
+	UnpackedTarball/liborcus/src/liborcus/ods_dde_links_context \
 	UnpackedTarball/liborcus/src/liborcus/ods_session_data \
 	UnpackedTarball/liborcus/src/liborcus/ooxml_content_types \
 	UnpackedTarball/liborcus/src/liborcus/ooxml_global \
@@ -103,6 +104,7 @@ $(eval $(call gb_Library_add_generated_exception_objects,orcus,\
 	UnpackedTarball/liborcus/src/liborcus/orcus_xls_xml \
 	UnpackedTarball/liborcus/src/liborcus/orcus_xlsx \
 	UnpackedTarball/liborcus/src/liborcus/orcus_xml \
+	UnpackedTarball/liborcus/src/liborcus/orcus_xml_impl \
 	UnpackedTarball/liborcus/src/liborcus/orcus_xml_map_def \
 	UnpackedTarball/liborcus/src/liborcus/session_context \
 	UnpackedTarball/liborcus/src/liborcus/spreadsheet_iface_util \
@@ -134,7 +136,9 @@ $(eval $(call gb_Library_add_generated_exception_objects,orcus,\
 	UnpackedTarball/liborcus/src/liborcus/xml_simple_stream_handler \
 	UnpackedTarball/liborcus/src/liborcus/xml_stream_handler \
 	UnpackedTarball/liborcus/src/liborcus/xml_stream_parser \
+	UnpackedTarball/liborcus/src/liborcus/xml_structure_mapper \
 	UnpackedTarball/liborcus/src/liborcus/xml_structure_tree \
+	UnpackedTarball/liborcus/src/liborcus/xpath_parser \
 	UnpackedTarball/liborcus/src/liborcus/yaml_document_tree \
 ))
 
diff --git a/external/liborcus/UnpackedTarball_liborcus.mk b/external/liborcus/UnpackedTarball_liborcus.mk
index e5e33b0..4736dbc 100644
--- a/external/liborcus/UnpackedTarball_liborcus.mk
+++ b/external/liborcus/UnpackedTarball_liborcus.mk
@@ -20,6 +20,7 @@ $(eval $(call gb_UnpackedTarball_add_patches,liborcus,\
 	external/liborcus/gcc9.patch.0 \
 	external/liborcus/libtool.patch.0 \
 	external/liborcus/fix-pch.patch.0 \
+	external/liborcus/0001-Mark-all-untentionally-unused-variables.patch \
 ))
 
 ifeq ($(OS),WNT)
diff --git a/external/liborcus/windows-constants-hack.patch b/external/liborcus/windows-constants-hack.patch
index 876bc16..51aabfa 100644
--- a/external/liborcus/windows-constants-hack.patch
+++ b/external/liborcus/windows-constants-hack.patch
@@ -8,7 +8,7 @@ index ae571f5..539ce18 100644
  
 -#include "constants.inl"
 +#define ORCUS_MAJOR_VERSION 0
-+#define ORCUS_MINOR_VERSION 11
++#define ORCUS_MINOR_VERSION 16
 +#define ORCUS_MICRO_VERSION 0
  
  namespace orcus {
diff --git a/sc/source/filter/inc/orcusinterface.hxx b/sc/source/filter/inc/orcusinterface.hxx
index ecf8f21..366ba5f 100644
--- a/sc/source/filter/inc/orcusinterface.hxx
+++ b/sc/source/filter/inc/orcusinterface.hxx
@@ -67,6 +67,11 @@ public:
     {
         return mnTextEncoding;
     }
+
+    ScDocumentImport& getDoc() const
+    {
+        return mrDoc;
+    }
 };
 
 class ScOrcusRefResolver : public orcus::spreadsheet::iface::import_reference_resolver
@@ -76,20 +81,27 @@ class ScOrcusRefResolver : public orcus::spreadsheet::iface::import_reference_re
 public:
     ScOrcusRefResolver( const ScOrcusGlobalSettings& rGS );
 
-    orcus::spreadsheet::address_t resolve_address(const char* p, size_t n) override;
-    orcus::spreadsheet::range_t resolve_range(const char* p, size_t n) override;
+    orcus::spreadsheet::src_address_t resolve_address(const char* p, size_t n) override;
+    orcus::spreadsheet::src_range_t resolve_range(const char* p, size_t n) override;
 };
 
 class ScOrcusNamedExpression : public orcus::spreadsheet::iface::import_named_expression
 {
     ScDocumentImport& mrDoc;
     const ScOrcusGlobalSettings& mrGlobalSettings;
-    SCTAB const mnTab; //< negative if global, else >= 0 for sheet-local named expressions.
-
+    ScAddress maBasePos;
+    OUString maName;
+    OUString maExpr;
+    const SCTAB mnTab; //< negative if global, else >= 0 for sheet-local named expressions.
 public:
     ScOrcusNamedExpression( ScDocumentImport& rDoc, const ScOrcusGlobalSettings& rGS, SCTAB nTab = -1 );
 
-    virtual void define_name(const char* p_name, size_t n_name, const char* p_exp, size_t n_exp) override;
+    void reset();
+
+    virtual void set_base_position(const orcus::spreadsheet::src_address_t& pos) override;
+    virtual void set_named_expression(const char* p_name, size_t n_name, const char* p_exp, size_t n_exp) override;
+    virtual void set_named_range(const char* p_name, size_t n_name, const char* p_range, size_t n_range) override;
+    virtual void commit() override;
 };
 
 class ScOrcusSharedStrings : public orcus::spreadsheet::iface::import_shared_strings
diff --git a/sc/source/filter/orcus/interface.cxx b/sc/source/filter/orcus/interface.cxx
index efd7f55..2f100e1 100644
--- a/sc/source/filter/orcus/interface.cxx
+++ b/sc/source/filter/orcus/interface.cxx
@@ -46,6 +46,7 @@
 #include <sal/log.hxx>
 
 #include <stylesbuffer.hxx>
+#include <orcus/exception.hpp>
 
 using namespace com::sun::star;
 
@@ -158,51 +159,54 @@ orcus::spreadsheet::formula_grammar_t ScOrcusGlobalSettings::get_default_formula
 ScOrcusRefResolver::ScOrcusRefResolver( const ScOrcusGlobalSettings& rGS ) :
     mrGlobalSettings(rGS) {}
 
-os::address_t ScOrcusRefResolver::resolve_address(const char* p, size_t n)
+os::src_address_t ScOrcusRefResolver::resolve_address(const char* p, size_t n)
 {
     OUString aStr(p, n, mrGlobalSettings.getTextEncoding());
 
     ScAddress aAddr;
-    aAddr.Parse(aStr, nullptr,
+    aAddr.Parse(aStr, &mrGlobalSettings.getDoc().getDoc(),
         formula::FormulaGrammar::extractRefConvention(
             mrGlobalSettings.getCalcGrammar()));
 
-    os::address_t ret;
-    ret.column = 0;
-    ret.row = 0;
-
-    if (aAddr.IsValid())
+    if (!aAddr.IsValid())
     {
-        ret.column = aAddr.Col();
-        ret.row = aAddr.Row();
+        std::ostringstream os;
+        os << "'" << std::string(p, n) << "' is not a valid address expression.";
+        throw orcus::invalid_arg_error(os.str());
     }
 
+    os::src_address_t ret;
+    ret.sheet = aAddr.Tab();
+    ret.column = aAddr.Col();
+    ret.row = aAddr.Row();
+
     return ret;
 }
 
-os::range_t ScOrcusRefResolver::resolve_range(const char* p, size_t n)
+os::src_range_t ScOrcusRefResolver::resolve_range(const char* p, size_t n)
 {
     OUString aStr(p, n, mrGlobalSettings.getTextEncoding());
 
     ScRange aRange;
-    aRange.Parse(aStr, nullptr,
+    aRange.Parse(aStr, &mrGlobalSettings.getDoc().getDoc(),
         formula::FormulaGrammar::extractRefConvention(
             mrGlobalSettings.getCalcGrammar()));
 
-    os::range_t ret;
-    ret.first.column = 0;
-    ret.first.row = 0;
-    ret.last.column = 0;
-    ret.last.row = 0;
-
-    if (aRange.IsValid())
+    if (!aRange.IsValid())
     {
-        ret.first.column = aRange.aStart.Col();
-        ret.first.row    = aRange.aStart.Row();
-        ret.last.column  = aRange.aEnd.Col();
-        ret.last.row     = aRange.aEnd.Row();
+        std::ostringstream os;
+        os << "'" << std::string(p, n) << "' is not a valid range expression.";
+        throw orcus::invalid_arg_error(os.str());
     }
 
+    os::src_range_t ret;
+    ret.first.sheet  = aRange.aStart.Tab();
+    ret.first.column = aRange.aStart.Col();
+    ret.first.row    = aRange.aStart.Row();
+    ret.last.sheet   = aRange.aEnd.Tab();
+    ret.last.column  = aRange.aEnd.Col();
+    ret.last.row     = aRange.aEnd.Row();
+
     return ret;
 }
 
@@ -210,20 +214,46 @@ ScOrcusNamedExpression::ScOrcusNamedExpression(
     ScDocumentImport& rDoc, const ScOrcusGlobalSettings& rGS, SCTAB nTab ) :
     mrDoc(rDoc), mrGlobalSettings(rGS), mnTab(nTab) {}
 
-void ScOrcusNamedExpression::define_name(const char* p_name, size_t n_name, const char* p_exp, size_t n_exp)
+void ScOrcusNamedExpression::reset()
+{
+    maBasePos.SetTab(0);
+    maBasePos.SetCol(0);
+    maBasePos.SetRow(0);
+    maName.clear();
+    maExpr.clear();
+}
+
+void ScOrcusNamedExpression::set_base_position(const orcus::spreadsheet::src_address_t& pos)
+{
+    maBasePos.SetTab(pos.sheet);
+    maBasePos.SetCol(pos.column);
+    maBasePos.SetRow(pos.row);
+}
+
+void ScOrcusNamedExpression::set_named_expression(const char* p_name, size_t n_name, const char* p_exp, size_t n_exp)
+{
+    maName = OUString(p_name, n_name, mrGlobalSettings.getTextEncoding());
+    maExpr = OUString(p_exp, n_exp, mrGlobalSettings.getTextEncoding());
+}
+
+void ScOrcusNamedExpression::set_named_range(const char* /*p_name*/, size_t /*n_name*/, const char* /*p_range*/, size_t /*n_range*/)
 {
-    OUString aName(p_name, n_name, mrGlobalSettings.getTextEncoding());
-    OUString aExpr(p_exp, n_exp, mrGlobalSettings.getTextEncoding());
+    throw std::runtime_error("ScOrcusNamedExpression::set_named_range not implemented yet.");
+}
 
+void ScOrcusNamedExpression::commit()
+{
     ScRangeName* pNames = mnTab >= 0 ? mrDoc.getDoc().GetRangeName(mnTab) : mrDoc.getDoc().GetRangeName();
     if (!pNames)
         return;
 
     ScRangeData* pRange = new ScRangeData(
-        &mrDoc.getDoc(), aName, aExpr, ScAddress(), ScRangeData::Type::Name,
+        &mrDoc.getDoc(), maName, maExpr, maBasePos, ScRangeData::Type::Name,
         mrGlobalSettings.getCalcGrammar());
 
     pNames->insert(pRange, false);
+
+    reset(); // make sure to reset the state for the next run.
 }
 
 ScOrcusFactory::CellStoreToken::CellStoreToken(const ScAddress& rPos, Type eType)
diff --git a/sc/source/filter/orcus/xmlcontext.cxx b/sc/source/filter/orcus/xmlcontext.cxx
index 1f80583..3215e7c 100644
--- a/sc/source/filter/orcus/xmlcontext.cxx
+++ b/sc/source/filter/orcus/xmlcontext.cxx
@@ -89,10 +89,9 @@ void populateTree(
        rTreeCtrl.set_image(*xEntry, rParam.maImgElementRepeat, -1);
     }
 
-    orcus::xml_structure_tree::entity_names_type aNames;
+    orcus::xml_structure_tree::entity_names_type aNames = rWalker.get_attributes();
 
     // Insert attributes.
-    rWalker.get_attributes(aNames);
     for (const orcus::xml_structure_tree::entity_name& rAttrName : aNames)
     {
         OUString sAttr(toString(rAttrName, rWalker));
@@ -106,7 +105,7 @@ void populateTree(
         rTreeCtrl.set_image(*xAttr, rParam.maImgAttribute, -1);
     }
 
-    rWalker.get_children(aNames);
+    aNames = rWalker.get_children();
 
     // Non-leaf if it has child elements, leaf otherwise.
     rEntryData.mbLeafNode = aNames.empty();
@@ -266,7 +265,7 @@ void ScOrcusXMLContextImpl::importXML(const ScOrcusImportXMLParam& rParam)
             std::for_each(rLink.maFieldPaths.begin(), rLink.maFieldPaths.end(),
                 [&filter](const OString& rFieldPath)
                 {
-                    filter.append_field_link(rFieldPath.getStr());
+                    filter.append_field_link(rFieldPath.getStr(), orcus::pstring());
                 }
             );
 
diff --git a/sc/source/ui/xmlsource/xmlsourcedlg.cxx b/sc/source/ui/xmlsource/xmlsourcedlg.cxx
index 2711953..ad786d3 100644
--- a/sc/source/ui/xmlsource/xmlsourcedlg.cxx
+++ b/sc/source/ui/xmlsource/xmlsourcedlg.cxx
@@ -49,8 +49,12 @@ OUString getXPath(
         if (pData)
             rNamespaces.push_back(pData->mnNamespaceID);
 
+        // element separator is '/' whereas attribute separator is '/@' in xpath.
         aBuf.insert(0, rTree.get_text(*xEntry, 0));
-        aBuf.insert(0, isAttribute(rTree, *xEntry) ? '@' : '/');
+        if (isAttribute(rTree, *xEntry))
+            aBuf.insert(0, "/@");
+        else
+            aBuf.insert(0, '/');
     }
     while (rTree.iter_parent(*xEntry));
 
-- 
2.30.2

