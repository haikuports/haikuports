SUMMARY="A YAML parser and emitter in C++"
DESCRIPTION="yaml-cpp is a YAML parser and emitter in C++ matching the YAML \
1.2 spec."
HOMEPAGE="https://github.com/jbeder/yaml-cpp/"
COPYRIGHT="2008 Jesse Beder"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://github.com/jbeder/yaml-cpp/archive/release-$portVersion.tar.gz"
CHECKSUM_SHA256="3492d9c1f4319dfd5588f60caed7cec3f030f7984386c11ed4b39f8e3316d763"
SOURCE_DIR="yaml-cpp-release-$portVersion"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%.*}"

PROVIDES="
	yaml_cpp5$secondaryArchSuffix = $portVersion
	lib:libyaml_cpp$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	yaml_cpp5${secondaryArchSuffix}_devel = $portVersion
	devel:libyaml_cpp$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	yaml_cpp5$secondaryArchSuffix == $portVersion base
	devel:libboost_system$secondaryArchSuffix
	"
CONFLICTS_devel="
	yaml_cpp${secondaryArchSuffix}_devel
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libboost_system$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:make
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	"

defineDebugInfoPackage yaml_cpp5$secondaryArchSuffix \
	"$libDir"/libyaml-cpp.so.$libVersion

BUILD()
{
	mkdir -p build && cd "$_"

	cmake .. \
		-DBUILD_SHARED_LIBS=ON \
		-DYAML_CPP_BUILD_TOOLS=OFF \
		-DCMAKE_INSTALL_PREFIX:PATH=$prefix

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	mkdir -p `dirname $includeDir` $libDir
	mv $prefix/include $includeDir

	if [ -n "$secondaryArchSuffix" ]; then
		mv $prefix/lib/libyaml-cpp* $prefix/lib/pkgconfig $libDir/
	fi

	prepareInstalledDevelLibs \
		libyaml-cpp
	fixPkgconfig

	packageEntries devel \
		"$developDir"
}

TEST()
{
	# tests make the build considerably longer
	# TODO: fail with: The current thread is not holding the mutex @0xf96b94
	# probably because gtest is not ported (also it uses bundled one)

	cd build

	cmake .. \
		-DBUILD_SHARED_LIBS=ON \
		-DYAML_CPP_BUILD_TOOLS=ON \
		-DCMAKE_INSTALL_PREFIX:PATH=$prefix

	make $jobArgs
	cd test
	./run-tests
}
