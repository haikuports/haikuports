From 437c0ed3a5a919242fa134e518e517d61cf9259b Mon Sep 17 00:00:00 2001
From: Yourself <user@shredder.fritz.box>
Date: Thu, 26 Sep 2024 14:52:09 +0200
Subject: Fix CMake build, fix server related boost issue, get Haiku version
 via uname


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4ea34f9..1e3cf82 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -66,12 +66,12 @@ if(ENABLE_SYSTEM_LUA)
 	if(NOT LUA_FOUND)
 		message(FATAL_ERROR "Lua ${Lua_FIND_VERSION_MAJOR}.${Lua_FIND_VERSION_MINOR} C++ not found. Try setting 'LUA_DIR'.")
 	endif()
-else()
-	if(NOT EXISTS "${CMAKE_SOURCE_DIR}/src/modules/lua/.git")
-		message(FATAL_ERROR "Lua submodule does not exist. You must run 'git submodule update --init --recursive' to initialize it.")
-	else()
-		message("-- Lua submodule found.")
-	endif()
+#else()
+#	if(NOT EXISTS "${CMAKE_SOURCE_DIR}/src/modules/lua/.git")
+#		message(FATAL_ERROR "Lua submodule does not exist. You must run 'git submodule update --init --recursive' to initialize it.")
+#	else()
+#		message("-- Lua submodule found.")
+#	endif()
 endif()
 
 # set what std version to use
diff --git a/src/desktop/version.cpp b/src/desktop/version.cpp
index 401f249..0522fd0 100644
--- a/src/desktop/version.cpp
+++ b/src/desktop/version.cpp
@@ -25,7 +25,7 @@
 
 #include <cstring>
 
-#if defined(__APPLE__) || defined(_X11)
+#if defined(__APPLE__) || defined(_X11) || defined(__HAIKU__)
 #include <sys/utsname.h>
 #endif
 
@@ -216,7 +216,7 @@ std::map<std::string, std::string> parse_fdo_osrelease(const std::string& path)
 
 std::string os_version()
 {
-#if defined(__APPLE__) || defined(_X11)
+#if defined(__APPLE__) || defined(_X11) || defined(__HAIKU__)
 	// Some systems, e.g. SunOS, need "struct" here
 	struct utsname u;
 
@@ -396,6 +396,12 @@ std::string os_version()
 
 	return base + " " + version + " " + windows_runtime_arch();
 
+#elif defined(__HAIKU__)
+	// POSIX uname version fallback.
+
+	return formatter() << u.sysname << ' '
+			<< u.version << ' '
+			<< u.machine;
 #else
 
 	//
diff --git a/src/server/common/server_base.cpp b/src/server/common/server_base.cpp
index 51f7796..d5c7197 100644
--- a/src/server/common/server_base.cpp
+++ b/src/server/common/server_base.cpp
@@ -102,8 +102,8 @@ void server_base::serve(boost::asio::yield_context yield, boost::asio::ip::tcp::
 			acceptor.open(endpoint.protocol());
 			acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
 			acceptor.set_option(boost::asio::ip::tcp::acceptor::keep_alive(keep_alive_));
-			if(endpoint.protocol() == boost::asio::ip::tcp::v6())
-				acceptor.set_option(boost::asio::ip::v6_only(true));
+			//if(endpoint.protocol() == boost::asio::ip::tcp::v6())
+				//acceptor.set_option(boost::asio::ip::v6_only(true));
 			acceptor.bind(endpoint);
 			acceptor.listen();
 		}
-- 
2.45.2

