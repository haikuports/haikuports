From c2d179a3da9146363d77090074fa9afbfd0464ca Mon Sep 17 00:00:00 2001
From: Gabriele Baldassarre <gabriele@gabrielebaldassarre.com>
Date: Mon, 22 Oct 2018 23:00:12 +0200
Subject: initial set of defines for Haiku


diff --git a/src/os/strings.h b/src/os/strings.h
index daac831..bdea121 100644
--- a/src/os/strings.h
+++ b/src/os/strings.h
@@ -84,13 +84,13 @@
 
 	#if !defined(__MINGW32__) && defined(__GNUC__) && !defined(snprintf)
 		/* (v)snprintf is in fact C99, but we like to use it over (v)sprintf for the obvious reasons */
-		#if !defined(__APPLE__) && !defined(TOS) && !defined(__FreeBSD__) && !defined(__DJGPP__)
+		#if !defined(__APPLE__) && !defined(TOS) && !defined(__FreeBSD__) && !defined(__DJGPP__) && !defined(__HAIKU__)
 			extern int snprintf (char *__restrict __s, size_t __maxlen, __const char *__restrict __format, ...) __THROW __attribute__ ((__format__ (__printf__, 3, 4)));
 			extern int vsnprintf (char *__restrict __s, size_t __maxlen, __const char *__restrict __format, va_list __arg) __THROW __attribute__ ((__format__ (__printf__, 3, 0)));
 		#endif /* __APPLE__ */
 	#endif /* __GCC__ */
 	
-	#if !defined(__MINGW32__) && defined(__GNUC__) && !defined(strdup) && !defined(__APPLE__) && !defined(TOS) && !defined(__FreeBSD__) && !defined(__DJGPP__)
+	#if !defined(__MINGW32__) && defined(__GNUC__) && !defined(strdup) && !defined(__APPLE__) && !defined(TOS) && !defined(__FreeBSD__) && !defined(__DJGPP__) && !defined(__HAIKU__)
 		/* strdup is not ANSI-C, but our own implemention would only be slower */
 		extern char *strdup (__const char *__s);
 	#endif /* __GCC__ */
-- 
2.19.1


From c95ee997ed9b0feeb52471e846cd6f47051b001c Mon Sep 17 00:00:00 2001
From: Gabriele Baldassarre <gabriele@gabrielebaldassarre.com>
Date: Tue, 23 Oct 2018 00:23:24 +0200
Subject: added support for Haiku paths


diff --git a/src/file.c b/src/file.c
index 4d3f4dc..0b08d60 100644
--- a/src/file.c
+++ b/src/file.c
@@ -25,6 +25,10 @@
 #include "config.h"
 #include "inifile.h"
 
+#ifdef __HAIKU__
+#include <StorageDefs.h>
+#endif /* HAIKU */
+
 /* Set DUNE_DATA_DIR at compile time.  e.g. */
 /* #define DUNE_DATA_DIR "/usr/local/share/opendune" */
 
@@ -36,8 +40,13 @@
 #endif
 #endif
 
+#ifdef __HAIKU__
+static char g_dune_data_dir[B_PATH_NAME_LENGTH] = DUNE_DATA_DIR;
+static char g_personal_data_dir[B_PATH_NAME_LENGTH] = ".";
+#else
 static char g_dune_data_dir[1024] = DUNE_DATA_DIR;
 static char g_personal_data_dir[1024] = ".";
+#endif
 
 /* In order to avoid to open/close the same .PAK file multiple time
  * in a row, we cache the last opened PAK file.
diff --git a/src/inifile.c b/src/inifile.c
index d51996a..1600f0e 100644
--- a/src/inifile.c
+++ b/src/inifile.c
@@ -3,6 +3,10 @@
 #ifdef OSX
 #include <CoreFoundation/CoreFoundation.h>
 #endif /* OSX */
+#ifdef __HAIKU__
+#include <FindDirectory.h>
+#include <StorageDefs.h>
+#endif /* HAIKU */
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -40,6 +44,7 @@ bool Load_IniFile(void)
 	   1) %APPDATA%/OpenDUNE (win32)
 	      ~/Library/Application Support/OpenDUNE (Mac OS X)
 	      ~/.config/opendune (Linux)
+	      /B_USER_SETTINGS_DIRECTORY/opendune (Haiku)
 	   2) current directory
 	   3) data/ dir
 	   4) parent of bundle dir (Mac OS X)
@@ -53,13 +58,21 @@ bool Load_IniFile(void)
 		f = fopen(path, "rb");
 	}
 #elif !defined(TOS) && !defined(DOS)  /* _WIN32 */
+	#if defined(__HAIKU__)
+	char path[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+	#else
 	char path[PATH_MAX];
+	#endif
 	char * homeDir;
 	homeDir = getenv("HOME");
 	if (homeDir != NULL) {
 #if defined(__APPLE__)
 		snprintf(path, sizeof(path), "%s/Library/Application Support/OpenDUNE/opendune.ini", homeDir);
-#else /* __APPLE__ */
+#elif defined(__HAIKU__) /* __APPLE__ */
+		char user_path[B_PATH_NAME_LENGTH];
+		find_directory(B_USER_SETTINGS_DIRECTORY, 0, true, user_path, sizeof(user_path)-strlen("/opendune"));
+		snprintf(path, sizeof(path), "%s/opendune/opendune.ini", user_path);
+#else /* __HAIKU__ */
 		snprintf(path, sizeof(path), "%s/.config/opendune/opendune.ini", homeDir);
 #endif /* __APPLE__ */
 		f = fopen(path, "rb");
-- 
2.19.1


From 4019135cb7464b828d6e7962228d4c9b7a2d04fa Mon Sep 17 00:00:00 2001
From: Gabriele Baldassarre <gabriele@gabrielebaldassarre.com>
Date: Thu, 25 Oct 2018 00:03:53 +0200
Subject: replaced paths in user settings directory


diff --git a/src/file.c b/src/file.c
index 0b08d60..324fae7 100644
--- a/src/file.c
+++ b/src/file.c
@@ -557,7 +557,11 @@ bool File_Init(void)
 		} else {
 #if defined(__APPLE__)
 			snprintf(g_personal_data_dir, sizeof(g_personal_data_dir), "%s/Library/Application Support/OpenDUNE", homedir);
-#else /* __APPLE__ */
+#elif defined(__HAIKU__) /* __APPLE__ */
+			char user_path[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+			find_directory(B_USER_SETTINGS_DIRECTORY, 0, true, user_path, sizeof(user_path));
+			snprintf(g_personal_data_dir, sizeof(g_personal_data_dir), "%s/opendune", user_path);
+#else /* __HAIKU__ */
 			snprintf(g_personal_data_dir, sizeof(g_personal_data_dir), "%s/.config/opendune", homedir);
 #endif /* __APPLE__ */
 		}
diff --git a/src/inifile.c b/src/inifile.c
index 1600f0e..5603837 100644
--- a/src/inifile.c
+++ b/src/inifile.c
@@ -69,8 +69,8 @@ bool Load_IniFile(void)
 #if defined(__APPLE__)
 		snprintf(path, sizeof(path), "%s/Library/Application Support/OpenDUNE/opendune.ini", homeDir);
 #elif defined(__HAIKU__) /* __APPLE__ */
-		char user_path[B_PATH_NAME_LENGTH];
-		find_directory(B_USER_SETTINGS_DIRECTORY, 0, true, user_path, sizeof(user_path)-strlen("/opendune"));
+		char user_path[B_PATH_NAME_LENGTH + B_FILE_NAME_LENGTH];
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, 0, true, user_path, sizeof(user_path));
 		snprintf(path, sizeof(path), "%s/opendune/opendune.ini", user_path);
 #else /* __HAIKU__ */
 		snprintf(path, sizeof(path), "%s/.config/opendune/opendune.ini", homeDir);
-- 
2.19.1

