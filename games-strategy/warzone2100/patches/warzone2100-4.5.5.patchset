From 4c74c9874b523ca11857360bc906e5b95c7c79de Mon Sep 17 00:00:00 2001
From: Peppersawce <michaelpeppers89@yahoo.it>
Date: Sun, 27 Apr 2025 16:23:31 +0200
Subject: Haiku build fixes


diff --git a/3rdparty/basis_universal/encoder/basisu_enc.cpp b/3rdparty/basis_universal/encoder/basisu_enc.cpp
index 99ef7ab..d6b070f 100644
--- a/3rdparty/basis_universal/encoder/basisu_enc.cpp
+++ b/3rdparty/basis_universal/encoder/basisu_enc.cpp
@@ -229,7 +229,7 @@ namespace basisu
 	{
 		QueryPerformanceFrequency(reinterpret_cast<LARGE_INTEGER*>(pTicks));
 	}
-#elif defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__EMSCRIPTEN__)
+#elif defined(__APPLE__) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__EMSCRIPTEN__)  || defined(__HAIKU__)
 #include <sys/time.h>
 	inline void query_counter(timer_ticks* pTicks)
 	{
diff --git a/3rdparty/readerwriterqueue/atomicops.h b/3rdparty/readerwriterqueue/atomicops.h
index b103bc6..eda680b 100644
--- a/3rdparty/readerwriterqueue/atomicops.h
+++ b/3rdparty/readerwriterqueue/atomicops.h
@@ -361,7 +361,7 @@ extern "C" {
 }
 #elif defined(__MACH__)
 #include <mach/mach.h>
-#elif defined(__unix__)
+#elif defined(__unix__) || defined(__HAIKU__)
 #include <semaphore.h>
 #elif defined(FREERTOS)
 #include <FreeRTOS.h>
@@ -499,7 +499,7 @@ namespace moodycamel
 		        }
 		    }
 		};
-#elif defined(__unix__)
+#elif defined(__unix__) || defined(__HAIKU__)
 		//---------------------------------------------------------
 		// Semaphore (POSIX, Linux)
 		//---------------------------------------------------------
diff --git a/CMakeLists.txt b/CMakeLists.txt
index d845d7c..48d3c8c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -206,7 +206,11 @@ endif()
 INCLUDE(AddTargetLinkFlagsIfSupported)
 
 # Use "-fPIC" / "-fPIE" for all targets by default, including static libs
-set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+if (HAIKU)
+	set(CMAKE_POSITION_INDEPENDENT_CODE OFF)
+else()
+	set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+endif()
 
 if (CMAKE_VERSION VERSION_LESS 3.14)
 	# CMake < 3.14 doesn't add "-pie" by default for executables (CMake issue #14983)
diff --git a/lib/framework/wzglobal.h b/lib/framework/wzglobal.h
index ad32013..46fa2de 100644
--- a/lib/framework/wzglobal.h
+++ b/lib/framework/wzglobal.h
@@ -108,7 +108,7 @@
 #  define WZ_OS_RELIANT
 #elif defined(__linux__) || defined(__linux)
 #  define WZ_OS_LINUX
-#elif defined(__FreeBSD__) || defined(__DragonFly__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__) || defined(__HAIKU__)
 #  define WZ_OS_FREEBSD
 #  define WZ_OS_BSD4
 #elif defined(__FreeBSD_kernel__) && !defined(__FreeBSD__)
diff --git a/lib/sound/oggvorbis.cpp b/lib/sound/oggvorbis.cpp
index c02f6d1..2fd4aba 100644
--- a/lib/sound/oggvorbis.cpp
+++ b/lib/sound/oggvorbis.cpp
@@ -57,7 +57,7 @@ static size_t wz_ogg_read(void *ptr, size_t size, size_t nmemb, void *datasource
 	return WZ_PHYSFS_readBytes(fileHandle, ptr, static_cast<PHYSFS_uint32>(readLen));
 }
 
-static int wz_ogg_seek(void *datasource, int64_t offset, int whence)
+static int wz_ogg_seek(void *datasource, ogg_int64_t offset, int whence)
 {
 	PHYSFS_file *fileHandle;
 	int64_t newPos;
diff --git a/lib/wzmaplib/src/map_io.cpp b/lib/wzmaplib/src/map_io.cpp
index 25cfadc..0abebfc 100644
--- a/lib/wzmaplib/src/map_io.cpp
+++ b/lib/wzmaplib/src/map_io.cpp
@@ -703,7 +703,9 @@ bool enumerateDirInternal(const std::string& rootBasePath, const std::string& ba
 			continue;
 		}
 		fullFilePath = basePath + "/" + dir->d_name;
-		if (dir->d_type == DT_DIR)
+		struct stat stbuf;
+		stat(dir->d_name, &stbuf);
+		if (S_ISDIR(stbuf.st_mode))
 		{
 			// recurse
 			if (((enumDirFlags & ENUM_FOLDERS) == ENUM_FOLDERS))
-- 
2.48.1


From f38aa13b97a6bc8c09874bab9ce99112297c23a6 Mon Sep 17 00:00:00 2001
From: Peppersawce <michaelpeppers89@yahoo.it>
Date: Sun, 27 Apr 2025 19:57:19 +0200
Subject: Fix ReleaseEnvironment string build error


diff --git a/src/version.cpp b/src/version.cpp
index 7db79e8..e0be3cc 100644
--- a/src/version.cpp
+++ b/src/version.cpp
@@ -225,14 +225,14 @@ std::string version_getBuildIdentifierReleaseEnvironment()
 	if (strlen(vcs_tag))
 	{
 		optional<TagVer> tagVersion = version_extractVersionNumberFromTag(vcs_tag);
-		if (tagVersion.has_value() && strlen(tagVersion.value().qualifier) != 0)
+		/*if (tagVersion.has_value() && strlen(tagVersion.value().qualifier) != 0)
 		{
 			buildReleaseEnvironmentStr = "preview";
 		}
 		else
-		{
+		{*/
 			buildReleaseEnvironmentStr = "release";
-		}
+		//}
 	}
 	else
 	{
-- 
2.48.1


From eb176647242d12db5ff032b706af935a368355b6 Mon Sep 17 00:00:00 2001
From: Peppersawce <michaelpeppers89@yahoo.it>
Date: Mon, 28 Apr 2025 02:40:29 +0200
Subject: Better Haiku default config


diff --git a/src/terrain.cpp b/src/terrain.cpp
index e05e371..fbe0503 100644
--- a/src/terrain.cpp
+++ b/src/terrain.cpp
@@ -2413,6 +2413,9 @@ static TerrainShaderQuality determineDefaultTerrainQuality()
 {
 	// Based on system properties, determine a reasonable default (for performance reasons)
 	// (Uses a heuristic based on system RAM, graphics renderer, and estimated VRAM)
+#if defined(__HAIKU__)
+	return TerrainShaderQuality::CLASSIC;
+#else
 
 	// If <= 4 GiB system RAM, default to medium ("normal")
 	auto systemRAMinMiB = wzGetCurrentSystemRAM();
@@ -2471,6 +2474,7 @@ static TerrainShaderQuality determineDefaultTerrainQuality()
 	// If all of the above check out, default to NORMAL_MAPPING
 	return TerrainShaderQuality::NORMAL_MAPPING;
 #endif
+#endif
 }
 
 static int32_t determineDefaultTerrainMappingTextureSize()
-- 
2.48.1

