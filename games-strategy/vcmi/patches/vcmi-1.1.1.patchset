From b4de628a7f050a0ef59883729c54d4fb604acbd7 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sun, 26 Mar 2023 18:42:08 +0200
Subject: Haiku patch


diff --git a/CMakeLists.txt b/CMakeLists.txt
index f736ce6..48e476a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -267,6 +267,9 @@ if(NOT WIN32 AND NOT APPLE_IOS)
 	if(HAVE_RT_LIB)
 		set(SYSTEM_LIBS ${SYSTEM_LIBS} rt)
 	endif()
+	if(HAIKU)
+		set(SYSTEM_LIBS ${SYSTEM_LIBS} network)
+	endif()
 endif()
 
 if(ENABLE_LUA)
diff --git a/Global.h b/Global.h
index 0270d69..6f02b05 100644
--- a/Global.h
+++ b/Global.h
@@ -60,6 +60,10 @@ static_assert(sizeof(bool) == 1, "Bool needs to be 1 byte in size.");
 #  define VCMI_UNIX
 #  define VCMI_XDG
 #  define VCMI_FREEBSD
+#elif defined(__HAIKU__)
+#  define VCMI_UNIX
+#  define VCMI_XDG
+#  define VCMI_HAIKU
 #elif defined(__GNU__) || defined(__gnu_hurd__) || (defined(__MACH__) && !defined(__APPLE__))
 #  define VCMI_UNIX
 #  define VCMI_XDG
diff --git a/lib/CThreadHelper.cpp b/lib/CThreadHelper.cpp
index 94ab6d5..7b01ad7 100644
--- a/lib/CThreadHelper.cpp
+++ b/lib/CThreadHelper.cpp
@@ -12,6 +12,8 @@
 
 #ifdef VCMI_WINDOWS
 	#include <windows.h>
+#elif defined(VCMI_HAIKU)
+	#include <OS.h>
 #elif !defined(VCMI_APPLE) && !defined(VCMI_FREEBSD) && !defined(VCMI_HURD)
 	#include <sys/prctl.h>
 #endif
@@ -88,6 +90,8 @@ void setThreadName(const std::string &name)
 	prctl(PR_SET_NAME, name.c_str(), 0, 0, 0);
 #elif defined(VCMI_APPLE)
 	pthread_setname_np(name.c_str());
+#elif defined(VCMI_HAIKU)
+	rename_thread(find_thread(NULL), name.c_str());
 #endif
 }
 
diff --git a/server/CMakeLists.txt b/server/CMakeLists.txt
index 0f03131..21c3692 100644
--- a/server/CMakeLists.txt
+++ b/server/CMakeLists.txt
@@ -30,7 +30,7 @@ else()
 	set(server_LIBS vcmi)
 endif()
 
-if(CMAKE_SYSTEM_NAME MATCHES FreeBSD)
+if(CMAKE_SYSTEM_NAME MATCHES FreeBSD OR HAIKU)
 	set(server_LIBS execinfo ${server_LIBS})
 endif()
 target_link_libraries(vcmiserver PRIVATE ${server_LIBS} minizip::minizip)
diff --git a/vcmibuilder b/vcmibuilder
index 6d3555e..f2c1b7d 100755
--- a/vcmibuilder
+++ b/vcmibuilder
@@ -52,7 +52,7 @@ then
 	echo " --convertMP3     " "Convert all mp3 files into ogg/vorbis"
 	echo "                  " "Requires ffmpeg or avconv"
 	echo
-	echo " --dest DIRECTORY " "Path where resulting data will be placed. Default is ~/.local/share/vcmi"
+	echo " --dest DIRECTORY " "Path where resulting data will be placed. Default is `finddir B_USER_NONPACKAGED_DATA_DIRECTORY`/vcmi"
 	echo
 	echo " --validate       " "Run basic validness checks"
 	exit 0
@@ -158,7 +158,7 @@ if [[ -z "$dest_dir" ]]
 then
 	if [[ -z "$XDG_DATA_HOME" ]]
 	then
-		dest_dir="$HOME/.local/share/vcmi"
+		dest_dir="`finddir B_USER_NONPACKAGED_DATA_DIRECTORY`/vcmi"
 	else
 		dest_dir="$XDG_DATA_HOME/vcmi"
 	fi
-- 
2.37.3


From 795e59f238f72759c658ceaca27348918c2557d3 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sun, 26 Mar 2023 18:42:08 +0200
Subject: Haiku: setting send/receive buffer size is buggy


diff --git a/lib/serializer/Connection.cpp b/lib/serializer/Connection.cpp
index f84b0c9..a01902d 100644
--- a/lib/serializer/Connection.cpp
+++ b/lib/serializer/Connection.cpp
@@ -44,6 +44,7 @@ void CConnection::init()
 	connectionBuffers = std::make_unique<ConnectionBuffers>();
 
 	socket->set_option(boost::asio::ip::tcp::no_delay(true));
+#ifndef __HAIKU__
     try
     {
         socket->set_option(boost::asio::socket_base::send_buffer_size(4194304));
@@ -53,6 +54,7 @@ void CConnection::init()
     {
         logNetwork->error("error setting socket option: %s", e.what());
     }
+#endif
 
 	enableSmartPointerSerialization();
 	disableStackSendingByID();
-- 
2.37.3

