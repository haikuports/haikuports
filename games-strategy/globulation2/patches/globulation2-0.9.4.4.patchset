From c067937f7812485e83380c951a9f17d5c2718442 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Tue, 14 Dec 2021 22:52:40 +0100
Subject: globulation2: use 2to3 to update the scons files


diff --git a/SConstruct b/SConstruct
index 7ffc94d..a195b7e 100644
--- a/SConstruct
+++ b/SConstruct
@@ -75,31 +75,31 @@ def configure(env):
     env.Append(CPPDEFINES=["HAVE_CONFIG_H"])
     #Simple checks for required libraries
     if not conf.CheckLib("SDL") and not server_only:
-        print "Could not find libSDL"
+        print("Could not find libSDL")
         missing.append("SDL")
     if not conf.CheckLib("SDL_ttf") and not server_only:
-        print "Could not find libSDL_ttf"
+        print("Could not find libSDL_ttf")
         missing.append("SDL_ttf")
     if not conf.CheckLib("SDL_image") and not server_only:
-        print "Could not find libSDL_image"
+        print("Could not find libSDL_image")
         missing.append("SDL_image")
     if not conf.CheckLib("SDL_net") and not server_only:
-        print "Could not find libSDL_net"
+        print("Could not find libSDL_net")
         missing.append("SDL_net")
     if not conf.CheckLib("speex") or not conf.CheckCXXHeader("speex/speex.h") and not server_only:
-        print "Could not find libspeex or could not find 'speex/speex.h'"
+        print("Could not find libspeex or could not find 'speex/speex.h'")
         missing.append("speex")
     if not conf.CheckLib("vorbisfile") and not server_only:
-        print "Could not find libvorbisfile"
+        print("Could not find libvorbisfile")
         missing.append("vorbisfile")
     if not conf.CheckLib("vorbis") and not server_only:
-        print "Could not find libvorbis"
+        print("Could not find libvorbis")
         missing.append("vorbis")
     if not conf.CheckLib("ogg") and not server_only:
-        print "Could not find libogg"
+        print("Could not find libogg")
         missing.append("ogg")
     if not conf.CheckCXXHeader("zlib.h"):
-        print "Could not find zlib.h"
+        print("Could not find zlib.h")
         missing.append("zlib")
     else:
         if conf.CheckLib("z"):
@@ -107,7 +107,7 @@ def configure(env):
         elif conf.CheckLib("zlib1"):
             env.Append(LIBS="zlib1")
         else:
-            print "Could not find libz or zlib1.dll"
+            print("Could not find libz or zlib1.dll")
             missing.append("zlib")
 
     boost_thread = ''
@@ -116,7 +116,7 @@ def configure(env):
     elif conf.CheckLib("boost_thread-mt") and conf.CheckCXXHeader("boost/thread/thread.hpp"):
         boost_thread="boost_thread-mt"
     else:
-        print "Could not find libboost_thread or libboost_thread-mt or boost/thread/thread.hpp"
+        print("Could not find libboost_thread or libboost_thread-mt or boost/thread/thread.hpp")
         missing.append("libboost_thread")
     env.Append(LIBS=[boost_thread])
 
@@ -126,31 +126,31 @@ def configure(env):
     elif conf.CheckLib("boost_date_time-mt") and conf.CheckCXXHeader("boost/date_time/posix_time/posix_time.hpp"):
         boost_thread="boost_thread-mt"
     else:
-        print "Could not find libboost_date_time or libboost_date_time-mt or boost/thread/thread.hpp"
+        print("Could not find libboost_date_time or libboost_date_time-mt or boost/thread/thread.hpp")
         missing.append("libboost_date_time")
     env.Append(LIBS=[boost_date_time])
 
 
     if not conf.CheckCXXHeader("boost/shared_ptr.hpp"):
-        print "Could not find boost/shared_ptr.hpp"
+        print("Could not find boost/shared_ptr.hpp")
         missing.append("boost/shared_ptr.hpp")
     if not conf.CheckCXXHeader("boost/tuple/tuple.hpp"):
-        print "Could not find boost/tuple/tuple.hpp"
+        print("Could not find boost/tuple/tuple.hpp")
         missing.append("boost/tuple/tuple.hpp")
     if not conf.CheckCXXHeader("boost/tuple/tuple_comparison.hpp"):
-        print "Could not find boost/tuple/tuple_comparison.hpp"
+        print("Could not find boost/tuple/tuple_comparison.hpp")
         missing.append("boost/tuple/tuple_comparison.hpp")
     if not conf.CheckCXXHeader("boost/logic/tribool.hpp"):
-        print "Could not find boost/logic/tribool.hpp"
+        print("Could not find boost/logic/tribool.hpp")
         missing.append("boost/logic/tribool.hpp")
     if not conf.CheckCXXHeader("boost/lexical_cast.hpp"):
-        print "Could not find boost/lexical_cast.hpp"
+        print("Could not find boost/lexical_cast.hpp")
         missing.append("boost/lexical_cast.hpp")
 
     #Do checks for OpenGL, which is different on every system
     gl_libraries = []
     if isDarwinPlatform and not server_only:
-        print "Using Apple's OpenGL framework"
+        print("Using Apple's OpenGL framework")
         env.Append(FRAMEWORKS="OpenGL")
     elif conf.CheckLib("GL") and conf.CheckCXXHeader("GL/gl.h") and not server_only:
         gl_libraries.append("GL")
@@ -159,12 +159,12 @@ def configure(env):
     elif conf.CheckLib("opengl32") and conf.CheckCXXHeader("GL/gl.h") and not server_only:
         gl_libraries.append("opengl32")
     elif not server_only:
-        print "Could not find libGL or opengl32, or could not find GL/gl.h or OpenGL/gl.h"
+        print("Could not find libGL or opengl32, or could not find GL/gl.h or OpenGL/gl.h")
         missing.append("OpenGL")
 
     #Do checks for GLU, which is different on every system
     if isDarwinPlatform and not server_only:
-        print "Using Apple's GLUT framework"
+        print("Using Apple's GLUT framework")
         env.Append(FRAMEWORKS="GLUT")
     elif conf.CheckLib('GLU') and conf.CheckCXXHeader("GL/glu.h") and not server_only:
         gl_libraries.append("GLU")
@@ -173,7 +173,7 @@ def configure(env):
     elif conf.CheckLib('glu32') and conf.CheckCXXHeader('GL/glu.h') and not server_only:
         gl_libraries.append("glu32")
     elif not server_only:
-        print "Could not find libGLU or glu32, or could not find GL/glu.h or OpenGL/glu.h"
+        print("Could not find libGLU or glu32, or could not find GL/glu.h or OpenGL/glu.h")
         missing.append("GLU")
 
     if gl_libraries or isDarwinPlatform:
@@ -188,31 +188,31 @@ def configure(env):
     #Do checks for portaudio
     if conf.CheckLib('portaudio') and conf.CheckCXXHeader('portaudio.h'):
         if env['mingw'] or isWindowsPlatform:
-            print "--------"
-            print "NOTE: It appears you are compiling under Windows. At this stage, PortAudio crashes Globulation 2 when voice chat is used."
-            print "NOTE: Disabling PortAudio in this build (you will be unable to use Voice Chat ingame)."
-            print "--------"
+            print("--------")
+            print("NOTE: It appears you are compiling under Windows. At this stage, PortAudio crashes Globulation 2 when voice chat is used.")
+            print("NOTE: Disabling PortAudio in this build (you will be unable to use Voice Chat ingame).")
+            print("--------")
         else:
             if GetOption('portaudio'):
-                print "trying to use portaudio"
+                print("trying to use portaudio")
                 configfile.add("HAVE_PORTAUDIO ", "Defined when Port Audio support is present and compiled")
                 env.Append(LIBS=['portaudio'])
             else:
-                print "         no portaudio"
-                print "         no portaudio - although portaudio was found to be installed, you have "
-                print "         no portaudio - to explicitly activate it using: "
-                print "         no portaudio - $ scons --portaudio=true"
-                print "         no portaudio - this may not work properly if the version of portaudio"
-                print "         no portaudio - is wrong. portaudio is used to allow communicating over VOIP"
-                print "         no portaudio"
-                print "         no portaudio - if you know of a solution to detect portaudio version"
-                print "         no portaudio - let us know at:"
-                print "         no portaudio - https://savannah.nongnu.org/bugs/index.php?24668"
-                print "         no portaudio"
+                print("         no portaudio")
+                print("         no portaudio - although portaudio was found to be installed, you have ")
+                print("         no portaudio - to explicitly activate it using: ")
+                print("         no portaudio - $ scons --portaudio=true")
+                print("         no portaudio - this may not work properly if the version of portaudio")
+                print("         no portaudio - is wrong. portaudio is used to allow communicating over VOIP")
+                print("         no portaudio")
+                print("         no portaudio - if you know of a solution to detect portaudio version")
+                print("         no portaudio - let us know at:")
+                print("         no portaudio - https://savannah.nongnu.org/bugs/index.php?24668")
+                print("         no portaudio")
 
     if missing:
         for t in missing:
-            print "Missing %s" % t
+            print("Missing %s" % t)
         Exit(1)
 
     conf.Finish()
@@ -232,7 +232,7 @@ def main():
         env.Clone = env.Copy
 
     if not env['CC']:
-        print "No compiler found in PATH. Please install gcc or another compiler."
+        print("No compiler found in PATH. Please install gcc or another compiler.")
         Exit(1)
 
     env["VERSION"] = "0.9.4.4"
diff --git a/scons/addDependentLibsToBundle.py b/scons/addDependentLibsToBundle.py
index 77170f6..6a5c170 100755
--- a/scons/addDependentLibsToBundle.py
+++ b/scons/addDependentLibsToBundle.py
@@ -4,10 +4,10 @@ import os, glob
 import sys
 
 def run(command) :
-	print "\033[32m:: ", command, "\033[0m"
+	print("\033[32m:: ", command, "\033[0m")
 	return os.system(command)
 def norun(command) :
-	print "\033[31mXX ", command, "\033[0m"
+	print("\033[31mXX ", command, "\033[0m")
 
 
 def needsChange(binary, blacklist) :
diff --git a/scons/bundle.py b/scons/bundle.py
index 9005349..3e069dc 100644
--- a/scons/bundle.py
+++ b/scons/bundle.py
@@ -4,10 +4,10 @@ sys.path.append( os.path.dirname(__file__) )
 from addDependentLibsToBundle import addDependentLibsToBundle
 
 def run(command) :
-	print "\033[32m:: ", command, "\033[0m"
+	print("\033[32m:: ", command, "\033[0m")
 	return os.system(command)
 def norun(command) :
-	print "\033[31mXX ", command, "\033[0m"
+	print("\033[31mXX ", command, "\033[0m")
 
 
 
@@ -46,7 +46,7 @@ def bundleEmitter(target, source, env):
 	return target, source
 
 def generate(env) :
-	print "Loading Bundle tool"
+	print("Loading Bundle tool")
 	Builder = SCons.Builder.Builder
 	Action = SCons.Action.Action
 	bundleBuilder = Builder(
diff --git a/scons/dmg.py b/scons/dmg.py
index 175d292..1455658 100644
--- a/scons/dmg.py
+++ b/scons/dmg.py
@@ -15,7 +15,7 @@ def create_dmg_message( target, source, env):
 
 def generate(env) :
 	"""Add Builders and construction variables for qt to an Environment."""
-	print "Lodading dmg tool..."
+	print("Lodading dmg tool...")
 	env.Append( BUILDERS={'Dmg' : 
 			env.Builder( action=env.Action(create_dmg, create_dmg_message ))
 		} )
diff --git a/scons/nsis.py b/scons/nsis.py
index 76f19fc..55ac205 100644
--- a/scons/nsis.py
+++ b/scons/nsis.py
@@ -10,7 +10,7 @@ TODO:
 
 def generate(env) :
 	"""Add Builders and construction variables for qt to an Environment."""
-	print "Loading nsis tool..."
+	print("Loading nsis tool...")
 
 	Builder = SCons.Builder.Builder
 
@@ -22,7 +22,7 @@ def generate(env) :
 		contents = node.get_contents()
 		includes = nsisFiles_re.findall(contents)
 		includes = [ winToLocalReformat(include) for include in includes ]
-		return filter(lambda x: x.rfind('*')==-1, includes)
+		return [x for x in includes if x.rfind('*')==-1]
 	nsisscanner = env.Scanner(name = 'nsisfile',
 		function = scanNsisContent,
 		argument = None,
-- 
2.37.3


From b3d5eaac359b62699b4b0cc89fe6d3bb833b71a8 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Tue, 14 Dec 2021 22:54:22 +0100
Subject: Change SConstruct to use Variables instead of the deprecated Options


diff --git a/SConstruct b/SConstruct
index a195b7e..d0ca0ef 100644
--- a/SConstruct
+++ b/SConstruct
@@ -13,7 +13,7 @@ isDarwinPlatform = sys.platform=='darwin'
 
 
 def establish_options(env):
-    opts = Options('options_cache.py')
+    opts = Variables('options_cache.py')
     opts.Add("CXXFLAGS", "Manually add to the CXXFLAGS", "-g")
     opts.Add("LINKFLAGS", "Manually add to the LINKFLAGS", "-g")
     if isDarwinPlatform:
@@ -22,10 +22,10 @@ def establish_options(env):
 	    opts.Add("INSTALLDIR", "Installation Directory", "/usr/local/share")
     opts.Add("BINDIR", "Binary Installation Directory", "/usr/local/bin")
     opts.Add("DATADIR", "Directory where data will be put, set to the same as INSTALLDIR", "/usr/local/share")
-    opts.Add(BoolOption("release", "Build for release", 0))
-    opts.Add(BoolOption("profile", "Build with profiling on", 0))
-    opts.Add(BoolOption("mingw", "Build with mingw enabled if not auto-detected", 0))
-    opts.Add(BoolOption("server", "Build only the YOG server, excluding the game and any GUI/sound components", 0))
+    opts.Add(BoolVariable("release", "Build for release", 0))
+    opts.Add(BoolVariable("profile", "Build with profiling on", 0))
+    opts.Add(BoolVariable("mingw", "Build with mingw enabled if not auto-detected", 0))
+    opts.Add(BoolVariable("server", "Build only the YOG server, excluding the game and any GUI/sound components", 0))
     opts.Add("font", "Build the game using an alternative font placed in the data/font folder", "sans.ttf")
     Help(opts.GenerateHelpText(env))
     opts.Update(env)
-- 
2.37.3


From 4b82b23be689d9f034ab1f67059428d38abebbf5 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Tue, 14 Dec 2021 23:27:32 +0100
Subject: globulation2: Fix general compile errors that are the result of new
 gcc versions. Used the patches from debian as a guideline


diff --git a/src/ChooseMapScreen.cpp b/src/ChooseMapScreen.cpp
index 675da0c..e976e43 100644
--- a/src/ChooseMapScreen.cpp
+++ b/src/ChooseMapScreen.cpp
@@ -31,7 +31,7 @@
 
 #include "Game.h"
 
-ChooseMapScreen::ChooseMapScreen(const char *directory, const char *extension, bool recurse, const char* alternateDirectory, const char* alternateExtension, const char* alternateRecurse)
+ChooseMapScreen::ChooseMapScreen(const char *directory, const char *extension, bool recurse, const char* alternateDirectory, const char* alternateExtension, const bool alternateRecurse)
 {
 	ok = new TextButton(440, 360, 180, 40, ALIGN_SCREEN_CENTERED, ALIGN_SCREEN_CENTERED, "menu", Toolkit::getStringTable()->getString("[ok]"), OK, 13);
 	addWidget(ok);
diff --git a/src/ChooseMapScreen.h b/src/ChooseMapScreen.h
index 9600611..1e4c746 100644
--- a/src/ChooseMapScreen.h
+++ b/src/ChooseMapScreen.h
@@ -43,7 +43,7 @@ public:
 	/// Constructor. Directory is the source of the listed files.
 	/// extension is the file extension to show. If recurse is true,
 	/// subdirectoried are shown and can be opened.
-	ChooseMapScreen(const char *directory, const char *extension, bool recurse, const char* alternateDirectory=NULL, const char* alternateExtension=NULL, const char* alternateRecurse=NULL);
+	ChooseMapScreen(const char *directory, const char *extension, bool recurse, const char* alternateDirectory=NULL, const char* alternateExtension=NULL, const bool alternateRecurse=NULL);
 	//! Destructor
 	virtual ~ChooseMapScreen();
 	virtual void onAction(Widget *source, Action action, int par1, int par2);
diff --git a/src/Game.h b/src/Game.h
index c84bb99..65221fd 100644
--- a/src/Game.h
+++ b/src/Game.h
@@ -148,7 +148,7 @@ private:
 		TOP_TO_BOTTOM,
 		BOTTOM_TO_TOP
 	};
-	
+public:	
 	struct BuildProject
 	{
 		int posX;
diff --git a/src/VoiceRecorder.cpp b/src/VoiceRecorder.cpp
index 33705fb..70333a4 100644
--- a/src/VoiceRecorder.cpp
+++ b/src/VoiceRecorder.cpp
@@ -22,6 +22,7 @@
 #include "VoiceRecorder.h"
 #include <assert.h>
 #include <stdio.h>
+#include <iostream>
 #include "Order.h"
 #include "Utilities.h"
 
-- 
2.37.3


From ceb6034348227ba086a897e3e6bf48b6cb002697 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Tue, 14 Dec 2021 23:32:21 +0100
Subject: Made it work with a newer libbost version (Used the patch from
 debian)


diff --git a/src/AIEcho.cpp b/src/AIEcho.cpp
index 77d9f63..0365938 100644
--- a/src/AIEcho.cpp
+++ b/src/AIEcho.cpp
@@ -4387,7 +4387,7 @@ bool enemy_building_iterator::operator!=(const enemy_building_iterator& rhs) con
 {
 	if(is_end && rhs.is_end)
 		return false;
-	return is_end!=rhs.is_end || team!=rhs.team || building_type!=rhs.building_type || level!=rhs.level || construction_site!=rhs.construction_site;
+	return bool(is_end!=rhs.is_end || team!=rhs.team || building_type!=rhs.building_type || level!=rhs.level || construction_site!=rhs.construction_site);
 }
 
 
-- 
2.37.3


From ff4c4389ad124682f33a83e98d7cbcc4abbd300c Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Tue, 14 Dec 2021 23:34:35 +0100
Subject: Fixed an import (now uses a private header)


diff --git a/src/VoiceRecorder.cpp b/src/VoiceRecorder.cpp
index 70333a4..c378d50 100644
--- a/src/VoiceRecorder.cpp
+++ b/src/VoiceRecorder.cpp
@@ -59,7 +59,11 @@
 		#include <sys/types.h>
 		#include <sys/stat.h>
 		#include <sys/ioctl.h>
-		#include <sys/soundcard.h>
+		#ifdef __HAIKU__
+			#include <private/audio/soundcard.h>
+		#else
+			#include <sys/soundcard.h>
+		#endif
 		#include <unistd.h>
 		#include <fcntl.h>
 		#define STOP_RECORDING_TIMEOUT 3000
-- 
2.37.3


From 5db35f3532890d5b05155c8476083e72c34c9c66 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 15 Dec 2021 16:35:26 +0100
Subject: globulation2: fix the game not finding the data directory by changing
 the workdir to it


diff --git a/src/Glob2.cpp b/src/Glob2.cpp
index 8b05a90..787e09b 100644
--- a/src/Glob2.cpp
+++ b/src/Glob2.cpp
@@ -66,6 +66,11 @@
 #	include <sys/param.h>
 #endif
 
+#ifdef __HAIKU__
+#	include <FindDirectory.h>
+#	include <fs_info.h>
+#define HAIKU_DATA_PATH "/globulation2/glob2/"
+#endif
 /*!	\mainpage Globulation 2 Reference documentation
 
 	\section intro Introduction
@@ -386,6 +391,17 @@ int Glob2::run(int argc, char *argv[])
 
 int main(int argc, char *argv[])
 {
+#ifdef __HAIKU__
+	dev_t volume = dev_for_path("/boot");
+	char buffer[B_PATH_NAME_LENGTH+B_FILE_NAME_LENGTH];
+	status_t result;
+	result = find_directory(B_SYSTEM_DATA_DIRECTORY, volume, false, buffer, sizeof(buffer));
+	
+	char path[ strlen(buffer) + strlen(HAIKU_DATA_PATH) + 1 ];
+	strcpy(path, buffer);
+	strcat(path, HAIKU_DATA_PATH);
+	chdir(path);
+#endif	
 #ifdef __APPLE__
 	/* SDL has this annoying "feature" of setting working directory to parent
 	   of bundle during static initalization.  We want to set it back to the
-- 
2.37.3


From b1bd50ef9d59342bae72ff3937dd6613d8ffcaf9 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 15 Dec 2021 18:32:24 +0100
Subject: globulation2: disable gl by default


diff --git a/src/GlobalContainer.cpp b/src/GlobalContainer.cpp
index 791f97e..6ceef25 100644
--- a/src/GlobalContainer.cpp
+++ b/src/GlobalContainer.cpp
@@ -154,6 +154,13 @@ void GlobalContainer::popUserName()
 
 void GlobalContainer::parseArgs(int argc, char *argv[])
 {
+	#ifdef __HAIKU__
+	// gl tends to generally not work on Haiku, makes the game hang and flicker,
+	// so disable it, regardless of the config setting. If the user
+	// really wants to use it, they can still use the -g flag
+	settings.screenFlags &= ~GraphicContext::USEGPU;
+	#endif
+	
 	for (int  i=1; i<argc; i++)
 	{
 		if (strcmp(argv[i], "-nox")==0 || strcmp(argv[i], "--nox")==0)
-- 
2.37.3


From b693ff4c47be17c3f20cabf469d8076536daf066 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Sat, 7 May 2022 11:06:57 +0000
Subject: use the system path in scons


diff --git a/SConstruct b/SConstruct
index d0ca0ef..dd6e33b 100644
--- a/SConstruct
+++ b/SConstruct
@@ -225,7 +225,7 @@ def main():
               action='store',
               metavar='portaudio',
               help='should portaudio be used')
-    env = Environment()
+    env = Environment(ENV = {'PATH':os.environ['PATH']})
     try:
         env.Clone()
     except AttributeError:
-- 
2.37.3


From 88eb99b677cb0a62d06b164e1eb6960b89dc25b3 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Sat, 24 Sep 2022 09:52:51 +0200
Subject: Replace the home dir with the config dir in Haiku

this moves the globulation config folder

diff --git a/SConstruct b/SConstruct
index dd6e33b..a376e51 100644
--- a/SConstruct
+++ b/SConstruct
@@ -10,6 +10,7 @@ import nsis
 isWindowsPlatform = sys.platform=='win32'
 isLinuxPlatform = sys.platform=='linux2'
 isDarwinPlatform = sys.platform=='darwin'
+isHaikuPlatform = sys.platform=='haiku1'
 
 
 def establish_options(env):
@@ -162,6 +163,13 @@ def configure(env):
         print("Could not find libGL or opengl32, or could not find GL/gl.h or OpenGL/gl.h")
         missing.append("OpenGL")
 
+	#on Haiku, include libbe
+    if isHaikuPlatform:
+        env.Append(LIBS=['libbe'])
+        if not conf.CheckLib("libbe"):
+            print("Could not find libbe")
+            missing.append("libbe")
+
     #Do checks for GLU, which is different on every system
     if isDarwinPlatform and not server_only:
         print("Using Apple's GLUT framework")
diff --git a/libgag/src/FileManager.cpp b/libgag/src/FileManager.cpp
index 760a04e..1ae3f76 100644
--- a/libgag/src/FileManager.cpp
+++ b/libgag/src/FileManager.cpp
@@ -33,6 +33,12 @@
 #include "BinaryStream.h"
 #include "TextStream.h"
 
+#ifdef __HAIKU__
+#include <FindDirectory.h>
+#include <fs_info.h>
+#include <Path.h>
+#endif
+
 // here we handle compile time options
 #ifdef HAVE_CONFIG_H
 #  include "config.h"
@@ -68,7 +74,14 @@ namespace GAGCore
 {
 	FileManager::FileManager(const char *gameName)
 	{
-		#ifndef WIN32
+		#ifdef __HAIKU__
+		BPath path;
+		find_directory(B_USER_SETTINGS_DIRECTORY, &path);
+		path.Append(gameName);
+		mkdir(path.Path(), S_IRWXU);
+		addDir(path.Path());
+
+		#elif !defined(WIN32)
 		const char *homeDir = getenv("HOME");
 		if (homeDir)
 		{
-- 
2.37.3

