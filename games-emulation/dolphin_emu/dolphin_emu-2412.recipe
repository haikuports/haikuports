SUMMARY="A GameCube and Wii emulator"
DESCRIPTION="Dolphin is an emulator for two recent Nintendo video game consoles: the \
GameCube and the Wii. It allows PC gamers to enjoy games for these two consoles in \
full HD (1080p) with several enhancements: compatibility with all PC controllers, \
turbo speed, networked multiplayer, and even more!"
HOMEPAGE="https://dolphin-emu.org/"
COPYRIGHT="2020 Dolphin Emulator Project"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="git+https://github.com/dolphin-emu/dolphin.git#tag=$portVersion"
CHECKSUM_SHA256="e67600ab50dbe26fb4cdf621ba80488cd8cac73df1e3efe3d89c5c20d8d9e290"
SOURCE_DIR="dolphin-$portVersion"
PATCHES="dolphin_emu-$portVersion.patchset"
SOURCE_URI_2="git+https://github.com/mozilla/cubeb.git#commit=54217bc"
CHECKSUM_SHA256_2="70edb5c0f5ff2c3653be498bd9a0b07384bff43eeff3916829a12f2c61fc8e00"
SOURCE_URI_3="git+https://github.com/epezent/implot.git#commit=cc5e1da"
CHECKSUM_SHA256_3="5e303f14f146dc6240be42bb85cf7f0a3ae143bf2f7fdc44152d29ab08d8dda1"
SOURCE_URI_4="git+https://github.com/mgba-emu/mgba.git#commit=8739b22"
CHECKSUM_SHA256_4="57783b17701e5a160a1c3c2fb513a3d80d665a0a6332ec55076a2d7ecd730c52"
SOURCE_URI_5="git+https://github.com/zlib-ng/zlib-ng.git#commit=ce01b1e"
CHECKSUM_SHA256_5="3b3e97dfb54ebed427c2c34fa7fe292ca8d9e0d34de76df0a260a723dff0d193"
SOURCE_URI_6="git+https://github.com/zlib-ng/minizip-ng.git#commit=3eed562"
CHECKSUM_SHA256_6="72bfcd8e46361a1d6c0c43b701260f41661a2f60b6bf6b23f8ea75db32d8f16c"
SOURCE_URI_7="git+https://github.com/RetroAchievements/rcheevos.git#commit=d54cf8f"
CHECKSUM_SHA256_7="f3833d2440b453bc8277076200e1984fa2d19952b3095a847d9d952623066284"
SOURCE_URI_8="git+https://github.com/syoyo/tinygltf.git#commit=c5641f2"
CHECKSUM_SHA256_8="a0748212304f0b77de962ee8704bacf9cc71f4f0c36cbbf1a1b1e8dda837ab96"
SOURCE_URI_9="git+https://github.com/arsenm/sanitizers-cmake.git#commit=aab6948"
CHECKSUM_SHA256_9="a24b426203153fe25c9678a0ed2335293eec40e4a922a81d61fe0b60987573bc"

ADDITIONAL_FILES="dolphin_emu.rdef.in"

ARCHITECTURES="?x86_64 !x86_gcc2"

PROVIDES="
	dolphin_emu = $portVersion
	app:Dolphin = $portVersion
	"
REQUIRES="
	haiku
	lib:libavcodec
	lib:libavformat
	lib:libavutil
	lib:libbz2
	lib:libcurl
	lib:libenet
	lib:libfmt
	lib:libGL
	lib:libiconv
	lib:liblzma
	lib:liblzo2
	lib:liblz4
	lib:libmbedtls
	lib:libmbedx509
	lib:libminiupnpc
	lib:libQt6Core
	lib:libQt6DBus
	lib:libQt6Widgets
	lib:libpugixml
	lib:libsdl2_2.0
	lib:libspng
	lib:libswresample
	lib:libswscale
	lib:libusb_1.0
	lib:libxxhash
	lib:libzstd
	"

BUILD_REQUIRES="
	haiku_devel
	devel:libavcodec
	devel:libavformat
	devel:libavutil
	devel:libbz2
	devel:libcurl
	devel:libenet$secondaryArchSuffix
	devel:libfmt$secondaryArchSuffix >= 11
	devel:libiconv
	devel:libGL
	devel:liblz4
	devel:liblzo2
	devel:liblzma
	devel:libmbedtls$secondaryArchSuffix
	devel:libminiupnpc
	devel:libpugixml
	devel:libQt6Core
	devel:libQt6Svg
	devel:libQt6Widgets
	devel:libsdl2_2.0
	devel:libspng
	devel:libswscale
	devel:libusb_1.0
	devel:libxxhash$secondaryArchSuffix
	devel:libzstd
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc
	cmd:ld
	cmd:ninja
	cmd:msgfmt$secondaryArchSuffix
	cmd:pkg_config
	"

BUILD()
{
	rmdir Externals/cubeb/cubeb && ln -srf $sourceDir2 Externals/cubeb/cubeb || true
	rmdir Externals/implot/implot && ln -srf $sourceDir3 Externals/implot/implot || true
	rmdir Externals/mGBA/mgba && ln -srf $sourceDir4 Externals/mGBA/mgba || true
	rmdir Externals/zlib-ng/zlib-ng && ln -srf $sourceDir5 Externals/zlib-ng/zlib-ng || true
	rmdir Externals/minizip-ng/minizip-ng && ln -srf $sourceDir6 Externals/minizip-ng/minizip-ng || true
	rmdir Externals/rcheevos/rcheevos && ln -srf $sourceDir7 Externals/rcheevos/rcheevos || true
	rmdir Externals/tinygltf/tinygltf && ln -srf $sourceDir8 Externals/tinygltf/tinygltf || true
	rmdir Externals/cubeb/cubeb/cmake/sanitizers-cmake && ln -srf $sourceDir9 Externals/cubeb/cubeb/cmake/sanitizers-cmake || true
	cmake -Bbuild -S. \
		-DCMAKE_BUILD_TYPE=Release \
		-GNinja \
		-DCMAKE_INSTALL_PREFIX=$appsDir/Dolphin/ \
		-DCMAKE_INSTALL_BINDIR=$appsDir/Dolphin/ \
		-DDOLPHIN_WC_DESCRIBE="$portVersion" \
		-DENABLE_VULKAN=OFF \
		-DENABLE_NOGUI=OFF \
		-DENABLE_AUTOUPDATE=OFF \
		-DENABLE_ANALYTICS=OFF \
		-DENABLE_TESTS=OFF \
		-Wno-dev

	cmake --build build $jobArgs
}

INSTALL()
{
	cmake --install build
	mv $appsDir/Dolphin/dolphin-emu $appsDir/Dolphin/Dolphin

	local APP_SIGNATURE="application/x-vnd.dolphin"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/dolphin_emu.rdef.in > dolphin_emu.rdef

	addResourcesToBinaries dolphin_emu.rdef $appsDir/Dolphin/Dolphin

	addAppDeskbarSymlink $appsDir/Dolphin/Dolphin Dolphin
}
