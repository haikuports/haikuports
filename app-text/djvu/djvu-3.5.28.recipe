SUMMARY="Web-centric format for distributing documents and images"
DESCRIPTION="DjVu is a web-centric format and software platform for distributing documents \
and images."
HOMEPAGE="http://djvulibre.sourceforge.net/"
COPYRIGHT="2002 Leon Bottou and Yann Le Cun.
	2001 AT&T
	1999-2001 LizardTech, Inc."
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="http://downloads.sourceforge.net/project/djvu/DjVuLibre/$portVersion/djvulibre-$portVersion.tar.gz"
CHECKSUM_SHA256="fcd009ea7654fde5a83600eb80757bd3a76998e47d13c66b54c8db849f8f2edc"
SOURCE_DIR="djvulibre-$portVersion"
PATCHES="djvu-$portVersion.patchset"

ARCHITECTURES="all"
SECONDARY_ARCHITECTURES="x86"

libVersion="21.7.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	djvu$secondaryArchSuffix = $portVersion
	lib:libdjvulibre$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"
REPLACES="
	djvulibre$secondaryArchSuffix
	"

PROVIDES_devel="
	djvu${secondaryArchSuffix}_devel = $portVersion
	devel:libdjvulibre$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	djvu$secondaryArchSuffix == $portVersion base
	"

if [ -z "$secondaryArchSuffix" ]; then
	SUMMARY_tools="Tools package for DjVu"
	PROVIDES_tools="
		djvu${secondaryArchSuffix}_tools = $portVersion compat >= 3.5
		cmd:any2djvu #no_debug
		cmd:bzz
		cmd:c44
		cmd:cjb2
		cmd:cpaldjvu
		cmd:csepdjvu
		cmd:ddjvu
		cmd:djvm
		cmd:djvmcvt
		cmd:djvudigital #no_debug
		cmd:djvudump
		cmd:djvuextract
		cmd:djvumake
		cmd:djvups
		cmd:djvused
		cmd:djvuserve
		cmd:djvutoxml
		cmd:djvutxt
		cmd:djvuxmlparser
		"
	REQUIRES_tools="
		$REQUIRES
		djvu$secondaryArchSuffix == $portVersion base
		"
fi

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libjpeg$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

debugList=(
	$libDir/libdjvulibre.so.$libVersion
	)
if [ -z "$secondaryArchSuffix" ]; then
	for i in `echo "$PROVIDES_tools" | grep -v no_debug | sed -n -e "s/^\s*cmd://p"`; do
		debugList+=("${binDir/$portName/${portName}_tools}"/$i)
	done
fi
defineDebugInfoPackage $portName "${debugList[@]}"

BUILD()
{
	export CPPFLAGS="-Wno-deprecated-declarations"
	autoreconf -vfi
	runConfigure ./configure
	make $jobArgs
	cd doc
	make-djvulibre-book-en.sh
}

INSTALL()
{
	echo "$PROVIDES_tools" | sed -n -e "s/^\s*cmd://p"
	make install

	# not needed
	rm -rf $dataDir/icons

	# add documentation (in djvu format)
	mkdir -p $developDocDir
	cp doc/djvulibre-book-en.djvu $developDocDir

	prepareInstalledDevelLib libdjvulibre
	fixPkgconfig

	packageEntries devel \
		$developDir

	if [ -z "$secondaryArchSuffix" ]; then
	packageEntries tools \
		$binDir \
		$dataDir \
		$manDir
	fi

	# Remove stuff we don't need in the secondary architecture base package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir \
		rm -rf $dataDir \
		rm -rf $manDir
	fi
}
