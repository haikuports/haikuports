SUMMARY="Code formatter for Haiku coding style"
DESCRIPTION="Format C++ code following the Haiku Coding Guidelines.

This is a fork of clang-format with customizations to implement the coding style followed by Haiku \
and several applications running on Haiku.

haiku-format looks for a configuration file '.haiku-format' or '_haiku-format', going up the file \
hierarchy starting with the folder of the file you want to format. It defaults to ~/config/settings/.haiku-format."
HOMEPAGE="https://github.com/owenca/haiku-format"
COPYRIGHT="2003-2019 University of Illinois at Urbana-Champaign
	2019-2022 Owen Pan"
LICENSE="Apache v2 with LLVM Exception"
REVISION="2"
srcGitRev="859d67b9d2f6395f20d424b94aa63b75db932c7d"
SOURCE_URI="https://github.com/owenca/llvm-project/archive/$srcGitRev.tar.gz"
SOURCE_DIR="llvm-project-$srcGitRev"
CHECKSUM_SHA256="a94575766a076d76031a0d2f4294cb254c2fc5af54716b38f7e92f05e0381acc"

ADDITIONAL_FILES="haiku-format_install_config.sh"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

USER_SETTINGS_FILES="settings/.haiku-format template data/haiku-format/.haiku-format"
POST_INSTALL_SCRIPTS="$relativePostInstallDir/haiku-format_install_config.sh"

PROVIDES="
	haiku_format$secondaryArchSuffix = $portVersion
	cmd:haiku_format = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ninja
	cmd:python3
	"

BUILD()
{
	mkdir -p build
	cd build
	cmake  -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -Wno-dev -DLLVM_ENABLE_PROJECTS=clang ../llvm
	ninja clang-format && strip -s bin/clang-format
}

INSTALL()
{
	mkdir -p $prefix/bin $dataDir/haiku-format
	cp -uv build/bin/clang-format $prefix/bin/haiku-format
	cp -pv ./_haiku-format $dataDir/haiku-format/.haiku-format

	mkdir -p $postInstallDir
	cp $portDir/additional-files/haiku-format_install_config.sh $postInstallDir
}
