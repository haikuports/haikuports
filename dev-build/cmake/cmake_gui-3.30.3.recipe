SUMMARY="A cross-platform build system (GUI version)"
DESCRIPTION="CMake is a family of tools designed to build, test and package \
software. It is used to control the software compilation process using \
simple platform and compiler independent configuration files. CMake generates \
native makefiles and workspaces that can be used in the compiler environment \
of your choice.

This package provides the GUI version of CMake (cmake-gui)"
HOMEPAGE="https://cmake.org/"
COPYRIGHT="2002-2024 Kitware, Inc., Insight Consortium"
LICENSE="CMake"
REVISION="1"
SOURCE_URI="https://cmake.org/files/v${portVersion%.*}/cmake-$portVersion.tar.gz"
CHECKSUM_SHA256="6d5de15b6715091df7f5441007425264bdd477809f80333fdf95f846aaff88e4"
SOURCE_DIR="cmake-$portVersion"
PATCHES="cmake-$portVersion.patchset"
ADDITIONAL_FILES="cmake.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

portVersionCompat="$portVersion compat >= ${portVersion%%.*}"

PROVIDES="
	cmake_gui$secondaryArchSuffix = $portVersion
	cmd:cmake_gui = $portVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	cmake$secondaryArchSuffix >= 3	# for the dataDir/cmake files.
	lib:libarchive$secondaryArchSuffix
	lib:libcppdap$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libjsoncpp$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Widgets$secondaryArchSuffix
	lib:librhash$secondaryArchSuffix
	lib:libstdc++$secondaryArchSuffix
	lib:libuv$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

# Earlier versions of the gui package came from just one recipe named "cmake".
if [ -n "$secondaryArchSuffix" ]; then
	REPLACES="cmake${secondaryArchSuffix}_gui"
fi

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libarchive$secondaryArchSuffix
	devel:libcppdap$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix
	devel:libexpat$secondaryArchSuffix
	devel:libjsoncpp$secondaryArchSuffix >= 25
	devel:libform$secondaryArchSuffix	# needed for building ccmake.
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Gui$secondaryArchSuffix
	devel:libQt6Widgets$secondaryArchSuffix
	devel:librhash$secondaryArchSuffix
	devel:libuv$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	devel:nlohmann_json
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:grep
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:sed
	"

defineDebugInfoPackage cmake_gui$secondaryArchSuffix \
	$prefix/bin/cmake-gui

BUILD()
{
	export LDFLAGS="-lbsd"

	# not an autotools configure
	./configure --prefix=$prefix \
		--datadir=/$relativeDataDir/cmake \
		--docdir=/$relativeDocDir \
		--mandir=/$relativeManDir \
		--xdgdatadir=/$relativeDataDir \
		--system-libs \
		--qt-gui \
		--parallel=${jobArgs#-j}

	make $jobArgs
}

INSTALL()
{
	# As we only provide /bin/cmake-gui on this package (The rest is provided by cmake base),
	# just copy that binary, instead of doing "make install" and then removing what we don't need.
	mkdir -p $prefix/bin
	cp bin/cmake-gui $prefix/bin

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local APP_NAME="CMake-GUI"
	local LONG_INFO="$SUMMARY"
	local APP_SIGNATURE="application/x-vnd.cmake-gui"

	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		-e "s|@APP_NAME@|$APP_NAME|" \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		$portDir/additional-files/cmake.rdef.in > cmake.rdef

	addResourcesToBinaries cmake.rdef $prefix/bin/cmake-gui
	addAppDeskbarSymlink $prefix/bin/cmake-gui CMake-GUI
}
