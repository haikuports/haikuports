From 070e391bb1cb4e36a07f2da0351e9aeb5ffff4e1 Mon Sep 17 00:00:00 2001
From: Oscar Lesta <oscar.lesta@gmail.com>
Date: Sun, 18 May 2025 21:10:21 -0300
Subject: Replace `os_getopt()` with the one from `src/platform/windows/os.c`.

See: https://dev.haiku-os.org/ticket/18852

Fixes almost all the test failures. (from 260 down to 4 on nightlies).

diff --git a/src/platform/posix/os.c b/src/platform/posix/os.c
index c537aa0..b38c3ab 100644
--- a/src/platform/posix/os.c
+++ b/src/platform/posix/os.c
@@ -33,12 +33,107 @@ os_getcwd(char *buf, size_t size)
 	return getcwd(buf, size);
 }
 
+#define REPLACE_GETOPT 1
+#if REPLACE_GETOPT
+/*
+ * getopt ported from musl libc
+ */
+char *optarg;
+int optind = 1, opterr = 1, optopt, __optpos, __optreset = 0;
+
+#define optpos __optpos
+
+int
+os_getopt(int argc, char *const argv[], const char *optstring)
+{
+	int i;
+	char c, d;
+
+	if (!optind || __optreset) {
+		__optreset = 0;
+		__optpos = 0;
+		optind = 1;
+	}
+
+	if (optind >= argc || !argv[optind]) {
+		return -1;
+	}
+
+	if (argv[optind][0] != '-') {
+		if (optstring[0] == '-') {
+			optarg = argv[optind++];
+			return 1;
+		}
+		return -1;
+	}
+
+	if (!argv[optind][1]) {
+		return -1;
+	}
+
+	if (argv[optind][1] == '-' && !argv[optind][2]) {
+		return optind++, -1;
+	}
+
+	if (!optpos) {
+		optpos++;
+	}
+
+	c = argv[optind][optpos];
+	++optpos;
+
+	if (!argv[optind][optpos]) {
+		optind++;
+		optpos = 0;
+	}
+
+	if (optstring[0] == '-' || optstring[0] == '+') {
+		optstring++;
+	}
+
+	i = 0;
+	do {
+		d = optstring[i];
+		i++;
+	} while (d != c);
+
+	if (d != c || c == ':') {
+		optopt = c;
+		if (optstring[0] != ':' && opterr) {
+			fprintf(stderr, "%s: unrecognized option: %c\n", argv[0], c);
+		}
+		return '?';
+	}
+	if (optstring[i] == ':') {
+		optarg = 0;
+		if (optstring[i + 1] != ':' || optpos) {
+			optarg = argv[optind++] + optpos;
+			optpos = 0;
+		}
+		if (optind > argc) {
+			optopt = c;
+			if (optstring[0] == ':') {
+				return ':';
+			}
+			if (opterr) {
+				fprintf(stderr, "%s: option requires an argument: %c\n", argv[0], c);
+			}
+			return '?';
+		}
+	}
+	return c;
+
+}
+#else
+
 int
 os_getopt(int argc, char *const argv[], const char *optstring)
 {
 	return getopt(argc, argv, optstring);
 }
 
+#endif	// REPLACE_GETOPT
+
 int32_t
 os_ncpus(void)
 {
-- 
2.48.1

