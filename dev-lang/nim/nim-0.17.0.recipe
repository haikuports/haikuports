SUMMARY="An imperative, multi-paradigm, compiled programming language"
DESCRIPTION="Nim is a systems and applications programming language. \
Statically typed and compiled, it provides unparalleled performance in an \
elegant package.

Features:
* High-performance garbage-collected language
* Compiles to C, C++ or JavaScript
* Produces dependency-free binaries
* Runs on Windows, macOS, Linux, and more"
HOMEPAGE="https://nim-lang.org/"
COPYRIGHT="2006-2016 Andreas Rumpf"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://nim-lang.org/download/nim-$portVersion.tar.xz" # GitHub release unsuited for us
CHECKSUM_SHA256="36e18dd9384f6c67e6d0199b871b43e774a0af30532698184d6f5a9cc9ac7a9b"
SOURCE_URI_2="https://github.com/nim-lang/csources/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256_2="6b8de28dc317534e45366b62dcad14b9932c0de398c44e1506f5bbd80019c671"
SOURCE_FILENAME_2="csources-$portVersion.tar.gz"
ADDITIONAL_FILES="nim.rdef.in"
PATCHES="nim-$portVersion.patchset"

ARCHITECTURES="?x86_gcc2 ?x86 x86_64"
SECONDARY_ARCHITECTURES="?x86"

PROVIDES="
	nim$secondaryArchSuffix = $portVersion
	cmd:nim$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libpcre$secondaryArchSuffix
	lib:libsqlite3$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcrypto$secondaryArchSuffix
	devel:libpcre$secondaryArchSuffix
	devel:libsqlite3$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:sed
	"

GLOBAL_WRITABLE_FILES="
	settings/nim/nim.cfg keep-old
	settings/nim/nimdoc.cfg keep-old
	settings/nim/nimdoc.tex.cfg keep-old
	"

PATCH()
{
	sed -i "s|@BINDIR@|$binDir|" install.sh
	sed -i "s|@CONFIGDIR@|$settingsDir/nim|" install.sh
	sed -i "s|@LIBDIR@|$libDir/nim|" install.sh
	sed -i "s|@DOCDIR@|$docDir|" install.sh
	sed -i "s|@DATADIR@|$dataDir/nim|" install.sh
	sed -i "s|@NIMBLEDIR@|$dataDir/nim|" install.sh
}

BUILD()
{
	# Bootstrap
	mkdir -p csources
	cp -rd $sourceDir2/csources-*/* csources/
	cd csources
	sh build.sh
	cd ../

	# Build
	bin/nim c koch
	./koch boot -d:release
}

INSTALL()
{
	./install.sh haiku

	strip $binDir/nim

	# Add Haiku resources
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/nim.rdef.in > nim.rdef

	addResourcesToBinaries nim.rdef $binDir/nim
}

TEST()
{
	./koch tests
}
