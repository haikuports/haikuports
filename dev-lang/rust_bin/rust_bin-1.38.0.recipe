SUMMARY="Modern and safe systems programming language"
DESCRIPTION="Rust is a systems programming language that runs blazingly fast, \
prevents almost all crashes*, and eliminates data races."
HOMEPAGE="https://www.rust-lang.org/"
COPYRIGHT="2018 The Rust Project Developers"
LICENSE="MIT"
REVISION="1"

case "$effectiveTargetArchitecture" in
	x86)
SOURCE_URI="http://dl.rust-on-haiku.com/dist/$portVersion/rust-$portVersion-i686-unknown-haiku.tar.xz"
CHECKSUM_SHA256="9cc8df2ebf571dc6d74e019ab29db044b11db8883c41b588f732c65b3a7ab1ea"
SOURCE_DIR="rust-$portVersion-i686-unknown-haiku"
		;;
	x86_64)
SOURCE_URI="http://dl.rust-on-haiku.com/dist/$portVersion/rust-$portVersion-x86_64-unknown-haiku.tar.xz"
CHECKSUM_SHA256="dc2f709a5737e6373cf15f7dfd65766d512db25a1aa1022149c9c46ae9c54293"
SOURCE_DIR="rust-$portVersion-x86_64-unknown-haiku"
		;;
	*)
SOURCE_URI="http://dl.rust-on-haiku.com/dist/$portVersion/rustc-$portVersion-src.tar.xz"
CHECKSUM_SHA256="116fd8215ffcc1686456aec363cf8fc7b5a3c7344d541b17af14e8afcf10d446"
SOURCE_DIR="rustc-$portVersion-src"
		;;
esac

ARCHITECTURES="!x86_gcc2 ?x86 x86_64"
SECONDARY_ARCHITECTURES="x86"
DISABLE_SOURCE_PACKAGE=yes

cargoVersion="0.39.0"

PROVIDES="
	rust_bin$secondaryArchSuffix = $portVersion
	cmd:rustc$secondaryArchSuffix = $portVersion
	cmd:rustdoc$secondaryArchSuffix = $portVersion
	cmd:rust_gdb$secondaryArchSuffix = $portVersion
	cmd:rust_lldb$secondaryArchSuffix = $portVersion
	cmd:cargo$secondaryArchSuffix = $cargoVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"
CONFLICTS="
	rust$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"

relativeInstallDir="develop/tools$secondaryArchSubDir/rust"
installDir="$prefix/$relativeInstallDir"

INSTALL()
{
	./install.sh                                   \
		--prefix=$installDir                       \
		--docdir=$developDocDir                    \
		--mandir=$manDir                           \
		--sysconfdir=$dataDir                      \
		--disable-ldconfig

	# move zsh data to the datadir
	mv $installDir/share/zsh $dataDir
	rm -rf $installDir/share

	# clean out unneccesary files created by the rust installer
	rm $installDir/lib/rustlib/components
	rm $installDir/lib/rustlib/install.log
	rm $installDir/lib/rustlib/manifest-*
	rm $installDir/lib/rustlib/rust-installer-version
	rm $installDir/lib/rustlib/uninstall.sh

	# link the binaries in $binDir
	mkdir -p $binDir
	for f in cargo rust-gdb rust-lldb rustc rustdoc; do
		symlinkRelative -sfn $installDir/bin/$f $binDir
	done

	# make sure runtime_loader can find the libraries in the lib dir relative
	# to the binaries
	symlinkRelative -sfn $installDir/lib $installDir/bin/lib
}
