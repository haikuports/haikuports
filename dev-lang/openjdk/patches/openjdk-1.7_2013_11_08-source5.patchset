From 428b96e741cc34dc4e7e3213a9c9ba312c78e943 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Mon, 25 Nov 2013 17:08:56 +0100
Subject: vm/opto/addnode.cpp: Fix redefinition of MAXFLOAT

Include <math.h> instead of defining the macro here.

diff --git a/src/share/vm/opto/addnode.cpp b/src/share/vm/opto/addnode.cpp
index 33ecf15..83ed7d3 100644
--- a/src/share/vm/opto/addnode.cpp
+++ b/src/share/vm/opto/addnode.cpp
@@ -34,13 +34,13 @@
 
 // Portions of code courtesy of Clifford Click
 
-#define MAXFLOAT        ((float)3.40282346638528860e+38)
-
 // Classic Add functionality.  This covers all the usual 'add' behaviors for
 // an algebraic ring.  Add-integer, add-float, add-double, and binary-or are
 // all inherited from this class.  The various identity values are supplied
 // by virtual functions.
 
+#include <math.h>
+
 
 //=============================================================================
 //------------------------------hash-------------------------------------------
-- 
1.8.3.4


From d925994749a3e56f1e57c1bbb534b745842964c2 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Mon, 25 Nov 2013 17:10:01 +0100
Subject: constantPoolOopDesc::method_at_if_loaded(): Fix return value


diff --git a/src/share/vm/oops/constantPoolOop.cpp b/src/share/vm/oops/constantPoolOop.cpp
index a46f4eb..d673215 100644
--- a/src/share/vm/oops/constantPoolOop.cpp
+++ b/src/share/vm/oops/constantPoolOop.cpp
@@ -269,7 +269,7 @@ klassOop constantPoolOopDesc::klass_ref_at_if_loaded_check(constantPoolHandle th
 methodOop constantPoolOopDesc::method_at_if_loaded(constantPoolHandle cpool,
                                                    int which, Bytecodes::Code invoke_code) {
   assert(!constantPoolCacheOopDesc::is_secondary_index(which), "no indy instruction here");
-  if (cpool->cache() == NULL)  return false;  // nothing to load yet
+  if (cpool->cache() == NULL)  return NULL;  // nothing to load yet
   int cache_index = which - CPCACHE_INDEX_TAG;
   if (!(cache_index >= 0 && cache_index < cpool->cache()->length())) {
     if (PrintMiscellaneous && (Verbose||WizardMode)) {
-- 
1.8.3.4


From 6aa8090dc672a2c2750fb33ab703280ea5e52162 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Mon, 25 Nov 2013 17:11:30 +0100
Subject: CountedLoopNode: Fix return value


diff --git a/src/share/vm/opto/loopnode.cpp b/src/share/vm/opto/loopnode.cpp
index eb138f5..f03ee1b 100644
--- a/src/share/vm/opto/loopnode.cpp
+++ b/src/share/vm/opto/loopnode.cpp
@@ -893,7 +893,7 @@ Node *LoopLimitNode::Identity( PhaseTransform *phase ) {
 Node* CountedLoopNode::match_incr_with_optional_truncation(
                       Node* expr, Node** trunc1, Node** trunc2, const TypeInt** trunc_type) {
   // Quick cutouts:
-  if (expr == NULL || expr->req() != 3)  return false;
+  if (expr == NULL || expr->req() != 3)  return NULL;
 
   Node *t1 = NULL;
   Node *t2 = NULL;
-- 
1.8.3.4


From c03ad98680bd582e73aa60c8d82bc713b73fc7f9 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Tue, 26 Nov 2013 17:45:02 +0100
Subject: os_haiku.cpp: Update DEFAULT_LIBPATH


diff --git a/src/os/haiku/vm/os_haiku.cpp b/src/os/haiku/vm/os_haiku.cpp
index 963eb0f..c87fbea 100644
--- a/src/os/haiku/vm/os_haiku.cpp
+++ b/src/os/haiku/vm/os_haiku.cpp
@@ -281,7 +281,7 @@ void os::init_system_properties_values() {
  *        ...
  *        7: The default directories, normally /lib and /usr/lib.
  */
-#define DEFAULT_LIBPATH "%A/lib:/boot/home/config/lib:/boot/common/lib:/boot/system/lib"
+#define DEFAULT_LIBPATH "%A/lib:/boot/home/config/non-packaged/lib:/boot/home/config/lib:/boot/system/non-packaged/lib:/boot/system/lib"
 
 #define EXTENSIONS_DIR  "/lib/ext"
 #define ENDORSED_DIR    "/lib/endorsed"
-- 
1.8.3.4

