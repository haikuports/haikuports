SUMMARY="Portable and retargetable assembler"
DESCRIPTION="vasm is a portable and retargetable assembler to create linkable \
objects in various formats or absolute code. Multiple CPU-, syntax and \
output-modules can be selected.

Many common directives/pseudo-opcodes are supported (depending on the syntax \
module) as well as CPU-specific extensions.

The assembler supports optimizations (e.g. choosing the shortest possible \
branch instruction or addressing mode) and relaxations (e.g. converting a \
branch to an absolute jump when necessary).

Most syntax modules support macros, include directives, repetitions, \
conditional assembly and local symbols.

Currently the following CPUs are officially supported by vasm:
* 6502 family (including 65C02, 65CE02, DTV, 45GS02, HU6280, 65802, 65816)
* 6800 family (6800, 6801, 6803, 68HC11)
* 6809 family (6809, 6309, Turbo9, Konami-2 and 68HC12)
* 80x86 family (IA32 8/16/32 bit, using AT&T-syntax)
* ARM (architecture ARMv1 to ARMv4, including THUMB mode)
* C16x/ST10
* ColdFire family (all models of V2, V3, V4, V4e)
* HANS project (32-bit FPGA CPU)
* Jaguar RISC (GPU and DSP instruction sets)
* M680x0 family (including M6888x, M68851, CPU32 and Apollo 68080)
* PDP-11 architecture (includes EIS, FIS)
* PowerPC family (POWER, 40x, 440, 460, 6xx, 7xx, 7xxx, 860, Book-E, e300 and e500)
* QNICE (elegant 16-bit FPGA CPU)
* Raspberry-Pi VideoCore IV
* Sony SPC700
* SunPlus Î¼nSP CPU (ISA V1.0 and V1.1)
* TR3200 (virtual CPU from 0x10c)
* Z80 family (Z80, 8080, 8085, GBZ80, 64180, RCM2/3/4k)

These syntax flavours are supported:
* Standard MIT (GNU-as style) syntax
* Motorola/Freescale 68k syntax (Devpac compatible)
* Atari MadMac syntax (6502, 68k, Jaguar)
* Old 8-bit style syntax

Supported output file formats:
* a.out (M68k, i386 and JRISC)
* Amiga hunk format (M68k)
* Apple DOS, Atari COM, Commodore PRG, Oric TAP binary formats (6502)
* Atari TOS executable format (M68k)
* Atari DRI object file format (M68k)
* C #define output format (all)
* C256 Foenix PGX and PGZ binary formats (65816)
* EHF extended hunk format (PowerPC)
* ELF (M68k, PowerPC, i386, ARM and JRISC)
* GST object file format
* HANS project output format
* Intel-Hex format (all)
* MOS Paper Tape format (all)
* Motorola Srecord format (all)
* o65 relocatable format (6502, 65816)
* Raw, binary output (all)
* Sharp X68000 Xfile (and Zfile) format (M68k)
* Tandy Color Computer and Dragon DOS binaries (6809)
* Test, debugging output (all, default)
* VOBJ proprietary versatile object format (all)
* Wozmon monitor format (6502)"
HOMEPAGE="http://sun.hasenbraten.de/vasm/"
COPYRIGHT="2002-2025 Volker Barthelmann
	2002-2025 Frank Wille
	2013-2021 Esben Norby
	2007-2009 Dominic Morris"
LICENSE="vasm"
REVISION="1"
SOURCE_URI="https://server.owl.de/~frank/tags/vasm2_0c.tar.gz"
CHECKSUM_SHA256="ca9c5b260762790c23017184e406fbf242aed8c3e7a722b12266cd7bff70af9e"
SOURCE_DIR="vasm"

ARCHITECTURES="all"

PROVIDES="
	vasm = $portVersion
	cmd:vasmz80_oldstyle
	cmd:vasm6800_oldstyle
	cmd:vobjdump
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc
	cmd:make
	"

BUILD()
{
	make -f Makefile.Haiku $jobArgs CPU=z80 SYNTAX=oldstyle
	make -f Makefile.Haiku $jobArgs CPU=6800 SYNTAX=oldstyle
	# TODO add other cpu/syntax pairs as needed (not all of them make sense)
}

INSTALL()
{
	mkdir $binDir
	cp vasmz80_oldstyle $binDir
	cp vasm6800_oldstyle $binDir
	cp vobjdump $binDir
}
