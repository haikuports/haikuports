From ccf836120a4029aea12e932e074d062173253bca Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:52:03 +0200
Subject: Tell perl that BFS has a link count of 1


diff --git a/cpan/File-Temp/lib/File/Temp.pm b/cpan/File-Temp/lib/File/Temp.pm
index 570f25a..81baf48 100644
--- a/cpan/File-Temp/lib/File/Temp.pm
+++ b/cpan/File-Temp/lib/File/Temp.pm
@@ -2157,7 +2157,8 @@ sub unlink0 {
     # On NFS the link count may still be 1 but we can't know that
     # we are on NFS.  Since we can't be sure, we'll defer it
 
-    return 1 if $fh[3] == 0 || $^O eq 'cygwin';
+    # On haiku, the link count seems to be always 1 (at least for BFS)
+    return 1 if $fh[3] == 0 || $^O eq 'cygwin' || $^O eq 'haiku';
   }
   # fall-through if we can't unlink now
   _deferred_unlink($fh, $path, 0);
-- 
2.45.1


From 9ecf37f2989d220763e11553ce938d0c9095b4f8 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:52:53 +0200
Subject: Haiku defines, but does not implement O_EXLOCK


diff --git a/cpan/File-Temp/t/lock.t b/cpan/File-Temp/t/lock.t
index 7bcd491..85260b8 100644
--- a/cpan/File-Temp/t/lock.t
+++ b/cpan/File-Temp/t/lock.t
@@ -8,7 +8,8 @@ use Fcntl;
 BEGIN {
 # see if we have O_EXLOCK
   eval { &Fcntl::O_EXLOCK; };
-  if ($@) {
+  if ($@  || $^O eq 'haiku') {
+    # haiku doesn't implement O_EXLOCK yet (but it defines the value)
     plan skip_all => 'Do not seem to have O_EXLOCK';
   } else {
     plan tests => 4;
-- 
2.45.1


From 7f9232cdcd444ae11980276a1df2c4be8644ad18 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:53:40 +0200
Subject: haiku sets all its specifics via Configure


diff --git a/hints/haiku.sh b/hints/haiku.sh
index 0ec7479..0f09f53 100644
--- a/hints/haiku.sh
+++ b/hints/haiku.sh
@@ -1,46 +1 @@
-# Haiku hints file
-# $Id$
-
-case "$prefix" in
-'') prefix="$(finddir B_COMMON_DIRECTORY)" ;;
-*) ;; # pass the user supplied value through
-esac
-
-libpth="$(finddir B_USER_DEVELOP_DIRECTORY)/lib $(finddir B_SYSTEM_DEVELOP_DIRECTORY)/lib $(finddir B_COMMON_DIRECTORY)/lib /system/lib"
-usrinc="$(finddir B_SYSTEM_DEVELOP_DIRECTORY)/headers/posix"
-locinc="$(finddir B_USER_CONFIG_DIRECTORY)/develop/headers $(finddir B_COMMON_DIRECTORY)/headers $(finddir B_SYSTEM_DEVELOP_DIRECTORY)/headers"
-
-libc="$(finddir B_SYSTEM_LIB_DIRECTORY)/libroot.so"
-libs='-lnetwork'
-
-# Use Haiku's malloc() by default.
-case "$usemymalloc" in
-'') usemymalloc='n' ;;
-esac
-
-# Haiku generally supports hard links, but the default file system (BFS)
-# doesn't. So better avoid using hard links.
-d_link='undef'
-dont_use_nlink='define'
-
-# The array syserrlst[] is useless for the most part.
-# Large negative numbers really kind of suck in arrays.
-d_syserrlst='undef'
-
-# Haiku uses gcc.
-cc="gcc"
-ld='gcc'
-
-ccflags="$ccflags -fno-stack-protector"
-
-# The runtime loader library path variable is LIBRARY_PATH.
-case "$ldlibpthname" in
-'') ldlibpthname=LIBRARY_PATH ;;
-esac
-
-# as of alpha 4.1 (at the latest) some symbols are versioned,
-# confusing the nm lookup
-case "$usenm" in
-'') usenm='undef' ;;
-esac
-
+# haiku sets all its specifics via Configure
-- 
2.45.1


From 58103414df3ca4fa4ba920538f7879ae34a9aeaa Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:54:15 +0200
Subject: Tell perl that Haiku needs haikuish.h installed as well


diff --git a/installperl b/installperl
index 3c8af53..1bbbf5b 100755
--- a/installperl
+++ b/installperl
@@ -343,6 +343,11 @@ elsif ($Is_Cygwin) { # On Cygwin symlink it to CORE to make Makefile happy
 
     # AIX needs perl.exp installed as well.
     push(@corefiles,'perl.exp') if $^O eq 'aix';
+    if ($^O eq 'haiku') {
+	# Haiku needs haikuish.h installed as well.
+	mkpath("$installarchlib/CORE/haiku", $opts{verbose}, 0777);
+	push(@corefiles,'haiku/haikuish.h');
+    }
 }
 
 
-- 
2.45.1


From 5b1ca829779068d5c29c456909c3598dc8676206 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:55:13 +0200
Subject: Fix handling of exit codes on Haiku


diff --git a/t/run/exit.t b/t/run/exit.t
index ce3270e..cab9a79 100644
--- a/t/run/exit.t
+++ b/t/run/exit.t
@@ -55,18 +55,18 @@ is( ${^CHILD_ERROR_NATIVE}, $native_success,  'Normal exit ${^CHILD_ERROR_NATIVE
 if (!$vms_exit_mode) {
   my $posix_ok = eval { require POSIX; };
   my $wait_macros_ok = defined &POSIX::WIFEXITED;
-  eval { POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}) };
+  eval { POSIX::WIFEXITED($?) };
   $wait_macros_ok = 0 if $@;
   $exit = run('exit 42');
   is( $exit >> 8, 42,             'Non-zero exit' );
   is( $exit, $?,                  'Non-zero exit $?' );
-  isnt( !${^CHILD_ERROR_NATIVE}, 0, 'Non-zero exit ${^CHILD_ERROR_NATIVE}' );
+  isnt( ${^CHILD_ERROR_NATIVE}, 0, 'Non-zero exit ${^CHILD_ERROR_NATIVE}' );
   SKIP: {
     skip("No POSIX", 3) unless $posix_ok;
     skip("No POSIX wait macros", 3) unless $wait_macros_ok;
-    ok(POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}), "WIFEXITED");
-    ok(!POSIX::WIFSIGNALED(${^CHILD_ERROR_NATIVE}), "WIFSIGNALED");
-    is(POSIX::WEXITSTATUS(${^CHILD_ERROR_NATIVE}), 42, "WEXITSTATUS");
+    ok(POSIX::WIFEXITED($?), "WIFEXITED");
+    ok(!POSIX::WIFSIGNALED($?), "WIFSIGNALED");
+    is(POSIX::WEXITSTATUS($?), 42, "WEXITSTATUS");
   }
 
   SKIP: {
@@ -85,9 +85,9 @@ if (!$vms_exit_mode) {
     SKIP: {
       skip("No POSIX", 3) unless $posix_ok;
       skip("No POSIX wait macros", 3) unless $wait_macros_ok;
-      ok(!POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}), "WIFEXITED");
-      ok(POSIX::WIFSIGNALED(${^CHILD_ERROR_NATIVE}), "WIFSIGNALED");
-      is(POSIX::WTERMSIG(${^CHILD_ERROR_NATIVE}), 15, "WTERMSIG");
+      ok(!POSIX::WIFEXITED($?), "WIFEXITED");
+      ok(POSIX::WIFSIGNALED($?), "WIFSIGNALED");
+      is(POSIX::WTERMSIG($?), 15, "WTERMSIG");
     }
   }
 
-- 
2.45.1


From 89ddca4242c23b959888f837199c223f32304a21 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sat, 28 Sep 2013 13:46:42 +0200
Subject: Adjust ExtUtils::MakeMaker for PM-Haiku.

* MakeMaker-projects trying to install into 'site-perl' while specifying
  PREFIX would end up using a wrong 'site-perl' prefix.
* Split MM_Haiku.pm off MM_BeOS.pm, implementing Haiku-specific overrides
  for MakeMaker.

diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
index 554e6fb..7cccf41 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
@@ -61,7 +61,8 @@ if( $^O eq 'MSWin32' ) {
 $Is{UWIN}   = $^O =~ /^uwin(-nt)?$/;
 $Is{Cygwin} = $^O eq 'cygwin';
 $Is{NW5}    = $Config{osname} eq 'NetWare';  # intentional
-$Is{BeOS}   = ($^O =~ /beos/i or $^O eq 'haiku');
+$Is{BeOS}   = $^O =~ /beos/i;
+$Is{Haiku}  = $^O eq 'haiku';
 $Is{DOS}    = $^O eq 'dos';
 if( $Is{NW5} ) {
     $^O = 'NetWare';
diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
new file mode 100644
index 0000000..81e5f99
--- /dev/null
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -0,0 +1,70 @@
+package ExtUtils::MM_Haiku;
+
+use strict;
+
+=head1 NAME
+
+ExtUtils::MM_Haiku - methods to override UN*X behaviour in ExtUtils::MakeMaker
+
+=head1 SYNOPSIS
+
+ use ExtUtils::MM_Haiku;	# Done internally by ExtUtils::MakeMaker if needed
+
+=head1 DESCRIPTION
+
+See ExtUtils::MM_Unix for a documentation of the methods provided
+there. This package overrides the implementation of these methods, not
+the semantics.
+
+=over 4
+
+=cut
+
+use ExtUtils::MakeMaker::Config;
+use File::Spec;
+require ExtUtils::MM_Any;
+require ExtUtils::MM_Unix;
+
+our @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );
+our $VERSION = '6.66';
+
+
+=item os_flavor
+
+Haiku is Haiku.
+
+=cut
+
+sub os_flavor {
+    return('Haiku');
+}
+
+=head3 init_INSTALL_from_PREFIX
+
+  $mm->init_INSTALL_from_PREFIX;
+
+=cut
+
+sub init_INSTALL_from_PREFIX {
+    my $self = shift;
+
+	# If a prefix has been given from outside, the default implementation
+	# will set PERLPREFIX, SITEPREFIX and VENDORPREFIX to identical values,
+	# but due to the way how Haiku's package management works, PERLPREFIX
+	# and VENDORPREFIX are not writable at all (as they're being populated
+	# from installed packages via package-fs). SITEPREFIX, however needs to
+	# be set to a path which can be written to (since site packages are
+	# expected to be installed "manually") - so we make sure it points
+	# to a 'non-packaged'-folder:
+    my $prefixGiven = $self->{PREFIX};
+	$self->SUPER::init_INSTALL_from_PREFIX();
+	if ($prefixGiven) {
+        $self->{SITEPREFIX} = '$(PREFIX)/non-packaged';
+    } 
+}
+
+=back
+
+1;
+__END__
+
-- 
2.45.1


From 8b1508e136aa3dfe3dd032c5d8e17178ada2c4d5 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Tue, 8 Oct 2013 22:16:37 +0200
Subject: Avoid using -rpath for dynamic modules.


diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
index 81e5f99..25ace13 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -65,6 +65,33 @@ sub init_INSTALL_from_PREFIX {
 
 =back
 
+=head3 init_others
+
+    $MM->init_others();
+
+Initializes the macro definitions having to do with compiling and
+linking used by tools_other() and places them in the $MM object.
+
+If there is no description, its the same as the parameter to
+WriteMakefile() documented in ExtUtils::MakeMaker.
+
+=cut
+
+sub init_others {
+    my $self = shift;
+
+	$self->SUPER::init_others();
+
+	# Don't use run-time paths for libraries required by dynamic
+	# modules on Haiku, as that wouldn't work should a library be moved
+	# (for instance because the package has been activated somewhere else).
+    $self->{LD_RUN_PATH} = "";
+
+    return;
+}
+
+=back
+
 1;
 __END__
 
-- 
2.45.1


From 888bb0055430fe31da4a8bbf35f8fe2f482273a5 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Tue, 8 Oct 2013 22:17:26 +0200
Subject: Add script sitecustomize.pl for setting up @INC as we need it.


diff --git a/sitecustomize.pl b/sitecustomize.pl
new file mode 100644
index 0000000..a321e51
--- /dev/null
+++ b/sitecustomize.pl
@@ -0,0 +1,36 @@
+#! perl
+
+use Config;
+
+# Remove all compiled-in paths referring to Perl's installation dir
+# and replace them with a static set of paths that implement the intended
+# searching order:
+my @ourINC = (
+	"/boot/home/config/lib/perl5/$Config{version}/$Config{archname}",
+	"/boot/home/config/lib/perl5/$Config{version}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/home/config/lib/perl5/vendor_perl",
+	"/boot/system/lib/perl5/$Config{version}/$Config{archname}",
+	"/boot/system/lib/perl5/$Config{version}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/system/lib/perl5/vendor_perl",
+);
+my @newINC;
+my $removedPerlPaths;
+foreach my $inc (@INC) {
+	if ($inc =~ m[^/packages/perl-$Config{version}-\d+/.self/]o) {
+		if (! $removedPerlPaths) {
+			push @newINC, @ourINC;
+			$removedPerlPaths = 1;
+		}
+		next;
+	}
+	push @newINC, $inc;
+}
+@INC = @newINC;
-- 
2.45.1


From b800124bbbe5e7751dc0ac3d4cd4b7a760d5e8c0 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Wed, 9 Oct 2013 20:29:38 +0200
Subject: Fix initialization check for CPAN.

* On Haiku, only the site-lib directories will ever be writable,
  as the others read-only. This avoids CPAN asking for a way to
  circumvent unwritable lib dirs.

diff --git a/cpan/CPAN/lib/CPAN/FirstTime.pm b/cpan/CPAN/lib/CPAN/FirstTime.pm
index 8934f4a..1716a55 100644
--- a/cpan/CPAN/lib/CPAN/FirstTime.pm
+++ b/cpan/CPAN/lib/CPAN/FirstTime.pm
@@ -2167,6 +2167,12 @@ sub _print_urllist {
 }
 
 sub _can_write_to_libdirs {
+    if ($^O eq 'haiku') {
+    	# on Haiku, the other dirs are never writable, as they are
+    	# being populated by packagefs
+        return -w $Config{installsitelib}
+            && -w $Config{installsitearch}
+    }
     return -w $Config{installprivlib}
         && -w $Config{installarchlib}
         && -w $Config{installsitelib}
-- 
2.45.1


From afb39a432ecc454f9e28d75975e33d7ebd2cbb4e Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 13 Oct 2013 17:32:50 +0200
Subject: Add support for HAIKU_USE_VENDOR_DIRECTORIES.

* Adjust MakeMaker to automatically switch to vendor directories if
  requested via HAIKU_USE_VENDOR_DIRECTORIES.

diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
index 25ace13..8a04ead 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -29,21 +29,20 @@ our @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );
 our $VERSION = '6.66';
 
 
-=item os_flavor
-
-Haiku is Haiku.
-
-=cut
-
 sub os_flavor {
     return('Haiku');
 }
 
-=head3 init_INSTALL_from_PREFIX
+sub init_main {
+    my $self = shift;
 
-  $mm->init_INSTALL_from_PREFIX;
+    # switch to vendor directories if requested.
+    if ($ENV{'HAIKU_USE_VENDOR_DIRECTORIES'}) {
+        $self->{INSTALLDIRS} ||= 'vendor';
+    }
 
-=cut
+    $self->SUPER::init_main();
+}
 
 sub init_INSTALL_from_PREFIX {
     my $self = shift;
@@ -63,20 +62,6 @@ sub init_INSTALL_from_PREFIX {
     } 
 }
 
-=back
-
-=head3 init_others
-
-    $MM->init_others();
-
-Initializes the macro definitions having to do with compiling and
-linking used by tools_other() and places them in the $MM object.
-
-If there is no description, its the same as the parameter to
-WriteMakefile() documented in ExtUtils::MakeMaker.
-
-=cut
-
 sub init_others {
     my $self = shift;
 
@@ -90,8 +75,6 @@ sub init_others {
     return;
 }
 
-=back
-
 1;
 __END__
 
-- 
2.45.1


From 587853920e03a11121c9d26c51b63080256d1bb5 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 9 Jun 2017 21:30:33 +0200
Subject: disable fstack-protector for Haiku


diff --git a/hints/haiku.sh b/hints/haiku.sh
index 0f09f53..b76c7c1 100644
--- a/hints/haiku.sh
+++ b/hints/haiku.sh
@@ -1 +1,3 @@
-# haiku sets all its specifics via Configure
+# haiku sets nearly all its specifics via Configure
+
+ccflags="$ccflags -fno-stack-protector"
-- 
2.45.1


From 1f79db86954bb75e4212034e8dde0b6eda989245 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Wed, 14 Mar 2018 21:33:54 +0100
Subject: sitecustomize.pl: use the shortVersion for site and vendor.


diff --git a/sitecustomize.pl b/sitecustomize.pl
index a321e51..76c0e46 100644
--- a/sitecustomize.pl
+++ b/sitecustomize.pl
@@ -8,17 +8,17 @@ use Config;
 my @ourINC = (
 	"/boot/home/config/lib/perl5/$Config{version}/$Config{archname}",
 	"/boot/home/config/lib/perl5/$Config{version}",
-	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
-	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}",
-	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
-	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{revision}.$Config{patchlevel}/$Config{archname}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{revision}.$Config{patchlevel}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{revision}.$Config{patchlevel}/$Config{archname}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{revision}.$Config{patchlevel}",
 	"/boot/home/config/lib/perl5/vendor_perl",
 	"/boot/system/lib/perl5/$Config{version}/$Config{archname}",
 	"/boot/system/lib/perl5/$Config{version}",
-	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
-	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}",
-	"/boot/system/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
-	"/boot/system/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{revision}.$Config{patchlevel}/$Config{archname}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{revision}.$Config{patchlevel}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{revision}.$Config{patchlevel}/$Config{archname}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{revision}.$Config{patchlevel}",
 	"/boot/system/lib/perl5/vendor_perl",
 );
 my @newINC;
-- 
2.45.1


From a3940547651bbdd2a863be98ba3794bf132c2edf Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sun, 7 Jul 2019 20:32:13 +0200
Subject: numeric.c: move down optional declaration

numeric.c:38:5: error: ISO C90 forbids mixed declarations and code
NV result;

diff --git a/numeric.c b/numeric.c
index c22e4ef..1b6d520 100644
--- a/numeric.c
+++ b/numeric.c
@@ -31,8 +31,8 @@ values, including such things as replacements for the OS's atof() function
 PERL_STATIC_INLINE NV
 S_strtod(pTHX_ const char * const s, char ** e)
 {
-    DECLARATION_FOR_LC_NUMERIC_MANIPULATION;
     NV result;
+    DECLARATION_FOR_LC_NUMERIC_MANIPULATION;
 
     STORE_LC_NUMERIC_SET_TO_NEEDED();
 
-- 
2.45.1


From 4d45637b47fd1358d37bbe284ed5f7deb8fb0cb1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Joachim=20Mairb=C3=B6ck?= <j.mairboeck@gmail.com>
Date: Sat, 22 Jun 2024 22:24:38 +0200
Subject: disable some reentrant variants of functions which we don't have


diff --git a/reentr.h b/reentr.h
index 90f6b6d..5fa312a 100644
--- a/reentr.h
+++ b/reentr.h
@@ -73,6 +73,10 @@
 #    define NETDB_R_OBSOLETE
 #  endif
 
+#  ifdef __HAIKU__
+#    define NETDB_R_OBSOLETE
+#  endif
+
 #  if defined(__GLIBC__) && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 24))
 #    undef HAS_READDIR_R
 #    undef HAS_READDIR64_R
diff --git a/regen/reentr.pl b/regen/reentr.pl
index 4b13cc2..931eca2 100644
--- a/regen/reentr.pl
+++ b/regen/reentr.pl
@@ -121,6 +121,10 @@ print $h <<EOF;
 #    define NETDB_R_OBSOLETE
 #  endif
 
+#  ifdef __HAIKU__
+#    define NETDB_R_OBSOLETE
+#  endif
+
 #  if defined(__GLIBC__) && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 24))
 #    undef HAS_READDIR_R
 #    undef HAS_READDIR64_R
-- 
2.45.1


From efd834171358f845db9324c5431a03f7e75eac71 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Joachim=20Mairb=C3=B6ck?= <j.mairboeck@gmail.com>
Date: Sat, 22 Jun 2024 22:25:46 +0200
Subject: disable check involving sizeof(dirent.d_name)

This is a flexible array member and sizeof isn't allowed for these.

diff --git a/sv.c b/sv.c
index 0b3d142..880a108 100644
--- a/sv.c
+++ b/sv.c
@@ -14066,6 +14066,7 @@ Perl_dirp_dup(pTHX_ DIR *const dp, CLONE_PARAMS *const param)
     pos = PerlDir_tell(dp);
     if ((dirent = PerlDir_read(dp))) {
         len = d_namlen(dirent);
+#ifndef __HAIKU__
         if (len > sizeof(dirent->d_name) && sizeof(dirent->d_name) > PTRSIZE) {
             /* If the len is somehow magically longer than the
              * maximum length of the directory entry, even though
@@ -14074,6 +14075,7 @@ Perl_dirp_dup(pTHX_ DIR *const dp, CLONE_PARAMS *const param)
             PerlDir_close(ret);
             return (DIR*)NULL;
         }
+#endif
         if (len <= sizeof smallbuf) name = smallbuf;
         else Newx(name, len, char);
         Move(dirent->d_name, name, len, char);
-- 
2.45.1


From de82e8f99fbd8361debbf3d1f20a52f212f64298 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Joachim=20Mairb=C3=B6ck?= <j.mairboeck@gmail.com>
Date: Sun, 23 Jun 2024 17:35:15 +0200
Subject: disable locking mutexes at fork

This is broken on Haiku.
 * mutex_unlock fails with EPERM (according to a panic message from miniperl)
 * the child process hangs in _kern_mutex_lock, pegging a core

TODO: is this safe?

diff --git a/util.c b/util.c
index 4053ca4..66db5e2 100644
--- a/util.c
+++ b/util.c
@@ -2846,7 +2846,7 @@ Perl_atfork_lock(void)
   PERL_TSA_ACQUIRE(PL_op_mutex)
 #endif
 {
-#if defined(USE_ITHREADS)
+#if defined(USE_ITHREADS) && !defined(__HAIKU__)
     /* locks must be held in locking order (if any) */
 #  ifdef USE_PERLIO
     MUTEX_LOCK(&PL_perlio_mutex);
@@ -2871,7 +2871,7 @@ Perl_atfork_unlock(void)
   PERL_TSA_RELEASE(PL_op_mutex)
 #endif
 {
-#if defined(USE_ITHREADS)
+#if defined(USE_ITHREADS) && !defined(__HAIKU__)
     /* locks must be released in same order as in atfork_lock() */
 #  ifdef USE_PERLIO
     MUTEX_UNLOCK(&PL_perlio_mutex);
-- 
2.45.1

