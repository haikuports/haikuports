From 4ec558acd7258fc6d722754d43a9a81256a701cc Mon Sep 17 00:00:00 2001
From: Estevan Castilho <estevan.cps@gmail.com>
Date: Sun, 28 May 2023 19:30:16 +0000
Subject: Avoid conflicting bool definitions on Haiku

On Haiku, link.h indirectly includes stdbool.h, causing bool to be
defined to _Bool, which is incompatible with ecl's own expected
definition of int. So we just unconditionally undef bool after
including the necessary sytem headers, which is unlikely to cause much
trouble in any case.

diff --git a/src/c/ffi/libraries.d b/src/c/ffi/libraries.d
index 5620988..5e0fd1f 100644
--- a/src/c/ffi/libraries.d
+++ b/src/c/ffi/libraries.d
@@ -44,9 +44,6 @@
 # ifdef HAVE_DLFCN_H
 #  include <dlfcn.h>
 #  define INIT_PREFIX "init_fas_"
-#  ifdef bool
-#   undef bool
-#  endif
 # endif
 # ifdef HAVE_MACH_O_DYLD_H
 #  include <mach-o/dyld.h>
@@ -64,6 +61,9 @@
 # else
 #  include <unistd.h>
 # endif
+# ifdef bool
+#  undef bool
+# endif
 #endif /* ENABLE_DLOPEN */
 #include <ecl/ecl-inl.h>
 #include <ecl/internal.h>
-- 
2.37.3

