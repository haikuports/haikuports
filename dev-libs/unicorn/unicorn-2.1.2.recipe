SUMMARY="A CPU emulator framework"
DESCRIPTION="Unicorn is a lightweight, thread-safe, multi-platform, multi-architecture \
CPU emulator framework written in pure C, and based on QEMU."
HOMEPAGE="https://www.unicorn-engine.org/"
COPYRIGHT="2015-2018, Nguyen Anh Quynh"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://github.com/unicorn-engine/unicorn/archive/$portVersion.tar.gz"
CHECKSUM_SHA256="98687aac94bdfeeed17f80af980b3baafd79f1c3be3aec2e913905d5988f7c4a"

PATCHES="unicorn-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

buildPythonBindings=true
if $buildPythonBindings; then
	# For which version of Python will unicorn bindings be created?
	pythonVersion=3.10
	pythonPackage=${pythonVersion//.}
fi

PROVIDES="
	unicorn$secondaryArchSuffix = $portVersion
	lib:libunicorn$secondaryArchSuffix = $portVersion compat >= 2.0
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	unicorn${secondaryArchSuffix}_devel
	devel:libunicorn$secondaryArchSuffix = $portVersion compat >= 2.0
	"
REQUIRES_devel="
	unicorn$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python$pythonVersion
	"

defineDebugInfoPackage unicorn$secondaryArchSuffix \
	"$libDir"/libunicorn.so.2

if $buildPythonBindings; then
	BUILD_PREREQUIRES+="
		setuptools_python$pythonPackage
		"

	eval "SUMMARY_python$pythonPackage=\"The Python $pythonVersion bindings for unicorn\""
	eval "PROVIDES_python$pythonPackage=\"
		unicorn_python$pythonPackage = $portVersion
		\""
	eval "REQUIRES_python$pythonPackage=\"
		haiku$secondaryArchSuffix
		cmd:python$pythonVersion
		lib:libunicorn$secondaryArchSuffix
		\""
fi

BUILD()
{
	cmake -B build -S. -DCMAKE_BUILD_TYPE=RelWithDebInfo \
		$cmakeDirArgs \
		-DCMAKE_INSTALL_LIBDIR="$libDir" \
		-DBUILD_SHARED_LIBS=ON -DUNICORN_BUILD_TESTS=OFF

	make -C build $jobArgs

	if $buildPythonBindings; then
		# Install Python's bindings module
		cd bindings/python

		python=python$pythonVersion
		installLocation=$prefix/lib/python$pythonVersion/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH
		mkdir -p $installLocation

		# Make sure the bindings use the system-wide libunicorn.so.2
		export LIBUNICORN_PATH=$libDir

		$python setup.py build install \
			--root=/ --prefix=$prefix
	fi
}

INSTALL()
{
	make -C build PREFIX=$prefix install

	# remove static library
	rm -f $libDir/libunicorn.a

	prepareInstalledDevelLib libunicorn
	fixPkgconfig

	packageEntries devel \
		"$developDir"

	if $buildPythonBindings; then
		packageEntries python$pythonPackage \
			$prefix/lib/python*
	fi
}
