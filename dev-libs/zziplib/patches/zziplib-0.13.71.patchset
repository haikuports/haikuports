From 56e046bbe56afc0b226dcf40c5dece61dc634f5b Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Thu, 21 Jun 2018 17:31:25 +0200
Subject: gcc2 fix


diff --git a/zzip/mmapped.c b/zzip/mmapped.c
index 8af18f4..829e4bb 100644
--- a/zzip/mmapped.c
+++ b/zzip/mmapped.c
@@ -444,12 +444,14 @@ zzip_disk_findfirst(ZZIP_DISK * disk)
                 errno = EFBIG;
                 return 0;
             }
+        {
             zzip_size_t rootseek = zzip_disk64_trailer_get_rootseek(trailer);
 	    rootsize = zzip_disk64_trailer_get_rootsize(trailer);
             DBG2("disk64 rootseek at %lli", (long long)rootseek);
             root = disk->buffer + rootseek;
             if (root > p)
                 continue;
+	    }
         } else
         {
             continue;
-- 
2.28.0


From c9d2457c6550a1b43d83d043e064999958fc9789 Mon Sep 17 00:00:00 2001
From: Leorize <alaviss@users.noreply.github.com>
Date: Thu, 21 Jun 2018 17:34:03 +0200
Subject: test: set LIBRARY_PATH instead of LD_LIBRARY_PATH


diff --git a/test/Makefile.am b/test/Makefile.am
index 49b3fc0..f0639ef 100644
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -80,7 +80,7 @@ zzshowme$(EXEEXT) : zzipself$(EXEEXT) zzipsetstub$(EXEEXT)
 
 check-sfx : zzshowme$(EXEEXT)
 	echo :$@: "./zzshowme readme >readme.out 2>readme.err" 
-	export LD_LIBRARY_PATH="../zzip/.libs:$$LD_LIBRARY_PATH" \
+	export LIBRARY_PATH="../zzip/.libs:$$LD_LIBRARY_PATH" \
 	; ./zzshowme readme >readme.out 2>readme.err ; true
 	@ echo 'diff readme.out $(README) || grep "libzzip-" readme.err' \
 	; if test -s readme.out ; then diff readme.out $(README) \
-- 
2.28.0


From 12be2c18a73614bb4a3e33ffa54f7397ec707445 Mon Sep 17 00:00:00 2001
From: Leorize <alaviss@users.noreply.github.com>
Date: Thu, 21 Jun 2018 17:36:28 +0200
Subject: test: use rpath to direct zzipself to correct libpath


diff --git a/test/Makefile.am b/test/Makefile.am
index f0639ef..bd42521 100644
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -64,7 +64,7 @@ check-readme : $(zzcat)  test.zip
 
 noinst_PROGRAMS = zzipself zzipsetstub
 
-zzipself_LDFLAGS = @ZZIPLIB_LDFLAGS@
+zzipself_LDFLAGS = @ZZIPLIB_LDFLAGS@ -Wl,-rpath,\$$ORIGIN/../zzip/.libs
 zzipself_LDADD = ../zzip/libzzip.la @RESOLVES@ -lz
 
 ../zzip/libzzip.la : @top_srcdir@/zzip/*.c
-- 
2.28.0


From 9d0bfaf611d1e2e8e3066cd8b562cd386f59e1ad Mon Sep 17 00:00:00 2001
From: Leorize <leorize+oss@disroot.org>
Date: Sun, 7 Jun 2020 11:11:25 -0500
Subject: zziptests: avoid large file list on the command line

Some OS, like Haiku, have a small limit on the size of the argument
list. This causes the test to fail due to the large amount of files
passed through the command line.

This commit walkaround the issue by streaming the list of files to zip
stdin, bypassing the limit. However this depends on the underlying shell
to have a printf builtin (so that the argument list limit won't apply to
it).

diff --git a/test/zziptests.py b/test/zziptests.py
index 03a8b6a..1c2d19d 100644
--- a/test/zziptests.py
+++ b/test/zziptests.py
@@ -290,7 +290,7 @@ class ZZipTest(unittest.TestCase):
     filename = os.path.join(tmpdir,"README")
     filetext = self.readme()
     self.mkfile(filename, filetext)
-    shell("{exe} ../{zipfile} ??*.* README".format(**locals()), cwd=tmpdir)
+    shell("printf '%s\\n' ??*.* README | {exe} ../{zipfile} -@".format(**locals()), cwd=tmpdir)
     self.assertGreater(os.path.getsize(zipfile), 10)
   def test_10002_make_test2_zip(self):
     """ create a test2.zip for later tests using standard 'zip'
@@ -306,7 +306,7 @@ class ZZipTest(unittest.TestCase):
     filename = os.path.join(tmpdir,"README")
     filetext = self.readme()
     self.mkfile(filename, filetext)
-    shell("{exe} ../{zipfile} ??*.* README".format(**locals()), cwd=tmpdir)
+    shell("printf '%s\\n' ??*.* README | {exe} ../{zipfile} -@".format(**locals()), cwd=tmpdir)
     self.assertGreater(os.path.getsize(zipfile), 10)
   def test_10003_make_test3_zip(self):
     """ create a test3.zip for later tests using standard 'zip'
@@ -322,7 +322,7 @@ class ZZipTest(unittest.TestCase):
     filename = os.path.join(tmpdir,"README")
     filetext = self.readme()
     self.mkfile(filename, filetext)
-    shell("{exe} ../{zipfile} ??*.* README".format(**locals()), cwd=tmpdir)
+    shell("printf '%s\\n' ??*.* README | {exe} ../{zipfile} -@".format(**locals()), cwd=tmpdir)
     self.assertGreater(os.path.getsize(zipfile), 10)
   def test_10004_make_test4_zip(self):
     """ create a test4.zip for later tests using standard 'zip'
@@ -339,7 +339,7 @@ class ZZipTest(unittest.TestCase):
     filename = os.path.join(tmpdir,"README")
     filetext = self.readme()
     self.mkfile(filename, filetext)
-    shell("{exe} -n README ../{zipfile} ??*.* README".format(**locals()), cwd=tmpdir)
+    shell("printf '%s\\n' ??*.* README | {exe} -n README ../{zipfile} -@".format(**locals()), cwd=tmpdir)
     self.assertGreater(os.path.getsize(zipfile), 1000000)
   def test_10005_make_test5_zip(self):
     """ create a test5.zip for later tests using standard 'zip'
@@ -363,7 +363,7 @@ class ZZipTest(unittest.TestCase):
     filename = os.path.join(tmpdir,"README")
     filetext = self.readme()
     self.mkfile(filename, filetext)
-    shell("{exe} ../{zipfile} -r file* subdir* README".format(**locals()), cwd=tmpdir)
+    shell("printf '%s\\n' file* subdir* README | {exe} ../{zipfile} -r -@".format(**locals()), cwd=tmpdir)
     self.assertGreater(os.path.getsize(zipfile), 1000000)
   def test_10010_make_test0_dat(self):
     """ create test.dat from test.zip with xorcopy """
-- 
2.28.0


From 0c19566f584b06908b437fca62aac04755c3bee7 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Sun, 27 Sep 2020 09:41:53 +0000
Subject: Fix crash


diff --git a/test/zziptests.py b/test/zziptests.py
index 1c2d19d..83b0345 100644
--- a/test/zziptests.py
+++ b/test/zziptests.py
@@ -3488,7 +3488,7 @@ class ZZipTest(unittest.TestCase):
     self.assertFalse(run.returncode)
     # list the ZIPfile
     exe=self.bins("unzip-mem");
-    run = shell("{chdir} {tmpdir} && ../{exe} -v {zipname}.zip".format(**locals()), returncodes = [0,-8])
+    run = shell("printf '%s\\n' ??*.* | {chdir} {tmpdir} && ../{exe} -v {zipname}.zip".format(**locals()), returncodes = [0,-8])
     logg.error("FIXME: unzip-mem test_65485 is not solved")
     self.skipTest("FIXME: not solved")
     self.assertFalse(run.returncode)
-- 
2.28.0


From 9685f0f52961305d95337de879485104c3f89034 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Sun, 27 Sep 2020 09:42:50 +0000
Subject: Invalid compiler options for gcc2


diff --git a/zzip/CMakeLists.txt b/zzip/CMakeLists.txt
index a9f6e3a..62c0156 100644
--- a/zzip/CMakeLists.txt
+++ b/zzip/CMakeLists.txt
@@ -100,8 +100,8 @@ if(UNIX)
         -Wmissing-declarations
         # -Wdeclaration-after-statement
         -Werror-implicit-function-declaration
-        -Wstrict-aliasing
-        -Warray-bounds
+#        -Wstrict-aliasing
+#        -Warray-bounds
     )
 endif()
 
-- 
2.28.0


From 6aab2a37202243db54cf0582987d346f36282689 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Tue, 29 Sep 2020 12:26:58 +0000
Subject: Installing man3 pages


diff --git a/docs/CMakeLists.txt b/docs/CMakeLists.txt
index 442e877..c30d48b 100644
--- a/docs/CMakeLists.txt
+++ b/docs/CMakeLists.txt
@@ -118,9 +118,10 @@ add_custom_command(OUTPUT manpages.tar
     COMMAND ${BASH} -c "test -d man3/man3 && mv man3 man3_; test -d man3_/man3 && mv man3_/man3 .; rm -rf man3_"
     COMMAND ${BASH} -c "chmod 664 man3/*.3"
     COMMAND ${BASH} -c "tar cf manpages.tar man3"
-    COMMAND ${BASH} -c "ls -l `pwd`/manpages.tar `pwd`/htmpages.tar >&2 || true"
+    COMMAND ${BASH} -c "ls -l `pwd`/manpages.tar >&2 || true"
     DEPENDS zziplib.xml zzipmmapped.xml zzipfseeko.xml
     VERBATIM)
+if(ZZIPLIB_HTMPAGES)
 add_custom_command(OUTPUT htmpages.tar
     COMMAND ${BASH} -c "test -d html && rm -rf html; mkdir html"
     COMMAND ${PY} ${srcdir}/dbk2man.py -o html html zziplib.xml
@@ -131,6 +132,7 @@ add_custom_command(OUTPUT htmpages.tar
     COMMAND ${BASH} -c "ls -l `pwd`/htmpages.tar `pwd`/manpages.tar >&2 || true"
     DEPENDS zziplib.xml zzipmmapped.xml zzipfseeko.xml
     VERBATIM)
+endif()
 
 add_custom_target(mans DEPENDS manpages)
 add_custom_target(man DEPENDS manpages)
-- 
2.28.0

