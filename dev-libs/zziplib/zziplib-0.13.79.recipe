SUMMARY="The zziplib extract data from archives in a single zip"
DESCRIPTION="Lightweight library used to easily extract data from \
files archived in a single zip file."
HOMEPAGE="http://zziplib.sourceforge.net/"
COPYRIGHT="1999-2010 Guido Draheim"
LICENSE="GNU LGPL v2.1
	MPL v1.1"
REVISION="1"
SOURCE_URI="https://github.com/gdraheim/zziplib/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="ed6f3017bb353b4a8f730c31a2fa065adb2d264c00d922aada48a5893eda26e4"
SOURCE_FILENAME="zziplib-v$portVersion.tar.gz"
PATCHES="zziplib-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="13.0.79"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	zziplib$secondaryArchSuffix = $portVersion
	lib:libzzip_0$secondaryArchSuffix = $libVersionCompat
	lib:libzzipfseeko_0$secondaryArchSuffix = $libVersionCompat
	lib:libzzipmmapped_0$secondaryArchSuffix = $libVersionCompat
	lib:libzzipwrap_0$secondaryArchSuffix = $libVersionCompat
	"

REQUIRES="
	haiku$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	zziplib${secondaryArchSuffix}_devel = $portVersion
	devel:libzzip$secondaryArchSuffix = $libVersionCompat
	devel:libzzip_0$secondaryArchSuffix = $libVersionCompat
	devel:libzzipfseeko$secondaryArchSuffix = $libVersionCompat
	devel:libzzipfseeko_0$secondaryArchSuffix = $libVersionCompat
	devel:libzzipmmapped$secondaryArchSuffix = $libVersionCompat
	devel:libzzipmmapped_0$secondaryArchSuffix = $libVersionCompat
	devel:libzzipwrap$secondaryArchSuffix = $libVersionCompat
	devel:libzzipwrap_0$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	zziplib$secondaryArchSuffix == $portVersion base
	devel:libz$secondaryArchSuffix
	"

PROVIDES_tools="
	zziplib${secondaryArchSuffix}_tools = $portVersion
	cmd:unzip_mem = $portVersion
	cmd:unzzip = $portVersion
	cmd:unzzip_big = $portVersion
	cmd:unzzip_mem = $portVersion
	cmd:unzzip_mix = $portVersion
	cmd:zzcat = $portVersion
	cmd:zzdir = $portVersion
	cmd:zzxorcat = $portVersion
	cmd:zzxorcopy = $portVersion
	cmd:zzxordir = $portVersion
	"
REQUIRES_tools="
	zziplib$secondaryArchSuffix == $portVersion base
	$REQUIRES
	"

ARCHITECTURES_doc="any"

PROVIDES_doc="
	zziplib${secondaryArchSuffix}_doc = $portVersion
	"
REQUIRES_doc="
	zziplib$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3
	cmd:sed
	cmd:tar
	cmd:zip
	cmd:xmlto
	"

PATCH()
{
	sed -e "/def\ test_59800/,/self.rm_testdir/d" \
		-e "/def\ test_65430/,/self.rm_testdir/d" \
		-e "/def\ test_65440/,/self.rm_testdir/d" \
		-e "/def\ test_65460/,/self.rm_testdir/d" \
		-e "/def\ test_65470/,/self.rm_testdir/d" \
		-e "/def\ test_65480/,/self.rm_testdir/d" \
		-e "/def\ test_65485/,/self.rm_testdir/d" \
		-i test/zziptests.py
}

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_INSTALL_BINDIR=$prefix/bin \
		-DZZIP_HTMLSITE=ON \
		-DBUILD_TESTS=OFF \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLibs \
		libzzip-0 \
		libzzipfseeko-0 \
		libzzipmmapped-0 \
		libzzipwrap-0 \
		libzzip \
		libzzipfseeko \
		libzzipmmapped \
		libzzipwrap
	fixPkgconfig

	packageEntries devel \
		$developDir \
		$dataDir \
		$libDir/cmake \
		$manDir

	packageEntries tools \
		$prefix/bin

	packageEntries doc \
		$documentationDir
}

TEST()
{
	# pulls in downloads for testing
	# Ran 223 tests in 22.870s
	# OK (skipped=7)
	# [100%] Built target tests
	# [100%] Built target check
	make -C build check
}
