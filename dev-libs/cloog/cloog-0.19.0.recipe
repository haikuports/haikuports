SUMMARY="A loop generator for scanning Z-polyhedra"
DESCRIPTION="CLooG is a software which generates loops for scanning \
Z-polyhedra. That is, CLooG finds the code or pseudo-code where each \
integral point of one or more parametrized polyhedron or parametrized \
polyhedra union is reached. CLooG is designed to avoid control overhead \
and to produce a very efficient code."
HOMEPAGE="https://www.cloog.org/"
COPYRIGHT="2001-2005 Cedric Bastoul
	2008 University Paris-Sud 11 and INRIA"
LICENSE="GNU LGPL v2.1"
REVISION="1"
SOURCE_URI="https://github.com/periscop/cloog/releases/download/cloog-$portVersion/cloog-$portVersion.tar.gz"
CHECKSUM_SHA256="2ea26f29595b57d7ba731a628025f95e5c92838c44736adff89ba1a2c2484d8e"
PATCHES="cloog-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

libVersion="4.0.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	cloog$secondaryArchSuffix = $portVersion
	cmd:cloog$secondaryArchSuffix
	lib:libcloog_isl$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libisl$secondaryArchSuffix
	"

PROVIDES_devel="
	cloog${secondaryArchSuffix}_devel = $portVersion
	devel:libcloog_isl$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	cloog$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libgmp$secondaryArchSuffix
	devel:libisl$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage cloog$secondaryArchSuffix \
	"$binDir"/cloog \
	"$libDir"/libcloog-isl.so.$libVersion

BUILD()
{
	autoreconf -fi
	runConfigure ./configure --with-gmp=system \
		--with-isl=system \
		--with-osl=no
	make $jobArgs
}

INSTALL()
{
	make install

	rm $libDir/libcloog-isl.la

	prepareInstalledDevelLibs libcloog-isl
	fixPkgconfig

	# devel package
	packageEntries devel \
		$developDir
}

TEST()
{
	make check
}
