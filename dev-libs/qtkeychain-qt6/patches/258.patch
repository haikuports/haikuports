From 2de524ebbb2fb41a0650e9fd574ab7f6f10f30be Mon Sep 17 00:00:00 2001
From: Joshua Goins <josh@redstrate.com>
Date: Fri, 15 Nov 2024 17:17:14 -0500
Subject: [PATCH] Fix read password job on Haiku

There seems to be a breaking change in how QString::fromUtf8 works in Qt6, and this affects QtKeychain handling on Haiku. If we use QByteArray with an explicit size, it messes with the null termination handling and the application is given a QString with a null terminator, which fails.

But this actually isn't needed at all, letting QByteArray figure out where the password data ends is good enough and lets Qt6 applications work again on Haiku.
---
 qtkeychain/keychain_haiku.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/qtkeychain/keychain_haiku.cpp b/qtkeychain/keychain_haiku.cpp
index 16abe1c..153ebe7 100644
--- a/keychain_haiku.cpp
+++ b/keychain_haiku.cpp
@@ -86,7 +86,7 @@ void ReadPasswordJobPrivate::scheduledStart()
                                       q->key().toUtf8().constData(),
                                       false, password);
 
-    data = QByteArray(reinterpret_cast<const char*>(password.Data()), password.DataLength());
+    data = QByteArray(reinterpret_cast<const char*>(password.Data()));
 
     switch ( result ) {
     case B_OK:
