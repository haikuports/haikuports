From 14cacfcf108741f8cb04194a660b241ba875c518 Mon Sep 17 00:00:00 2001
From: Han Pengfei <pengphei@qq.com>
Date: Thu, 20 Oct 2022 02:46:51 +0000
Subject: Fix missing pwritev


diff --git a/c++/src/kj/filesystem-disk-unix.c++ b/c++/src/kj/filesystem-disk-unix.c++
index 74d59fd..d290b38 100644
--- a/c++/src/kj/filesystem-disk-unix.c++
+++ b/c++/src/kj/filesystem-disk-unix.c++
@@ -416,7 +416,7 @@ public:
 
     static const byte ZEROS[4096] = { 0 };
 
-#if __APPLE__ || __CYGWIN__ || (defined(__ANDROID__) && __ANDROID_API__ < 24)
+#if __APPLE__ || __CYGWIN__ || (defined(__ANDROID__) && __ANDROID_API__ < 24) || defined(__HAIKU__)
     // Mac & Cygwin & Android API levels 23 and lower doesn't have pwritev().
     while (size > sizeof(ZEROS)) {
       write(offset, ZEROS);
-- 
2.45.2


From b492071b0fe3162058ecb0f1e33c2c4d1a2124ff Mon Sep 17 00:00:00 2001
From: Han Pengfei <pengphei@qq.com>
Date: Fri, 28 Oct 2022 02:12:30 +0000
Subject: message: fix sizeof assert for areaspace


diff --git a/c++/src/capnp/message.h b/c++/src/capnp/message.h
index 983761d..2567f1e 100644
--- a/c++/src/capnp/message.h
+++ b/c++/src/capnp/message.h
@@ -127,7 +127,7 @@ public:
 private:
   ReaderOptions options;
 
-#if defined(__EMSCRIPTEN__) || (defined(__APPLE__) && (defined(__ppc__) || defined(__i386__)))
+#if defined(__EMSCRIPTEN__) || defined(__HAIKU__) || (defined(__APPLE__) && (defined(__ppc__) || defined(__i386__)))
   static constexpr size_t arenaSpacePadding = 19;
 #else
   static constexpr size_t arenaSpacePadding = 18;
-- 
2.45.2


From 66a0d4180908ee6028d4142c3ba5c79f1fd5fa4e Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Sat, 23 Sep 2023 13:29:21 +0200
Subject: Fixes for building and running the tests


diff --git a/c++/CMakeLists.txt b/c++/CMakeLists.txt
index e2b72fe..2501907 100644
--- a/c++/CMakeLists.txt
+++ b/c++/CMakeLists.txt
@@ -24,6 +24,10 @@ set(INSTALL_TARGETS_DEFAULT_ARGS
   RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
 )
 
+if(HAIKU)
+  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lnetwork")
+endif(HAIKU)
+
 # Options ======================================================================
 
 option(EXTERNAL_CAPNP "Use the system capnp binary, or the one specified in $CAPNP, instead of using the compiled one." OFF)
diff --git a/c++/src/kj/async-unix-test.c++ b/c++/src/kj/async-unix-test.c++
index 64190c4..7873ddc 100644
--- a/c++/src/kj/async-unix-test.c++
+++ b/c++/src/kj/async-unix-test.c++
@@ -54,6 +54,10 @@
 #undef SIGRTMIN
 #endif
 
+#ifndef SIGIO
+# define SIGIO -1
+#endif
+
 namespace kj {
 namespace {
 
diff --git a/c++/src/kj/filesystem-disk-unix.c++ b/c++/src/kj/filesystem-disk-unix.c++
index d290b38..185809f 100644
--- a/c++/src/kj/filesystem-disk-unix.c++
+++ b/c++/src/kj/filesystem-disk-unix.c++
@@ -333,7 +333,7 @@ public:
   void datasync() const {
     // The presence of the _POSIX_SYNCHRONIZED_IO define is supposed to tell us that fdatasync()
     // exists. But Apple defines this yet doesn't offer fdatasync(). Thanks, Apple.
-#if _POSIX_SYNCHRONIZED_IO && !__APPLE__
+#if _POSIX_SYNCHRONIZED_IO && !__APPLE__ && !__HAIKU__
     KJ_SYSCALL(fdatasync(fd));
 #else
     this->sync();
diff --git a/c++/src/kj/test-helpers.c++ b/c++/src/kj/test-helpers.c++
index 6ae8cd3..ef00d7e 100644
--- a/c++/src/kj/test-helpers.c++
+++ b/c++/src/kj/test-helpers.c++
@@ -45,7 +45,7 @@ bool hasSubstring(StringPtr haystack, StringPtr needle) {
     // Hell, doing a query for an embedded null & dispatching to strstr is still cheaper & only
     // marginally slower than the purely naiive implementation.
 
-#if !defined(_WIN32)
+#if !defined(_WIN32) && !defined(__HAIKU__)
     return memmem(haystack.begin(), haystack.size(), needle.begin(), needle.size()) != nullptr;
 #else
     // TODO(perf): This is not the best algorithm for substring matching. strstr can't be used
-- 
2.45.2

