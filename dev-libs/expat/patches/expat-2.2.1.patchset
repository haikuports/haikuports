From 048260a4de37118400e49774d8e9f4ff3ee39a83 Mon Sep 17 00:00:00 2001
From: begasus <begasus@gmail.com>
Date: Thu, 22 Jun 2017 18:14:08 +0200
Subject: add patch from hartwork


diff --git a/configure.ac b/configure.ac
index e48c32e..5c0e666 100644
--- a/configure.ac
+++ b/configure.ac
@@ -41,7 +41,7 @@ dnl If the API has changed, increment LIBCURRENT and set LIBREVISION to 0
 dnl
 dnl If the API changes compatibly (i.e. simply adding a new function
 dnl without changing or removing earlier interfaces), then increment LIBAGE.
-dnl
+dnl
 dnl If the API changes incompatibly set LIBAGE back to 0
 dnl

@@ -130,7 +130,7 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([


 AC_MSG_CHECKING([for getrandom (Linux 3.17+, glibc 2.25+)])
-AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+AC_LINK_IFELSE([AC_LANG_SOURCE([
   #include <stdlib.h>  /* for NULL */
   #include <sys/random.h>
   int main() {
@@ -180,25 +180,25 @@ dnl http://lists.gnu.org/archive/html/bug-autoconf/2002-07/msg00028.html
 # AC_CPP_FUNC
 # ------------------ #
 # Checks to see if ANSI C99 CPP variable __func__ works.
-# If not, perhaps __FUNCTION__ works instead.
-# If not, we'll just define __func__ to "".
+# If not, perhaps __FUNCTION__ works instead.
+# If not, we'll just define __func__ to "".
 AC_DEFUN([AC_CPP_FUNC],
 [AC_REQUIRE([AC_PROG_CC_STDC])dnl
 AC_CACHE_CHECK([for an ANSI C99-conforming __func__], ac_cv_cpp_func,
 [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],
 [[const char *foo = __func__;]])],
-  [ac_cv_cpp_func=yes],
+  [ac_cv_cpp_func=yes],
   [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],
 [[const char *foo = __FUNCTION__;]])],
-  [ac_cv_cpp_func=__FUNCTION__],
+  [ac_cv_cpp_func=__FUNCTION__],
   [ac_cv_cpp_func=no])])])
 if test $ac_cv_cpp_func = __FUNCTION__; then
   AC_DEFINE(__func__,__FUNCTION__,
-            [Define to __FUNCTION__ or "" if `__func__' does not conform to
+            [Define to __FUNCTION__ or "" if `__func__' does not conform to
 ANSI C.])
 elif test $ac_cv_cpp_func = no; then
   AC_DEFINE(__func__,"",
-            [Define to __FUNCTION__ or "" if `__func__' does not conform to
+            [Define to __FUNCTION__ or "" if `__func__' does not conform to
 ANSI C.])
 fi
 ])# AC_CPP_FUNC
@@ -220,8 +220,8 @@ AS_HELP_STRING([--disable-xml-context],
     [Do not retain context around the current parse point]),
   [enable_xml_context=${enableval}])
 AS_IF([test "x${enable_xml_context}" != "xno"], [
-  AS_IF([test "x${enable_xml_context}" == "xyes" \
-      -o "x${enable_xml_context}" == "x"], [
+  AS_IF([test "x${enable_xml_context}" = "xyes" \
+      -o "x${enable_xml_context}" = "x"], [
     enable_xml_context=1024
   ])
   AC_DEFINE_UNQUOTED([XML_CONTEXT_BYTES], [${enable_xml_context}],
--
2.7.0

