SUMMARY="Database-independent abstraction layer written in C"
DESCRIPTION="libdbi implements a database-independent abstraction layer in C, similar to the DBI/DBD layer in Perl. Writing one generic set of code, programmers can leverage the power of multiple DBs and multiple simultaneous DB connections by using this framework."
HOMEPAGE="https://libdbi.sourceforge.net/"
COPYRIGHT="2001-2013, David Parker, Mark Tobenkin, Markus Hoenicka"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://sourceforge.net/projects/libdbi/files/libdbi/libdbi-$portVersion/libdbi-$portVersion.tar.gz"
CHECKSUM_SHA256="dafb6cdca524c628df832b6dd0bf8fabceb103248edb21762c02d3068fca4503"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="1.1.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	libdbi$secondaryArchSuffix = $portVersion
	lib:libdbi$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"
PROVIDES_devel="
	libdbi${secondaryArchSuffix}_devel = $portVersion
	devel:libdbi$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	libdbi$secondaryArchSuffix  == $portVersion base
	"
BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:automake
	cmd:autoreconf
	cmd:libtoolize$secondaryArchSuffix
	cmd:gcc$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	autoreconf -if
	runConfigure --omit-dirs "binDir" ./configure --prefix=$prefix \
		--bindir=$commandBinDir \
		--includedir=$includeDir
	make $jobArgs
}

INSTALL()
{
	make install

	rm -f $libDir/*.la $libDir/*.a
	#Couldn't make configure honor --includedir, so move the headers by hand.
	mkdir -p $includeDir
	mv $prefix/include/* $includeDir
	rm -rf $prefix/include

	prepareInstalledDevelLibs libdbi
	fixPkgconfig

	# devel package
	packageEntries devel \
		$developDir
}
