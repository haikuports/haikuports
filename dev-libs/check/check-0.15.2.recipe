SUMMARY="Unit Testing Framework for C"
DESCRIPTION="Check is a unit testing framework for C. It features a simple \
interface for defining unit tests, putting little in the way of the developer.
Tests are run in a separate address space, so both assertion failures and code \
errors that cause segmentation faults or other signals can be caught. Test \
results are reportable in the following: Subunit, TAP, XML, and a generic \
logging format."
HOMEPAGE="https://libcheck.github.io/check/"
COPYRIGHT="2001-2017 Arien Malec, Branden Archer, Chris Pickett, Fredrik \
Hugosson, and Robert Lemmen."
LICENSE="GNU LGPL v2.1"
REVISION="1"
SOURCE_URI="https://github.com/libcheck/check/releases/download/$portVersion/check-$portVersion.tar.gz"
CHECKSUM_SHA256="a8de4e0bacfb4d76dd1c618ded263523b53b85d92a146d8835eb1a52932fa20a"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="0.0.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	check$secondaryArchSuffix = $portVersion
	cmd:checkmk$commandSuffix = $portVersion
	lib:libcheck$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	cmd:awk
	"
if [ -z "$secondaryArchSuffix" ]; then
REPLACES="
	check_common
	"
fi

PROVIDES_devel="
	check${secondaryArchSuffix}_devel = $portVersion
	devel:libcheck$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	check$secondaryArchSuffix == $portVersion base
	"

BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:diff
	cmd:find
	cmd:gawk
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	MAKEINFO=true runConfigure --omit-dirs binDir \
		./configure \
		--bindir=$commandBinDir \
		--disable-static
	make $jobArgs
}

INSTALL()
{
	make install

	rm $libDir/libcheck.la
	prepareInstalledDevelLib libcheck
	fixPkgconfig

	packageEntries devel \
		$dataDir/aclocal \
		$developDir
}

TEST()
{
	make check
}
