SUMMARY="Run commands simply, with detailed diagnostic"
DESCRIPTION="Calling Perl's in-built system() function is easy, determining if it was successful \
is hard. Let's face it, $? isn't the nicest variable in the world to play with, and even if you \
do check it, producing a well-formatted error string takes a lot of work."
HOMEPAGE="https://metacpan.org/pod/IPC::System::Simple"
COPYRIGHT="2020 by Paul Fenwick"
LICENSE="Artistic"
REVISION="2"
SOURCE_URI="https://cpan.metacpan.org/authors/id/J/JK/JKEENAN/IPC-System-Simple-$portVersion.tar.gz"
CHECKSUM_SHA256="22e6f5222b505ee513058fdca35ab7a1eab80539b98e5ca4a923a70a8ae9ba9e"
SOURCE_DIR="IPC-System-Simple-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	ipc_system_simple = $portVersion
	"
REQUIRES="
	haiku
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
