SUMMARY="Declare version conflicts for your dist"
DESCRIPTION="One shortcoming of the CPAN clients that currently exist is that they have no way of \
specifying conflicting downstream dependencies of modules. This module attempts to work around \
this issue by allowing you to specify conflicting versions of modules separately, and deal with \
them after the module is done installing.
For instance, say you have a module Foo, and some other module Bar uses Foo. If Foo were to \
change its API in a non-backwards-compatible way, this would cause Bar to break until it is \
updated to use the new API. Foo can't just depend on the fixed version of Bar, because this will \
cause a circular dependency (because Bar is already depending on Foo), and this doesn't express \
intent properly anyway - Foo doesn't use Bar at all. The ideal solution would be for there to be \
a way to specify conflicting versions of modules in a way that would let CPAN clients update \
conflicting modules automatically after an existing module is upgraded, but until that happens, \
this module will allow users to do this manually."
HOMEPAGE="https://metacpan.org/pod/Dist::CheckConflicts"
COPYRIGHT="2014 by Jesse Luehrs"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/D/DO/DOY/Dist-CheckConflicts-$portVersion.tar.gz"
CHECKSUM_SHA256="ea844b9686c94d666d9d444321d764490b2cde2f985c4165b4c2c77665caedc4"
SOURCE_DIR="Dist-CheckConflicts-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	dist_checkconflicts = $portVersion
	"
REQUIRES="
	haiku
	module_runtime
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

TEST_REQUIRES="
	module_runtime
	test_fatal
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
