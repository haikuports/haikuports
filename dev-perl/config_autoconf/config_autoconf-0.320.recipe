SUMMARY="A module to implement some of AutoConf macros in pure perl"
DESCRIPTION="Config::AutoConf is intended to provide the same opportunities to Perl developers as \
GNU Autoconf does for Shell developers.
As Perl is the second most deployed language (mind: every Unix comes with Perl, several \
mini-computers have Perl and even lot's of Windows machines run Perl software - which requires \
deployed Perl there, too), this gives wider support than Shell based probes.
The API is leaned against GNU Autoconf, but we try to make the API (especially optional \
arguments) more Perl'ish than m4 abilities allow to the original."
HOMEPAGE="https://metacpan.org/pod/Config::AutoConf"
COPYRIGHT="2004-2020 Alberto Sim√µes and Jens Rehsack"
LICENSE="Artistic"
REVISION="2"
SOURCE_URI="https://cpan.metacpan.org/authors/id/A/AM/AMBS/Config-AutoConf-$portVersion.tar.gz"
CHECKSUM_SHA256="bb57a958ef49d3f7162276dae14a7bd5af43fd1d8513231af35d665459454023"
SOURCE_DIR="Config-AutoConf-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	config_autoconf$secondaryArchSuffix = $portVersion
	"
if [ -n "$secondaryArchSuffix" ]; then
	PROVIDES+="
		config_autoconf = $portVersion
		"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	capture_tiny
	vendor_perl
	cmd:gcc$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

TEST_REQUIRES="
	capture_tiny
	cmd:gcc$secondaryArchSuffix
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files (this would be an "any" arch package,
	# but isn't because of the gcc requirement)
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
