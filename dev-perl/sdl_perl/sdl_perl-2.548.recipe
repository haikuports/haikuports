SUMMARY="Simple DirectMedia Layer for Perl"
DESCRIPTION="SDL_perl is a package of Perl modules that provide both functional and object \
oriented interfaces to the Simple DirectMedia Layer for Perl 5. This package takes some liberties \
with the SDL API, and attempts to adhere to the spirit of both the SDL and Perl.This document \
describes the low-level functional SDL Perl API. For the object oriented programming interface \
please see the documentation provided on a per-class basis."
HOMEPAGE="https://metacpan.org/release/FROGGS/SDL-2.548"
COPYRIGHT="2002-2010 SDL Authors"
LICENSE="GNU GPL v2
	SIL v1.1"
REVISION="4"
SOURCE_URI="https://cpan.metacpan.org/authors/id/F/FR/FROGGS/SDL-$portVersion.tar.gz"
CHECKSUM_SHA256="252a192bfa9c2070a4883707d139c3a45d9c4518ccd66a1e699b5b7959bd4fb5"
SOURCE_DIR="SDL-$portVersion"
PATCHES="sdl_perl-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	sdl_perl$secondaryArchSuffix = $portVersion
	"
if [ -n "$secondaryArchSuffix" ]; then
	PROVIDES+="
		sdl_perl = $portVersion
		"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libglu$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libSDL_1.2$secondaryArchSuffix
	lib:libSDL_image_1.2$secondaryArchSuffix
	lib:libSDL_mixer_1.2$secondaryArchSuffix
	lib:libSDL_ttf_2.0$secondaryArchSuffix
	lib:libSDL_gfx$secondaryArchSuffix
	lib:libSDL_Pango$secondaryArchSuffix
	lib:libsmpeg$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	alien_sdl$secondaryArchSuffix
	capture_tiny
	file_sharedir
	tie_simple
	vendor_perl
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libexecinfo$secondaryArchSuffix
	devel:libSDL_1.2$secondaryArchSuffix
	devel:libSDL_image_1.2$secondaryArchSuffix
	devel:libSDL_mixer_1.2$secondaryArchSuffix
	devel:libSDL_ttf_2.0$secondaryArchSuffix
	devel:libSDL_gfx$secondaryArchSuffix
	devel:libSDL_Pango$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix >= 6
	alien_sdl$secondaryArchSuffix
	capture_tiny
	class_inspector
	file_sharedir
	module_build
	tie_simple
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:perl
	"

TEST_REQUIRES="
	algorithm_diff
	test_most
	"

BUILD()
{
	perl Build.PL --installdirs vendor --prefix $prefix
	./Build
}

INSTALL()
{
	./Build pure_install
}

TEST()
{
	./Build test
}
