SUMMARY="Keep imports and functions out of your namespace"
DESCRIPTION="When you define a function, or import one, into a Perl package, it will naturally \
also be available as a method. This does not per se cause problems, but it can complicate \
subclassing and, for example, plugin classes that are included via multiple inheritance by \
loading them as base classes.

The namespace::clean pragma will remove all previously declared or imported symbols at the end of \
the current package's compile cycle. Functions called in the package itself will still be bound \
by their name, but they won't show up as methods on your class or instances."
HOMEPAGE="https://metacpan.org/pod/namespace::clean"
COPYRIGHT="2011 by Robert 'phaylon' Sedlacek, Florian Ragwitz, Jesse Luehrs, Peter Rabbitson, \
Father Chrysostomos"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/R/RI/RIBASUSHI/namespace-clean-$portVersion.tar.gz"
CHECKSUM_SHA256="8a10a83c3e183dc78f9e7b7aa4d09b47c11fb4e7d3a33b9a12912fd22e31af9d"
SOURCE_DIR="namespace-clean-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	namespace_clean = $portVersion
	"
REQUIRES="
	haiku
	b_hooks_endofscope
	package_stash
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

TEST_REQUIRES="
	b_hooks_endofscope
	package_stash
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
