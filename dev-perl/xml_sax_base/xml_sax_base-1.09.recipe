SUMMARY="Base class SAX Drivers and Filters"
DESCRIPTION="This module has a very simple task - to be a base class for PerlSAX drivers and \
filters. It's default behaviour is to pass the input directly to the output unchanged. It can be \
useful to use this module as a base class so you don't have to, for example, implement the \
characters() callback.
The main advantages that it provides are easy dispatching of events the right way (ie it takes \
care for you of checking that the handler has implemented that method, or has defined an \
AUTOLOAD), and the guarantee that filters will pass along events that they aren't implementing to \
handlers downstream that might nevertheless be interested in them."
HOMEPAGE="https://metacpan.org/pod/XML::SAX::Base"
COPYRIGHT="Kip Hampton
	Robin Berjon
	Matt Sergeant"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/G/GR/GRANTM/XML-SAX-Base-$portVersion.tar.gz"
CHECKSUM_SHA256="66cb355ba4ef47c10ca738bd35999723644386ac853abbeb5132841f5e8a2ad0"
SOURCE_DIR="XML-SAX-Base-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	xml_sax_base = $portVersion
	"
REQUIRES="
	haiku
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
