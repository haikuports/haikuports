SUMMARY="Apparently run a function in a higher stack frame"
DESCRIPTION="Like Tcl's uplevel() function, but not quite so dangerous. The idea is just to fool \
caller(). All the really naughty bits of Tcl's uplevel() are avoided."
HOMEPAGE="https://metacpan.org/pod/Sub::Uplevel"
COPYRIGHT="2017 by Michael Schwern and David Golden"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/D/DA/DAGOLDEN/Sub-Uplevel-$portVersion.tar.gz"
CHECKSUM_SHA256="b4f3f63b80f680a421332d8851ddbe5a8e72fcaa74d5d1d98f3c8cc4a3ece293"
SOURCE_DIR="Sub-Uplevel-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	sub_uplevel = $portVersion
	"
REQUIRES="
	haiku
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
