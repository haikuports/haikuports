SUMMARY="Build an optimized subroutine parameter validator once, use it forever"
DESCRIPTION="This module creates a customized, highly efficient parameter checking subroutine. It \
can handle named or positional parameters, and can return the parameters as key/value pairs or a \
list of values.
In addition to type checks, it also supports parameter defaults, optional parameters, and extra \
\"slurpy\" parameters."
HOMEPAGE="https://metacpan.org/pod/Params::ValidationCompiler"
COPYRIGHT="2016 - 2023 by Dave Rolsky"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/D/DR/DROLSKY/Params-ValidationCompiler-$portVersion.tar.gz"
CHECKSUM_SHA256="7b6497173f1b6adb29f5d51d8cf9ec36d2f1219412b4b2410e9d77a901e84a6d"
SOURCE_DIR="Params-ValidationCompiler-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	params_validationcompiler = $portVersion
	"
REQUIRES="
	haiku
	class_xsaccessor
	eval_closure
	exception_class
	vendor_perl
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:make
	cmd:perl
	"

TEST_REQUIRES="
	class_xsaccessor
	eval_closure
	exception_class
	specio
	test_without_module
	test2_plugin_nowarnings
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install

	# remove architecture-specific files
	cd $prefix
	rm -r $(perl -V:vendorarch | cut -d\' -f2 | cut -d/ -f5-)
		# cut extracts the quoted string and strips the prefix (which is perl's and not ours)
}

TEST()
{
	make test
}
