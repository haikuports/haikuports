SUMMARY="The fastest way to sort anything in Perl"
DESCRIPTION="Sort::Key provides a set of functions to sort lists of values by some calculated key \
value.
It is faster (usually much faster) and uses less memory than other alternatives implemented \
around perl sort function (ST, GRT, etc.).
Multi-key sorting functionality is also provided via the companion modules Sort::Key::Multi, \
Sort::Key::Maker and Sort::Key::Register."
HOMEPAGE="https://metacpan.org/pod/Sort::Key"
COPYRIGHT="2005-2007, 2012, 2014 by Salvador Fandi√±o"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/S/SA/SALVA/Sort-Key-$portVersion.tar.gz"
CHECKSUM_SHA256="ed6a4ccfab094c9cd164f564024e98bd21d94f4312ccac4d6246d22b34081acf"
SOURCE_DIR="Sort-Key-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	sort_key$secondaryArchSuffix = $portVersion
	"
if [ -n "$secondaryArchSuffix" ]; then
	PROVIDES+="
		sort_key = $portVersion
		"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	vendor_perl
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:perl
	"

BUILD()
{
	perl Makefile.PL PREFIX=$prefix
	make
}

INSTALL()
{
	make pure_install
}

TEST()
{
	make test
}
