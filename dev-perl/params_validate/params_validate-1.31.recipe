SUMMARY="Validate method/function parameters"
DESCRIPTION="This module allows you to validate method or function call parameters to an \
arbitrary level of specificity. At the simplest level, it is capable of validating the required \
parameters were given and that no unspecified additional parameters were passed in.
It is also capable of determining that a parameter is of a specific type, that it is an object of \
a certain class hierarchy, that it possesses certain methods, or applying validation callbacks to \
arguments."
HOMEPAGE="https://metacpan.org/pod/Params::Validate"
COPYRIGHT="2001 - 2022 by Dave Rolsky and Ilya Martynov"
LICENSE="Artistic"
REVISION="1"
SOURCE_URI="https://cpan.metacpan.org/authors/id/D/DR/DROLSKY/Params-Validate-$portVersion.tar.gz"
CHECKSUM_SHA256="1bf2518ef2c4869f91590e219f545c8ef12ed53cf313e0eb5704adf7f1b2961e"
SOURCE_DIR="Params-Validate-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	params_validate$secondaryArchSuffix = $portVersion
	"
if [ -n "$secondaryArchSuffix" ]; then
	PROVIDES+="
		params_validate = $portVersion
		"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	module_implementation
	vendor_perl
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	module_build
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:perl
	"

TEST_REQUIRES="
	module_implementation
	test_fatal
	test_requires
	"

BUILD()
{
	perl Build.PL --prefix $prefix
	./Build
}

INSTALL()
{
	./Build pure_install
}

TEST()
{
	./Build test
}
