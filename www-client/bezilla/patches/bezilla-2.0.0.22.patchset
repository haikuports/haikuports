From 8a7b556ef4143aaddd1bafb10abca792cf475c08 Mon Sep 17 00:00:00 2001
From: Theodore Kokkoris <t.kokkoris@gmail.com>
Date: Fri, 12 Dec 2014 13:45:46 +0200
Subject: Enable Haiku support in configure.in


diff --git a/mozilla/configure.in b/mozilla/configure.in
index 23cc7e7..9bd8cb5 100644
--- a/mozilla/configure.in
+++ b/mozilla/configure.in
@@ -885,12 +885,8 @@ if test -n "$CROSS_COMPILE"; then
         mingw*)         OS_ARCH=WINNT ;;
         wince*)         OS_ARCH=WINCE ;;
         darwin*)        OS_ARCH=Darwin OS_TARGET=Darwin ;;   
-        beos* | haiku*) OS_ARCH=BeOS OS_TARGET=BeOS ;;
-dnl -------------------------------------------------------
-dnl Cross-compiling-haiku - This should probably be 
-dnl        beos*)        OS_ARCH=BeOS OS_TARGET=BeOS ;;
-dnl        haiku*)       OS_ARCH=Haiku OS_TARGET=Haiku ;;
-dnl -------------------------------------------------------
+        beos*)          OS_ARCH=BeOS OS_TARGET=BeOS ;;
+        haiku*)         OS_ARCH=Haiku OS_TARGET=Haiku ;;
     esac
 else
     OS_TARGET=`uname -s`
-- 
2.30.2


From 01a80c55af12da5f80dd4d7f369299e66e6d8878 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sun, 19 Apr 2015 20:59:27 +0300
Subject: gcc5 fixes


diff --git a/mozilla/config/rules.mk b/mozilla/config/rules.mk
index bb8b09a..2b030ee 100644
--- a/mozilla/config/rules.mk
+++ b/mozilla/config/rules.mk
@@ -669,7 +669,7 @@ ifdef IS_COMPONENT
 	$(INSTALL) $(IFLAGS2) $(SHARED_LIBRARY) $(FINAL_TARGET)/components
 	$(ELF_DYNSTR_GC) $(FINAL_TARGET)/components/$(SHARED_LIBRARY)
 ifdef BEOS_ADDON_WORKAROUND
-	( cd $(FINAL_TARGET)/components && $(CC) -nostart -o $(SHARED_LIBRARY).stub $(SHARED_LIBRARY) )
+	( cd $(FINAL_TARGET)/components && $(CC) -shared -o $(SHARED_LIBRARY).stub $(SHARED_LIBRARY) )
 endif
 else # ! IS_COMPONENT
 ifneq (,$(filter OS2 WINNT WINCE,$(OS_ARCH)))
@@ -679,7 +679,7 @@ else
 endif
 	$(INSTALL) $(IFLAGS2) $(SHARED_LIBRARY) $(FINAL_TARGET)
 ifdef BEOS_ADDON_WORKAROUND
-	( cd $(FINAL_TARGET) && $(CC) -nostart -o $(SHARED_LIBRARY).stub $(SHARED_LIBRARY) )
+	( cd $(FINAL_TARGET) && $(CC) -shared -o $(SHARED_LIBRARY).stub $(SHARED_LIBRARY) )
 endif
 endif # IS_COMPONENT
 endif # SHARED_LIBRARY
diff --git a/mozilla/configure.in b/mozilla/configure.in
index 9bd8cb5..f6dba31 100644
--- a/mozilla/configure.in
+++ b/mozilla/configure.in
@@ -1499,7 +1499,7 @@ case "$target" in
     TARGET_MD_ARCH=beos
 
     DSO_PIC_CFLAGS=-fPIC
-    DSO_LDOPTS='-nostart'
+    DSO_LDOPTS='-shared'
     MKSHLIB='$(CXX) $(CXXFLAGS) $(DSO_PIC_CFLAGS) $(DSO_LDOPTS) -Wl,-h,$@ -o $@'
     MKCSHLIB='$(CC) $(CFLAGS) $(DSO_PIC_CFLAGS) $(DSO_LDOPTS) -Wl,-h,$@ -o $@'
     TK_LIBS='-lbe -lroot'
diff --git a/mozilla/directory/c-sdk/config/BeOS.mk b/mozilla/directory/c-sdk/config/BeOS.mk
index 881e644..01c3062 100644
--- a/mozilla/directory/c-sdk/config/BeOS.mk
+++ b/mozilla/directory/c-sdk/config/BeOS.mk
@@ -66,7 +66,7 @@ CC                      = gcc
 CCC                     = g++
 LD                      = gcc
 RANLIB                  = ranlib
-DSO_LDOPTS              = -nostart
+DSO_LDOPTS              = -shared
 PORT_FLAGS		= -DHAVE_STRERROR
 ifdef BUILD_OPT
 OPTIMIZER		= -O2
diff --git a/mozilla/directory/c-sdk/configure.in b/mozilla/directory/c-sdk/configure.in
index ab471a1..1c3b91f 100644
--- a/mozilla/directory/c-sdk/configure.in
+++ b/mozilla/directory/c-sdk/configure.in
@@ -824,7 +824,7 @@ case "$target" in
     AC_DEFINE(BEOS)
     AC_DEFINE(_POSIX_SOURCE)
     DSO_CFLAGS=-fPIC
-    DSO_LDOPTS=-nostart
+    DSO_LDOPTS=-shared
     
     MDCPUCFG_H=_beos.cfg
     USE_BTHREADS=1
diff --git a/mozilla/modules/libpref/src/prefapi.cpp b/mozilla/modules/libpref/src/prefapi.cpp
index b772070..155219b 100644
--- a/mozilla/modules/libpref/src/prefapi.cpp
+++ b/mozilla/modules/libpref/src/prefapi.cpp
@@ -78,9 +78,6 @@
 #include <os2.h>
 #endif
 
-#ifdef XP_BEOS
-#include "Alert.h"
-#endif
 
 #define BOGUS_DEFAULT_INT_PREF_VALUE (-5632)
 #define BOGUS_DEFAULT_BOOL_PREF_VALUE (-2)
diff --git a/mozilla/modules/libreg/src/vr_stubs.c b/mozilla/modules/libreg/src/vr_stubs.c
index f7f5a6f..94ec266 100644
--- a/mozilla/modules/libreg/src/vr_stubs.c
+++ b/mozilla/modules/libreg/src/vr_stubs.c
@@ -619,7 +619,7 @@ long BUILDNUM = NS_BUILD_ID;
 
 REGERR vr_ParseVersion(char *verstr, VERSION *result);
 
-#if defined(XP_UNIX) && !defined(XP_MACOSX)
+#if defined(XP_UNIX) && !defined(XP_MACOSX) && !defined(XP_BEOS)
 
 #ifdef STANDALONE_REGISTRY
 extern XP_File vr_fileOpen (const char *name, const char * mode)
diff --git a/mozilla/modules/plugin/base/src/ns4xPlugin.cpp b/mozilla/modules/plugin/base/src/ns4xPlugin.cpp
index 9d427da..f15c296 100644
--- a/mozilla/modules/plugin/base/src/ns4xPlugin.cpp
+++ b/mozilla/modules/plugin/base/src/ns4xPlugin.cpp
@@ -702,7 +702,7 @@ ns4xPlugin::CreatePlugin(nsIServiceManagerObsolete* aServiceMgr,
 {
   CheckClassInitialized();
 
-#if defined(XP_UNIX) && !defined(XP_MACOSX)
+#if defined(XP_UNIX) && !defined(XP_MACOSX) && !defined(XP_BEOS)
 
   ns4xPlugin *plptr;
 
@@ -900,7 +900,7 @@ ns4xPlugin::CreatePlugin(nsIServiceManagerObsolete* aServiceMgr,
   plugin->SetPluginRefNum(pluginRefNum);
 #endif  // XP_MACOSX
 
-#ifdef XP_BEOS
+#if defined (XP_BEOS)
   // I just copied UNIX version.
   // Makoto Hamanaka <VYA04230@nifty.com>
 
diff --git a/mozilla/nsprpub/pr/src/misc/prnetdb.c b/mozilla/nsprpub/pr/src/misc/prnetdb.c
index f758841..df83cb3 100644
--- a/mozilla/nsprpub/pr/src/misc/prnetdb.c
+++ b/mozilla/nsprpub/pr/src/misc/prnetdb.c
@@ -90,7 +90,7 @@ PRLock *_pr_dnsLock = NULL;
 #include <arpa/inet.h>  /* pick up define for inet_addr */
 #include <sys/socket.h>
 #define _PR_HAVE_GETPROTO_R
-#define _PR_HAVE_GETPROTO_R_POINTER
+#define _PR_HAVE_GETPROTO_R_INT
 #endif
 
 #if defined(SOLARIS) || (defined(BSDI) && defined(_REENTRANT)) \
diff --git a/mozilla/security/coreconf/BeOS.mk b/mozilla/security/coreconf/BeOS.mk
index b42b71d..ff5269b 100644
--- a/mozilla/security/coreconf/BeOS.mk
+++ b/mozilla/security/coreconf/BeOS.mk
@@ -59,7 +59,7 @@ else
 	CPU_ARCH	= x86
 endif
 
-MKSHLIB		= $(CC) -nostart -Wl,-soname -Wl,$(@:$(OBJDIR)/%.so=%.so)
+MKSHLIB		= $(CC) -shared -Wl,-soname -Wl,$(@:$(OBJDIR)/%.so=%.so)
 ifdef BUILD_OPT
 	OPTIMIZER	= -O2
 endif
diff --git a/mozilla/widget/src/beos/nsAppShell.cpp b/mozilla/widget/src/beos/nsAppShell.cpp
index fdcd236..49f26fb 100644
--- a/mozilla/widget/src/beos/nsAppShell.cpp
+++ b/mozilla/widget/src/beos/nsAppShell.cpp
@@ -464,7 +464,7 @@ void *nsAppShell::GetNextEvent()
   void *newitem = nsnull;
   for (int i=0 ; i < PRIORITY_LEVELS ; i++) {
     if (!events[i].IsEmpty()) {
-      newitem = events[i].RemoveItem((long int)0);
+      newitem = events[i].RemoveItem((int32)0);
       break;
     }
   }
diff --git a/mozilla/xpcom/build/nsXPCOMPrivate.h b/mozilla/xpcom/build/nsXPCOMPrivate.h
index 9fdb996..304d84f 100644
--- a/mozilla/xpcom/build/nsXPCOMPrivate.h
+++ b/mozilla/xpcom/build/nsXPCOMPrivate.h
@@ -207,6 +207,8 @@ NS_GetFrozenFunctions(XPCOMFunctions *entryPoints, const char* libraryPath);
 #define XPCOM_SEARCH_KEY  "ADDON_PATH"
 #define GRE_CONF_NAME ".gre.config"
 #define GRE_CONF_PATH "/boot/home/config/settings/GRE/gre.conf"
+#define GRE_CONF_DIR  "/boot/home/config/settings/GRE/"
+#define GRE_USER_CONF_DIR "/boot/home/config/settings/GRE/"
 #define XPCOM_DLL "libxpcom"MOZ_DLL_SUFFIX
 #define XUL_DLL   "libxul"MOZ_DLL_SUFFIX
 
diff --git a/mozilla/xpcom/glue/nsGREGlue.cpp b/mozilla/xpcom/glue/nsGREGlue.cpp
index 752b2ca..dd21a21 100644
--- a/mozilla/xpcom/glue/nsGREGlue.cpp
+++ b/mozilla/xpcom/glue/nsGREGlue.cpp
@@ -158,7 +158,7 @@ GRE_GetGREPathWithProperties(const GREVersionRange *versions,
     snprintf(p, sizeof(p), "%s" XPCOM_FILE_PATH_SEPARATOR XPCOM_DLL, env);
     p[sizeof(p) - 1] = '\0';
 
-#if XP_UNIX
+#ifdef XP_UNIX
     if (realpath(p, aBuffer))
       return NS_OK;
 #elif XP_WIN
diff --git a/mozilla/xpcom/io/SpecialSystemDirectory.cpp b/mozilla/xpcom/io/SpecialSystemDirectory.cpp
index c3c7066..5807117 100644
--- a/mozilla/xpcom/io/SpecialSystemDirectory.cpp
+++ b/mozilla/xpcom/io/SpecialSystemDirectory.cpp
@@ -82,8 +82,9 @@
 #include <stdlib.h>
 #include <sys/param.h>
 #include "prenv.h"
+#endif
 
-#elif defined(XP_BEOS)
+#if defined(XP_BEOS)
 
 #include <FindDirectory.h>
 #include <fs_info.h>
diff --git a/mozilla/xpcom/io/nsDirectoryServiceDefs.h b/mozilla/xpcom/io/nsDirectoryServiceDefs.h
index de28282..b2bfcb4 100644
--- a/mozilla/xpcom/io/nsDirectoryServiceDefs.h
+++ b/mozilla/xpcom/io/nsDirectoryServiceDefs.h
@@ -189,7 +189,8 @@
     #define NS_OS2_DIR                          "OS2Dir"
     #define NS_OS2_HOME_DIR                     NS_OS_HOME_DIR
     #define NS_OS2_DESKTOP_DIR                  NS_OS_DESKTOP_DIR
-#elif defined (XP_BEOS)
+#endif
+#if defined (XP_BEOS)
     #define NS_BEOS_SETTINGS_DIR                "Setngs"
     #define NS_BEOS_HOME_DIR                    NS_OS_HOME_DIR
     #define NS_BEOS_DESKTOP_DIR                 NS_OS_DESKTOP_DIR
diff --git a/mozilla/xpcom/obsolete/nsSpecialSystemDirectory.cpp b/mozilla/xpcom/obsolete/nsSpecialSystemDirectory.cpp
index 0288d4a..63d2a12 100644
--- a/mozilla/xpcom/obsolete/nsSpecialSystemDirectory.cpp
+++ b/mozilla/xpcom/obsolete/nsSpecialSystemDirectory.cpp
@@ -70,7 +70,8 @@
 #include <stdlib.h>
 #include <sys/param.h>
 #include "prenv.h"
-#elif defined(XP_BEOS)
+#endif
+#if defined(XP_BEOS)
 #include <FindDirectory.h>
 #include <Path.h>
 #include <unistd.h>
@@ -753,7 +754,7 @@ void nsSpecialSystemDirectory::operator = (SystemDirectories aSystemSystemDirect
 
 #endif        
 
-#ifdef XP_BEOS
+#if defined(XP_BEOS)
         case BeOS_SettingsDirectory:
 		{
             char path[MAXPATHLEN];
diff --git a/mozilla/xpcom/threads/plevent.c b/mozilla/xpcom/threads/plevent.c
index 3d89f28..07da841 100644
--- a/mozilla/xpcom/threads/plevent.c
+++ b/mozilla/xpcom/threads/plevent.c
@@ -169,8 +169,6 @@ struct PLEventQueue {
 #elif defined(_WIN32) || defined(XP_OS2)
     HWND                eventReceiverWindow;
     PRBool              removeMsg;
-#elif defined(XP_BEOS)
-    port_id             eventport;
 #elif defined(XP_MACOSX)
 #if defined(MAC_USE_CFRUNLOOPSOURCE)
     CFRunLoopSourceRef  mRunLoopSource;
@@ -180,6 +178,10 @@ struct PLEventQueue {
     EventHandlerRef     eventHandlerRef;
 #endif
 #endif
+#if defined(XP_BEOS)
+    port_id             eventport;
+#endif
+
 };
 
 #define PR_EVENT_PTR(_qp) \
@@ -1267,7 +1269,7 @@ _pl_NativeNotify(PLEventQueue* self)
     status = SYS$SETEF(self->efn);
     return ($VMS_STATUS_SUCCESS(status)) ? PR_SUCCESS : PR_FAILURE;
 }/* --- end _pl_NativeNotify() --- */
-#elif defined(XP_UNIX) && !defined(XP_MACOSX)
+#elif defined(XP_UNIX) && !defined(XP_MACOSX)&& !defined(XP_BEOS)
 
 static PRStatus
 _pl_NativeNotify(PLEventQueue* self)
@@ -1377,8 +1379,9 @@ _pl_AcknowledgeNativeNotify(PLEventQueue* self)
     sys$clref(self->efn);
     return PR_SUCCESS;
 #elif defined(XP_UNIX) && !defined(XP_MACOSX)
-
+#define NOTIFY_TOKEN    0xFA
     PRInt32 count;
+    unsigned char buf[] = { NOTIFY_TOKEN };
     unsigned char c;
     PR_LOG(event_lm, PR_LOG_DEBUG,
             ("_pl_AcknowledgeNativeNotify: self=%p",
diff --git a/supporting-files/mozilla-configs/browser.mozconfig b/supporting-files/mozilla-configs/browser.mozconfig
index 43bac3b..a1058df 100644
--- a/supporting-files/mozilla-configs/browser.mozconfig
+++ b/supporting-files/mozilla-configs/browser.mozconfig
@@ -4,6 +4,8 @@
 
 . $topsrcdir/browser/config/mozconfig
 mk_add_options MOZ_CO_PROJECT=browser
+mk_add_options MOZ_APP_DISPLAYNAME=BeZilla
+mk_add_options MOZ_LIBDIR=$prefix/BeZilla
 
 # Required to download the right version of the source code
 mk_add_options MOZ_CO_TAG=MOZILLA_1_8_BRANCH
@@ -13,19 +15,11 @@ mk_add_options CVSROOT=:pserver:anonymous@cvs-mirror.mozilla.org:/cvsroot
 
 # -----------------------------------------------------
 # --- EDIT THESE VALUES TO REFLECT YOUR LOCAL BUILD ---
-export GLIB_CONFIG=/boot/common/bin/glib-config
-mk_add_options GLIB_CONFIG=/boot/common/bin/glib-config
-
-export LIBIDL_CONFIG=/boot/common/bin/libIDL-config
-mk_add_options LIBIDL_CONFIG=/boot/common/bin/libIDL-config
 
 # --- Set the outputdir for the build ---
 mk_add_options MOZ_OBJDIR=/moz_obj/browser
 
-# autoconf 2.13 was built by
-#./configure --prefix=/boot/common/autoconf-2.13 --program-suffix=-2.13 --bindir=/boot/common/bin/
-# make && make install
-export AUTOCONF='/boot/common/bin/autoconf-2.13 -m /boot/common/autoconf-2.13/share/autoconf'
+export AUTOCONF='autoconf-2.13'
 # -----------------------------------------------------
 
 # Automatic updates not currently supported on BeOS.  Delete this when we add this feature.
@@ -40,8 +34,9 @@ ac_add_options --disable-canvas
 
 # Utilize Haiku's default shared libraries
 ac_add_options --with-system-jpeg
-#ac_add_options --with-system-png
+ac_add_options --with-system-png
 ac_add_options --with-system-zlib
+ac_add_options --with-system-nspr
 
 ac_add_options --enable-nspr-threads
 
@@ -55,13 +50,17 @@ ac_add_options --enable-cpp-rtti
 # Eliminate lots of relatively useless warnings during build
 ac_add_options --disable-cpp-exceptions
 
+# Workaround for floating-point literal cannot appear in a constant-expression
+ac_add_options --disable-pedantic
+
 # Optional optimizations
 export BUILD_OPT=1
 mk_add_options BUILD_OPT=1
 ac_add_options --enable-static --disable-shared
 ac_add_options --enable-strip
 ac_add_options --enable-reorder
-ac_add_options --enable-js-static-build
+#ac_add_options --enable-js-static-build
+ac_add_options --disable-debug
 #ac_add_options --enable-elf-dynstr-gc # doesn't build in gcc2.  gcc4 untested.
 
 # ----------------------------------------------------------------------------
@@ -71,11 +70,11 @@ ac_add_options --enable-js-static-build
 #      Uncomment the first line for GCC 2,  the second line for GCC 4.
 #
 # --- GCC2 ---
-ac_add_options '--enable-optimize=-O3 -march=pentium -mcpu=pentiumpro -fthread-jumps -fforce-addr -frerun-cse-after-loop -frerun-loop-opt -fexpensive-optimizations -malign-functions=4 -malign-jumps=4'
+ac_add_options '--enable-optimize=-O3 -fthread-jumps -fforce-addr -frerun-cse-after-loop -frerun-loop-opt -fexpensive-optimizations -malign-functions=4 -malign-jumps=4'
 #
 # --- GCC4 ---
 # == This should be the GCC4 optimization string to use ==
-#ac_add_options '--enable-optimize=-O3 -fno-strict-aliasing -march=i586 -mtune=pentiumpro'
+#ac_add_options '--enable-optimize=-O3 -fno-strict-aliasing -fpermissive'
 #
 # Read below for some history on how the above string was devised.
 #
-- 
2.30.2


From a5a74959834bca1fca8b66a3065236215ecb72b7 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Fri, 12 Jan 2018 02:21:03 +0300
Subject: Fix build with newer png


diff --git a/mozilla/content/xbl/src/nsXBLPrototypeBinding.cpp b/mozilla/content/xbl/src/nsXBLPrototypeBinding.cpp
index 52b25af..0565ce0 100644
--- a/mozilla/content/xbl/src/nsXBLPrototypeBinding.cpp
+++ b/mozilla/content/xbl/src/nsXBLPrototypeBinding.cpp
@@ -1220,7 +1220,8 @@ nsXBLPrototypeBinding::ConstructInterfaceTable(const nsAString& aImpls)
   if (!aImpls.IsEmpty()) {
     // Obtain the interface info manager that can tell us the IID
     // for a given interface name.
-    nsCOMPtr<nsIInterfaceInfoManager> infoManager = getter_AddRefs(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> infoManager
+      (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
     if (!infoManager)
       return NS_ERROR_FAILURE;
 
diff --git a/mozilla/content/xtf/src/nsXTFInterfaceAggregator.cpp b/mozilla/content/xtf/src/nsXTFInterfaceAggregator.cpp
index c457e6e..58547e3 100644
--- a/mozilla/content/xtf/src/nsXTFInterfaceAggregator.cpp
+++ b/mozilla/content/xtf/src/nsXTFInterfaceAggregator.cpp
@@ -40,6 +40,7 @@
 #include "xptcall.h"
 #include "nsIInterfaceInfo.h"
 #include "nsIInterfaceInfoManager.h"
+#include "nsServiceManagerUtils.h"
 #ifdef DEBUG
 #include <stdio.h>
 #endif
@@ -143,7 +144,8 @@ nsXTFInterfaceAggregator::QueryInterface(REFNSIID aIID, void** aInstancePtr)
 NS_IMETHODIMP
 nsXTFInterfaceAggregator::GetInterfaceInfo(nsIInterfaceInfo** info)
 {
-  nsCOMPtr<nsIInterfaceInfoManager> iim = XPTI_GetInterfaceInfoManager();
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ASSERTION(iim, "could not get interface info manager");
   return iim->GetInfoForIID( &mIID, info);
 }
diff --git a/mozilla/content/xtf/src/nsXTFWeakTearoff.cpp b/mozilla/content/xtf/src/nsXTFWeakTearoff.cpp
index 2ba54c0..ae08b8d 100644
--- a/mozilla/content/xtf/src/nsXTFWeakTearoff.cpp
+++ b/mozilla/content/xtf/src/nsXTFWeakTearoff.cpp
@@ -40,6 +40,7 @@
 #include "xptcall.h"
 #include "nsIInterfaceInfo.h"
 #include "nsIInterfaceInfoManager.h"
+#include "nsServiceManagerUtils.h"
 #ifdef DEBUG
 #include <stdio.h>
 #endif
@@ -137,7 +138,8 @@ nsXTFWeakTearoff::QueryInterface(REFNSIID aIID, void** aInstancePtr)
 NS_IMETHODIMP
 nsXTFWeakTearoff::GetInterfaceInfo(nsIInterfaceInfo** info)
 {
-  nsCOMPtr<nsIInterfaceInfoManager> iim = XPTI_GetInterfaceInfoManager();
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ASSERTION(iim, "could not get interface info manager");
   return iim->GetInfoForIID( &mIID, info);
 }
diff --git a/mozilla/dom/src/base/nsDOMClassInfo.cpp b/mozilla/dom/src/base/nsDOMClassInfo.cpp
index 5b3e093..fa7db74 100644
--- a/mozilla/dom/src/base/nsDOMClassInfo.cpp
+++ b/mozilla/dom/src/base/nsDOMClassInfo.cpp
@@ -1543,8 +1543,8 @@ nsDOMClassInfo::RegisterClassProtos(PRInt32 aClassInfoID)
     return NS_OK;
   }
 
-  nsCOMPtr<nsIInterfaceInfoManager> iim =
-    dont_AddRef(XPTI_GetInterfaceInfoManager());
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ENSURE_TRUE(iim, NS_ERROR_NOT_AVAILABLE);
 
   nsCOMPtr<nsIInterfaceInfo> if_info;
@@ -3238,8 +3238,8 @@ nsDOMClassInfo::PostCreate(nsIXPConnectWrappedNative *wrapper,
 
 #ifdef DEBUG
   if (mData->mHasClassInterface) {
-    nsCOMPtr<nsIInterfaceInfoManager> iim =
-      dont_AddRef(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+      (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
 
     if (iim) {
       nsCOMPtr<nsIInterfaceInfo> if_info;
@@ -4537,8 +4537,8 @@ BaseStubConstructor(nsIWeakReference* aWeakOwner,
 static nsresult
 DefineInterfaceConstants(JSContext *cx, JSObject *obj, const nsIID *aIID)
 {
-  nsCOMPtr<nsIInterfaceInfoManager> iim =
-    dont_AddRef(XPTI_GetInterfaceInfoManager());
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ENSURE_TRUE(iim, NS_ERROR_UNEXPECTED);
 
   nsCOMPtr<nsIInterfaceInfo> if_info;
@@ -4853,8 +4853,8 @@ nsDOMConstructor::HasInstance(nsIXPConnectWrappedNative *wrapper,
     ci_data = name_struct->mData;
   }
 
-  nsCOMPtr<nsIInterfaceInfoManager> iim =
-    dont_AddRef(XPTI_GetInterfaceInfoManager());
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   if (!iim) {
     NS_ERROR("nsDOMConstructor::HasInstance can't get interface info mgr.");
     return NS_ERROR_UNEXPECTED;
@@ -5569,8 +5569,8 @@ nsWindowSH::GlobalResolve(nsGlobalWindow *aWin, JSContext *cx,
         NS_ENSURE_SUCCESS(rv, rv);
       }
 
-      nsCOMPtr<nsIInterfaceInfoManager> iim =
-        dont_AddRef(XPTI_GetInterfaceInfoManager());
+      nsCOMPtr<nsIInterfaceInfoManager> iim
+        (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
       NS_ENSURE_TRUE(iim, NS_ERROR_NOT_AVAILABLE);
 
       nsCOMPtr<nsIInterfaceInfo> if_info;
@@ -9371,8 +9371,8 @@ nsHTMLPluginObjElementSH::NewResolve(nsIXPConnectWrappedNative *wrapper,
     JSString *str = JSVAL_TO_STRING(id);
     char* cstring = ::JS_GetStringBytes(str);
 
-    nsCOMPtr<nsIInterfaceInfoManager> iim =
-      dont_AddRef(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+      (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
     NS_ENSURE_TRUE(iim, NS_ERROR_UNEXPECTED);
 
     nsIID* iid = nsnull;
diff --git a/mozilla/dom/src/base/nsScriptNameSpaceManager.cpp b/mozilla/dom/src/base/nsScriptNameSpaceManager.cpp
index 966552f..27cd770 100644
--- a/mozilla/dom/src/base/nsScriptNameSpaceManager.cpp
+++ b/mozilla/dom/src/base/nsScriptNameSpaceManager.cpp
@@ -292,7 +292,7 @@ nsresult
 nsScriptNameSpaceManager::FillHashWithDOMInterfaces()
 {
   nsCOMPtr<nsIInterfaceInfoManager> iim =
-    dont_AddRef(XPTI_GetInterfaceInfoManager());
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ENSURE_TRUE(iim, NS_ERROR_UNEXPECTED);
 
   // First look for all interfaces whose name starts with nsIDOM
@@ -349,8 +349,8 @@ nsScriptNameSpaceManager::RegisterExternalInterfaces(PRBool aAsProto)
     do_GetService(NS_CATEGORYMANAGER_CONTRACTID, &rv);
   NS_ENSURE_SUCCESS(rv, rv);
 
-  nsCOMPtr<nsIInterfaceInfoManager> iim =
-    dont_AddRef(XPTI_GetInterfaceInfoManager());
+  nsCOMPtr<nsIInterfaceInfoManager> iim
+    (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
   NS_ENSURE_TRUE(iim, NS_ERROR_NOT_AVAILABLE);
 
   nsCOMPtr<nsISimpleEnumerator> enumerator;
diff --git a/mozilla/extensions/webservices/interfaceinfo/src/nsScriptableInterfaceInfo.cpp b/mozilla/extensions/webservices/interfaceinfo/src/nsScriptableInterfaceInfo.cpp
index 83b4f9e..8ab5166 100644
--- a/mozilla/extensions/webservices/interfaceinfo/src/nsScriptableInterfaceInfo.cpp
+++ b/mozilla/extensions/webservices/interfaceinfo/src/nsScriptableInterfaceInfo.cpp
@@ -39,6 +39,7 @@
 /* nsIScriptableInteraceInfo family implementations. */
 
 #include "iixprivate.h"
+#include "nsServiceManagerUtils.h"
 
 /***************************************************************************/
 static inline
@@ -549,8 +550,8 @@ NameTester(nsIInterfaceInfoManager* manager, const void* data,
 static nsresult
 FindInfo(InfoTester tester, const void* data, nsIInterfaceInfo** info)
 {
-    nsCOMPtr<nsIInterfaceInfoManager> iim = 
-        dont_AddRef(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> iim 
+        (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
     
     if(!iim)
         return NS_ERROR_UNEXPECTED;
diff --git a/mozilla/js/src/xpconnect/src/nsXPConnect.cpp b/mozilla/js/src/xpconnect/src/nsXPConnect.cpp
index 0001323..08621a0 100644
--- a/mozilla/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/mozilla/js/src/xpconnect/src/nsXPConnect.cpp
@@ -68,7 +68,7 @@ const char XPC_XPCONNECT_CONTRACTID[]     = "@mozilla.org/js/xpc/XPConnect;1";
 
 nsXPConnect::nsXPConnect()
     :   mRuntime(nsnull),
-        mInterfaceInfoManager(nsnull),
+        mInterfaceInfoManager(do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID)),
         mContextStack(nsnull),
         mDefaultSecurityManager(nsnull),
         mDefaultSecurityManagerFlags(0),
@@ -78,10 +78,6 @@ nsXPConnect::nsXPConnect()
     // then we'll set this up later as needed.
     CreateRuntime();
 
-    nsCOMPtr<nsIInterfaceInfoManager> iim = 
-        dont_AddRef(XPTI_GetInterfaceInfoManager());
-    CallQueryInterface(iim, &mInterfaceInfoManager);
-
     CallGetService(XPC_CONTEXT_STACK_CONTRACTID, &mContextStack);
 
 #ifdef XPC_TOOLS_SUPPORT
@@ -130,7 +126,6 @@ nsXPConnect::~nsXPConnect()
         }
     }
 
-    NS_IF_RELEASE(mInterfaceInfoManager);
     NS_IF_RELEASE(mContextStack);
     NS_IF_RELEASE(mDefaultSecurityManager);
 
@@ -1425,7 +1420,7 @@ nsXPConnect::DebugDump(PRInt16 depth)
         XPC_LOG_ALWAYS(("gOnceAliveNowDead is %d", (int)gOnceAliveNowDead));
         XPC_LOG_ALWAYS(("mDefaultSecurityManager @ %x", mDefaultSecurityManager));
         XPC_LOG_ALWAYS(("mDefaultSecurityManagerFlags of %x", mDefaultSecurityManagerFlags));
-        XPC_LOG_ALWAYS(("mInterfaceInfoManager @ %x", mInterfaceInfoManager));
+        XPC_LOG_ALWAYS(("mInterfaceInfoManager @ %x", mInterfaceInfoManager.get()));
         XPC_LOG_ALWAYS(("mContextStack @ %x", mContextStack));
         if(mRuntime)
         {
diff --git a/mozilla/js/src/xpconnect/src/xpccomponents.cpp b/mozilla/js/src/xpconnect/src/xpccomponents.cpp
index 0407c27..672a5e3 100644
--- a/mozilla/js/src/xpconnect/src/xpccomponents.cpp
+++ b/mozilla/js/src/xpconnect/src/xpccomponents.cpp
@@ -102,9 +102,9 @@ char * xpc_CheckAccessList(const PRUnichar* wideName, const char* list[])
 
 /***************************************************************************/
 
-nsXPCComponents_Interfaces::nsXPCComponents_Interfaces()
+nsXPCComponents_Interfaces::nsXPCComponents_Interfaces() :
+    mManager(do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID))
 {
-    mManager = dont_AddRef(XPTI_GetInterfaceInfoManager());
 }
 
 nsXPCComponents_Interfaces::~nsXPCComponents_Interfaces()
@@ -346,9 +346,9 @@ private:
 };
 
 
-nsXPCComponents_InterfacesByID::nsXPCComponents_InterfacesByID()
+nsXPCComponents_InterfacesByID::nsXPCComponents_InterfacesByID() :
+    mManager(do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID))
 {
-    mManager = dont_AddRef(XPTI_GetInterfaceInfoManager());
 }
 
 nsXPCComponents_InterfacesByID::~nsXPCComponents_InterfacesByID()
diff --git a/mozilla/js/src/xpconnect/src/xpcprivate.h b/mozilla/js/src/xpconnect/src/xpcprivate.h
index f2b2b38..88b3e3f 100644
--- a/mozilla/js/src/xpconnect/src/xpcprivate.h
+++ b/mozilla/js/src/xpconnect/src/xpcprivate.h
@@ -498,7 +498,7 @@ private:
     static PRThread*         gMainThread;
 
     XPCJSRuntime*            mRuntime;
-    nsIInterfaceInfoSuperManager* mInterfaceInfoManager;
+    nsCOMPtr<nsIInterfaceInfoSuperManager> mInterfaceInfoManager;
     nsIThreadJSContextStack* mContextStack;
     nsIXPCSecurityManager*   mDefaultSecurityManager;
     PRUint16                 mDefaultSecurityManagerFlags;
diff --git a/mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp b/mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
index 22947c1..ee4abfe 100644
--- a/mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
+++ b/mozilla/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
@@ -171,7 +171,7 @@ static NS_METHOD ReadDataOut(nsIInputStream* in,
   }
 
   // we need to do the setjmp here otherwise bad things will happen
-  if (setjmp(decoder->mPNG->jmpbuf)) {
+  if (setjmp(png_jmpbuf(decoder->mPNG))) {
     png_destroy_read_struct(&decoder->mPNG, &decoder->mInfo, NULL);
 
     decoder->mError = PR_TRUE;
@@ -227,7 +227,7 @@ info_callback(png_structp png_ptr, png_infop info_ptr)
   if (width > MOZ_PNG_MAX_DIMENSION || height > MOZ_PNG_MAX_DIMENSION) {
     nsPNGDecoder *decoder = NS_STATIC_CAST(nsPNGDecoder*,
                                            png_get_progressive_ptr(png_ptr));
-    longjmp(decoder->mPNG->jmpbuf, 1);
+    longjmp(png_jmpbuf(decoder->mPNG), 1);
   }
 #undef MOZ_PNG_MAX_DIMENSION
 
@@ -307,7 +307,7 @@ info_callback(png_structp png_ptr, png_infop info_ptr)
 
   decoder->mImage = do_CreateInstance("@mozilla.org/image/container;1");
   if (!decoder->mImage)
-    longjmp(decoder->mPNG->jmpbuf, 5); // NS_ERROR_OUT_OF_MEMORY
+    longjmp(png_jmpbuf(decoder->mPNG), 5); // NS_ERROR_OUT_OF_MEMORY
 
   decoder->mImageLoad->SetImage(decoder->mImage);
 
@@ -319,7 +319,7 @@ info_callback(png_structp png_ptr, png_infop info_ptr)
 
   decoder->mFrame = do_CreateInstance("@mozilla.org/gfx/image/frame;2");
   if (!decoder->mFrame)
-    longjmp(decoder->mPNG->jmpbuf, 5); // NS_ERROR_OUT_OF_MEMORY
+    longjmp(png_jmpbuf(decoder->mPNG), 5); // NS_ERROR_OUT_OF_MEMORY
 
   gfx_format format;
 
@@ -341,7 +341,7 @@ info_callback(png_structp png_ptr, png_infop info_ptr)
   // then initalize the frame and append it to the container
   nsresult rv = decoder->mFrame->Init(0, 0, width, height, format, 24);
   if (NS_FAILED(rv))
-    longjmp(decoder->mPNG->jmpbuf, 5); // NS_ERROR_OUT_OF_MEMORY
+    longjmp(png_jmpbuf(decoder->mPNG), 5); // NS_ERROR_OUT_OF_MEMORY
 
   decoder->mImage->AppendFrame(decoder->mFrame);
 
@@ -362,7 +362,7 @@ info_callback(png_structp png_ptr, png_infop info_ptr)
       decoder->ibpr = bpr;
     decoder->interlacebuf = (PRUint8 *)nsMemory::Alloc(decoder->ibpr*height);
     if (!decoder->interlacebuf) {
-      longjmp(decoder->mPNG->jmpbuf, 5); // NS_ERROR_OUT_OF_MEMORY
+      longjmp(png_jmpbuf(decoder->mPNG), 5); // NS_ERROR_OUT_OF_MEMORY
     }            
   }
 
@@ -555,7 +555,7 @@ void
 error_callback(png_structp png_ptr, png_const_charp error_msg)
 {
   PR_LOG(gPNGLog, PR_LOG_ERROR, ("libpng error: %s\n", error_msg));
-  longjmp(png_ptr->jmpbuf, 1);
+  longjmp(png_jmpbuf(png_ptr), 1);
 }
 
 
diff --git a/mozilla/modules/libpr0n/encoders/png/nsPNGEncoder.cpp b/mozilla/modules/libpr0n/encoders/png/nsPNGEncoder.cpp
index 473fbbf..1934ada 100644
--- a/mozilla/modules/libpr0n/encoders/png/nsPNGEncoder.cpp
+++ b/mozilla/modules/libpr0n/encoders/png/nsPNGEncoder.cpp
@@ -111,9 +111,7 @@ NS_IMETHODIMP nsPNGEncoder::InitFromData(const PRUint8* aData,
 
   // initialize
   png_struct* png_ptr = png_create_write_struct(PNG_LIBPNG_VER_STRING,
-                                                png_voidp_NULL,
-                                                png_error_ptr_NULL,
-                                                png_error_ptr_NULL);
+                                                NULL, NULL, NULL);
   if (! png_ptr)
     return NS_ERROR_OUT_OF_MEMORY;
   png_info* info_ptr = png_create_info_struct(png_ptr);
diff --git a/mozilla/modules/plugin/base/src/nsPluginHostImpl.cpp b/mozilla/modules/plugin/base/src/nsPluginHostImpl.cpp
index 647f935..faf2030 100644
--- a/mozilla/modules/plugin/base/src/nsPluginHostImpl.cpp
+++ b/mozilla/modules/plugin/base/src/nsPluginHostImpl.cpp
@@ -5142,7 +5142,9 @@ NS_IMETHODIMP nsPluginHostImpl::LoadPlugins()
   // only if plugins have changed will we ask XPTI to refresh
   if (pluginschanged) {
     // rescan XPTI to catch any newly installed interfaces
-    nsCOMPtr<nsIInterfaceInfoManager> iim (dont_AddRef(XPTI_GetInterfaceInfoManager()));
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+      (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
+
     if (iim)
       iim->AutoRegisterInterfaces();
   }
diff --git a/mozilla/xpcom/build/Makefile.in b/mozilla/xpcom/build/Makefile.in
index a66ffea..c490da4 100644
--- a/mozilla/xpcom/build/Makefile.in
+++ b/mozilla/xpcom/build/Makefile.in
@@ -125,6 +125,7 @@ LOCAL_INCLUDES	= \
 		-I$(srcdir)/../threads \
 		-I$(srcdir)/../threads/_xpidlgen \
 		-I$(srcdir)/../proxy/src \
+		-I$(srcdir)/../reflect/xptinfo/src \
 		$(NULL)
 
 SDK_HEADERS =  \
@@ -159,8 +160,7 @@ DEFINES		+= \
 		-D_IMPL_NS_COM \
 		-D_IMPL_NS_STRINGAPI \
 		-DEXPORT_XPT_API \
-		-DEXPORT_XPTC_API \
-		-DEXPORT_XPTI_API
+		-DEXPORT_XPTC_API
 
 EXTRA_DSO_LDOPTS += $(NSPR_LIBS)
 
diff --git a/mozilla/xpcom/build/dlldeps.cpp b/mozilla/xpcom/build/dlldeps.cpp
index 734db4a..7626f26 100644
--- a/mozilla/xpcom/build/dlldeps.cpp
+++ b/mozilla/xpcom/build/dlldeps.cpp
@@ -165,7 +165,6 @@ void XXXNeverCalled()
     XPTC_InvokeByIndex(nsnull, 0, 0, nsnull);
     xptc_dummy();
     xptc_dummy2();
-    XPTI_GetInterfaceInfoManager();
     NS_NewGenericFactory(nsnull, nsnull);
     NS_NewGenericModule2(nsnull, nsnull);
     NS_GetWeakReference(nsnull);
diff --git a/mozilla/xpcom/build/nsXPComInit.cpp b/mozilla/xpcom/build/nsXPComInit.cpp
index 8ccd68f..28609ef 100644
--- a/mozilla/xpcom/build/nsXPComInit.cpp
+++ b/mozilla/xpcom/build/nsXPComInit.cpp
@@ -77,6 +77,7 @@
 
 #include "xptinfo.h"
 #include "nsIInterfaceInfoManager.h"
+#include "xptiprivate.h"
 
 #include "nsTimerImpl.h"
 #include "TimerThread.h"
@@ -226,13 +227,14 @@ nsXPTIInterfaceInfoManagerGetSingleton(nsISupports* outer,
                                        const nsIID& aIID,
                                        void* *aInstancePtr)
 {
-    NS_ENSURE_ARG_POINTER(aInstancePtr);
+    NS_ASSERTION(aInstancePtr, "null outptr");
     NS_ENSURE_TRUE(!outer, NS_ERROR_NO_AGGREGATION);
 
-    nsCOMPtr<nsIInterfaceInfoManager> iim(dont_AddRef(XPTI_GetInterfaceInfoManager()));
-    if (!iim) {
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+        (xptiInterfaceInfoManager::GetInterfaceInfoManagerNoAddRef());
+    if (!iim)
         return NS_ERROR_FAILURE;
-    }
+    
 
     return iim->QueryInterface(aIID, aInstancePtr);
 }
@@ -426,7 +428,8 @@ const int components_length = sizeof(components) / sizeof(components[0]);
 
 // gDebug will be freed during shutdown.
 static nsIDebug* gDebug = nsnull;
-nsresult NS_COM NS_GetDebug(nsIDebug** result)
+EXPORT_XPCOM_API(nsresult)
+NS_GetDebug(nsIDebug** result)
 {
     nsresult rv = NS_OK;
     if (!gDebug)
@@ -444,7 +447,8 @@ nsresult NS_COM NS_GetDebug(nsIDebug** result)
 static nsITraceRefcnt* gTraceRefcnt = nsnull;
 #endif
 
-nsresult NS_COM NS_GetTraceRefcnt(nsITraceRefcnt** result)
+EXPORT_XPCOM_API(nsresult)
+NS_GetTraceRefcnt(nsITraceRefcnt** result)
 {
 #ifdef NS_BUILD_REFCNT_LOGGING
     nsresult rv = NS_OK;
@@ -461,20 +465,23 @@ nsresult NS_COM NS_GetTraceRefcnt(nsITraceRefcnt** result)
 #endif
 }
 
-nsresult NS_COM NS_InitXPCOM(nsIServiceManager* *result,
+EXPORT_XPCOM_API(nsresult)
+NS_InitXPCOM(nsIServiceManager* *result,
                              nsIFile* binDirectory)
 {
     return NS_InitXPCOM3(result, binDirectory, nsnull, nsnull, 0);
 }
 
-nsresult NS_COM NS_InitXPCOM2(nsIServiceManager* *result,
+EXPORT_XPCOM_API(nsresult)
+NS_InitXPCOM2(nsIServiceManager* *result,
                               nsIFile* binDirectory,
                               nsIDirectoryServiceProvider* appFileLocationProvider)
 {
     return NS_InitXPCOM3(result, binDirectory, appFileLocationProvider, nsnull, 0);
 }
 
-nsresult NS_COM NS_InitXPCOM3(nsIServiceManager* *result,
+EXPORT_XPCOM_API(nsresult)
+NS_InitXPCOM3(nsIServiceManager* *result,
                               nsIFile* binDirectory,
                               nsIDirectoryServiceProvider* appFileLocationProvider,
                               nsStaticModuleInfo const *staticComponents,
@@ -713,8 +720,7 @@ nsresult NS_COM NS_InitXPCOM3(nsIServiceManager* *result,
     }
     
     // Pay the cost at startup time of starting this singleton.
-    nsIInterfaceInfoManager* iim = XPTI_GetInterfaceInfoManager();
-    NS_IF_RELEASE(iim);
+    (void) xptiInterfaceInfoManager::GetInterfaceInfoManagerNoAddRef();
 
     // After autoreg, but before we actually instantiate any components,
     // add any services listed in the "xpcom-directory-providers" category
@@ -747,7 +753,7 @@ static void CallExitRoutines()
     gExitRoutines = nsnull;
 }
 
-nsresult NS_COM
+EXPORT_XPCOM_API(nsresult)
 NS_RegisterXPCOMExitRoutine(XPCOMExitRoutine exitRoutine, PRUint32 priority)
 {
     // priority are not used right now.  It will need to be implemented as more
@@ -764,7 +770,7 @@ NS_RegisterXPCOMExitRoutine(XPCOMExitRoutine exitRoutine, PRUint32 priority)
     return okay ? NS_OK : NS_ERROR_FAILURE;
 }
 
-nsresult NS_COM
+EXPORT_XPCOM_API(nsresult)
 NS_UnregisterXPCOMExitRoutine(XPCOMExitRoutine exitRoutine)
 {
     if (!gExitRoutines)
@@ -791,7 +797,8 @@ NS_UnregisterXPCOMExitRoutine(XPCOMExitRoutine exitRoutine)
 //   - Release the Registry held by Component Manager
 //   - Finally, release the component manager itself
 //
-nsresult NS_COM NS_ShutdownXPCOM(nsIServiceManager* servMgr)
+EXPORT_XPCOM_API(nsresult)
+NS_ShutdownXPCOM(nsIServiceManager* servMgr)
 {
 
     // Notify observers of xpcom shutting down
@@ -875,7 +882,7 @@ nsresult NS_COM NS_ShutdownXPCOM(nsIServiceManager* servMgr)
     // Do this _after_ shutting down the component manager, because the
     // JS component loader will use XPConnect to call nsIModule::canUnload,
     // and that will spin up the InterfaceInfoManager again -- bad mojo
-    XPTI_FreeInterfaceInfoManager();
+    xptiInterfaceInfoManager::FreeInterfaceInfoManager();
 
     // Finally, release the component manager last because it unloads the
     // libraries:
diff --git a/mozilla/xpcom/components/nsComponentManager.cpp b/mozilla/xpcom/components/nsComponentManager.cpp
index b9ae0c2..7f647f8 100644
--- a/mozilla/xpcom/components/nsComponentManager.cpp
+++ b/mozilla/xpcom/components/nsComponentManager.cpp
@@ -3171,8 +3171,8 @@ nsComponentManagerImpl::AutoRegisterImpl(PRInt32 when,
             return NS_ERROR_NOT_INITIALIZED;
     }
 
-    nsCOMPtr<nsIInterfaceInfoManager> iim =
-        dont_AddRef(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+        (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
 
     if (!iim)
         return NS_ERROR_UNEXPECTED;
diff --git a/mozilla/xpcom/proxy/src/Makefile.in b/mozilla/xpcom/proxy/src/Makefile.in
index 46c71f0..2527d92 100644
--- a/mozilla/xpcom/proxy/src/Makefile.in
+++ b/mozilla/xpcom/proxy/src/Makefile.in
@@ -57,7 +57,7 @@ CPPSRCS		= \
 		nsProxyRelease.cpp \
 		$(NULL)
 
-DEFINES		+=  -D_IMPL_NS_COM -DEXPORT_XPTC_API -DEXPORT_XPTI_API
+DEFINES		+=  -D_IMPL_NS_COM -DEXPORT_XPTC_API
 
 # No shared lib; Force creation of static lib
 FORCE_STATIC_LIB = 1
diff --git a/mozilla/xpcom/proxy/src/nsIProxyCreateInstance.h b/mozilla/xpcom/proxy/src/nsIProxyCreateInstance.h
index 13755d7..4842b96 100644
--- a/mozilla/xpcom/proxy/src/nsIProxyCreateInstance.h
+++ b/mozilla/xpcom/proxy/src/nsIProxyCreateInstance.h
@@ -29,11 +29,6 @@ class nsIProxyCreateInstance : public nsISupports {
 
   /* void CreateInstanceByContractID (in string aContractID, in nsISupports aOuter, in nsIIDRef iid, out voidStar result); */
   NS_IMETHOD CreateInstanceByContractID(const char *aContractID, nsISupports *aOuter, const nsIID & iid, void * *result) = 0;
-
-#ifdef XPIDL_JS_STUBS
-  static NS_EXPORT_(JSObject *) InitJSClass(JSContext *cx);
-  static NS_EXPORT_(JSObject *) GetJSObject(JSContext *cx, nsIProxyCreateInstance *priv);
-#endif
 };
 
 #endif /* __gen_nsIProxyCreateInstance_h__ */
diff --git a/mozilla/xpcom/proxy/src/nsProxyEventClass.cpp b/mozilla/xpcom/proxy/src/nsProxyEventClass.cpp
index 8e221af..18c5ca0 100644
--- a/mozilla/xpcom/proxy/src/nsProxyEventClass.cpp
+++ b/mozilla/xpcom/proxy/src/nsProxyEventClass.cpp
@@ -109,7 +109,9 @@ nsProxyEventClass::GetNewOrUsedClass(REFNSIID aIID)
     }
     else
     {
-        nsCOMPtr<nsIInterfaceInfoManager> iimgr = getter_AddRefs(XPTI_GetInterfaceInfoManager());
+        nsCOMPtr<nsIInterfaceInfoManager> iimgr
+            (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
+
         if(iimgr)
         {
             nsCOMPtr<nsIInterfaceInfo> info;
@@ -251,7 +253,8 @@ nsProxyEventClass::CallQueryInterfaceOnProxy(nsProxyEventObject* self, REFNSIID
     nsCOMPtr<nsIInterfaceInfo> interfaceInfo;
     const nsXPTMethodInfo *mi;
 
-    nsCOMPtr<nsIInterfaceInfoManager> iim = getter_AddRefs(XPTI_GetInterfaceInfoManager());
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+        (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
 
     if (!iim) return NS_NOINTERFACE;
     iim->GetInfoForName("nsISupports", getter_AddRefs(interfaceInfo));
diff --git a/mozilla/xpcom/proxy/tests/Makefile.in b/mozilla/xpcom/proxy/tests/Makefile.in
index 5d87b3a..12c9004 100644
--- a/mozilla/xpcom/proxy/tests/Makefile.in
+++ b/mozilla/xpcom/proxy/tests/Makefile.in
@@ -45,7 +45,6 @@ include $(DEPTH)/config/autoconf.mk
 MODULE		= xpcom_tests
 XPIDL_MODULE	= proxytest
 REQUIRES	= xpcom
-MOZILLA_INTERNAL_API = 1
 
 CPPSRCS		= proxytests.cpp
 XPIDLSRCS	= nsITestProxy.idl
@@ -53,6 +52,7 @@ XPIDLSRCS	= nsITestProxy.idl
 SIMPLE_PROGRAMS	= $(CPPSRCS:.cpp=$(BIN_SUFFIX)) 
 
 LIBS		= \
+		$(DIST)/lib/$(LIB_PREFIX)xpcomglue_s.$(LIB_SUFFIX) \
 		$(XPCOM_LIBS) \
 		$(NSPR_LIBS) \
 		$(NULL)
diff --git a/mozilla/xpcom/proxy/tests/proxytests.cpp b/mozilla/xpcom/proxy/tests/proxytests.cpp
index cb537dc..71346b2 100644
--- a/mozilla/xpcom/proxy/tests/proxytests.cpp
+++ b/mozilla/xpcom/proxy/tests/proxytests.cpp
@@ -52,6 +52,8 @@
 
 #include "nsIProxyObjectManager.h"
 #include "nsIEventQueueService.h"
+#include "nsComponentManagerUtils.h"
+#include "nsServiceManagerUtils.h"
 
 static NS_DEFINE_CID(kEventQueueServiceCID, NS_EVENTQUEUESERVICE_CID);
 
diff --git a/mozilla/xpcom/reflect/xptcall/src/Makefile.in b/mozilla/xpcom/reflect/xptcall/src/Makefile.in
index 59f8fd1..f0215c7 100644
--- a/mozilla/xpcom/reflect/xptcall/src/Makefile.in
+++ b/mozilla/xpcom/reflect/xptcall/src/Makefile.in
@@ -58,5 +58,5 @@ FORCE_USE_PIC	= 1
 
 include $(topsrcdir)/config/rules.mk
 
-DEFINES		+= -DEXPORT_XPTC_API -D_IMPL_NS_COM -D_IMPL_NS_BASE
+DEFINES		+= -DEXPORT_XPTC_API -D_IMPL_NS_COM
 
diff --git a/mozilla/xpcom/reflect/xptcall/src/md/win32/Makefile.in b/mozilla/xpcom/reflect/xptcall/src/md/win32/Makefile.in
index 0bfd097..af1c4f3 100644
--- a/mozilla/xpcom/reflect/xptcall/src/md/win32/Makefile.in
+++ b/mozilla/xpcom/reflect/xptcall/src/md/win32/Makefile.in
@@ -109,6 +109,6 @@ FORCE_STATIC_LIB = 1
 
 include $(topsrcdir)/config/rules.mk
 
-DEFINES		+= -DEXPORT_XPTC_API -D_IMPL_NS_COM -D_IMPL_NS_BASE
+DEFINES		+= -DEXPORT_XPTC_API -D_IMPL_NS_COM
 
 LOCAL_INCLUDES	+= -I$(srcdir)/../..
diff --git a/mozilla/xpcom/reflect/xptinfo/public/xptinfo.h b/mozilla/xpcom/reflect/xptinfo/public/xptinfo.h
index cf0c9d1..6e21d33 100644
--- a/mozilla/xpcom/reflect/xptinfo/public/xptinfo.h
+++ b/mozilla/xpcom/reflect/xptinfo/public/xptinfo.h
@@ -41,48 +41,10 @@
 #define xptiinfo_h___
 
 #include "prtypes.h"
+#include "nscore.h"
 #include "xpt_struct.h"
 
-/*
- * The linkage of XPTI API functions differs depending on whether the file is
- * used within the XPTI library or not.  Any source file within the XPTI
- * library should define EXPORT_XPTI_API whereas any client of the library
- * should not.
- */
-#ifdef EXPORT_XPTI_API
-#define XPTI_PUBLIC_API(t)    PR_IMPLEMENT(t)
-#define XPTI_PUBLIC_DATA(t)   PR_IMPLEMENT_DATA(t)
-#ifdef _WIN32
-#    define XPTI_EXPORT           __declspec(dllexport)
-#else
-#    define XPTI_EXPORT
-#endif
-#else
-#ifdef _WIN32
-#    define XPTI_PUBLIC_API(t)    __declspec(dllimport) t
-#    define XPTI_PUBLIC_DATA(t)   __declspec(dllimport) t
-#    define XPTI_EXPORT           __declspec(dllimport)
-#else
-#    define XPTI_PUBLIC_API(t)    PR_IMPLEMENT(t)
-#    define XPTI_PUBLIC_DATA(t)   t
-#    define XPTI_EXPORT
-#endif
-#endif
-#define XPTI_FRIEND_API(t)    XPTI_PUBLIC_API(t)
-#define XPTI_FRIEND_DATA(t)   XPTI_PUBLIC_DATA(t)
-
 class nsIInterfaceInfoManager;
-PR_BEGIN_EXTERN_C
-// Even if this is a service, it is cool to provide a direct accessor
-XPTI_PUBLIC_API(nsIInterfaceInfoManager*)
-XPTI_GetInterfaceInfoManager();
-
-// Even if this is a service, it is cool to provide a direct accessor
-XPTI_PUBLIC_API(void)
-XPTI_FreeInterfaceInfoManager();
-PR_END_EXTERN_C
-
-
 
 // Flyweight wrapper classes for xpt_struct.h structs. 
 // Everything here is dependent upon - and sensitive to changes in -
diff --git a/mozilla/xpcom/reflect/xptinfo/src/Makefile.in b/mozilla/xpcom/reflect/xptinfo/src/Makefile.in
index 66ce548..13a7e7e 100644
--- a/mozilla/xpcom/reflect/xptinfo/src/Makefile.in
+++ b/mozilla/xpcom/reflect/xptinfo/src/Makefile.in
@@ -73,5 +73,5 @@ include $(topsrcdir)/config/rules.mk
 # For nsManifestLineReader class.
 LOCAL_INCLUDES	= -I$(srcdir)/../../../ds
 
-DEFINES += -DEXPORT_XPTI_API -DEXPORT_XPT_API -D_IMPL_NS_COM -D_IMPL_NS_BASE
+DEFINES += -DEXPORT_XPT_API -D_IMPL_NS_COM
 
diff --git a/mozilla/xpcom/reflect/xptinfo/src/xptiInterfaceInfoManager.cpp b/mozilla/xpcom/reflect/xptinfo/src/xptiInterfaceInfoManager.cpp
index 5ae0691..f6640a5 100644
--- a/mozilla/xpcom/reflect/xptinfo/src/xptiInterfaceInfoManager.cpp
+++ b/mozilla/xpcom/reflect/xptinfo/src/xptiInterfaceInfoManager.cpp
@@ -2106,21 +2106,3 @@ NS_IMETHODIMP xptiInterfaceInfoManager::EnumerateAdditionalManagers(nsISimpleEnu
     NS_ADDREF(*_retval = enumerator);
     return NS_OK;
 }
-
-/***************************************************************************/
-
-XPTI_PUBLIC_API(nsIInterfaceInfoManager*)
-XPTI_GetInterfaceInfoManager()
-{
-    nsIInterfaceInfoManager* iim =
-        xptiInterfaceInfoManager::GetInterfaceInfoManagerNoAddRef();
-    NS_IF_ADDREF(iim);
-    return iim;
-}
-
-XPTI_PUBLIC_API(void)
-XPTI_FreeInterfaceInfoManager()
-{
-    xptiInterfaceInfoManager::FreeInterfaceInfoManager();
-}
-
diff --git a/mozilla/xpcom/reflect/xptinfo/tests/Makefile.in b/mozilla/xpcom/reflect/xptinfo/tests/Makefile.in
index 9b7f1ed..979b9ff 100644
--- a/mozilla/xpcom/reflect/xptinfo/tests/Makefile.in
+++ b/mozilla/xpcom/reflect/xptinfo/tests/Makefile.in
@@ -54,5 +54,3 @@ LIBS		= \
 		$(NULL)
 
 include $(topsrcdir)/config/rules.mk
-
-DEFINES += -DEXPORT_XPTI_API
diff --git a/mozilla/xpcom/reflect/xptinfo/tests/TestInterfaceInfo.cpp b/mozilla/xpcom/reflect/xptinfo/tests/TestInterfaceInfo.cpp
index 75005c5..c8715de 100644
--- a/mozilla/xpcom/reflect/xptinfo/tests/TestInterfaceInfo.cpp
+++ b/mozilla/xpcom/reflect/xptinfo/tests/TestInterfaceInfo.cpp
@@ -43,6 +43,7 @@
 #include "nsIInterfaceInfo.h"
 #include "nsIInterfaceInfoManager.h"
 #include "xptinfo.h"
+#include "nsServiceManagerUtils.h"
 
 #include <stdio.h>
 
@@ -57,7 +58,8 @@ int main (int argc, char **argv) {
     char *name1, *name2, *name3;
     nsIInterfaceInfo *info2, *info3, *info4, *info5;
 
-    nsIInterfaceInfoManager *iim = XPTI_GetInterfaceInfoManager();
+    nsCOMPtr<nsIInterfaceInfoManager> iim
+        (do_GetService(NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID));
 
     fprintf(stderr, "\ngetting iid for 'nsISupports'\n");
     iim->GetIIDForName("nsISupports", &iid1);
-- 
2.30.2

