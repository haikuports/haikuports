From 4849bcff3a3182b335b1b6ad0e32b1b6bd2c0a58 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 3 Jan 2019 17:08:40 +1000
Subject: Fix for Haiku


diff --git a/src/core/Application.cpp b/src/core/Application.cpp
index 13f34bc..64b6cc6 100644
--- a/src/core/Application.cpp
+++ b/src/core/Application.cpp
@@ -318,7 +318,7 @@ Application::Application(int &argc, char **argv) : QApplication(argc, argv), Act
 	Console::createInstance();
 
 	SettingsManager::createInstance(profilePath);
-
+#ifndef Q_OS_HAIKU
 	if (!isReadOnly && !m_isFirstRun && !QFileInfo(profilePath).isWritable())
 	{
 		QMessageBox::warning(nullptr, tr("Warning"), tr("Profile directory (%1) is not writable, application will be running in read-only mode.").arg(profilePath), QMessageBox::Close);
@@ -386,7 +386,7 @@ Application::Application(int &argc, char **argv) : QApplication(argc, argv), Act
 			}
 		}
 	}
-
+#endif
 	SessionsManager::createInstance(profilePath, cachePath, isPrivate, isReadOnly);
 
 	if (!isReadOnly && !Migrator::run())
diff --git a/src/core/SettingsManager.cpp b/src/core/SettingsManager.cpp
index 43aa107..490a905 100644
--- a/src/core/SettingsManager.cpp
+++ b/src/core/SettingsManager.cpp
@@ -80,7 +80,7 @@ void SettingsManager::createInstance(const QString &path)
 	registerOption(Browser_EnableSingleKeyShortcutsOption, BooleanType, true);
 	registerOption(Browser_EnableSpellCheckOption, BooleanType, true);
 	registerOption(Browser_EnableTrayIconOption, BooleanType, true);
-	registerOption(Browser_HomePageOption, StringType, QString());
+	registerOption(Browser_HomePageOption, StringType, QLatin1String("https://haiku-os.org"));
 	registerOption(Browser_InactiveTabTimeUntilSuspendOption, IntegerType, -1);
 	registerOption(Browser_KeyboardShortcutsProfilesOrderOption, ListType, QStringList(QLatin1String("default")));
 	registerOption(Browser_LocaleOption, StringType, QLatin1String("system"));
@@ -108,19 +108,19 @@ void SettingsManager::createInstance(const QString &path)
 	registerOption(Choices_WarnQuitOption, EnumerationType, QLatin1String("noWarn"), {QLatin1String("alwaysWarn"), QLatin1String("warnOpenTabs"), QLatin1String("noWarn")});
 	registerOption(Choices_WarnQuitTransfersOption, BooleanType, true);
 	registerOption(Content_BackgroundColorOption, ColorType, QColor(0xFF, 0xFF, 0xFF));
-	registerOption(Content_CursiveFontOption, FontType, QLatin1String("Comic Sans MS"));
+	registerOption(Content_CursiveFontOption, FontType, QLatin1String("Noto Serif"));
 	registerOption(Content_DefaultCharacterEncodingOption, StringType, QLatin1String("auto"));
 	registerOption(Content_DefaultFixedFontSizeOption, IntegerType, 16);
 	registerOption(Content_DefaultFontSizeOption, IntegerType, 16);
 	registerOption(Content_DefaultZoomOption, IntegerType, 100);
-	registerOption(Content_FantasyFontOption, FontType, QLatin1String("Impact"));
-	registerOption(Content_FixedFontOption, FontType, QLatin1String("DejaVu Sans Mono"));
+	registerOption(Content_FantasyFontOption, FontType, QLatin1String("Noto Serif"));
+	registerOption(Content_FixedFontOption, FontType, QLatin1String("Noto Mono"));
 	registerOption(Content_LinkColorOption, ColorType, QColor(0, 0, 0xEE));
 	registerOption(Content_MinimumFontSizeOption, IntegerType, -1);
 	registerOption(Content_PageReloadTimeOption, IntegerType, -1);
-	registerOption(Content_SansSerifFontOption, FontType, QLatin1String("DejaVu Sans"));
-	registerOption(Content_SerifFontOption, FontType, QLatin1String("DejaVu Serif"));
-	registerOption(Content_StandardFontOption, FontType, QLatin1String("DejaVu Serif"));
+	registerOption(Content_SansSerifFontOption, FontType, QLatin1String("Noto Sans"));
+	registerOption(Content_SerifFontOption, FontType, QLatin1String("Noto Serif"));
+	registerOption(Content_StandardFontOption, FontType, QLatin1String("Noto Serif"));
 	registerOption(Content_TextColorOption, ColorType, QColor(0, 0, 0));
 	registerOption(Content_UserStyleSheetOption, PathType, QString());
 	registerOption(Content_VisitedLinkColorOption, ColorType, QColor(0x55, 0x1A, 0x8B));
@@ -156,7 +156,7 @@ void SettingsManager::createInstance(const QString &path)
 	registerOption(Interface_TabCrashingActionOption, EnumerationType, QLatin1String("ask"), {QLatin1String("ask"), QLatin1String("close"), QLatin1String("reload")});
 	registerOption(Interface_UseFancyDateTimeFormatOption, BooleanType, true);
 	registerOption(Interface_UseNativeNotificationsOption, BooleanType, true);
-	registerOption(Interface_UseSystemIconThemeOption, BooleanType, false);
+	registerOption(Interface_UseSystemIconThemeOption, BooleanType, true);
 	registerOption(Interface_WidgetStyleOption, StringType, QString());
 	registerOption(Network_AcceptLanguageOption, StringType, QLatin1String("system,*;q=0.9"));
 	registerOption(Network_CookiesKeepModeOption, EnumerationType, QLatin1String("keepUntilExpires"), {QLatin1String("keepUntilExpires"), QLatin1String("keepUntilExit"), QLatin1String("ask")});
diff --git a/src/main.cpp b/src/main.cpp
index bec0f9c..d2d6581 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -37,6 +37,10 @@
 #include <QtCore/QUrl>
 #include <QtWidgets/QMessageBox>
 
+#include <unistd.h>
+#include <sys/types.h>
+#include <signal.h>
+
 using namespace Otter;
 
 #if !defined(Q_OS_WIN32)
@@ -214,5 +218,8 @@ int main(int argc, char *argv[])
 		Application::createWindow(parameters);
 	}
 
-	return application.exec();
+	application.exec();
+	kill(::getpid(), SIGKILL);
+
+	return 0;
 }
-- 
2.19.1

