From 4874499dc665a09b8eb9729334c256e1698bd372 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20Revol?= <revol@free.fr>
Date: Tue, 22 Jul 2014 23:57:16 +0200
Subject: Fix SIGWINCH test to include <signal.h>

Instead of <sys/signal.h> which is not part of POSIX.

diff --git a/aclocal.m4 b/aclocal.m4
index 41139f9..948570e 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -5021,7 +5021,7 @@ AC_DEFUN([CF_SIGWINCH],
 AC_CACHE_CHECK(if SIGWINCH is defined,cf_cv_define_sigwinch,[
 	AC_TRY_COMPILE([
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 ],[int x = SIGWINCH],
 	[cf_cv_define_sigwinch=yes],
 	[AC_TRY_COMPILE([
@@ -5029,7 +5029,7 @@ AC_CACHE_CHECK(if SIGWINCH is defined,cf_cv_define_sigwinch,[
 #undef _POSIX_SOURCE
 #undef _POSIX_C_SOURCE
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 ],[int x = SIGWINCH],
 	[cf_cv_define_sigwinch=maybe],
 	[cf_cv_define_sigwinch=no])
@@ -5047,7 +5047,7 @@ do
 #undef _POSIX_SOURCE
 #undef _POSIX_C_SOURCE
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 ],[
 #if SIGWINCH != $cf_sigwinch
 make an error
-- 
2.16.3


From 2cc3a2c260643cc40a65598f5fdb2718cbf12168 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20Revol?= <revol@free.fr>
Date: Wed, 23 Jul 2014 00:15:05 +0200
Subject: Fix calling getpwdnam without including the header

pwd.h is only included on HAVE_UTMP,
but Haiku has pwd.h but no utmp.

diff --git a/config.hin b/config.hin
index fb0e4d3..ca7a5f2 100644
--- a/config.hin
+++ b/config.hin
@@ -122,6 +122,7 @@
 #undef HAVE_READDIR
 #undef HAVE_RESIZETERM
 #undef HAVE_RESOLV_H
+#undef HAVE_PWD_H
 #undef HAVE_SETENV		/* AM_GNU_GETTEXT */
 #undef HAVE_SETLOCALE
 #undef HAVE_SETUID
diff --git a/configure.in b/configure.in
index 04f6f28..c57fda7 100644
--- a/configure.in
+++ b/configure.in
@@ -751,6 +751,7 @@ AC_CHECK_HEADERS( \
 	arpa/inet.h \
 	fcntl.h \
 	limits.h \
+	pwd.h \
 	stdlib.h \
 	string.h \
 	sys/fcntl.h \
diff --git a/src/LYUtils.c b/src/LYUtils.c
index 682cbf2..4eec23b 100644
--- a/src/LYUtils.c
+++ b/src/LYUtils.c
@@ -101,8 +101,11 @@ extern int kbhit(void);		/* FIXME: use conio.h */
 #include <lib$routines.h>
 #endif /* VMS */
 
-#ifdef HAVE_UTMP
+#ifdef HAVE_PWD_H
 #include <pwd.h>
+#endif
+
+#ifdef HAVE_UTMP
 #ifdef UTMPX_FOR_UTMP
 #include <utmpx.h>
 #define utmp utmpx
-- 
2.16.3


From 87fb129598091b5926f43593d5365fa47b0c905f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20Revol?= <revol@free.fr>
Date: Wed, 23 Jul 2014 00:18:13 +0200
Subject: Force patching configure itself

It seems lynx requires its own flavor of autoconf,
with things like AC_DIVERT_HELP.
We try to avoid having to patch autoconf just for this.

diff --git a/configure b/configure
index e2cb245..edf409a 100755
--- a/configure
+++ b/configure
@@ -10566,7 +10566,7 @@ else
 #include "confdefs.h"
 
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 
 int
 main (void)
@@ -10600,7 +10600,7 @@ cat >conftest.$ac_ext <<_ACEOF
 #undef _POSIX_SOURCE
 #undef _POSIX_C_SOURCE
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 
 int
 main (void)
@@ -10656,7 +10656,7 @@ do
 #undef _POSIX_SOURCE
 #undef _POSIX_C_SOURCE
 #include <sys/types.h>
-#include <sys/signal.h>
+#include <signal.h>
 
 int
 main (void)
@@ -27547,6 +27547,7 @@ for ac_header in \
 	arpa/inet.h \
 	fcntl.h \
 	limits.h \
+	pwd.h \
 	stdlib.h \
 	string.h \
 	sys/fcntl.h \
-- 
2.16.3


From d28767ff56c100201d2d237a9af3b062a35481b2 Mon Sep 17 00:00:00 2001
From: fbrosson <fbrosson@localhost>
Date: Mon, 6 Jun 2016 00:19:19 +0000
Subject: use relative symlinks when installing COPYING and COPYHEADER.


diff --git a/configure b/configure
index edf409a..64a710f 100755
--- a/configure
+++ b/configure
@@ -40,14 +40,14 @@ fi
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -sr conf$$.file conf$$ 2>/dev/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
     # Don't use ln at all; we don't have any links
     as_ln_s='cp -p'
   else
-    as_ln_s='ln -s'
+    as_ln_s='ln -sr'
   fi
 elif ln conf$$.file conf$$ 2>/dev/null; then
   as_ln_s=ln
@@ -45394,14 +45394,14 @@ fi
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -sr conf$$.file conf$$ 2>/dev/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
     # Don't use ln at all; we don't have any links
     as_ln_s='cp -p'
   else
-    as_ln_s='ln -s'
+    as_ln_s='ln -sr'
   fi
 elif ln conf$$.file conf$$ 2>/dev/null; then
   as_ln_s=ln
diff --git a/makefile.in b/makefile.in
index f39b495..6ff71cf 100644
--- a/makefile.in
+++ b/makefile.in
@@ -321,7 +321,7 @@ install-doc : $(DOCDIR) $(HELPDIR)
 	$(SHELL) -c 'for name in COPYING COPYHEADER; do \
 		cd $(HELPDIR) && rm -f $$name ;\
 		r= ;\
-		test "$(LN_S)" = "ln -s" || r=`echo $(helpdir)|sed -e "s%[^/]\+%..%g" -e "s%^.%%"`; \
+		test "$(LN_S)" = "ln -sr" || r=`echo $(helpdir)|sed -e "s%[^/]\+%..%g" -e "s%^.%%"`; \
 		cd $(HELPDIR) && ( $(LN_S) $$r$(docdir)/$$name . || cp $(DOCDIR)/$$name . );\
 		done'
 	-$(SHELL) -c 'case `id|sed -e "s/(.*//"` in uid=0) chown -R root $(DOCDIR);; esac'
-- 
2.16.3

