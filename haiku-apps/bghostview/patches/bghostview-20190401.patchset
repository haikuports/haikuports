From 4bed13fc880d56c18c11a66dab9682730c8cf1b2 Mon Sep 17 00:00:00 2001
From: Anarchos <sylvain_kerjean@hotmail.com>
Date: Mon, 28 Feb 2022 14:19:31 +0100
Subject: compiling for x86_64


diff --git a/BGhostview.cpp b/BGhostview.cpp
index 6893be5..bab63ea 100644
--- a/BGhostview.cpp
+++ b/BGhostview.cpp
@@ -479,7 +479,7 @@ void BGhostview::updateRecentList() {
 	if (!strcmp(filename,(char *) lastOpened->ItemAt(4))) return;
 	int count = m_recent->CountItems();
 	for (int i=0; i<count; i++)
-		delete m_recent->RemoveItem(0l);
+		delete m_recent->RemoveItem((int32)0l);
 	void *ofname=lastOpened->LastItem();
 	lastOpened->RemoveItem(ofname);
 	delete ofname;
@@ -836,7 +836,7 @@ void	BGhostview::setup()
 		Lock();
 		int count = marklist->CountItems();
 		for (int i=0; i<count; i++) 
-			delete marklist->RemoveItem(0l);
+			delete marklist->RemoveItem((int32)0l);
 		Unlock();
 	};
   if (doc!=NULL) psfree( doc );
diff --git a/BPSWidget.cpp b/BPSWidget.cpp
index 474b74d..0c7ac5d 100644
--- a/BPSWidget.cpp
+++ b/BPSWidget.cpp
@@ -220,7 +220,7 @@ int gsapi_stderr(void *caller_handle, const char *str, int len)
 display_callback cb;
 void* instance;
 
-long gsloop(void* psview) {
+status_t gsloop(void* psview) {
   BPSWidget *ps = (BPSWidget *) psview;
 	int code; 
 	int gs_arg;
diff --git a/BPSWidget.h b/BPSWidget.h
index 7d95440..f502a4d 100644
--- a/BPSWidget.h
+++ b/BPSWidget.h
@@ -18,7 +18,7 @@
 #endif
 
 int gsdll_call(int message, char *str, unsigned long count);
-long gsloop(void* psview);
+status_t gsloop(void* psview);
 bool writePS(FILE *in, FILE *out, long begin, unsigned int len);
 
 class BPSWidget : public BView
-- 
2.30.2


From 4a9023a46328765bbb7638862f5862efcbf1ee53 Mon Sep 17 00:00:00 2001
From: Anarchos <sylvain_kerjean@hotmail.com>
Date: Mon, 28 Feb 2022 14:32:45 +0100
Subject: compiling for x86_64


diff --git a/BGhostview.cpp b/BGhostview.cpp
index bab63ea..2df823d 100644
--- a/BGhostview.cpp
+++ b/BGhostview.cpp
@@ -45,15 +45,13 @@ BGhostview::BGhostview( BRect frame, const char *name )
 		strcpy(psTmp,"/boot/apps/Ghostscript/");
 		}
 	else {
-	  BEntry entry(&info.ref);
-    BPath path;
-    entry.GetPath(&path);
-    path.GetParent(&path);
+		BPath path;
 		tempDir=new char[B_PATH_NAME_LENGTH];
+		find_directory(B_SYSTEM_TEMP_DIRECTORY, &path);
 		strcpy(tempDir,path.Path());
 		strcpy(psTmp,tempDir);
 		strcat(psTmp,"/");
-		};
+	};
 	BView *menuBar=createMenubar(BRect(0,0,0,0));
   AddChild(menuBar);
 	toolBar = (AToolBar *)createToolbar(BRect(0,menuBar->Bounds().Height()+1,frame.Width(),25));
