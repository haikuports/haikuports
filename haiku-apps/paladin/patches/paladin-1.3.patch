diff --git a/PalEdit/Sources/CDoc.cpp b/PalEdit/Sources/CDoc.cpp
index e5ced11..d9f5dfa 100644
--- a/PalEdit/Sources/CDoc.cpp
+++ b/PalEdit/Sources/CDoc.cpp
@@ -451,7 +451,7 @@ void CDoc::AddRecent(const char *path)
 		BPath tp;
 		try
 		{
-			FailOSErr(find_directory(B_COMMON_TEMP_DIRECTORY, &tp));
+			FailOSErr(find_directory(B_SYSTEM_TEMP_DIRECTORY, &tp));
 			if (strncmp(tp.Path(), path, strlen(tp.Path())) == 0)
 				return;
 		}
diff --git a/PalEdit/Sources/CDocIO.cpp b/PalEdit/Sources/CDocIO.cpp
index 81fe4b1..1ae3366 100644
--- a/PalEdit/Sources/CDocIO.cpp
+++ b/PalEdit/Sources/CDocIO.cpp
@@ -198,7 +198,7 @@ static bool CopyFile(BEntry& srcEntry, BEntry& dstEntry)
 	return true;
 }
 
-#ifndef B_ZETA_VERSION_1_2_0 // maybe even B_ZETA_VERSION_1_1_0
+#ifndef B_HAIKU_VERSION // maybe even B_ZETA_VERSION_1_1_0
 bool operator< (const node_ref& left, const node_ref& right)
 {
 	if (left.node < right.node)
diff --git a/PalEdit/Sources/CDocIO.h b/PalEdit/Sources/CDocIO.h
index aa96fef..0ae9856 100644
--- a/PalEdit/Sources/CDocIO.h
+++ b/PalEdit/Sources/CDocIO.h
@@ -52,7 +52,7 @@ inline time_t CDocIO::LastSaved() const
 	return fLastSaved;
 }
 
-#ifndef B_ZETA_VERSION_1_2_0 // maybe even B_ZETA_VERSION_1_1_0
+#ifndef B_HAIKU_VERSION // maybe even B_ZETA_VERSION_1_1_0
 bool operator< (const node_ref& left, const node_ref& right);
 #endif
 
diff --git a/PalEdit/Sources/CMimeBox.cpp b/PalEdit/Sources/CMimeBox.cpp
index f4fc7cc..c86cf37 100644
--- a/PalEdit/Sources/CMimeBox.cpp
+++ b/PalEdit/Sources/CMimeBox.cpp
@@ -71,7 +71,7 @@ CMimeItem::CMimeItem(const char *mime)
 		try
 		{
 			char p[PATH_MAX];
-			if (find_directory(B_COMMON_TEMP_DIRECTORY, 0, true, p, PATH_MAX) == B_OK)
+			if (find_directory(B_SYSTEM_TEMP_DIRECTORY, 0, true, p, PATH_MAX) == B_OK)
 			{
 				BDirectory tmpdir;
 				FailOSErr(tmpdir.SetTo(p));
diff --git a/PalEdit/Sources/Sstdio.cpp b/PalEdit/Sources/Sstdio.cpp
index 76c7b19..88b2a24 100644
--- a/PalEdit/Sources/Sstdio.cpp
+++ b/PalEdit/Sources/Sstdio.cpp
@@ -37,7 +37,7 @@
 #include "Sstdio.h"
 #include <stdarg.h>
 #include <ctype.h>
-#ifdef BONE_BUILD
+#ifdef B_HAIKU_VERSION
 	#include <sys/socket.h>
 	#include <sys/select.h>
 #else
diff --git a/Paladin/Project.cpp b/Paladin/Project.cpp
index 9f4c42d..054e72f 100644
--- a/Paladin/Project.cpp
+++ b/Paladin/Project.cpp
@@ -214,7 +214,7 @@ Project::Load(const char *path)
 	if (actualPlatform == PLATFORM_HAIKU_GCC4 && actualPlatform != fPlatform)
 	{
 		BPath libpath;
-		find_directory(B_COMMON_DEVELOP_DIRECTORY,&libpath);
+		find_directory(B_SYSTEM_DEVELOP_DIRECTORY,&libpath);
 		libpath.Append("lib/x86/libsupc++.so");
 		AddLibrary(libpath.Path());
 	}
@@ -1473,7 +1473,7 @@ Project::FindLibrary(const char *libname)
 		return outpath;
 	}
 	
-	find_directory(B_COMMON_LIB_DIRECTORY,&tempPath);
+	find_directory(B_SYSTEM_LIB_DIRECTORY,&tempPath);
 	tempPath.Append(libname);
 	if (BEntry(tempPath.Path()).Exists())
 	{
@@ -1485,7 +1485,7 @@ Project::FindLibrary(const char *libname)
 		return outpath;
 	}
 	
-	find_directory(B_COMMON_DEVELOP_DIRECTORY,&tempPath);
+	find_directory(B_SYSTEM_DEVELOP_DIRECTORY,&tempPath);
 	tempPath.Append("lib/x86/");
 	tempPath.Append(libname);
 	if (BEntry(tempPath.Path()).Exists())
diff --git a/Paladin/TemplateManager.cpp b/Paladin/TemplateManager.cpp
index 01f41f9..aea1e89 100644
--- a/Paladin/TemplateManager.cpp
+++ b/Paladin/TemplateManager.cpp
@@ -242,10 +242,10 @@ ProjectTemplate::RefForLib(const BString &path)
 		find_directory(B_USER_LIB_DIRECTORY,&bpath);
 		str.IReplaceFirst("B_USER_LIB_DIRECTORY",bpath.Path());
 	}
-	else if (str.IFindFirst("B_COMMON_LIB_DIRECTORY") >= 0)
+	else if (str.IFindFirst("B_SYSTEM_LIB_DIRECTORY") >= 0)
 	{
-		find_directory(B_COMMON_LIB_DIRECTORY,&bpath);
-		str.IReplaceFirst("B_COMMON_LIB_DIRECTORY",bpath.Path());
+		find_directory(B_SYSTEM_LIB_DIRECTORY,&bpath);
+		str.IReplaceFirst("B_SYSTEM_LIB_DIRECTORY",bpath.Path());
 	}
 	
 	entry_ref ref;
diff --git a/Paladin/build.sh b/Paladin/build.sh
old mode 100644
new mode 100755
diff --git a/SymbolFinder/MainWindow.cpp b/SymbolFinder/MainWindow.cpp
index a53848b..aab1c63 100644
--- a/SymbolFinder/MainWindow.cpp
+++ b/SymbolFinder/MainWindow.cpp
@@ -130,7 +130,7 @@ MainWindow::DoSearch(const char *text)
 	if (status == B_OK && find_directory(B_USER_LIB_DIRECTORY,&path) == B_OK)
 		status = SearchLibPath(path.Path(),text);
 	
-	if (status == B_OK && BEntry("/boot/common").Exists() && find_directory(B_COMMON_LIB_DIRECTORY,&path) == B_OK)
+	if (status == B_OK && BEntry("/boot/system").Exists() && find_directory(B_SYSTEM_LIB_DIRECTORY,&path) == B_OK)
 		status = SearchLibPath(path.Path(),text);
 	
 	Lock();
