From 181f1c7169cbecc4ccafad103e612eac5a3cb8a6 Mon Sep 17 00:00:00 2001
From: Schrijvers Luc <begasus@gmail.com>
Date: Mon, 24 Jun 2024 19:26:00 +0200
Subject: Build fix


diff --git a/src/main.cpp b/src/main.cpp
index 8ea1590..f9c3ad0 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -248,7 +248,7 @@ main(int argc, char *argv[])
     if (!singleapp.isPrimaryInstance()) {
         auto token = qgetenv("XDG_ACTIVATION_TOKEN");
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MACOS)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_MACOS) && !defined(Q_OS_HAIKU)
         // getting a valid activation token on wayland is a bit of a pain, it works most reliably
         // when you have an actual window, that has the focus...
         auto waylandApp = app.nativeInterface<QNativeInterface::QWaylandApplication>();
-- 
2.48.1


From ae3e4d4dc2441d081b78670e96a600187c4b507a Mon Sep 17 00:00:00 2001
From: Daniel Weber <weberd@outlook.de>
Date: Tue, 12 Sep 2023 18:01:12 +0000
Subject: Set software mode (which should be default)


diff --git a/src/main.cpp b/src/main.cpp
index f9c3ad0..9ccddea 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -178,6 +178,10 @@ main(int argc, char *argv[])
     }
 #endif
 
+#if defined(Q_OS_HAIKU)
+    qputenv("QT_QUICK_BACKEND", "software");
+#endif
+
     QString matrixUri;
     for (int i = 1; i < argc; ++i) {
         QString arg{argv[i]};
-- 
2.48.1


From ab25362383c1cfb1f0220310034d65db3680006b Mon Sep 17 00:00:00 2001
From: Vitaly <vitaly@easycoding.org>
Date: Tue, 16 Jul 2024 12:30:45 +0200
Subject: [PATCH] Fixed build against fmt 11.


diff --git a/src/RegisterPage.cpp b/src/RegisterPage.cpp
index 93e2cf1..562d2c8 100644
--- a/src/RegisterPage.cpp
+++ b/src/RegisterPage.cpp
@@ -4,6 +4,8 @@
 
 #include <set>
 
+#include <fmt/ranges.h>
+
 #include <mtx/responses/common.hpp>
 #include <mtx/responses/register.hpp>
 #include <mtx/responses/version.hpp>
diff --git a/src/Utils.cpp b/src/Utils.cpp
index 3e7340f..99d337c 100644
--- a/src/Utils.cpp
+++ b/src/Utils.cpp
@@ -26,6 +26,7 @@
 #include <QWindow>
 #include <QXmlStreamReader>
 
+#include <fmt/ranges.h>
 #include <nlohmann/json.hpp>
 
 #include <cmark.h>
diff --git a/src/encryption/DeviceVerificationFlow.cpp b/src/encryption/DeviceVerificationFlow.cpp
index cb595df..0757d88 100644
--- a/src/encryption/DeviceVerificationFlow.cpp
+++ b/src/encryption/DeviceVerificationFlow.cpp
@@ -9,6 +9,7 @@
 #include <QDateTime>
 #include <QTimer>
 
+#include <fmt/ranges.h>
 #include <nlohmann/json.hpp>
 
 #include "Cache.h"
-- 
2.48.1


From 338ce1fc0dd9e67532614ce496782a6260d0f921 Mon Sep 17 00:00:00 2001
From: DeepBlueV7.X <begasus@gmail.com>
Date: Mon, 24 Mar 2025 13:59:26 +0100
Subject: Bump mtxclient to fix fmt build errors

https://github.com/Nheko-Reborn/nheko/commit/b3026e297871666ad3b55d95af4be9f7f12a65ea

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 04738bd..e09c435 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -606,7 +606,7 @@ if(USE_BUNDLED_MTXCLIENT)
     FetchContent_Declare(
         MatrixClient
             GIT_REPOSITORY https://github.com/Nheko-Reborn/mtxclient.git
-            GIT_TAG        v0.10.0
+            GIT_TAG        a0b203980491ddf2e2fe4f1cd6af8c2562b3ee35
     )
     set(BUILD_LIB_EXAMPLES OFF CACHE INTERNAL "")
     set(BUILD_LIB_TESTS OFF CACHE INTERNAL "")
diff --git a/im.nheko.Nheko.yaml b/im.nheko.Nheko.yaml
index 4e6720a..368497b 100644
--- a/im.nheko.Nheko.yaml
+++ b/im.nheko.Nheko.yaml
@@ -223,8 +223,8 @@ modules:
     buildsystem: cmake-ninja
     name: mtxclient
     sources:
-      - commit: 457bc52773b40142848f0b2ab025516bf6ed634d
-        tag: v0.10.0
+      - commit: a0b203980491ddf2e2fe4f1cd6af8c2562b3ee35
+#        tag: v0.10.0
         type: git
         url: https://github.com/Nheko-Reborn/mtxclient.git
   - config-opts:
-- 
2.48.1

