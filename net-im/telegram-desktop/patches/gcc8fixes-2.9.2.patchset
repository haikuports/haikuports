From 96256edd594cc4a8318606215c60c1a9b70b599d Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Wed, 11 Aug 2021 21:34:28 +1000
Subject: Workaround build issues on GCC8


diff --git a/Telegram/SourceFiles/calls/group/calls_group_panel.cpp b/Telegram/SourceFiles/calls/group/calls_group_panel.cpp
index 3f3d431..9990a7d 100644
--- a/Telegram/SourceFiles/calls/group/calls_group_panel.cpp
+++ b/Telegram/SourceFiles/calls/group/calls_group_panel.cpp
@@ -161,10 +161,10 @@ void Panel::showToast(TextWithEntities &&text, crl::time duration) {
 	if (const auto strong = _lastToast.get()) {
 		strong->hideAnimated();
 	}
-	_lastToast = Ui::ShowMultilineToast({
-		.parentOverride = widget(),
+	_lastToast = Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 		.text = std::move(text),
 		.duration = duration,
+		.parentOverride = widget(),
 	});
 }
 
diff --git a/Telegram/SourceFiles/calls/group/calls_group_settings.cpp b/Telegram/SourceFiles/calls/group/calls_group_settings.cpp
index 62cac5a..b37d841 100644
--- a/Telegram/SourceFiles/calls/group/calls_group_settings.cpp
+++ b/Telegram/SourceFiles/calls/group/calls_group_settings.cpp
@@ -554,9 +554,9 @@ void SettingsBox(
 			box->getDelegate()->show(std::move(next));
 		});
 		const auto showToast = crl::guard(box, [=](QString text) {
-			Ui::ShowMultilineToast({
-				.parentOverride = box->getDelegate()->outerContainer(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = { text },
+				.parentOverride = box->getDelegate()->outerContainer(),
 			});
 		});
 		auto [shareLinkCallback, shareLinkLifetime] = ShareInviteLinkAction(
@@ -592,9 +592,9 @@ void SettingsBox(
 				}
 				QGuiApplication::clipboard()->setText(link);
 				if (weakBox) {
-					Ui::ShowMultilineToast({
-						.parentOverride = box->getDelegate()->outerContainer(),
+					Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 						.text = { tr::lng_create_channel_link_copied(tr::now) },
+						.parentOverride = box->getDelegate()->outerContainer(),
 					});
 				}
 				return true;
diff --git a/Telegram/SourceFiles/calls/group/calls_group_viewport_opengl.cpp b/Telegram/SourceFiles/calls/group/calls_group_viewport_opengl.cpp
index 7ca3a50..c0cb3fe 100644
--- a/Telegram/SourceFiles/calls/group/calls_group_viewport_opengl.cpp
+++ b/Telegram/SourceFiles/calls/group/calls_group_viewport_opengl.cpp
@@ -1275,11 +1275,13 @@ void Viewport::RendererGL::validateDatas() {
 			request.updating = true;
 		} else {
 			// This invalidates maybeStale*, but they're already equal.
+#ifndef Q_OS_HAIKU
 			_tileData.push_back({
 				.id = id,
 				.peer = peer,
 				.pause = paused,
 			});
+#endif
 		}
 		const auto nameTop = pausedBottom + index * nameHeight;
 		_tileData[index].nameVersion = peer->nameVersion;
diff --git a/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp b/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
index 593c292..af8222a 100644
--- a/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
@@ -76,7 +76,7 @@ void ScheduleBox(
 		box->closeBox();
 		copy(result);
 	};
-	auto descriptor = Ui::ChooseDateTimeBox(box, {
+	auto descriptor = Ui::ChooseDateTimeBox(box, Ui::ChooseDateTimeBoxArgs{
 		.title = (type == SendMenu::Type::Reminder
 			? tr::lng_remind_title()
 			: tr::lng_schedule_title()),
diff --git a/Telegram/SourceFiles/media/streaming/media_streaming_video_track.cpp b/Telegram/SourceFiles/media/streaming/media_streaming_video_track.cpp
index 6736255..ab53ed3 100644
--- a/Telegram/SourceFiles/media/streaming/media_streaming_video_track.cpp
+++ b/Telegram/SourceFiles/media/streaming/media_streaming_video_track.cpp
@@ -1141,13 +1141,13 @@ FrameWithInfo VideoTrack::frameWithInfo(const Instance *instance) {
 	const auto data = _shared->frameForPaintWithIndex();
 	const auto i = data.frame->prepared.find(instance);
 	const auto none = (i == data.frame->prepared.end());
-	if (none || i->second.request.requireARGB32) {
+/*	if (none || i->second.request.requireARGB32) {
 		_wrapped.with([=](Implementation &unwrapped) {
 			unwrapped.updateFrameRequest(
 				instance,
 				{ .requireARGB32 = false });
 		});
-	}
+	}*/
 	return {
 		.original = data.frame->original,
 		.yuv420 = &data.frame->yuv420,
diff --git a/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp b/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
index d09b6da..979668d 100644
--- a/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
+++ b/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
@@ -291,7 +291,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 		inner->add(result->ownedWidget(), st::paymentsFieldPadding);
 		return result;
 	};
-	_number = add({
+	_number = add(Ui::FieldConfig{
 		.type = FieldType::CardNumber,
 		.placeholder = tr::lng_payments_card_number(),
 		.validator = CardNumberValidator(),
@@ -301,12 +301,12 @@ not_null<RpWidget*> EditCard::setupContent() {
 			inner,
 			_number->widget()->height()),
 		st::paymentsFieldPadding);
-	_expire = make(container, {
+	_expire = make(container, Ui::FieldConfig{
 		.type = FieldType::CardExpireDate,
 		.placeholder = tr::lng_payments_card_expire_date(),
 		.validator = ExpireDateValidator(),
 	});
-	_cvc = make(container, {
+	_cvc = make(container, Ui::FieldConfig{
 		.type = FieldType::CardCVC,
 		.placeholder = tr::lng_payments_card_cvc(),
 		.validator = CvcValidator([=] { return _number->value(); }),
@@ -322,7 +322,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 	}, container->lifetime());
 
 	if (_native.needCardholderName) {
-		_name = add({
+		_name = add(Ui::FieldConfig{
 			.type = FieldType::Text,
 			.placeholder = tr::lng_payments_card_holder(),
 			.validator = CardHolderNameValidator(),
@@ -338,7 +338,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 			st::paymentsBillingInformationTitlePadding);
 	}
 	if (_native.needCountry) {
-		_country = add({
+		_country = add(Ui::FieldConfig{
 			.type = FieldType::Country,
 			.placeholder = tr::lng_payments_billing_country(),
 			.validator = RequiredFinishedValidator(),
@@ -347,7 +347,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 		});
 	}
 	if (_native.needZip) {
-		_zip = add({
+		_zip = add(Ui::FieldConfig{
 			.type = FieldType::Text,
 			.placeholder = tr::lng_payments_billing_zip_code(),
 			.validator = RequiredValidator(),
diff --git a/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp b/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
index ab96a8a..2d4e6ff 100644
--- a/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
+++ b/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
@@ -125,26 +125,26 @@ not_null<RpWidget*> EditInformation::setupContent() {
 		return result;
 	};
 	if (_invoice.isShippingAddressRequested) {
-		_street1 = add({
+		_street1 = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_street1(),
 			.value = _information.shippingAddress.address1,
 			.validator = RangeLengthValidator(1, kMaxStreetSize),
 		});
-		_street2 = add({
+		_street2 = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_street2(),
 			.value = _information.shippingAddress.address2,
 			.validator = MaxLengthValidator(kMaxStreetSize),
 		});
-		_city = add({
+		_city = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_city(),
 			.value = _information.shippingAddress.city,
 			.validator = RangeLengthValidator(kMinCitySize, kMaxCitySize),
 		});
-		_state = add({
+		_state = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_state(),
 			.value = _information.shippingAddress.state,
 		});
-		_country = add({
+		_country = add(Ui::FieldConfig{
 			.type = FieldType::Country,
 			.placeholder = tr::lng_payments_address_country(),
 			.value = _information.shippingAddress.countryIso2,
@@ -152,21 +152,21 @@ not_null<RpWidget*> EditInformation::setupContent() {
 			.showBox = showBox,
 			.defaultCountry = _information.defaultCountry,
 		});
-		_postcode = add({
+		_postcode = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_postcode(),
 			.value = _information.shippingAddress.postcode,
 			.validator = RangeLengthValidator(1, kMaxPostcodeSize),
 		});
 	}
 	if (_invoice.isNameRequested) {
-		_name = add({
+		_name = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_info_name(),
 			.value = _information.name,
 			.validator = RangeLengthValidator(1, kMaxNameSize),
 		});
 	}
 	if (_invoice.isEmailRequested) {
-		_email = add({
+		_email = add(Ui::FieldConfig{
 			.type = FieldType::Email,
 			.placeholder = tr::lng_payments_info_email(),
 			.value = _information.email,
@@ -174,7 +174,7 @@ not_null<RpWidget*> EditInformation::setupContent() {
 		});
 	}
 	if (_invoice.isPhoneRequested) {
-		_phone = add({
+		_phone = add(Ui::FieldConfig{
 			.type = FieldType::Phone,
 			.placeholder = tr::lng_payments_info_phone(),
 			.value = _information.phone,
diff --git a/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp b/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
index a9f27fe..704c94e 100644
--- a/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
+++ b/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
@@ -201,7 +201,7 @@ void EditInviteLinkBox(
 				: (state->expireValue < 0)
 				? (now - state->expireValue)
 				: (now + kDay);
-			ChooseDateTimeBox(box, {
+			ChooseDateTimeBox(box, Ui::ChooseDateTimeBoxArgs{
 				.title = tr::lng_group_invite_expire_after(),
 				.submit = tr::lng_settings_save(),
 				.done = save,
diff --git a/Telegram/SourceFiles/inline_bots/inline_bot_send_data.cpp b/Telegram/SourceFiles/inline_bots/inline_bot_send_data.cpp
index ad36bb4..2024006 100644
--- a/Telegram/SourceFiles/inline_bots/inline_bot_send_data.cpp
+++ b/Telegram/SourceFiles/inline_bots/inline_bot_send_data.cpp
@@ -70,9 +70,10 @@ SendDataCommon::SentMessageFields SendText::getSentMessageFields() const {
 }
 
 SendDataCommon::SentMessageFields SendGeo::getSentMessageFields() const {
+	SentMessageFields result;
 	if (_period) {
 		using Flag = MTPDmessageMediaGeoLive::Flag;
-		return { .media = MTP_messageMediaGeoLive(
+		result.media = MTP_messageMediaGeoLive(
 			MTP_flags((_heading ? Flag::f_heading : Flag(0))
 				| (_proximityNotificationRadius
 					? Flag::f_proximity_notification_radius
@@ -80,29 +81,35 @@ SendDataCommon::SentMessageFields SendGeo::getSentMessageFields() const {
 			_location.toMTP(),
 			MTP_int(_heading.value_or(0)),
 			MTP_int(*_period),
-			MTP_int(_proximityNotificationRadius.value_or(0))) };
+			MTP_int(_proximityNotificationRadius.value_or(0)));
+		return result;
 	}
-	return { .media = MTP_messageMediaGeo(_location.toMTP()) };
+	result.media = MTP_messageMediaGeo(_location.toMTP());
+	return result;
 }
 
 SendDataCommon::SentMessageFields SendVenue::getSentMessageFields() const {
+	SentMessageFields result;
 	const auto venueType = QString();
-	return { .media = MTP_messageMediaVenue(
+	result.media = MTP_messageMediaVenue(
 		_location.toMTP(),
 		MTP_string(_title),
 		MTP_string(_address),
 		MTP_string(_provider),
 		MTP_string(_venueId),
-		MTP_string(QString())) }; // venue_type
+		MTP_string(QString())); // venue_type
+	return result;
 }
 
 SendDataCommon::SentMessageFields SendContact::getSentMessageFields() const {
-	return { .media = MTP_messageMediaContact(
+	SentMessageFields result;
+	result.media = MTP_messageMediaContact(
 		MTP_string(_phoneNumber),
 		MTP_string(_firstName),
 		MTP_string(_lastName),
 		MTP_string(), // vcard
-		MTP_int(0)) }; // user_id
+		MTP_int(0)); // user_id
+	return result;
 }
 
 QString SendContact::getLayoutDescription(const Result *owner) const {
@@ -226,7 +233,9 @@ QString SendGame::getErrorOnSend(
 }
 
 SendDataCommon::SentMessageFields SendInvoice::getSentMessageFields() const {
-	return { .media = _media };
+	SentMessageFields result;
+	result.media = _media;
+	return result;
 }
 
 QString SendInvoice::getLayoutDescription(const Result *owner) const {
diff --git a/Telegram/SourceFiles/ui/toasts/common_toasts.h b/Telegram/SourceFiles/ui/toasts/common_toasts.h
index 7384c0a..12d4e17 100644
--- a/Telegram/SourceFiles/ui/toasts/common_toasts.h
+++ b/Telegram/SourceFiles/ui/toasts/common_toasts.h
@@ -16,9 +16,9 @@ class Instance;
 } // namespace Toast
 
 struct MultilineToastArgs {
-	QWidget *parentOverride = nullptr;
 	TextWithEntities text;
 	crl::time duration = 0;
+	QWidget *parentOverride = nullptr;
 };
 
 base::weak_ptr<Toast::Instance> ShowMultilineToast(
diff --git a/Telegram/SourceFiles/ui/widgets/separate_panel.cpp b/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
index ccc7559..2b37bc2 100644
--- a/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
+++ b/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
@@ -273,9 +273,9 @@ void SeparatePanel::showBox(
 }
 
 void SeparatePanel::showToast(const TextWithEntities &text) {
-	Ui::ShowMultilineToast({
-		.parentOverride = this,
+	Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 		.text = text,
+		.parentOverride = this,
 	});
 }
 
-- 
2.30.2

