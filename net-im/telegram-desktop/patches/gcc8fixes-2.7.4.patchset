From 29ee1327d94cdbae561fcd9b9a0b1207df6d5a94 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 29 Apr 2021 10:48:29 +1000
Subject: Workaround build issues on GCC8


diff --git a/Telegram/SourceFiles/calls/calls_group_panel.cpp b/Telegram/SourceFiles/calls/calls_group_panel.cpp
index caa7009..094994e 100644
--- a/Telegram/SourceFiles/calls/calls_group_panel.cpp
+++ b/Telegram/SourceFiles/calls/calls_group_panel.cpp
@@ -687,9 +687,9 @@ void Panel::initShareAction() {
 		_layerBg->showBox(std::move(next));
 	};
 	const auto showToast = [=](QString text) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = { text },
+			.parentOverride = widget(),
 		});
 	};
 	auto [shareLinkCallback, shareLinkLifetime] = ShareInviteLinkAction(
@@ -890,13 +890,13 @@ void Panel::setupJoinAsChangedToasts() {
 			return (state == State::Joined);
 		}) | rpl::take(1);
 	}) | rpl::flatten_latest() | rpl::start_with_next([=] {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = tr::lng_group_call_join_as_changed(
 				tr::now,
 				lt_name,
 				Ui::Text::Bold(_call->joinAs()->name),
 				Ui::Text::WithEntities),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 }
@@ -910,13 +910,13 @@ void Panel::setupTitleChangedToasts() {
 			? _peer->name
 			: _peer->groupCall()->title();
 	}) | rpl::start_with_next([=](const QString &title) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = tr::lng_group_call_title_changed(
 				tr::now,
 				lt_title,
 				Ui::Text::Bold(title),
 				Ui::Text::WithEntities),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 }
@@ -925,9 +925,9 @@ void Panel::setupAllowedToSpeakToasts() {
 	_call->allowedToSpeakNotifications(
 	) | rpl::start_with_next([=] {
 		if (isActive()) {
-			Ui::ShowMultilineToast({
-				.parentOverride = widget(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = { tr::lng_group_call_can_speak_here(tr::now) },
+				.parentOverride = widget(),
 				});
 		} else {
 			const auto real = _call->lookupReal();
@@ -962,9 +962,9 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 			const auto skip = st::groupCallRecordingMarkSkip;
 			_recordingMark->resize(size + 2 * skip, size + 2 * skip);
 			_recordingMark->setClickedCallback([=] {
-				Ui::ShowMultilineToast({
-					.parentOverride = widget(),
+				Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 					.text = { tr::lng_group_call_is_recorded(tr::now) },
+					.parentOverride = widget(),
 				});
 			});
 			const auto animate = [=] {
@@ -1001,8 +1001,7 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 	) | rpl::distinct_until_changed(
 	) | rpl::start_with_next([=](bool recorded) {
 		validateRecordingMark(recorded);
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = (recorded
 				? tr::lng_group_call_recording_started
 				: _call->recordingStoppedByMe()
@@ -1010,6 +1009,7 @@ void Panel::subscribeToChanges(not_null<Data::GroupCall*> real) {
 				: tr::lng_group_call_recording_stopped)(
 					tr::now,
 					Ui::Text::RichLangValue),
+			.parentOverride = widget(),
 		});
 	}, widget()->lifetime());
 	validateRecordingMark(real->recordStartDate() != 0);
@@ -1060,9 +1060,9 @@ void Panel::chooseJoinAs() {
 		_layerBg->showBox(std::move(next));
 	};
 	const auto showToast = [=](QString text) {
-		Ui::ShowMultilineToast({
-			.parentOverride = widget(),
+		Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 			.text = { text },
+			.parentOverride = widget(),
 		});
 	};
 	_joinAsProcess.start(
@@ -1157,23 +1157,23 @@ void Panel::addMembers() {
 		}
 		const auto result = call->inviteUsers(users);
 		if (const auto user = std::get_if<not_null<UserData*>>(&result)) {
-			Ui::ShowMultilineToast({
-				.parentOverride = widget(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = tr::lng_group_call_invite_done_user(
 					tr::now,
 					lt_user,
 					Ui::Text::Bold((*user)->firstName),
 					Ui::Text::WithEntities),
+				.parentOverride = widget(),
 			});
 		} else if (const auto count = std::get_if<int>(&result)) {
 			if (*count > 0) {
-				Ui::ShowMultilineToast({
-					.parentOverride = widget(),
+				Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 					.text = tr::lng_group_call_invite_done_many(
 						tr::now,
 						lt_count,
 						*count,
 						Ui::Text::RichLangValue),
+					.parentOverride = widget(),
 				});
 			}
 		} else {
diff --git a/Telegram/SourceFiles/calls/calls_group_settings.cpp b/Telegram/SourceFiles/calls/calls_group_settings.cpp
index 9ae8bbc..19eec41 100644
--- a/Telegram/SourceFiles/calls/calls_group_settings.cpp
+++ b/Telegram/SourceFiles/calls/calls_group_settings.cpp
@@ -534,9 +534,9 @@ void SettingsBox(
 			box->getDelegate()->show(std::move(next));
 		});
 		const auto showToast = crl::guard(box, [=](QString text) {
-			Ui::ShowMultilineToast({
-				.parentOverride = box->getDelegate()->outerContainer(),
+			Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 				.text = { text },
+				.parentOverride = box->getDelegate()->outerContainer(),
 			});
 		});
 		auto [shareLinkCallback, shareLinkLifetime] = ShareInviteLinkAction(
@@ -572,9 +572,9 @@ void SettingsBox(
 				}
 				QGuiApplication::clipboard()->setText(link);
 				if (weakBox) {
-					Ui::ShowMultilineToast({
-						.parentOverride = box->getDelegate()->outerContainer(),
+					Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 						.text = { tr::lng_create_channel_link_copied(tr::now) },
+						.parentOverride = box->getDelegate()->outerContainer(),
 					});
 				}
 				return true;
diff --git a/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp b/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
index 593c292..af8222a 100644
--- a/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_schedule_box.cpp
@@ -76,7 +76,7 @@ void ScheduleBox(
 		box->closeBox();
 		copy(result);
 	};
-	auto descriptor = Ui::ChooseDateTimeBox(box, {
+	auto descriptor = Ui::ChooseDateTimeBox(box, Ui::ChooseDateTimeBoxArgs{
 		.title = (type == SendMenu::Type::Reminder
 			? tr::lng_remind_title()
 			: tr::lng_schedule_title()),
diff --git a/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp b/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
index d09b6da..979668d 100644
--- a/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
+++ b/Telegram/SourceFiles/payments/ui/payments_edit_card.cpp
@@ -291,7 +291,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 		inner->add(result->ownedWidget(), st::paymentsFieldPadding);
 		return result;
 	};
-	_number = add({
+	_number = add(Ui::FieldConfig{
 		.type = FieldType::CardNumber,
 		.placeholder = tr::lng_payments_card_number(),
 		.validator = CardNumberValidator(),
@@ -301,12 +301,12 @@ not_null<RpWidget*> EditCard::setupContent() {
 			inner,
 			_number->widget()->height()),
 		st::paymentsFieldPadding);
-	_expire = make(container, {
+	_expire = make(container, Ui::FieldConfig{
 		.type = FieldType::CardExpireDate,
 		.placeholder = tr::lng_payments_card_expire_date(),
 		.validator = ExpireDateValidator(),
 	});
-	_cvc = make(container, {
+	_cvc = make(container, Ui::FieldConfig{
 		.type = FieldType::CardCVC,
 		.placeholder = tr::lng_payments_card_cvc(),
 		.validator = CvcValidator([=] { return _number->value(); }),
@@ -322,7 +322,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 	}, container->lifetime());
 
 	if (_native.needCardholderName) {
-		_name = add({
+		_name = add(Ui::FieldConfig{
 			.type = FieldType::Text,
 			.placeholder = tr::lng_payments_card_holder(),
 			.validator = CardHolderNameValidator(),
@@ -338,7 +338,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 			st::paymentsBillingInformationTitlePadding);
 	}
 	if (_native.needCountry) {
-		_country = add({
+		_country = add(Ui::FieldConfig{
 			.type = FieldType::Country,
 			.placeholder = tr::lng_payments_billing_country(),
 			.validator = RequiredFinishedValidator(),
@@ -347,7 +347,7 @@ not_null<RpWidget*> EditCard::setupContent() {
 		});
 	}
 	if (_native.needZip) {
-		_zip = add({
+		_zip = add(Ui::FieldConfig{
 			.type = FieldType::Text,
 			.placeholder = tr::lng_payments_billing_zip_code(),
 			.validator = RequiredValidator(),
diff --git a/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp b/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
index ab96a8a..2d4e6ff 100644
--- a/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
+++ b/Telegram/SourceFiles/payments/ui/payments_edit_information.cpp
@@ -125,26 +125,26 @@ not_null<RpWidget*> EditInformation::setupContent() {
 		return result;
 	};
 	if (_invoice.isShippingAddressRequested) {
-		_street1 = add({
+		_street1 = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_street1(),
 			.value = _information.shippingAddress.address1,
 			.validator = RangeLengthValidator(1, kMaxStreetSize),
 		});
-		_street2 = add({
+		_street2 = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_street2(),
 			.value = _information.shippingAddress.address2,
 			.validator = MaxLengthValidator(kMaxStreetSize),
 		});
-		_city = add({
+		_city = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_city(),
 			.value = _information.shippingAddress.city,
 			.validator = RangeLengthValidator(kMinCitySize, kMaxCitySize),
 		});
-		_state = add({
+		_state = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_state(),
 			.value = _information.shippingAddress.state,
 		});
-		_country = add({
+		_country = add(Ui::FieldConfig{
 			.type = FieldType::Country,
 			.placeholder = tr::lng_payments_address_country(),
 			.value = _information.shippingAddress.countryIso2,
@@ -152,21 +152,21 @@ not_null<RpWidget*> EditInformation::setupContent() {
 			.showBox = showBox,
 			.defaultCountry = _information.defaultCountry,
 		});
-		_postcode = add({
+		_postcode = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_address_postcode(),
 			.value = _information.shippingAddress.postcode,
 			.validator = RangeLengthValidator(1, kMaxPostcodeSize),
 		});
 	}
 	if (_invoice.isNameRequested) {
-		_name = add({
+		_name = add(Ui::FieldConfig{
 			.placeholder = tr::lng_payments_info_name(),
 			.value = _information.name,
 			.validator = RangeLengthValidator(1, kMaxNameSize),
 		});
 	}
 	if (_invoice.isEmailRequested) {
-		_email = add({
+		_email = add(Ui::FieldConfig{
 			.type = FieldType::Email,
 			.placeholder = tr::lng_payments_info_email(),
 			.value = _information.email,
@@ -174,7 +174,7 @@ not_null<RpWidget*> EditInformation::setupContent() {
 		});
 	}
 	if (_invoice.isPhoneRequested) {
-		_phone = add({
+		_phone = add(Ui::FieldConfig{
 			.type = FieldType::Phone,
 			.placeholder = tr::lng_payments_info_phone(),
 			.value = _information.phone,
diff --git a/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp b/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
index a9f27fe..704c94e 100644
--- a/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
+++ b/Telegram/SourceFiles/ui/boxes/edit_invite_link.cpp
@@ -201,7 +201,7 @@ void EditInviteLinkBox(
 				: (state->expireValue < 0)
 				? (now - state->expireValue)
 				: (now + kDay);
-			ChooseDateTimeBox(box, {
+			ChooseDateTimeBox(box, Ui::ChooseDateTimeBoxArgs{
 				.title = tr::lng_group_invite_expire_after(),
 				.submit = tr::lng_settings_save(),
 				.done = save,
diff --git a/Telegram/SourceFiles/ui/toasts/common_toasts.h b/Telegram/SourceFiles/ui/toasts/common_toasts.h
index ebf1efe..33b1db0 100644
--- a/Telegram/SourceFiles/ui/toasts/common_toasts.h
+++ b/Telegram/SourceFiles/ui/toasts/common_toasts.h
@@ -12,9 +12,9 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 namespace Ui {
 
 struct MultilineToastArgs {
-	QWidget *parentOverride = nullptr;
 	TextWithEntities text;
 	crl::time duration = 0;
+	QWidget *parentOverride = nullptr;
 };
 
 void ShowMultilineToast(MultilineToastArgs &&args);
diff --git a/Telegram/SourceFiles/ui/widgets/separate_panel.cpp b/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
index ccc7559..2b37bc2 100644
--- a/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
+++ b/Telegram/SourceFiles/ui/widgets/separate_panel.cpp
@@ -273,9 +273,9 @@ void SeparatePanel::showBox(
 }
 
 void SeparatePanel::showToast(const TextWithEntities &text) {
-	Ui::ShowMultilineToast({
-		.parentOverride = this,
+	Ui::ShowMultilineToast(Ui::MultilineToastArgs{
 		.text = text,
+		.parentOverride = this,
 	});
 }
 
-- 
2.30.2

