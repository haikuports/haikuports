SUMMARY="Ultima 7 game engine that runs on modern operating systems"
DESCRIPTION="As computers evolve, we risk losing classic games from the not-so-distant past. One \
of these, Ultima VII, a two part RPG from the early 1990's, still has a huge following, and many \
consider it to be one of the most immersive games ever produced.
Exult is a project to recreate Ultima VII for modern operating systems, using the game's original \
plot, data, and graphics files.

For Haiku:
Users should install the game data to ~/config/non-packaged/data/exult to be able to play the game."
HOMEPAGE="https://exult.sourceforge.io/"
COPYRIGHT="2022 The Exult Team"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="http://prdownloads.sourceforge.net/exult/exult-$portVersion.tar.gz"
CHECKSUM_SHA256="dae6b7b08925d3db1dda3aca612bdc08d934ca04de817a008f305320e667faf9"
SOURCE_URI_2="http://downloads.sourceforge.net/exult/exult_audio.zip"
CHECKSUM_SHA256_2="72e10efa8664a645470ceb99f6b749ce99c3d5fd1c8387c63640499cfcdbbc68"
PATCHES="exult-$portVersion.patchset"
ADDITIONAL_FILES="exult.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	exult$secondaryArchSuffix = $portVersion
	cmd:cmanip$commandSuffix = $portVersion
	cmd:expack$commandSuffix = $portVersion
	cmd:exult$commandSuffix = $portVersion
#	cmd:exult_studio$commandSuffix = $portVersion
	cmd:ipack$commandSuffix = $portVersion
	cmd:mklink$commandSuffix = $portVersion
	cmd:rip$commandSuffix = $portVersion
	cmd:shp2pcx$commandSuffix = $portVersion
	cmd:splitshp$commandSuffix = $portVersion
	cmd:textpack$commandSuffix = $portVersion
	cmd:u7voice2syx$commandSuffix = $portVersion
	cmd:ucxt$commandSuffix = $portVersion
	cmd:wuc$commandSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
#	lib:libatk_1.0$secondaryArchSuffix
#	lib:libcairo$secondaryArchSuffix
#	lib:libcairo_gobject$secondaryArchSuffix
	lib:libfluidsynth$secondaryArchSuffix
#	lib:libgdk_3$secondaryArchSuffix
#	lib:libgdk_pixbuf_2.0$secondaryArchSuffix
#	lib:libgio_2.0$secondaryArchSuffix
#	lib:libglib_2.0$secondaryArchSuffix
#	lib:libgobject_2.0$secondaryArchSuffix
#	lib:libharfbuzz$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
#	lib:libpango_1.0$secondaryArchSuffix
#	lib:libpangocairo_1.0$secondaryArchSuffix
#	lib:libpng16$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libogg$secondaryArchSuffix
	lib:libvorbis$secondaryArchSuffix
	lib:libvorbisfile$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libfluidsynth$secondaryArchSuffix
#	devel:libgdk_3$secondaryArchSuffix
#	devel:libgdk_pixbuf_2.0$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libogg$secondaryArchSuffix
	devel:libvorbis$secondaryArchSuffix
	devel:libvorbisfile$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:autoconf
	cmd:automake
	cmd:gcc$secondaryArchSuffix
	cmd:libtool$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	./autogen.sh
	runConfigure --omit-dirs binDir ./configure \
			--bindir=$commandBinDir #--enable-exult-studio
	make $jobArgs
}


INSTALL()
{
	make install

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local APP_NAME="Exult"
	local LONG_INFO="$SUMMARY"
	local APP_SIGNATURE="application/x-vnd.exult"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		-e "s|@APP_NAME@|$APP_NAME|" \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		$portDir/additional-files/exult.rdef.in > exult.rdef

	addResourcesToBinaries exult.rdef $commandBinDir/exult

	# install music pack
	mkdir -p $dataDir/exult/music
	cp $sourceDir2/*.flx $dataDir/exult
	cp $sourceDir2/*.txt $dataDir/exult
	cp $sourceDir2/music/*.ogg $dataDir/exult/music

	# we are not linux
	rm -rf $dataDir/{applications,icons}

	# create Deskbar links
	addAppDeskbarSymlink $commandBinDir/exult Exult
#	addAppDeskbarSymlink $commandBinDir/exult_studio "Exult Studio"
}
