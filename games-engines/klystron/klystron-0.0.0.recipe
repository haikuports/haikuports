HOMEPAGE="https://github.com/kometbomb/klystron/"
SUMMARY="Framework designed for remaking Thrust"
DESCRIPTION="This is a simple framework designed for remaking Thrust, the best \
game that was ever created.

So far the biggest project using the framework is klystrack, a chiptune \
tracker that uses the klystron sound engine for great success.

Some selling points:

* Sound synthesis for music and effects
* Low system requirements (the audio engine uses about 20 % CPU time on a 366 MHz Dingoo, at 22 Khz)
* Pixel-accurate sprite-sprite and sprite-background collision checking
* C99 (GNU99)
* SDL
* GUI stuff for simple mouse control

In short: the feature set is something that could be found inside an generic \
video game console circa 1991. The API is relatively simple, yet uses some \
(stupid) tricks. The main goal is to provide pixel-accurate collisions which \
is a very important feature for a thrustlike game. The synth and the music \
routine are thrown in just for fun.
"

SOURCE_URI="git+https://github.com/kometbomb/klystron.git#2ba7342c1a0a5af36e027bc0f9019d347040edcf"
REVISION="1"
LICENSE="MIT"
COPYRIGHT="2009-2015 Tero Lindeman (kometbomb)"

ARCHITECTURES="!x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	klystron$secondaryArchSuffix = $portVersion
	devel:libengine_gfx$secondaryArchSuffix
	devel:libengine_gui$secondaryArchSuffix
	devel:libengine_snd$secondaryArchSuffix
	devel:libengine_util$secondaryArchSuffix
"

BUILD_REQUIRES="
	devel:libsdl2$secondaryArchSuffix
	devel:libsdl2_mixer$secondaryArchSuffix
	haiku${secondaryArchSuffix}_devel
"

BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:make
"

BUILD()
{
	make
}

INSTALL()
{
	mkdir -p $libDir
	cp bin.debug/*.a $libDir
	prepareInstalledDevelLibs libengine_gfx libengine_gui libengine_snd \
		libengine_util

	mkdir -p $includeDir
	cp src/*.h $includeDir

	mkdir -p $includeDir/gfx
	cp src/gfx/*.h $includeDir/gfx

	mkdir -p $includeDir/gui
	cp src/gui/*.h $includeDir/gui

	mkdir -p $includeDir/snd
	cp src/snd/*.h $includeDir/snd

	mkdir -p $includeDir/util
	cp src/util/*.h $includeDir/util

}
