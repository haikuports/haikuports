SUMMARY="An infinite game engine generator"
DESCRIPTION="GemRB (Game Engine Made with preRendered Background) \
is a port (actually a new implementation) of the original Infinity \
Engine (the one of Baldur's Gate, Icewind Dale, Planescape: Torment, ...) \
to Linux/Unix, MacOS X and Windows with some enhancements. Would \
you like to create a game like Baldur's Gate? \
(Originals games' data is not included)"
HOMEPAGE="https://gemrb.org"
COPYRIGHT="2003-2024 The GemRB Team"
LICENSE="MIT"
REVISION="1"

SOURCE_URI="https://github.com/gemrb/gemrb/archive/refs/tags/v$portVersion.tar.gz"
CHECKSUM_SHA256="71bb16a77b84cd873d5582af675357c0cb94bbc64d54fac2e3397b366ac2adde"
SOURCE_FILENAME="v$portVersion.tar.gz"
ADDITIONAL_FILES="
	gemrb.rdef
	GemRB.cfg
	cmake_install.cmake
	"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="!x86"

GLOBAL_WRITABLE_FILES="
	settings/gemrb/GemRB.cfg keep-old
	"

PROVIDES="
	gemrb$secondaryArchSuffix = $portVersion
	cmd:extend2da.py$secondaryArchSuffix = $portVersion
	cmd:gemrb$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libogg$secondaryArchSuffix
	lib:libopenal$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libSDL2_mixer_2.0$secondaryArchSuffix
	lib:libvorbis$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libfreetype$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libogg$secondaryArchSuffix
	devel:libopenal$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libSDL2_mixer_2.0$secondaryArchSuffix
	devel:libvorbis$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:python3
	"

defineDebugInfoPackage gemrb$secondaryArchSuffix \
	"$binDir"/gemrb

PATCH()
{
	sed -i 's,\/usr/bin/python,\/usr/bin/python3,g' admin/extend2da.py
}
BUILD()
{
	sdlheaderdir=$(finddir B_SYSTEM_HEADERS_DIRECTORY)/SDL2
	
	mkdir -p build

	# Hack part 1
	cp admin/extend2da.py build/

	cd build

	cmake .. \
		$cmakeDirArgs \
		-Wno-dev \
		-DCMAKE_BUILD_TYPE=Release \
		-DDATA_DIR=$dataDir/gemrb \
		-DMAN_DIR=$manDir/man6 \
		-DSYSCONF_DIR=$settingsDir/gemrb \
		-DDOC_DIR=$documentationDir/gemrb \
		-DSDL2_INCLUDE_DIR=$sdlheaderdir \
		-DSDL2_MIXER_INCLUDE_DIR=$sdlheaderdir

	# Hack part 2
	cp -f $portDir/additional-files/cmake_install.cmake .
	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	# Replace generic cfg files with a Haiku-specific one
	rm -r $settingsDir/gemrb
	mkdir -p $settingsDir/gemrb
	cp $portDir/additional-files/GemRB.cfg $settingsDir/gemrb

	addResourcesToBinaries $portDir/additional-files/gemrb.rdef $binDir/gemrb
	addAppDeskbarSymlink $binDir/gemrb "GemRB"
}
