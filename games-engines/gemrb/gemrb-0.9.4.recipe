SUMMARY="An Infinity Engine Emulator"
DESCRIPTION="GemRB (Game Engine Made with preRendered Background) \
is a new implementation of the original Infinity Engine \
(used in Baldur's Gate, Icewind Dale, Planescape: Torment etc.) \
to Linux/Unix, MacOS X, Windows (and Haiku) with some enhancements.
Original games' data is not included.

Haiku specific paths:
* /boot/system/settings/gemrb is where 'GemRB.cfg' is stored, edit this configuration file \
to point GemRB to the data of the game you want to play and to customize your GemRB setup.
* ~/config/settings/gemrb is the default folder for saves
* ~/config/cache/gemrb is the default folder for GemRB's log and temporary files"
HOMEPAGE="https://gemrb.org/"
COPYRIGHT="2003-2025 The GemRB Team"
LICENSE="MIT"
REVISION="2"
SOURCE_URI="https://github.com/gemrb/gemrb/archive/refs/tags/v$portVersion.tar.gz"
CHECKSUM_SHA256="2cb39244945d1e5ec885c4040892eea1efb6d7b183ade36f4ab2e852778e401f"
SOURCE_FILENAME="v$portVersion.tar.gz"
PATCHES="gemrb-$portVersion.patchset"
ADDITIONAL_FILES="
	gemrb.rdef.in
	gemrb-postinstall.sh
	"
POST_INSTALL_SCRIPTS="$relativePostInstallDir/gemrb-postinstall.sh"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

GLOBAL_WRITABLE_FILES="
	settings/gemrb/GemRB.cfg keep-old
	"
USER_SETTINGS_FILES="
	settings/gemrb directory
	"

PROVIDES="
	gemrb$secondaryArchSuffix = $portVersion
	cmd:extend2da.py = $portVersion
	cmd:gemrb = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libogg$secondaryArchSuffix
	lib:libopenal$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libSDL2_mixer_2.0$secondaryArchSuffix
	lib:libvorbis$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libfreetype$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libogg$secondaryArchSuffix
	devel:libopenal$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libSDL2_mixer_2.0$secondaryArchSuffix
	devel:libvorbis$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:python3
	"

BUILD()
{
	mkdir -p build
	cd build

	cmake .. \
		-Wno-dev \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$prefix \
		-DBIN_DIR=$prefix/bin \
		-DDATA_DIR=$dataDir/gemrb \
		-DMAN_DIR=$manDir/man6 \
		-DSYSCONF_DIR=$settingsDir/gemrb \
		-DDOC_DIR=$docDir

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	# Remove leftover CMake file
	rm -f $dataDir/gemrb/override/bg1/CMakeLists.txt

	# Remove extra cfg files and setup Haiku-specific config
	rm -f $settingsDir/gemrb/GemRB.cfg.{sample,noinstall.sample}

	# Edit Cache path
	cachedir=$(finddir B_USER_CACHE_DIRECTORY)/gemrb
	sed -i "s,.\/Cache2/,${cachedir},g" $settingsDir/gemrb/GemRB.cfg

	# Edit Save path
	savedir=$(finddir B_USER_SETTINGS_DIRECTORY)/gemrb
	sed -i "s,#SavePath=\/mnt/windows/Programmi/Black Isle/BGII - SoA/,SavePath=${savedir},g" $settingsDir/gemrb/GemRB.cfg

	# Generate the rdef
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/gemrb.rdef.in > gemrb.rdef

	# Setup post-install script (to prevent issues with save and cache paths)
	mkdir -p $postInstallDir
	cp $portDir/additional-files/gemrb-postinstall.sh $postInstallDir
	chmod +x $postInstallDir/gemrb-postinstall.sh

	addResourcesToBinaries gemrb.rdef $prefix/bin/gemrb
	addAppDeskbarSymlink $prefix/bin/gemrb "GemRB"
}
