From 8e3c9607a983f6c07577f88e8e87dd7956e1307b Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 25 Jan 2025 10:12:50 +0100
Subject: Haiku patch


diff --git a/backends/platform/sdl/posix/posix.cpp b/backends/platform/sdl/posix/posix.cpp
index f2330f7..979dca9 100644
--- a/backends/platform/sdl/posix/posix.cpp
+++ b/backends/platform/sdl/posix/posix.cpp
@@ -379,13 +379,13 @@ bool OSystem_POSIX::displayLogFile() {
 		return false;
 	} else if (pid == 0) {
 
-		// Try xdg-open first
-		execlp("xdg-open", "xdg-open", _logFilePath.toString(Common::Path::kNativeSeparator).c_str(), (char *)0);
+		// Try open first
+		execlp("open", "open", _logFilePath.toString(Common::Path::kNativeSeparator).c_str(), (char *)0);
 
 		// If we're here, that clearly failed.
 
 		// TODO: We may also want to try detecting the case where
-		// xdg-open is successfully executed but returns an error code.
+		// open is successfully executed but returns an error code.
 
 		// Try xterm+less next
 
@@ -401,7 +401,7 @@ bool OSystem_POSIX::displayLogFile() {
 
 	int status;
 	// Wait for viewer to close.
-	// (But note that xdg-open may have spawned a viewer in the background.)
+	// (But note that open may have spawned a viewer in the background.)
 
 	// FIXME: We probably want the viewer to always open in the background.
 	// This may require installing a SIGCHLD handler.
@@ -420,7 +420,7 @@ bool OSystem_POSIX::openUrl(const Common::String &url) {
 	// inspired by Qt's "qdesktopservices_x11.cpp"
 
 	// try "standards"
-	if (launchBrowser("xdg-open", url))
+	if (launchBrowser("open", url))
 		return true;
 	if (launchBrowser(getenv("DEFAULT_BROWSER"), url))
 		return true;
diff --git a/backends/saves/posix/posix-saves.cpp b/backends/saves/posix/posix-saves.cpp
index b8b3932..a5f329c 100644
--- a/backends/saves/posix/posix-saves.cpp
+++ b/backends/saves/posix/posix-saves.cpp
@@ -25,6 +25,10 @@
 #define FORBIDDEN_SYMBOL_EXCEPTION_time_h	//On IRIX, sys/stat.h includes sys/time.h
 #define FORBIDDEN_SYMBOL_EXCEPTION_mkdir
 #define FORBIDDEN_SYMBOL_EXCEPTION_getenv
+#define FORBIDDEN_SYMBOL_EXCEPTION_chdir
+#define FORBIDDEN_SYMBOL_EXCEPTION_getcwd
+#define FORBIDDEN_SYMBOL_EXCEPTION_unlink
+
 
 #include "common/scummsys.h"
 
@@ -41,6 +45,9 @@
 #include "common/textconsole.h"
 
 #include <sys/stat.h>
+#if defined(HAIKU)
+#include <FindDirectory.h>
+#endif
 
 POSIXSaveFileManager::POSIXSaveFileManager() {
 	// Register default savepath.
@@ -52,6 +59,13 @@ POSIXSaveFileManager::POSIXSaveFileManager() {
 		savePath.joinInPlace("Savegames");
 		ConfMan.registerDefault("savepath", savePath);
 	}
+#elif defined(HAIKU)
+	char buffer[B_PATH_NAME_LENGTH+B_FILE_NAME_LENGTH];
+	if (find_directory(B_USER_SETTINGS_DIRECTORY, -1, false, buffer, sizeof(buffer)) != B_OK)
+		strlcpy(buffer, "/boot/home/config/settings", sizeof(buffer));
+	savePath = buffer;
+	savePath.joinInPlace("scummvm/saves");
+	ConfMan.registerDefault("savepath", savePath);
 #else
 	const char *envVar;
 
diff --git a/configure b/configure
index a9b2525..8abda06 100755
--- a/configure
+++ b/configure
@@ -3284,6 +3284,7 @@ EOF
 		fi
 		;;
 	haiku*)
+		append_var DEFINES "-DHAIKU"
 		append_var DEFINES "-DSYSTEM_NOT_SUPPORTING_D_TYPE"
 		append_var DEFINES "-D_GNU_SOURCE"
 		# Needs -lnetwork for the timidity MIDI driver
-- 
2.48.1


From 5dee27721596cd087c42db55099ed7812a334ce9 Mon Sep 17 00:00:00 2001
From: Luc Schrijvers <begasus@gmail.com>
Date: Tue, 13 May 2025 10:40:18 +0200
Subject: Fix conflicting int types


diff --git a/common/scummsys.h b/common/scummsys.h
index 397e46d..ce3a169 100644
--- a/common/scummsys.h
+++ b/common/scummsys.h
@@ -505,6 +505,12 @@
 	 */
 	typedef unsigned long uint32;
 	typedef signed long int32;
+#elif defined(__HAIKU__)
+	/**
+	 * Without this, we get conflicting declaration errors on Haiku 32bit
+	 * For 64bit this doesn't change much
+	 */
+	#include <SupportDefs.h>
 #else
 	typedef uint32_t uint32;
 	typedef int32_t int32;
-- 
2.48.1

