SUMMARY="Open source reimplementation of TES III: Morrowind"
DESCRIPTION="OpenMW is a new and modern engine based on the one that runs the \
2002 open-world RPG Morrowind. The engine (OpenMW) will come with its own editor \
(OpenCS) which will allow the user to edit or create their own games. Both OpenCS \
and OpenMW are written from scratch and arenâ€™t made to support any third party \
programs the original Morrowind engine uses to improve its functionality."
HOMEPAGE="https://openmw.org/"
COPYRIGHT="2008-2021 OpenMW"
LICENSE="GNU GPL v3
	MIT
	Zlib"
REVISION="3"
SOURCE_URI="https://github.com/OpenMW/openmw/archive/refs/tags/openmw-$portVersion.tar.gz"
SOURCE_FILENAME="openmw-$portVersion.tar.gz"
CHECKSUM_SHA256="bd7f77e1527c2180e9b0dfcbe401d6fb48f24dbb37701dac7747697873d6edb4"
SOURCE_DIR="openmw-openmw-$portVersion"
PATCHES="openmw-$portVersion.patchset"
ADDITIONAL_FILES="
	openmw.rdef.in
	haikuicons.zip
	"

ARCHITECTURES="all !x86_gcc2"
if [ "$targetArchitecture" = x86_gcc2 ]; then
SECONDARY_ARCHITECTURES="x86"
fi

PROVIDES="
	openmw$secondaryArchSuffix = $portVersion
	app:OpenMW$secondaryArchSuffix = $portVersion
	app:OpenMW_Launcher$secondaryArchSuffix = $portVersion
	app:OpenMW_Wizard$secondaryArchSuffix = $portVersion
	app:OpenMW_CS$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
	lib:libboost_filesystem$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_program_options$secondaryArchSuffix
	lib:libBulletCollision$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libGLU$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libLinearMath$secondaryArchSuffix
	lib:liblz4$secondaryArchSuffix
	lib:libMyGUIEngine$secondaryArchSuffix
	lib:libopenal$secondaryArchSuffix
	lib:libOpenThreads$secondaryArchSuffix
	lib:libosg$secondaryArchSuffix
	lib:libosgAnimation$secondaryArchSuffix
	lib:libosgDB$secondaryArchSuffix
	lib:libosgFX$secondaryArchSuffix
	lib:libosgGA$secondaryArchSuffix
	lib:libosgParticle$secondaryArchSuffix
	lib:libosgShadow$secondaryArchSuffix
	lib:libosgText$secondaryArchSuffix
	lib:libosgUtil$secondaryArchSuffix
	lib:libosgViewer$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libSDL2_image_2.0$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libunshield$secondaryArchSuffix
	lib:libxml2$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libavcodec$secondaryArchSuffix
	devel:libavformat$secondaryArchSuffix
	devel:libavutil$secondaryArchSuffix
	devel:libboost_filesystem$secondaryArchSuffix >= 1.83.0
	devel:libboost_system$secondaryArchSuffix >= 1.83.0
	devel:libboost_program_options$secondaryArchSuffix >= 1.83.0
	devel:libBulletCollision$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libGL$secondaryArchSuffix
	devel:libGLU$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libLinearMath$secondaryArchSuffix
	devel:liblz4$secondaryArchSuffix
	devel:libMyGUIEngine$secondaryArchSuffix
	devel:libopenal$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libosg$secondaryArchSuffix
	devel:libQt5Gui$secondaryArchSuffix
	devel:libQt5Widgets$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libSDL2_image_2.0$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libunshield$secondaryArchSuffix
	devel:libxml2$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:git
	cmd:lrelease$secondaryArchSuffix >= 5
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:zip
	"

PATCH()
{
	unzip -o $sourceDir/../../additional-files/haikuicons.zip -d $sourceDir
}

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$appsDir/OpenMW \
		-DBUILD_BSATOOL=ON \
		-DBUILD_DOCS=OFF \
		-DBUILD_ESMTOOL=OFF \
		-DBUILD_LAUNCHER=ON \
		-DBUILD_NIFTEST=OFF \
		-DBUILD_OPENCS=ON \
		-DBUILD_UNITTESTS=OFF \
		-DBUILD_WIZARD=ON \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	mv -f $appsDir/OpenMW/games/openmw/* $appsDir/OpenMW
	rm -rf $appsDir/OpenMW/{applications,data,games,include,licenses,lib/pkgconfig,metainfo,pixmaps}

	# capitalize application names
	mv $appsDir/OpenMW/openmw $appsDir/OpenMW/OpenMW
	mv $appsDir/OpenMW/openmw-launcher $appsDir/OpenMW/OpenMW-Launcher
	mv $appsDir/OpenMW/openmw-wizard $appsDir/OpenMW/OpenMW-Wizard
	mv $appsDir/OpenMW/openmw-cs $appsDir/OpenMW/OpenMW-CS

	local APP_SIGNATURE="application/x-vnd.openmw"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3 | cut -d~ -f1`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/openmw.rdef.in > $sourceDir/build/openmw.rdef
	addResourcesToBinaries  $sourceDir/build/openmw.rdef $appsDir/OpenMW/OpenMW

	local APP_SIGNATURE="application/x-vnd.openmw-launcher"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/openmw.rdef.in > $sourceDir/build/openmw-launcher.rdef
	addResourcesToBinaries  $sourceDir/build/openmw-launcher.rdef $appsDir/OpenMW/OpenMW-Launcher

	local APP_SIGNATURE="application/x-vnd.openmw-cs"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/openmw.rdef.in > $sourceDir/build/openmw-cs.rdef
	addResourcesToBinaries  $sourceDir/build/openmw-cs.rdef $appsDir/OpenMW/OpenMW-CS

	local APP_SIGNATURE="application/x-vnd.openmw-wizard"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/openmw.rdef.in > $sourceDir/build/openmw-wizard.rdef
	addResourcesToBinaries  $sourceDir/build/openmw-wizard.rdef $appsDir/OpenMW/OpenMW-Wizard
	mimeset -f $appsDir/OpenMW/OpenMW-Launcher

	addAppDeskbarSymlink $appsDir/OpenMW/OpenMW-Launcher Morrowind
}
