SUMMARY="Fast read-only squashfs implementation written in C"
DESCRIPTION="squashfs is an open and free compressed read-only filesystem. \
It is used in embedded devices, live-CDs, or in packaging. The original implementation \
resides in the linux kernel, but there are also userspace implementations.

This project provides a userspace implementation of the squashfs filesystem containing a \
set of command line tools and a C library.

Example usage:

> mkdir /Squashy
> mount -t userlandfs -o \"sqshfs ~/foobar.sqfs /Squashy\" /Squashy
"
HOMEPAGE="https://github.com/Gottox/sqsh-tools/"
COPYRIGHT="2002-2023 Phillip Lougher"
LICENSE="BSD (2-clause)"
REVISION="1"
SOURCE_URI="https://github.com/Gottox/sqsh-tools/releases/download/v$portVersion/sqsh-tools-$portVersion.tar.xz"
CHECKSUM_SHA256="5f8819e2971d82773f6d0602c5fb969f9490e654212c6fa2d49146ce373a4cdc"
SOURCE_DIR="sqsh-tools-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandBinDir=$prefix/bin
	commandSuffix=
fi

#libVersion="$portVersion"
#libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	sqsh_tools$secondaryArchSuffix = $portVersion
	cmd:sqsh_cat$commandSuffix = $portVersion
	cmd:sqsh_ls$commandSuffix = $portVersion
	cmd:sqsh_stat$commandSuffix = $portVersion
	cmd:sqsh_unpack$commandSuffix = $portVersion
	cmd:sqsh_xattr$commandSuffix = $portVersion
	lib:libsqsh$commandSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	userland_fs
#	lib:libcurl4$secondaryArchSuffix
	lib:liblz4$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:liblz4$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	lib:libzstd$secondaryArchSuffix
	"

PROVIDES_devel="
	sqsh_tools${secondaryArchSuffix}_devel = $libVersionCompat
	devel:libsqsh$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	sqsh_tools$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	userland_fs
#	devel:libcurl4$secondaryArchSuffix # for direct access to remote files without fully downloading them.
	devel:liblz4$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:liblz4$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	devel:libzstd$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:meson
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
#	meson setup	build --reconfigure --buildtype=release \
	meson setup	build --buildtype=release \
		--prefix=$prefix \
		--includedir=$includeDir \
		--libdir=$libDir \
		-D fuse-old=enabled
	cd build
	meson compile
}

INSTALL()
{
	cd build
	meson install

	# Remove static library
	rm $libDir/libsqsh.a

	prepareInstalledDevelLib libsqsh
	fixPkgconfig

	# devel package
	packageEntries devel \
		$developDir \
		$documentationDir

	mkdir -p $prefix/add-ons/userlandfs
	mv $binDir/sqshfs $prefix/add-ons/userlandfs/sqshfs
}
