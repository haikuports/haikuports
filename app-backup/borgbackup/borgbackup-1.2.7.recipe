SUMMARY="Backup program with compression and authenticated encryption"
DESCRIPTION="BorgBackup (short: Borg) is a deduplicating backup program for the \
commandline. Optionally, it supports compression and authenticated encryption.

The main goal of Borg is to provide an efficient and secure way to backup data. The \
data deduplication technique used makes Borg suitable for daily backups since only \
changes are stored.
The authenticated encryption technique makes it suitable for backups to not fully \
trusted targets."
HOMEPAGE="https://www.borgbackup.org/"
COPYRIGHT="2015-2023 The Borg Collective
	2010-2014 Jonas Borgstr√∂m"
LICENSE="BSD (3-clause)"
REVISION="1"
SOURCE_URI="https://github.com/borgbackup/borg/archive/refs/tags/$portVersion.tar.gz"
CHECKSUM_SHA256="fe1ae4b7de6d923b164ad2adebcbd6f8624b04b1d72344e0e88082e1b8c0087c"
SOURCE_FILENAME="borgbackup-$portVersion.tar.gz"
SOURCE_DIR="borg-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

pythonVersion="3.10"
pythonPackage="python310"

PROVIDES="
	$portName = $portVersion
	cmd:borg
	cmd:borgfs
	"
REQUIRES="
	haiku$secondaryArchSuffix
	argon2_cffi_bindings_$pythonPackage
	cffi_$pythonPackage
	msgpack_$pythonPackage
	packaging_$pythonPackage
	lib:libargon2$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libdeflate$secondaryArchSuffix
	lib:libffi$secondaryArchSuffix
	lib:liblz4$secondaryArchSuffix
	lib:libxxhash$secondaryArchSuffix
	lib:libzstd$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcrypto$secondaryArchSuffix
	devel:libdeflate$secondaryArchSuffix
	devel:liblz4$secondaryArchSuffix
	devel:libxxhash$secondaryArchSuffix
	devel:libzstd$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	python_pkgconfig_$pythonPackage
	setuptools_scm_$pythonPackage
	wheel_$pythonPackage
	cmd:cython$pythonVersion
	cmd:gcc$secondaryArchSuffix
	cmd:git
	cmd:pip$pythonVersion
	cmd:pkg_config$secondaryArchSuffix
	cmd:python$pythonVersion
	"

SETUPTOOLS_SCM_PRETEND_VERSION=$portVersion
export SETUPTOOLS_SCM_PRETEND_VERSION

INSTALL()
{
	installLocation=$prefix/lib/python$pythonVersion/vendor-packages/
	export PYTHONPATH=$installLocation:$PYTHONPATH
	mkdir -p $installLocation
	python$pythonVersion setup.py build install \
		--root=/ --prefix=$prefix
}
