SUMMARY="Smart and easy to use C++ SQLite3 wrapper"
DESCRIPTION="SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with a few intuitive and well documented C++ classes."
HOMEPAGE="https://srombauts.github.io/SQLiteCpp/"
COPYRIGHT="2012-2024 SÃ©bastien Rombauts"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://github.com/SRombauts/SQLiteCpp/archive/refs/tags/$portVersion.tar.gz"
CHECKSUM_SHA256="5aa8eda130d0689bd5ed9b2074714c2dbc610f710483c61ba6cf944cebfe03af"
SOURCE_DIR="SQLiteCpp-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	sqlitecpp$secondaryArchSuffix = $portVersion
	lib:libsqlitecpp$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libsqlite3$secondaryArchSuffix
	"

PROVIDES_devel="
	sqlitecpp${secondaryArchSuffix}_devel = $portVersion
	devel:libsqlitecpp$secondaryArchSuffix
	"
REQUIRES_devel="
	haiku${secondaryArchSuffix}_devel
	sqlitecpp$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libsqlite3$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:cppcheck # Optional
	cmd:gcc$secondaryArchSuffix
	cmd:make
	cmd:python3 # Optional
	"

BUILD()
{
	cmake -Bbuild -S. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DBUILD_SHARED_LIBS=ON \
		-DSQLITECPP_INTERNAL_SQLITE=OFF

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLib libSQLiteCpp

	# devel package
	packageEntries devel \
		$developDir \
		$libDir/cmake
}
