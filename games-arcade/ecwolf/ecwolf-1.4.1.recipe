SUMMARY="Enhanced Wolfenstein 3D source port"
DESCRIPTION="ECWolf is an advanced source port for Wolfenstein 3D, \
Spear of Destiny, and Super 3D Noah's Ark based off of the Wolf4SDL \
code base. ECWolf aims to provide a wide array of mod editing \
capabilities without the need to modify the source code.

For players, ECWolf provides many useful features such as better \
control binding, support for wide screen resolutions, and unlimited save slots.
ECWolf allows you to keep all of your game data in one directory as \
one binary plays all supported games.

To run through some of the highlights:

* One binary plays Wolfenstein 3D, Spear of Destiny, and Super 3D Noah's Ark.
* Runs on all popular operating systems. (That's Windows, Mac OS X, Android, \
Ubuntu, and other Linux based operating systems. Haiku as well now.)
* Modern control schemes supported.
* Super 3D Noah's Ark/Rise of the Triad/Mac Wolfenstein style automap.
* Widescreen and tall screen support with aspect ratio correction (Hor+/Vert+).
* Soft-moding (no need to deal with compilers)!
* Unrestricted map size with support for non-square maps.
* Support for high resolution textures and mixed definition.
* Support for additional image formats and archive formats.
* LAN multiplayer with up to 11 clients."
HOMEPAGE="https://maniacsvault.net/ecwolf/"
COPYRIGHT="
	2004-2024 ECWolf team
	1992 id Software
	"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://maniacsvault.net/ecwolf/files/ecwolf/1.x/ecwolf-${portVersion}-src.tar.xz"
CHECKSUM_SHA256="8ebd495d2806c9d0e736656970e736730a005d3b43c7f5729f52c812b22f9e2d"
SOURCE_DIR="ecwolf-${portVersion}-src"
PATCHES="ecwolf-$portVersion.patchset"
ADDITIONAL_FILES="ecwolf.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	ecwolf$secondaryArchSuffix = $portVersion
	app:ecwolf = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libbz2$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libSDL2_mixer_2.0$secondaryArchSuffix
	lib:libSDL2_net_2.0$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libbz2$secondaryArchSuffix
	devel:libflac$secondaryArchSuffix
	devel:libfluidsynth$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libmodplug$secondaryArchSuffix
	devel:libogg$secondaryArchSuffix
	devel:libopus$secondaryArchSuffix
	devel:libopusfile$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libSDL2_mixer_2.0$secondaryArchSuffix
	devel:libSDL2_net_2.0$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	export LDFLAGS="-lbsd -lnetwork"

	mkdir -p build && cd build

	# Set up CMake paths
	sed -i -e "s|@APPSDIR@|$appsDir|" \
		-i -e "s|@DATADIR@|$dataDir|" \
		-i -e "s|@DOCDIR@|$docDir|" \
		-i -e "s|@MANDIR@|$manDir|" \
		$sourceDir/CMakeLists.txt

	cmake .. \
		-Wno-dev -Wno-error=dev -Wno-deprecated \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_C_FLAGS="-D_DEFAULT_SOURCE -D_BSD_SOURCE" \

	make $jobArgs
}

INSTALL()
{
	cd build && make install

	# Remove *nixy desktop files
	rm -r $dataDir/applications
	rm -r $dataDir/icons

	# Generate the rdef
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/ecwolf.rdef.in > ecwolf.rdef

	addResourcesToBinaries ecwolf.rdef $appsDir/ecwolf
	addAppDeskbarSymlink $appsDir/ecwolf "ECWolf"
}
