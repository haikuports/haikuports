SUMMARY="Scientific library and interface for array oriented data access"
DESCRIPTION="NetCDF (network Common Data Form) is an interface for \
scientific data access and a freely-distributed software library that \
provides an implementation of the interface. The netCDF library also \
defines a machine-independent format for representing scientific data. \
Together, the interface, library, and format support the creation, access, \
and sharing of scientific data. This is the FORTRAN 77 and 90 library on \
top of the C library."
HOMEPAGE="https://www.unidata.ucar.edu/software/netcdf/"
COPYRIGHT="1993-2014 University Corporation for Atmospheric Research/Unidata"
LICENSE="UCAR_Unidata"
REVISION="1"
SOURCE_URI="https://github.com/Unidata/netcdf-fortran/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="44b1986c427989604df9925dcdbf6c1a977e4ecbde6dd459114bca20bf5e9e67"
SOURCE_DIR="netcdf-fortran-$portVersion"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

libVersion="6.1.1"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	netcdf_fortran$secondaryArchSuffix = $portVersion
	lib:libnetcdff$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libgfortran$secondaryArchSuffix
	lib:libnetcdf$secondaryArchSuffix
	lib:libquadmath$secondaryArchSuffix
	"

PROVIDES_devel="
	netcdf_fortran${secondaryArchSuffix}_devel = $portVersion
	cmd:nf_config$secondaryArchSuffix = $portVersion
	devel:libnetcdff$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	netcdf_fortran$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libgfortran$secondaryArchSuffix
	devel:libnetcdf$secondaryArchSuffix
	devel:libquadmath$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:awk
	cmd:dd
	cmd:g++$secondaryArchSuffix
	cmd:gfortran$secondaryArchSuffix
	cmd:grep
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:sed
	"

defineDebugInfoPackage netcdf_fortran$secondaryArchSuffix \
	"$libDir"/libnetcdff.so.$libVersion

BUILD()
{
	mkdir -p haiku_build && cd haiku_build
	runConfigure ../configure
	make $jobArgs
}

INSTALL()
{
	cd haiku_build
	make install $jobArgs

	rm -f $libDir/lib*.la

	prepareInstalledDevelLib \
		libnetcdff

	fixPkgconfig

	packageEntries devel \
		$binDir \
		$developDir \
		$manDir
}

TEST()
{
	cd haiku_build
	make check
}
