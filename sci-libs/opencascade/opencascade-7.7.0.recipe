SUMMARY="A C++ 3D modeling library"
DESCRIPTION="Open CASCADE Technology (OCCT) is an object-oriented C++ class \
library designed for rapid production of sophisticated domain-specific \
CAD/CAM/CAE applications."
HOMEPAGE="https://www.opencascade.com/open-cascade-technology/"
COPYRIGHT="1993-1999 Matra Datavision
	1999-2020 OPEN CASCADE SAS"
LICENSE="GNU LGPL v2.1
	Open CASCADE exception v1.0"
REVISION="1"
SOURCE_URI="https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V${portVersion//./_};sf=tgz"
CHECKSUM_SHA256="075ca1dddd9646fcf331a809904925055747a951a6afd07a463369b9b441b445"
SOURCE_DIR="occt-V${portVersion//./_}"
PATCHES="opencascade-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
relativeCommandBinDir=$relativeBinDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
	relativeCommandBinDir=bin
fi

portVersionCompat="$portVersion compat >= ${portVersion%.*}"

case "$targetArchitecture" in
	*64*)
		scriptBitness=64
		;;
	*)
		scriptBitness=32
		;;
esac

PROVIDES="
	opencascade$secondaryArchSuffix = $portVersion
	lib:libTKBin$secondaryArchSuffix = $portVersionCompat
	lib:libTKBinL$secondaryArchSuffix = $portVersionCompat
	lib:libTKBinTObj$secondaryArchSuffix = $portVersionCompat
	lib:libTKBinXCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKBO$secondaryArchSuffix = $portVersionCompat
	lib:libTKBool$secondaryArchSuffix = $portVersionCompat
	lib:libTKBRep$secondaryArchSuffix = $portVersionCompat
	lib:libTKCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKCDF$secondaryArchSuffix = $portVersionCompat
	lib:libTKernel$secondaryArchSuffix = $portVersionCompat
	lib:libTKFeat$secondaryArchSuffix = $portVersionCompat
	lib:libTKFillet$secondaryArchSuffix = $portVersionCompat
	lib:libTKG2d$secondaryArchSuffix = $portVersionCompat
	lib:libTKG3d$secondaryArchSuffix = $portVersionCompat
	lib:libTKGeomAlgo$secondaryArchSuffix = $portVersionCompat
	lib:libTKGeomBase$secondaryArchSuffix = $portVersionCompat
	lib:libTKHLR$secondaryArchSuffix = $portVersionCompat
	lib:libTKIGES$secondaryArchSuffix = $portVersionCompat
	lib:libTKLCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKMath$secondaryArchSuffix = $portVersionCompat
	lib:libTKMesh$secondaryArchSuffix = $portVersionCompat
	lib:libTKMeshVS$secondaryArchSuffix = $portVersionCompat
	lib:libTKOffset$secondaryArchSuffix = $portVersionCompat
#	lib:libTKOpenGl$secondaryArchSuffix = $portVersionCompat
	lib:libTKPrim$secondaryArchSuffix = $portVersionCompat
	lib:libTKRWMesh$secondaryArchSuffix = $portVersionCompat
	lib:libTKService$secondaryArchSuffix = $portVersionCompat
	lib:libTKShHealing$secondaryArchSuffix = $portVersionCompat
	lib:libTKStd$secondaryArchSuffix = $portVersionCompat
	lib:libTKStdL$secondaryArchSuffix = $portVersionCompat
	lib:libTKSTEP$secondaryArchSuffix = $portVersionCompat
	lib:libTKSTEP209$secondaryArchSuffix = $portVersionCompat
	lib:libTKSTEPAttr$secondaryArchSuffix = $portVersionCompat
	lib:libTKSTEPBase$secondaryArchSuffix = $portVersionCompat
	lib:libTKSTL$secondaryArchSuffix = $portVersionCompat
	lib:libTKTObj$secondaryArchSuffix = $portVersionCompat
	lib:libTKTopAlgo$secondaryArchSuffix = $portVersionCompat
	lib:libTKV3d$secondaryArchSuffix = $portVersionCompat
	lib:libTKVCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKVRML$secondaryArchSuffix = $portVersionCompat
	lib:libTKXCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKXDE$secondaryArchSuffix = $portVersionCompat
	lib:libTKXDECascade$secondaryArchSuffix = $portVersionCompat
	lib:libTKXDEIGES$secondaryArchSuffix = $portVersionCompat
	lib:libTKXDESTEP$secondaryArchSuffix = $portVersionCompat
	lib:libTKXMesh$secondaryArchSuffix = $portVersionCompat
	lib:libTKXml$secondaryArchSuffix = $portVersionCompat
	lib:libTKXmlL$secondaryArchSuffix = $portVersionCompat
	lib:libTKXmlTObj$secondaryArchSuffix = $portVersionCompat
	lib:libTKXmlXCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKXSBase$secondaryArchSuffix = $portVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
#	lib:libEGL$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libfreeimage$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
#	lib:libGL$secondaryArchSuffix
	lib:libswscale$secondaryArchSuffix
#	lib:libtbb$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	"

PROVIDES_devel="
	opencascade${secondaryArchSuffix}_devel = $portVersion
	devel:libTKBin$secondaryArchSuffix = $portVersionCompat
	devel:libTKBinL$secondaryArchSuffix = $portVersionCompat
	devel:libTKBinTObj$secondaryArchSuffix = $portVersionCompat
	devel:libTKBinXCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKBO$secondaryArchSuffix = $portVersionCompat
	devel:libTKBool$secondaryArchSuffix = $portVersionCompat
	devel:libTKBRep$secondaryArchSuffix = $portVersionCompat
	devel:libTKCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKCDF$secondaryArchSuffix = $portVersionCompat
	devel:libTKDCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKDFBrowser$secondaryArchSuffix = $portVersionCompat
	devel:libTKDraw$secondaryArchSuffix = $portVersionCompat
	devel:libTKernel$secondaryArchSuffix = $portVersionCompat
	devel:libTKExpress$secondaryArchSuffix = $portVersionCompat
	devel:libTKFeat$secondaryArchSuffix = $portVersionCompat
	devel:libTKFillet$secondaryArchSuffix = $portVersionCompat
	devel:libTKG2d$secondaryArchSuffix = $portVersionCompat
	devel:libTKG3d$secondaryArchSuffix = $portVersionCompat
	devel:libTKGeomAlgo$secondaryArchSuffix = $portVersionCompat
	devel:libTKGeomBase$secondaryArchSuffix = $portVersionCompat
	devel:libTKHLR$secondaryArchSuffix = $portVersionCompat
	devel:libTKIGES$secondaryArchSuffix = $portVersionCompat
	devel:libTKLCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKMath$secondaryArchSuffix = $portVersionCompat
	devel:libTKMesh$secondaryArchSuffix = $portVersionCompat
	devel:libTKMeshVS$secondaryArchSuffix = $portVersionCompat
	devel:libTKMessageModel$secondaryArchSuffix = $portVersionCompat
	devel:libTKMessageView$secondaryArchSuffix = $portVersionCompat
	devel:libTKOffset$secondaryArchSuffix = $portVersionCompat
#	devel:libTKOpenGl$secondaryArchSuffix = $portVersionCompat
#	devel:libTKOpenGlTest$secondaryArchSuffix = $portVersionCompat
	devel:libTKPrim$secondaryArchSuffix = $portVersionCompat
	devel:libTKQADraw$secondaryArchSuffix = $portVersionCompat
	devel:libTKRWMesh$secondaryArchSuffix = $portVersionCompat
	devel:libTKService$secondaryArchSuffix = $portVersionCompat
	devel:libTKShapeView$secondaryArchSuffix = $portVersionCompat
	devel:libTKShHealing$secondaryArchSuffix = $portVersionCompat
	devel:libTKStd$secondaryArchSuffix = $portVersionCompat
	devel:libTKStdL$secondaryArchSuffix = $portVersionCompat
	devel:libTKSTEP$secondaryArchSuffix = $portVersionCompat
	devel:libTKSTEP209$secondaryArchSuffix = $portVersionCompat
	devel:libTKSTEPAttr$secondaryArchSuffix = $portVersionCompat
	devel:libTKSTEPBase$secondaryArchSuffix = $portVersionCompat
	devel:libTKSTL$secondaryArchSuffix = $portVersionCompat
	devel:libTKTInspector$secondaryArchSuffix = $portVersionCompat
	devel:libTKTInspectorAPI$secondaryArchSuffix = $portVersionCompat
	devel:libTKTObj$secondaryArchSuffix = $portVersionCompat
	devel:libTKTObjDRAW$secondaryArchSuffix = $portVersionCompat
	devel:libTKToolsDraw$secondaryArchSuffix = $portVersionCompat
	devel:libTKTopAlgo$secondaryArchSuffix = $portVersionCompat
	devel:libTKTopTest$secondaryArchSuffix = $portVersionCompat
	devel:libTKTreeModel$secondaryArchSuffix = $portVersionCompat
	devel:libTKV3d$secondaryArchSuffix = $portVersionCompat
	devel:libTKVCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKVInspector$secondaryArchSuffix = $portVersionCompat
	devel:libTKVRML$secondaryArchSuffix = $portVersionCompat
	devel:libTKView$secondaryArchSuffix = $portVersionCompat
	devel:libTKViewerTest$secondaryArchSuffix = $portVersionCompat
	devel:libTKXCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKXDE$secondaryArchSuffix = $portVersionCompat
	devel:libTKXDECascade$secondaryArchSuffix = $portVersionCompat
	devel:libTKXDEDRAW$secondaryArchSuffix = $portVersionCompat
	devel:libTKXDEIGES$secondaryArchSuffix = $portVersionCompat
	devel:libTKXDESTEP$secondaryArchSuffix = $portVersionCompat
	devel:libTKXMesh$secondaryArchSuffix = $portVersionCompat
	devel:libTKXml$secondaryArchSuffix = $portVersionCompat
	devel:libTKXmlL$secondaryArchSuffix = $portVersionCompat
	devel:libTKXmlTObj$secondaryArchSuffix = $portVersionCompat
	devel:libTKXmlXCAF$secondaryArchSuffix = $portVersionCompat
	devel:libTKXSBase$secondaryArchSuffix = $portVersionCompat
	devel:libTKXSDRAW$secondaryArchSuffix = $portVersionCompat
	"
REQUIRES_devel="
	opencascade$secondaryArchSuffix == $portVersion base
	opencascade${secondaryArchSuffix}_tools == $portVersion
	"

PROVIDES_doc="
	opencascade${secondaryArchSuffix}_doc = $portVersion
	"
REQUIRES_doc="
	opencascade$secondaryArchSuffix == $portVersion base
	"

PROVIDES_samples="
	opencascade${secondaryArchSuffix}_samples = $portVersion
	cmd:FuncDemo$commandSuffix = $portVersion
	cmd:FuncDemo_$portVersion$commandSuffix = $portVersion
	cmd:IESample$commandSuffix = $portVersion
	cmd:IESample_$portVersion$commandSuffix = $portVersion
	cmd:OCCTOverview$commandSuffix = $portVersion
	cmd:OCCTOverview_$portVersion$commandSuffix = $portVersion
	cmd:Tutorial$commandSuffix = $portVersion
	cmd:Tutorial_$portVersion$commandSuffix = $portVersion
	cmd:sample.sh
	"
REQUIRES_samples="
	opencascade$secondaryArchSuffix == $portVersion base
	opencascade${secondaryArchSuffix}_tools == $portVersion
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
#	lib:libEGL$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libfreeimage$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
#	lib:libGL$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Qml$secondaryArchSuffix
	lib:libQt5QmlModels$secondaryArchSuffix
	lib:libQt5Quick$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libQt5Xml$secondaryArchSuffix
	lib:libswscale$secondaryArchSuffix
#	lib:libtbb$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	"

SUMMARY_tools="C++ 3D modeling tools (DRAW, Inspector and ExpToCas)"
PROVIDES_tools="
	opencascade${secondaryArchSuffix}_tools = $portVersion
	cmd:DRAWEXE$commandSuffix = $portVersion
	cmd:DRAWEXE_$portVersion$commandSuffix = $portVersion
	cmd:ExpToCasExe$commandSuffix = $portVersion
	cmd:ExpToCasExe_$portVersion$commandSuffix = $portVersion
	cmd:TInspectorEXE$commandSuffix = $portVersion
	cmd:TInspectorEXE_$portVersion$commandSuffix = $portVersion
	cmd:custom.sh
	cmd:custom_gcc_$scriptBitness.sh
	cmd:draw.sh
	cmd:env.sh
	cmd:inspector.sh
	lib:libTKDCAF$secondaryArchSuffix = $portVersionCompat
	lib:libTKDFBrowser$secondaryArchSuffix = $portVersionCompat
	lib:libTKDraw$secondaryArchSuffix = $portVersionCompat
	lib:libTKExpress$secondaryArchSuffix = $portVersionCompat
	lib:libTKMessageModel$secondaryArchSuffix = $portVersionCompat
	lib:libTKMessageView$secondaryArchSuffix = $portVersionCompat
#	lib:libTKOpenGlTest$secondaryArchSuffix = $portVersionCompat
	lib:libTKQADraw$secondaryArchSuffix = $portVersionCompat
	lib:libTKShapeView$secondaryArchSuffix = $portVersionCompat
	lib:libTKTInspector$secondaryArchSuffix = $portVersionCompat
	lib:libTKTInspectorAPI$secondaryArchSuffix = $portVersionCompat
	lib:libTKTObjDRAW$secondaryArchSuffix = $portVersionCompat
	lib:libTKToolsDraw$secondaryArchSuffix = $portVersionCompat
	lib:libTKTopTest$secondaryArchSuffix = $portVersionCompat
	lib:libTKTreeModel$secondaryArchSuffix = $portVersionCompat
	lib:libTKVInspector$secondaryArchSuffix = $portVersionCompat
	lib:libTKView$secondaryArchSuffix = $portVersionCompat
	lib:libTKViewerTest$secondaryArchSuffix = $portVersionCompat
	lib:libTKXDEDRAW$secondaryArchSuffix = $portVersionCompat
	lib:libTKXSDRAW$secondaryArchSuffix = $portVersionCompat
	"
REQUIRES_tools="
	opencascade$secondaryArchSuffix == $portVersion base
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
#	lib:libEGL$secondaryArchSuffix
	lib:libexecinfo$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libfreeimage$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
#	lib:libGL$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Qml$secondaryArchSuffix
	lib:libQt5QmlModels$secondaryArchSuffix
	lib:libQt5Quick$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libQt5Xml$secondaryArchSuffix
	lib:libswscale$secondaryArchSuffix
#	lib:libtbb$secondaryArchSuffix
	lib:libtcl8.6$secondaryArchSuffix
#	lib:libtk8.6$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:dot
	cmd:doxygen >= 1.8.4
	cmd:lrelease$secondaryArchSuffix
	cmd:tclsh
	devel:libavcodec$secondaryArchSuffix
	devel:libavformat$secondaryArchSuffix
	devel:libavutil$secondaryArchSuffix
	devel:libexecinfo$secondaryArchSuffix
#	devel:libEGL$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreeimage$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
#	devel:libGL$secondaryArchSuffix
	devel:libQt5Gui$secondaryArchSuffix
	devel:libQt5Qml$secondaryArchSuffix
	devel:libQt5QmlModels$secondaryArchSuffix
	devel:libQt5Quick$secondaryArchSuffix
	devel:libQt5Widgets$secondaryArchSuffix
	devel:libQt5Xml$secondaryArchSuffix
	devel:librapidjson$secondaryArchSuffix
	devel:libswscale$secondaryArchSuffix
#	devel:libtbb$secondaryArchSuffix
	devel:libtclstub8.6$secondaryArchSuffix
#	devel:libtk8.6$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	mkdir -p build
	cd build

	cmake .. \
		-DCMAKE_BUILD_TYPE=Release \
		-D3RDPARTY_QT_DIR=$portPackageLinksDir/devel~libqt5 \
		-D3RDPARTY_SKIP_DOT_EXECUTABLE=OFF \
		-DBUILD_Inspector=ON \
		-DBUILD_SAMPLES_QT=ON \
		-DINSTALL_DIR=$prefix \
		-DINSTALL_DIR_BIN=$relativeCommandBinDir \
		-DINSTALL_DIR_CMAKE=$relativeDevelopLibDir/cmake/opencascade \
		-DINSTALL_DIR_DATA=$relativeDataDir/opencascade/data \
		-DINSTALL_DIR_DOC=$relativeDocDir \
		-DINSTALL_DIR_INCLUDE=$relativeIncludeDir/opencascade \
		-DINSTALL_DIR_LIB=$relativeLibDir \
		-DINSTALL_DIR_RESOURCE=$relativeDataDir/opencascade/resources \
		-DINSTALL_DIR_SAMPLES=$relativeDataDir/opencascade/samples \
		-DINSTALL_DIR_SCRIPT=$relativeCommandBinDir \
		-DINSTALL_DIR_TESTS=$relativeDataDir/opencascade/tests \
		-DINSTALL_DOC_Overview=ON \
		-DINSTALL_SAMPLES=ON \
		-DINSTALL_TEST_CASES=OFF \
		-DUSE_DRACO=OFF \
		-DUSE_FFMPEG=ON \
		-DUSE_FREEIMAGE=ON \
		-DUSE_OPENGL=OFF \
		-DUSE_OPENVR=OFF \
		-DUSE_RAPIDJSON=ON \
		-DUSE_TBB=OFF \
		-DUSE_TK=OFF \
		-DUSE_VTK=OFF \
		-DUSE_XLIB=ON
		# Draco, OpenVR and VTK are not available, TBB is too old, (SDL)Tk hangs on opening a
		# window, OpenGL has no native implementation amd EGL is broken

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	prepareInstalledDevelLibs libTKBin libTKBinL libTKBinTObj libTKBinXCAF libTKBO libTKBool \
		libTKBRep libTKCAF libTKCDF libTKDCAF libTKDFBrowser libTKDraw libTKernel libTKExpress \
		libTKFeat libTKFillet libTKG2d libTKG3d libTKGeomAlgo libTKGeomBase libTKHLR libTKIGES \
		libTKLCAF libTKMath libTKMesh libTKMeshVS libTKMessageModel libTKMessageView libTKOffset \
		libTKPrim libTKQADraw libTKRWMesh libTKService libTKShapeView \
		libTKShHealing libTKStd libTKStdL libTKSTEP libTKSTEP209 libTKSTEPAttr libTKSTEPBase \
		libTKSTL libTKTInspector libTKTInspectorAPI libTKTObj libTKTObjDRAW libTKToolsDraw \
		libTKTopAlgo libTKTopTest libTKTreeModel libTKV3d libTKVCAF libTKView libTKViewerTest \
		libTKVInspector libTKVRML libTKXCAF libTKXDE libTKXDECascade libTKXDEDRAW libTKXDEIGES \
		libTKXDESTEP libTKXMesh libTKXml libTKXmlL libTKXmlTObj libTKXmlXCAF libTKXSBase \
		libTKXSDRAW

	packageEntries devel \
		$developDir

	packageEntries doc \
		$documentationDir

	packageEntries samples \
		$commandBinDir/FuncDemo* \
		$commandBinDir/IESample* \
		$commandBinDir/OCCTOverview* \
		$commandBinDir/Tutorial* \
		$commandBinDir/sample.sh \
		$dataDir/opencascade/samples \
		$dataDir/opencascade/resources/samples

	packageEntries tools \
		$commandBinDir \
		$libDir/libTKExpress.so* \
		$libDir/libTKTInspector.so* \
		$libDir/libTKTInspectorAPI.so* \
		$dataDir/opencascade/resources/DrawResources

	# for dynamic loading, version-less symlinks are needed for some libraries
	toolsLibs="libTKDraw libTKTopTest libTKViewerTest libTKXSDRAW libTKDCAF \
		libTKXDEDRAW libTKTObjDRAW libTKQADraw libTKShapeView libTKMessageModel libTKMessageView \
		libTKView libTKVInspector libTKTreeModel libTKDFBrowser libTKToolsDraw"
	for lib in $toolsLibs; do
		ln -s $lib.so.$portVersion $libDir/$lib.so
		packageEntries tools \
			$libDir/$lib.so*
	done
}

TEST()
{
	cd build
	source env.sh
	lin??/gcc/bin/DRAWEXE -c testgrid
}
