SUMMARY="Numerical linear algebra"
DESCRIPTION="A library of Fortran 90 with subroutines for solving \
the most commonly occurring problems in numerical linear algebra."
HOMEPAGE="http://www.netlib.org/lapack/"
COPYRIGHT="1992-2016 The LAPACK Project"
LICENSE="BSD (3-clause)"
REVISION="1"
SOURCE_URI="https://github.com/Reference-LAPACK/lapack/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="e87ded395b94024755b409e17157bd8c5ecb673f635020d01cd988a3501c4287"
SOURCE_DIR="lapack-$portVersion"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="!x86_gcc2 x86"

PROVIDES="
	lapack$secondaryArchSuffix = $portVersion
	lib:libblas$secondaryArchSuffix = $portVersion compat >= 0
	lib:liblapack$secondaryArchSuffix = $portVersion compat >= 0
	lib:libtmglib$secondaryArchSuffix = $portVersion compat >= 0
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libopenblas$secondaryArchSuffix
	"

PROVIDES_devel="
	lapack${secondaryArchSuffix}_devel = $portVersion
	devel:libblas$secondaryArchSuffix = $portVersion compat >= 0
	devel:liblapack${portVersion}$secondaryArchSuffix = $portVersion compat >= 0
	devel:libtmglib${portVersion}$secondaryArchSuffix = $portVersion compat >= 0
	"
REQUIRES_devel="
	lapack$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libopenblas$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gfortran$secondaryArchSuffix
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:python
	"

BUILD()
{
	mkdir -p build
	cd build

	cmake .. \
		-DCMAKE_INSTALL_PREFIX=$prefix \
		-DCMAKE_Fortran_USE_RESPONSE_FILE_FOR_OBJECTS=1 \
		-DCMAKE_Fortran_USE_RESPONSE_FILE_FOR_INCLUDES=1 \
		-DCMAKE_BUILD_TYPE=Release \
		-DUSE_OPTIMIZED_BLAS=ON \
		-DBUILD_SHARED_LIBS=ON \
		-DLAPACKE=ON

	make $jobArgs
}

INSTALL()
{
#	make install PREFIX=$prefix \
#		 OPENBLAS_LIBRARY_DIR=$libDir \
#		 OPENBLAS_INCLUDE_DIR=$includeDir

	cd build-haiku
	make install

	#prepareInstalledDevelLibs libopenblas libopenblasp-r$portVersion

#	packageEntries devel \
#		$developDir \
#		$libDir/cmake
}

TEST()
{
	make test
}
