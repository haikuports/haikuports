From 63cabff3a4260add701eab69813071cacb644209 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 15 Dec 2023 12:20:02 +0100
Subject: Haiku user/kernel patch


diff --git a/source/components/utilities/utdelete.c b/source/components/utilities/utdelete.c
index 1227b21..1c7ec31 100644
--- a/source/components/utilities/utdelete.c
+++ b/source/components/utilities/utdelete.c
@@ -293,7 +293,11 @@ AcpiUtDeleteInternalObj (
             /* Global Lock has extra semaphore */
 
             (void) AcpiOsDeleteSemaphore (AcpiGbl_GlobalLockSemaphore);
+#ifdef _KERNEL_MODE
+            AcpiGbl_GlobalLockSemaphore = -1;
+#else
             AcpiGbl_GlobalLockSemaphore = NULL;
+#endif
 
             AcpiOsDeleteMutex (Object->Mutex.OsMutex);
             AcpiGbl_GlobalLockMutex = NULL;
diff --git a/source/components/utilities/utinit.c b/source/components/utilities/utinit.c
index 37ec63b..d1c2795 100644
--- a/source/components/utilities/utinit.c
+++ b/source/components/utilities/utinit.c
@@ -316,7 +316,11 @@ AcpiUtInitGlobals (
 
     /* Global Lock support */
 
+#ifdef _KERNEL_MODE
+    AcpiGbl_GlobalLockSemaphore         = -1;
+#else
     AcpiGbl_GlobalLockSemaphore         = NULL;
+#endif
     AcpiGbl_GlobalLockMutex             = NULL;
     AcpiGbl_GlobalLockAcquired          = FALSE;
     AcpiGbl_GlobalLockHandle            = 0;
diff --git a/source/include/platform/achaiku.h b/source/include/platform/achaiku.h
index 505b413..3c84511 100644
--- a/source/include/platform/achaiku.h
+++ b/source/include/platform/achaiku.h
@@ -152,50 +152,49 @@
 #ifndef __ACHAIKU_H__
 #define __ACHAIKU_H__
 
+#include <SupportDefs.h>
+#include <OS.h>
+
 #define ACPI_USE_STANDARD_HEADERS
 #define ACPI_USE_SYSTEM_CLIBRARY
 
-#include <KernelExport.h>
+#ifdef B_HAIKU_64_BIT
+#define ACPI_MACHINE_WIDTH          64
+#else
+#define ACPI_MACHINE_WIDTH          32
+#define ACPI_USE_NATIVE_DIVIDE
+#define ACPI_USE_NATIVE_MATH64
+#endif
+
+#define COMPILER_DEPENDENT_INT64    int64
+#define COMPILER_DEPENDENT_UINT64   uint64
 
-struct mutex;
 
+#ifdef _KERNEL_MODE
 
-/* Host-dependent types and defines for user- and kernel-space ACPICA */
+struct mutex;
 
 #define ACPI_MUTEX_TYPE             ACPI_OSL_MUTEX
 #define ACPI_MUTEX                  struct mutex *
 
-#define ACPI_USE_NATIVE_DIVIDE
-#define ACPI_USE_NATIVE_MATH64
+#define ACPI_SEMAPHORE              sem_id
 
-/* #define ACPI_THREAD_ID               thread_id */
+#include <KernelExport.h>
 
-#define ACPI_SEMAPHORE              sem_id
 #define ACPI_SPINLOCK               spinlock *
 #define ACPI_CPU_FLAGS              cpu_status
 
-#define COMPILER_DEPENDENT_INT64    int64
-#define COMPILER_DEPENDENT_UINT64   uint64
-
-
-#ifdef B_HAIKU_64_BIT
-#define ACPI_MACHINE_WIDTH          64
-#else
-#define ACPI_MACHINE_WIDTH          32
-#endif
-
-
-#ifdef _KERNEL_MODE
-/* Host-dependent types and defines for in-kernel ACPICA */
-
 /* ACPICA cache implementation is adequate. */
 #define ACPI_USE_LOCAL_CACHE
 
+/* On other platform the default definition (do nothing) is fine. */
+#if defined(__i386__) || defined(__x86_64__)
 #define ACPI_FLUSH_CPU_CACHE() __asm __volatile("wbinvd");
+#endif
 
 /* Based on FreeBSD's due to lack of documentation */
-int AcpiOsAcquireGlobalLock(uint32 *lock);
-int AcpiOsReleaseGlobalLock(uint32 *lock);
+extern int AcpiOsAcquireGlobalLock(volatile uint32_t *lock);
+extern int AcpiOsReleaseGlobalLock(volatile uint32_t *lock);
 
 #define ACPI_ACQUIRE_GLOBAL_LOCK(GLptr, Acq)    do {                \
         (Acq) = AcpiOsAcquireGlobalLock(&((GLptr)->GlobalLock));    \
@@ -206,9 +205,9 @@ int AcpiOsReleaseGlobalLock(uint32 *lock);
 } while (0)
 
 #else /* _KERNEL_MODE */
-/* Host-dependent types and defines for user-space ACPICA */
 
-#error "We only support kernel mode ACPI atm."
+#define ACPI_CAST_PTHREAD_T(pthread)    ((ACPI_THREAD_ID) ACPI_TO_INTEGER (pthread))
+#define ACPI_FLUSH_CPU_CACHE()
 
 #endif /* _KERNEL_MODE */
 #endif /* __ACHAIKU_H__ */
-- 
2.42.1


From c91105bc3be3f05ab60899a1ac265d75a2ea3129 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Tue, 12 Dec 2023 17:55:25 +0100
Subject: disable rt on Haiku


diff --git a/generate/unix/Makefile.config b/generate/unix/Makefile.config
index 0deeb14..1101b72 100644
--- a/generate/unix/Makefile.config
+++ b/generate/unix/Makefile.config
@@ -71,6 +71,10 @@ ifeq ($(UNAME_S), QNX)
 ACPI_HOST =       _QNX
 endif
 
+ifeq ($(UNAME_S), Haiku)
+ACPI_HOST =       _HAIKU
+endif
+
 ifeq ($(ACPI_HOST), _APPLE)
 INSTALL  =   cp
 INSTALLFLAGS ?= -f
diff --git a/generate/unix/acpiexec/Makefile b/generate/unix/acpiexec/Makefile
index 389455a..9e58526 100644
--- a/generate/unix/acpiexec/Makefile
+++ b/generate/unix/acpiexec/Makefile
@@ -262,9 +262,11 @@ endif
 
 ifneq ($(ACPI_HOST),_APPLE)
 ifneq ($(ACPI_HOST),_QNX)
+ifneq ($(ACPI_HOST),_HAIKU)
 LDFLAGS += -lrt
 endif
 endif
+endif
 
 #
 # Common Rules
-- 
2.42.1


From 578a376fabb7bae781edd587b29c5c8b57d4fb56 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Wed, 7 Feb 2024 21:11:11 +0100
Subject: map memory with the poke driver


diff --git a/generate/unix/acpidump/Makefile b/generate/unix/acpidump/Makefile
index ac6ee9b..9c4cdd3 100644
--- a/generate/unix/acpidump/Makefile
+++ b/generate/unix/acpidump/Makefile
@@ -34,7 +34,6 @@ OBJECTS = \
 	$(OBJDIR)/cmfsize.o\
 	$(OBJDIR)/getopt.o\
 	$(OBJDIR)/osunixdir.o\
-	$(OBJDIR)/osunixmap.o\
 	$(OBJDIR)/osunixxf.o\
 	$(OBJDIR)/tbprint.o\
 	$(OBJDIR)/tbxfroot.o\
@@ -67,10 +66,22 @@ ifeq ($(ACPI_HOST), _NetBSD)
 HOST_FAMILY = BSD
 endif
 
+ifeq ($(ACPI_HOST), _HAIKU)
+HOST_FAMILY = BSD
+endif
+
 ifeq ($(ACPI_HOST), _QNX)
 HOST_FAMILY = BSD
 endif
 
+ifeq ($(ACPI_HOST), _HAIKU)
+OBJECTS += \
+	$(OBJDIR)/oshaikumap.o
+else
+OBJECTS += \
+	$(OBJDIR)/osunixmap.o
+endif
+
 ifeq ($(HOST_FAMILY), BSD)
 OBJECTS += \
 	$(OBJDIR)/osbsdtbl.o
diff --git a/source/os_specific/service_layers/osbsdtbl.c b/source/os_specific/service_layers/osbsdtbl.c
index 7babce6..a066ee9 100644
--- a/source/os_specific/service_layers/osbsdtbl.c
+++ b/source/os_specific/service_layers/osbsdtbl.c
@@ -156,7 +156,9 @@
 #endif
 #include <unistd.h>
 #include <sys/param.h>
+#if !defined(__HAIKU__)
 #include <sys/sysctl.h>
+#endif
 
 
 #define _COMPONENT          ACPI_OS_SERVICES
diff --git a/source/os_specific/service_layers/oshaikumap.c b/source/os_specific/service_layers/oshaikumap.c
new file mode 100644
index 0000000..0465d72
--- /dev/null
+++ b/source/os_specific/service_layers/oshaikumap.c
@@ -0,0 +1,284 @@
+/******************************************************************************
+ *
+ * Module Name: oshaikumap - Haiku OSL for file mappings
+ *
+ *****************************************************************************/
+
+/******************************************************************************
+ *
+ * 1. Copyright Notice
+ *
+ * Some or all of this work - Copyright (c) 1999 - 2023, Intel Corp.
+ * All rights reserved.
+ *
+ * 2. License
+ *
+ * 2.1. This is your license from Intel Corp. under its intellectual property
+ * rights. You may have additional license terms from the party that provided
+ * you this software, covering your right to use that party's intellectual
+ * property rights.
+ *
+ * 2.2. Intel grants, free of charge, to any person ("Licensee") obtaining a
+ * copy of the source code appearing in this file ("Covered Code") an
+ * irrevocable, perpetual, worldwide license under Intel's copyrights in the
+ * base code distributed originally by Intel ("Original Intel Code") to copy,
+ * make derivatives, distribute, use and display any portion of the Covered
+ * Code in any form, with the right to sublicense such rights; and
+ *
+ * 2.3. Intel grants Licensee a non-exclusive and non-transferable patent
+ * license (with the right to sublicense), under only those claims of Intel
+ * patents that are infringed by the Original Intel Code, to make, use, sell,
+ * offer to sell, and import the Covered Code and derivative works thereof
+ * solely to the minimum extent necessary to exercise the above copyright
+ * license, and in no event shall the patent license extend to any additions
+ * to or modifications of the Original Intel Code. No other license or right
+ * is granted directly or by implication, estoppel or otherwise;
+ *
+ * The above copyright and patent license is granted only if the following
+ * conditions are met:
+ *
+ * 3. Conditions
+ *
+ * 3.1. Redistribution of Source with Rights to Further Distribute Source.
+ * Redistribution of source code of any substantial portion of the Covered
+ * Code or modification with rights to further distribute source must include
+ * the above Copyright Notice, the above License, this list of Conditions,
+ * and the following Disclaimer and Export Compliance provision. In addition,
+ * Licensee must cause all Covered Code to which Licensee contributes to
+ * contain a file documenting the changes Licensee made to create that Covered
+ * Code and the date of any change. Licensee must include in that file the
+ * documentation of any changes made by any predecessor Licensee. Licensee
+ * must include a prominent statement that the modification is derived,
+ * directly or indirectly, from Original Intel Code.
+ *
+ * 3.2. Redistribution of Source with no Rights to Further Distribute Source.
+ * Redistribution of source code of any substantial portion of the Covered
+ * Code or modification without rights to further distribute source must
+ * include the following Disclaimer and Export Compliance provision in the
+ * documentation and/or other materials provided with distribution. In
+ * addition, Licensee may not authorize further sublicense of source of any
+ * portion of the Covered Code, and must include terms to the effect that the
+ * license from Licensee to its licensee is limited to the intellectual
+ * property embodied in the software Licensee provides to its licensee, and
+ * not to intellectual property embodied in modifications its licensee may
+ * make.
+ *
+ * 3.3. Redistribution of Executable. Redistribution in executable form of any
+ * substantial portion of the Covered Code or modification must reproduce the
+ * above Copyright Notice, and the following Disclaimer and Export Compliance
+ * provision in the documentation and/or other materials provided with the
+ * distribution.
+ *
+ * 3.4. Intel retains all right, title, and interest in and to the Original
+ * Intel Code.
+ *
+ * 3.5. Neither the name Intel nor any other trademark owned or controlled by
+ * Intel shall be used in advertising or otherwise to promote the sale, use or
+ * other dealings in products derived from or relating to the Covered Code
+ * without prior written authorization from Intel.
+ *
+ * 4. Disclaimer and Export Compliance
+ *
+ * 4.1. INTEL MAKES NO WARRANTY OF ANY KIND REGARDING ANY SOFTWARE PROVIDED
+ * HERE. ANY SOFTWARE ORIGINATING FROM INTEL OR DERIVED FROM INTEL SOFTWARE
+ * IS PROVIDED "AS IS," AND INTEL WILL NOT PROVIDE ANY SUPPORT, ASSISTANCE,
+ * INSTALLATION, TRAINING OR OTHER SERVICES. INTEL WILL NOT PROVIDE ANY
+ * UPDATES, ENHANCEMENTS OR EXTENSIONS. INTEL SPECIFICALLY DISCLAIMS ANY
+ * IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT AND FITNESS FOR A
+ * PARTICULAR PURPOSE.
+ *
+ * 4.2. IN NO EVENT SHALL INTEL HAVE ANY LIABILITY TO LICENSEE, ITS LICENSEES
+ * OR ANY OTHER THIRD PARTY, FOR ANY LOST PROFITS, LOST DATA, LOSS OF USE OR
+ * COSTS OF PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, OR FOR ANY INDIRECT,
+ * SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THIS AGREEMENT, UNDER ANY
+ * CAUSE OF ACTION OR THEORY OF LIABILITY, AND IRRESPECTIVE OF WHETHER INTEL
+ * HAS ADVANCE NOTICE OF THE POSSIBILITY OF SUCH DAMAGES. THESE LIMITATIONS
+ * SHALL APPLY NOTWITHSTANDING THE FAILURE OF THE ESSENTIAL PURPOSE OF ANY
+ * LIMITED REMEDY.
+ *
+ * 4.3. Licensee shall not export, either directly or indirectly, any of this
+ * software or system incorporating such software without first obtaining any
+ * required license or other approval from the U. S. Department of Commerce or
+ * any other agency or department of the United States Government. In the
+ * event Licensee exports any such software from the United States or
+ * re-exports any such software from a foreign destination, Licensee shall
+ * ensure that the distribution and export/re-export of the software is in
+ * compliance with all laws, regulations, orders, or other restrictions of the
+ * U.S. Export Administration Regulations. Licensee agrees that neither it nor
+ * any of its subsidiaries will export/re-export any technical data, process,
+ * software, or service, directly or indirectly, to any country for which the
+ * United States government or any agency thereof requires an export license,
+ * other governmental approval, or letter of assurance, without first obtaining
+ * such license, approval or letter.
+ *
+ *****************************************************************************
+ *
+ * Alternatively, you may choose to be licensed under the terms of the
+ * following license:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions, and the following disclaimer,
+ *    without modification.
+ * 2. Redistributions in binary form must reproduce at minimum a disclaimer
+ *    substantially similar to the "NO WARRANTY" disclaimer below
+ *    ("Disclaimer") and any redistribution must be conditioned upon
+ *    including a substantially similar Disclaimer requirement for further
+ *    binary redistribution.
+ * 3. Neither the names of the above-listed copyright holders nor the names
+ *    of any contributors may be used to endorse or promote products derived
+ *    from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * Alternatively, you may choose to be licensed under the terms of the
+ * GNU General Public License ("GPL") version 2 as published by the Free
+ * Software Foundation.
+ *
+ *****************************************************************************/
+
+#include "acpidump.h"
+#include <unistd.h>
+#include <private/drivers/poke.h>
+
+#define _COMPONENT          ACPI_OS_SERVICES
+        ACPI_MODULE_NAME    ("oshaikumap")
+
+
+/*******************************************************************************
+ *
+ * FUNCTION:    AcpiOsGetPageSize
+ *
+ * PARAMETERS:  None
+ *
+ * RETURN:      Page size of the platform.
+ *
+ * DESCRIPTION: Obtain page size of the platform.
+ *
+ ******************************************************************************/
+
+static ACPI_SIZE
+AcpiOsGetPageSize (
+    void)
+{
+
+#ifdef PAGE_SIZE
+    return PAGE_SIZE;
+#else
+    return sysconf (_SC_PAGESIZE);
+#endif
+}
+
+
+/******************************************************************************
+ *
+ * FUNCTION:    AcpiOsMapMemory
+ *
+ * PARAMETERS:  Where               - Physical address of memory to be mapped
+ *              Length              - How much memory to map
+ *
+ * RETURN:      Pointer to mapped memory. Null on error.
+ *
+ * DESCRIPTION: Map physical memory into local address space.
+ *
+ *****************************************************************************/
+
+void *
+AcpiOsMapMemory (
+    ACPI_PHYSICAL_ADDRESS   Where,
+    ACPI_SIZE               Length)
+{
+    UINT8                   *MappedMemory;
+    ACPI_PHYSICAL_ADDRESS   Offset;
+    ACPI_SIZE               PageSize;
+    int                     fd;
+    mem_map_args            cmd;
+    status_t                status;
+
+    fd = open (POKE_DEVICE_FULLNAME, O_RDWR);
+    if (fd < 0)
+    {
+        fprintf (stderr, "Cannot open %s\n", POKE_DEVICE_FULLNAME);
+        return (NULL);
+    }
+
+    /* Align the offset to use mmap */
+
+    PageSize = AcpiOsGetPageSize ();
+    Offset = Where % PageSize;
+
+    /* Map the table header to get the length of the full table */
+    cmd.signature = POKE_SIGNATURE;
+    cmd.name = "acpica_area";
+    cmd.area = -1;
+    cmd.size = (Length + Offset);
+    cmd.physical_address = (void*)(Where - Offset);
+    cmd.protection = B_READ_AREA;
+    cmd.flags = B_ANY_KERNEL_ADDRESS;
+
+    status = ioctl(fd, POKE_MAP_MEMORY, &cmd);
+    if (status < B_OK) {
+        fprintf (stderr, "Cannot map %lx\n", (Where - Offset));
+        close (fd);
+        return (NULL);
+    }
+
+    MappedMemory = cmd.address;
+    close (fd);
+    return (ACPI_CAST8 (MappedMemory + Offset));
+}
+
+
+/******************************************************************************
+ *
+ * FUNCTION:    AcpiOsUnmapMemory
+ *
+ * PARAMETERS:  Where               - Logical address of memory to be unmapped
+ *              Length              - How much memory to unmap
+ *
+ * RETURN:      None.
+ *
+ * DESCRIPTION: Delete a previously created mapping. Where and Length must
+ *              correspond to a previous mapping exactly.
+ *
+ *****************************************************************************/
+
+void
+AcpiOsUnmapMemory (
+    void                    *Where,
+    ACPI_SIZE               Length)
+{
+    int                     fd;
+    mem_map_args            cmd;
+    status_t                status;
+
+    fd = open (POKE_DEVICE_FULLNAME, O_RDWR);
+    if (fd < 0)
+    {
+        fprintf (stderr, "Cannot open %s\n", POKE_DEVICE_FULLNAME);
+        return;
+    }
+
+    cmd.signature = POKE_SIGNATURE;
+    cmd.area = area_for(Where);
+
+    status = ioctl(fd, POKE_UNMAP_MEMORY, &cmd);
+    if (status < B_OK) {
+        fprintf (stderr, "Cannot unmap\n");
+        close (fd);
+        return;
+    }
+    close(fd);
+}
-- 
2.42.1

