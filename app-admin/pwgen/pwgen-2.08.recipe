SUMMARY="A password generator"
DESCRIPTION="The pwgen program generates passwords which are designed to be easily \
memorized by humans, while being as secure as possible. Human- memorable \
passwords are never going to be as secure as completely completely random \
passwords. In particular, passwords generated by pwgen without the -s option \
should not be used in places where the password could be attacked via an \
off-line brute-force attack. On the other hand, completely randomly generated \
passwords have a tendency to be written down, and are subject to being \
compromised in that fashion.\
The pwgen program is designed to be used both interactively, and in shell \
scripts. Hence, its default behavior differs depending on whether the standard \
output is a tty device or a pipe to another program. Used interactively, pwgen \
will display a screenful of passwords, allowing the user to pick a single \
password, and then quickly erase the screen. This prevents someone from being \
able to 'shoulder surf' the user's chosen password."
HOMEPAGE="http://sourceforge.net/projects/pwgen"
COPYRIGHT="2001-2006 by Theodore Ts'o
	2001-2003 Christophe Devine
	2005 by Olivier Guerrier"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://sourceforge.net/projects/pwgen/files/pwgen/$portVersion/pwgen-$portVersion.tar.gz"
CHECKSUM_SHA256="dab03dd30ad5a58e578c5581241a6e87e184a18eb2c3b2e0fffa8a9cf105c97b"

ARCHITECTURES="x86 x86_gcc2 x86_64"

PROVIDES="
	pwgen = $portVersion
	cmd:pwgen = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"
BUILD_PREREQUIRES="
	cmd:autoconf
	cmd:make
	cmd:gcc
	"

BUILD()
{
	autoconf
	runConfigure ./configure
	make
}

INSTALL()
{
	make install
}
