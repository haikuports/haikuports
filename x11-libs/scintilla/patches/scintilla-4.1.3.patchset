From 206eec847c17c61dcaa069da43612a5d8ad0e1ef Mon Sep 17 00:00:00 2001
From: Kacper Kasper <kacperkasper@gmail.com>
Date: Wed, 30 Jan 2019 18:17:11 +0100
Subject: Apply changes made after the release

* Fixes scroll bars and autoscroll.

diff --git a/haiku/ScintillaHaiku.cxx b/haiku/ScintillaHaiku.cxx
index 74ca95b..13c83c4 100644
--- a/haiku/ScintillaHaiku.cxx
+++ b/haiku/ScintillaHaiku.cxx
@@ -172,7 +172,6 @@ void CallTipView::Draw(BRect updateRect) {
 
 class ScintillaHaiku : public ScintillaBase, public BView {
 public:
-	ScintillaHaiku();
 	ScintillaHaiku(BRect rect);
 
 	// functions from Scintilla:
@@ -240,17 +239,8 @@ private:
 	BScrollView* scrollView;
 };
 
-ScintillaHaiku::ScintillaHaiku():
-	BView("ScintillaHaikuView", B_WILL_DRAW | B_FRAME_EVENTS),
-	scrollView(NULL)
-{
-	capturedMouse = false;
-
-	Initialise();
-}
-
 ScintillaHaiku::ScintillaHaiku(BRect rect):
-	BView(rect, "ScintillaHaikuView", B_FOLLOW_ALL, B_WILL_DRAW | B_FRAME_EVENTS),
+	BView(rect, "ScintillaHaikuView", B_FOLLOW_ALL, B_WILL_DRAW),
 	scrollView(NULL)
 {
 	capturedMouse = false;
@@ -430,9 +420,12 @@ bool ScintillaHaiku::ModifyScrollBars(Sci::Line nMax, Sci::Line nPage) {
 		if(ScrollBar(B_HORIZONTAL) != NULL) {
 			ScrollBar(B_HORIZONTAL)->SetRange(1, horizEndPreferred + 1);
 			ScrollBar(B_HORIZONTAL)->SetSteps(charWidth, pageIncrement);
+			ScrollBar(B_HORIZONTAL)->SetProportion(0.0);
 		}
 		if(ScrollBar(B_VERTICAL) != NULL) {
 			ScrollBar(B_VERTICAL)->SetRange(1, nMax - pageScroll + 1);
+			ScrollBar(B_VERTICAL)->SetSteps(1.0, pageScroll - 1);
+			ScrollBar(B_VERTICAL)->SetProportion(0.0);
 		}
 		UnlockLooper();
 		return true;
@@ -823,10 +816,9 @@ void ScintillaHaiku::MouseMoved(BPoint point, uint32 transit, const BMessage* me
 	switch(transit) {
 		case B_ENTERED_VIEW:
 		case B_INSIDE_VIEW:
-			ButtonMoveWithModifiers(pt, when, mod);
-		break;
 		case B_EXITED_VIEW:
 		case B_OUTSIDE_VIEW:
+			ButtonMoveWithModifiers(pt, when, mod);
 		break;
 	};
 }
@@ -923,7 +915,7 @@ BScintillaView::BScintillaView(BRect rect, const char* name, uint32 resizingMode
 BScintillaView::BScintillaView(const char* name, uint32 flags, bool horizontal, bool vertical, border_style border):
 	BScrollView(name, NULL, flags, horizontal, vertical, border) {
 	p = new BScintillaPrivate;
-	p->sciControl = new ScintillaHaiku();
+	p->sciControl = new ScintillaHaiku(Bounds());
 	SetTarget(p->sciControl);
 }
 
-- 
2.19.1

