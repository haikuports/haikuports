SUMMARY="A cross-platform C++ GUI toolkit for X11, MS Windows, OSX and Haiku"
DESCRIPTION="FLTK (pronounced \"fulltick\") is a cross-platform C++ GUI \
toolkit for UNIX®/Linux® (X11), Microsoft® Windows®, and MacOS® X. \
FLTK provides modern GUI functionality without the bloat and \
supports 3D graphics via OpenGL® and its built-in GLUT emulation.
NOTE: OpenGL is not supported yet.

FLTK is designed to be small and modular enough to be statically linked, \
but works fine as a shared library. \
FLTK also includes an excellent UI builder called FLUID that can be used \
to create applications in minutes."
HOMEPAGE="https://www.fltk.org/"
COPYRIGHT="1998-2021 by Bill Spitzak and others."
LICENSE="FLTK
	GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://www.fltk.org/pub/fltk/$portVersion/fltk-$portVersion-source.tar.bz2"
CHECKSUM_SHA256="103441134915402808fd45424d4061778609437e804334434e946cfd26b196c2"
PATCHES="fltk-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%.*}"

PROVIDES="
	fltk$secondaryArchSuffix = $portVersion
	lib:libfltk$secondaryArchSuffix = $libVersionCompat
#	lib:libfltk_cairo$secondaryArchSuffix = $libVersionCompat
	lib:libfltk_forms$secondaryArchSuffix = $libVersionCompat
	lib:libfltk_images$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
#	lib:libcairo$secondaryArchSuffix
#	lib:libGL$secondaryArchSuffix
#	lib:libGLU$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	lib:libXext$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	fltk${secondaryArchSuffix}_devel = $portVersion
	cmd:fltk_config$commandSuffix = $portVersion
	cmd:fluid$commandSuffix = $portVersion
	devel:libfltk$secondaryArchSuffix = $libVersionCompat
#	devel:libfltk_cairo$secondaryArchSuffix = $libVersionCompat
	devel:libfltk_forms$secondaryArchSuffix = $libVersionCompat
	devel:libfltk_images$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	fltk$secondaryArchSuffix == $portVersion base
	haiku$secondaryArchSuffix
#	lib:libcairo$secondaryArchSuffix
#	lib:libGL$secondaryArchSuffix
#	lib:libGLU$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	lib:libXext$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
#	xcairo1.18${secondaryArchSuffix}_devel
#	devel:libGL$secondaryArchSuffix
#	devel:libGLU$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	devel:libxcb$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:awk
	cmd:cmake
	cmd:doxygen
	cmd:g++$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage fltk$secondaryArchSuffix \
	"$libDir"/libfltk.so.$libVersion \
	"$libDir"/libfltk_forms.so.$libVersion \
	"$libDir"/libfltk_images.so.$libVersion \
	"$(getPackagePrefix devel)/bin"/fluid

BUILD()
{
	export LDFLAGS="-lnetwork"
	cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=None \
		$cmakeDirArgs \
		-DOPTION_BUILD_SHARED_LIBS=ON \
		-DOPTION_INSTALL_HTML_DOCUMENTATION=ON \
		-DOPTION_CAIRO=OFF \
		-DOPTION_USE_GL=OFF
	make -Cbuild $jobArgs
	make -Cbuild/documentation html
}

INSTALL()
{
	make -Cbuild install

	# remove static libraries
	rm $libDir/*.a

	# we are not unix
	rm -rf $dataDir/{applications,icons,mime}

	# remove manpages for examples
	rm -rf $manDir/man6

	prepareInstalledDevelLibs \
		libfltk libfltk_forms libfltk_images # libfltk_cairo
	fixPkgconfig

	# fixCmake
	sed -i 's,${_IMPORT_PREFIX}/lib',$developLibDir, \
		$libDir/cmake/FLTK-Targets-none.cmake

	# install does not copy attributes and strips resources!?
	copyattr -d build/bin/fluid $commandBinDir/fluid

	addAppDeskbarSymlink $commandBinDir/fluid "FLUID"

	packageEntries devel \
		$developDir \
		$commandBinDir \
		$manDir \
		$dataDir/{deskbar,doc} \
		$libDir/cmake
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
