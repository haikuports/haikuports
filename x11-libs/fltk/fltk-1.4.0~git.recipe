SUMMARY="A cross-platform C++ GUI toolkit for X11, MS Windows, OSX and Haiku"
DESCRIPTION="FLTK (pronounced \"fulltick\") is a cross-platform C++ GUI \
toolkit for UNIX®/Linux® (X11), Microsoft® Windows®, and MacOS® X. \
FLTK provides modern GUI functionality without the bloat and \
supports 3D graphics via OpenGL® and its built-in GLUT emulation.
NOTE: OpenGL is not supported yet.

FLTK is designed to be small and modular enough to be statically linked, \
but works fine as a shared library. \
FLTK also includes an excellent UI builder called FLUID that can be used \
to create applications in minutes."
HOMEPAGE="https://www.fltk.org/"
COPYRIGHT="1998-2023 by Bill Spitzak and others."
LICENSE="FLTK
	GNU LGPL v2"
REVISION="1"
srcGitRev="b1ab37eeff52066e81d4bf92a1df7f46a1d5d02d"
SOURCE_URI="https://github.com/fltk/fltk/archive/$srcGitRev.tar.gz"
CHECKSUM_SHA256="c88eac85753b52cedebf555239f76ffe7d76a2b915ccf5c1c3100bfb04efbbe7"
SOURCE_DIR="fltk-$srcGitRev"
PATCHES="fltk-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="1.4.0"
libVersionCompat="$libVersion compat >= ${libVersion%.*}"

PROVIDES="
	fltk$secondaryArchSuffix = $portVersion
	lib:libfltk$secondaryArchSuffix = $libVersionCompat
	lib:libfltk_forms$secondaryArchSuffix = $libVersionCompat
	lib:libfltk_images$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	#lib:libgl$secondaryArchSuffix
	#lib:libglu$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	lib:libXext$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	fltk${secondaryArchSuffix}_devel = $portVersion
	devel:libfltk$secondaryArchSuffix = $libVersionCompat
	devel:libfltk_forms$secondaryArchSuffix = $libVersionCompat
	devel:libfltk_images$secondaryArchSuffix = $libVersionCompat
	cmd:fltk_config$commandSuffix = ${portVersion/\~git/}
	cmd:fltk_options$commandSuffix = ${portVersion/\~git/} # freezes on resize
	cmd:fluid$commandSuffix = ${portVersion/\~git/}
#	cmd:fluid_shared$commandSuffix = ${portVersion/\~git/}
	"
REQUIRES_devel="
	fltk$secondaryArchSuffix == $portVersion base
	haiku$secondaryArchSuffix
	#lib:libgl$secondaryArchSuffix
	#lib:libglu$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libX11$secondaryArchSuffix
	lib:libXext$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	#devel:libgl$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	#devel:libgl$secondaryArchSuffix
	#devel:libglu$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libX11$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:awk
	cmd:cmake
	cmd:doxygen
	cmd:g++$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage fltk$secondaryArchSuffix \
	"$libDir"/libfltk.so.$libVersion \
	"$libDir"/libfltk_forms.so.$libVersion \
	"$libDir"/libfltk_images.so.$libVersion \
	"$(getPackagePrefix devel)/bin"/fluid

BUILD()
{
	export LDFLAGS="-lnetwork"
	cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_INSTALL_BINDIR=$commandBinDir \
		-DOPTION_BUILD_SHARED_LIBS=ON \
		-DOPTION_USE_GL=OFF \
		-DOPTION_INSTALL_HTML_DOCUMENTATION=ON \
		-DOPTION_USE_KDIALOG=OFF
	make -C build $jobArgs
	make -C build/documentation html
}

INSTALL()
{
	make -C build install
	make -C build/documentation install

	# remove static libraries
	rm $libDir/*.a

	# we are not unix
	rm -rf $dataDir/{applications,icons,mime}

	# remove fluid-shared
	rm -f $commandBinDir/fluid-shared

	prepareInstalledDevelLibs \
		libfltk libfltk_forms libfltk_images

	# install does not copy attributes and strips resources!?
	copyattr -d build/bin/fluid $commandBinDir/fluid

	addAppDeskbarSymlink $commandBinDir/fluid "FLUID"

	packageEntries devel \
		$developDir \
		$commandBinDir \
		$manDir \
		$dataDir/{deskbar,doc,fltk}
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
