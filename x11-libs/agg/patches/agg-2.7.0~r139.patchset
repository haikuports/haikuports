From 454a26f7fab24eaf3a99990353bd4a21199f2ddf Mon Sep 17 00:00:00 2001
From: Kacper Kasper <kacperkasper@gmail.com>
Date: Thu, 24 Apr 2014 20:00:29 +0000
Subject: Haiku support


diff --git a/agg-src/configure.ac b/agg-src/configure.ac
index 246e5b5..830719a 100644
--- a/agg-src/configure.ac
+++ b/agg-src/configure.ac
@@ -9,7 +9,7 @@ dnl Checks for programs.
 AC_PROG_CC
 AC_PROG_CXX
 AC_ISC_POSIX
-dnl AM_C_PROTOTYPES
+
 dnl if test "x$U" != "x"; then
 dnl   AC_MSG_ERROR(Compiler not ANSI compliant)
 dnl fi
@@ -59,9 +59,18 @@ dnl ####  Check if we are compiling for win32 #####
     AC_SUBST(WINDOWS_LIBS)
     PREFERED_PLATFORM=win32
   ;;
+  *haiku*)
+    haiku_host=yes
+    HAIKU_LIBS="-lbe -ltranslation"
+    HAIKU_CFLAGS=
+    AC_SUBST(HAIKU_CFLAGS)
+    AC_SUBST(HAIKU_LIBS)
+    PREFERED_PLATFORM=Haiku
+  ;;
 esac
 AM_CONDITIONAL(ENABLE_WIN32,[test x$win32_host = xyes -a x$enable_platform != xno ])
 AM_CONDITIONAL(ENABLE_OSX,[test x$osx_host = xyes -a x$enable_platform != xno ])
+AM_CONDITIONAL(ENABLE_HAIKU,[test x$haiku_host = xyes -a x$enable_platform != xno ])
 dnl then enable font_win32tt
 AC_ARG_ENABLE(win32tt,
     AC_HELP_STRING([--enable-win32tt],[Win32 TrueType font support library]),
@@ -155,7 +164,7 @@ AC_OUTPUT(
    src/platform/sdl/Makefile
    src/platform/mac/Makefile
    src/platform/win32/Makefile
-   src/platform/BeOS/Makefile
+   src/platform/Haiku/Makefile
    src/platform/AmigaOS/Makefile
    include/Makefile
    include/ctrl/Makefile
-- 
2.37.3


From ba4afca9c0986d17e92e02a6431bda748786b31a Mon Sep 17 00:00:00 2001
From: Jonathan Schleifer <js@webkeks.org>
Date: Thu, 19 Dec 2013 01:45:04 +0100
Subject: Fix the agg headers to be proper C++.


diff --git a/agg-src/include/agg_array.h b/agg-src/include/agg_array.h
index b48010b..c5eec01 100644
--- a/agg-src/include/agg_array.h
+++ b/agg-src/include/agg_array.h
@@ -356,9 +356,10 @@ namespace agg
 
         void add_array(const T* ptr, unsigned num_elem)
         {
-            while(num_elem--)
+            while(num_elem > 0)
             {
                 add(*ptr++);
+                --num_elem;
             }
         }
 
@@ -516,10 +517,11 @@ namespace agg
         if(m_num_blocks)
         {
             T** blk = m_blocks + m_num_blocks - 1;
-            while(m_num_blocks--)
+            while(m_num_blocks > 0)
             {
                 pod_allocator<T>::deallocate(*blk, block_size);
                 --blk;
+                --m_num_blocks;
             }
         }
         pod_allocator<T*>::deallocate(m_blocks, m_max_blocks);
@@ -792,10 +794,11 @@ namespace agg
             if(m_num_blocks)
             {
                 block_type* blk = m_blocks + m_num_blocks - 1;
-                while(m_num_blocks--)
+                while(m_num_blocks > 0)
                 {
                     pod_allocator<int8u>::deallocate(blk->data, blk->size);
                     --blk;
+                    --m_num_blocks;
                 }
                 pod_allocator<block_type>::deallocate(m_blocks, m_max_blocks);
             }
diff --git a/agg-src/include/agg_rasterizer_cells_aa.h b/agg-src/include/agg_rasterizer_cells_aa.h
index 4dd905f..bc229e4 100644
--- a/agg-src/include/agg_rasterizer_cells_aa.h
+++ b/agg-src/include/agg_rasterizer_cells_aa.h
@@ -131,10 +131,11 @@ namespace agg
         if(m_num_blocks)
         {
             cell_type** ptr = m_cells + m_num_blocks - 1;
-            while(m_num_blocks--)
+            while(m_num_blocks > 0)
             {
                 pod_allocator<cell_type>::deallocate(*ptr, cell_block_size);
                 ptr--;
+                --m_num_blocks;
             }
             pod_allocator<cell_type*>::deallocate(m_cells, m_max_blocks);
         }
@@ -665,10 +666,11 @@ namespace agg
             cell_ptr = *block_ptr++;
             i = (nb > cell_block_size) ? unsigned(cell_block_size) : nb;
             nb -= i;
-            while(i--) 
+            while(i > 0) 
             {
                 m_sorted_y[cell_ptr->y - m_min_y].start++;
                 ++cell_ptr;
+                --i;
             }
         }
 
@@ -689,12 +691,13 @@ namespace agg
             cell_ptr = *block_ptr++;
             i = (nb > cell_block_size) ? unsigned(cell_block_size) : nb;
             nb -= i;
-            while(i--)
+            while(i > 0)
             {
                 sorted_y& curr_y = m_sorted_y[cell_ptr->y - m_min_y];
                 m_sorted_cells[curr_y.start + curr_y.num] = cell_ptr;
                 ++curr_y.num;
                 ++cell_ptr;
+                --i;
             }
         }
         
diff --git a/agg-src/include/agg_renderer_outline_aa.h b/agg-src/include/agg_renderer_outline_aa.h
index a1a248c..ca48577 100644
--- a/agg-src/include/agg_renderer_outline_aa.h
+++ b/agg-src/include/agg_renderer_outline_aa.h
@@ -1366,7 +1366,7 @@ namespace agg
         //---------------------------------------------------------------------
         void profile(line_profile_aa& prof) { m_profile = &prof; }
         const line_profile_aa& profile() const { return *m_profile; }
-        line_profile_aa& profile() { return *m_profile; }
+        line_profile_aa& profile() { return *(line_profile_aa*)m_profile; }
 
         //---------------------------------------------------------------------
         int subpixel_width() const { return m_profile->subpixel_width(); }
diff --git a/agg-src/include/agg_rendering_buffer.h b/agg-src/include/agg_rendering_buffer.h
index 175bcd8..c89308b 100644
--- a/agg-src/include/agg_rendering_buffer.h
+++ b/agg-src/include/agg_rendering_buffer.h
@@ -187,10 +187,11 @@ namespace agg
 
             T** rows = &m_rows[0];
 
-            while(height--)
+            while(height > 0)
             {
                 *rows++ = row_ptr;
                 row_ptr += stride;
+                --height;
             }
         }
 
-- 
2.37.3


From b032c7173087e803a73ff2c3df54c1df2f59f3eb Mon Sep 17 00:00:00 2001
From: Kacper Kasper <kacperkasper@gmail.com>
Date: Thu, 24 Apr 2014 20:00:29 +0000
Subject: Haiku support


diff --git a/agg-src/src/platform/BeOS/Makefile.am b/agg-src/src/platform/BeOS/Makefile.am
index 474153c..2095717 100644
--- a/agg-src/src/platform/BeOS/Makefile.am
+++ b/agg-src/src/platform/BeOS/Makefile.am
@@ -1 +1,10 @@
-EXTRA_DIST=agg_platform_support.cpp
+if ENABLE_HAIKU
+
+lib_LTLIBRARIES = libaggplatformHaiku.la
+
+libaggplatformHaiku_la_LDFLAGS = -version-info @AGG_LIB_VERSION@
+libaggplatformHaiku_la_SOURCES = agg_platform_support.cpp
+libaggplatformHaiku_la_CXXFLAGS = -I$(top_srcdir)/include @HAIKU_CFLAGS@
+libaggplatformHaiku_la_LIBADD = @HAIKU_LIBS@
+endif
+
diff --git a/agg-src/src/platform/Makefile.am b/agg-src/src/platform/Makefile.am
index ebe5e7e..c6622bc 100644
--- a/agg-src/src/platform/Makefile.am
+++ b/agg-src/src/platform/Makefile.am
@@ -1 +1 @@
-SUBDIRS = X11 sdl win32 AmigaOS BeOS mac
+SUBDIRS = X11 sdl win32 AmigaOS Haiku mac
-- 
2.37.3


From 2f72bf6bd348e920a95f6a5370a617a9b0d367e4 Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Mon, 4 Sep 2023 01:13:27 +0000
Subject: Added essential AGG r139 SVN patches from SourceForge


diff --git a/agg-src/configure.ac b/agg-src/configure.ac
index 830719a..995c641 100644
--- a/agg-src/configure.ac
+++ b/agg-src/configure.ac
@@ -1,4 +1,4 @@
-AC_INIT(agg, 2.6.0)
+AC_INIT(agg, 2.7.0)
 AC_CONFIG_SRCDIR(src/agg_arc.cpp)
 AC_CANONICAL_TARGET
 AC_CONFIG_HEADERS(include/config.h)
@@ -136,7 +136,7 @@ AC_SUBST(x_libraries)
 dnl ###############################################
 
 dnl Settung up library version
-AGG_LIB_VERSION="2:6:0"
+AGG_LIB_VERSION="2:7:0"
 dnl     current-´ / /
 dnl    revision--´ /
 dnl         age---´
diff --git a/agg-src/examples/mol_view.cpp b/agg-src/examples/mol_view.cpp
index 7813dc3..dcc63f1 100644
--- a/agg-src/examples/mol_view.cpp
+++ b/agg-src/examples/mol_view.cpp
@@ -172,7 +172,8 @@ unsigned trim_cr_lf(char* buf)
         --len;
         ++pos;
     }
-    if(pos) strcpy(buf, buf + pos);
+	// Note that strcpy has undefined behavior if the strings overlap
+    if(pos) memmove(buf, buf + pos, len);
 
     // Trim "\n\r" at the end 
     while(len && (buf[len-1] == '\n' || buf[len-1] == '\r')) --len;
@@ -202,7 +203,7 @@ bool molecule::read(FILE* fd)
     unsigned len;
     if(!fgets(buf, 510, fd)) return false;
     len = trim_cr_lf(buf);
-    if(len > 128) len = 128;
+    if(len > 127) len = 127;
 
     if(len) memcpy(m_name, buf, len);
     m_name[len] = 0;
@@ -800,7 +801,7 @@ public:
         else
         {
             char buf[256];
-            sprintf(buf, "File not found: '%s'. Download http://www.antigrain.com/%s\n",
+            sprintf(buf, "File not found: '%s'. Copy from ../art/%s\n",
                     fname, fname);
             message(buf);
         }
diff --git a/agg-src/include/agg_curves.h b/agg-src/include/agg_curves.h
index 1ef02e8..63a4813 100644
--- a/agg-src/include/agg_curves.h
+++ b/agg-src/include/agg_curves.h
@@ -96,6 +96,7 @@ namespace agg
     public:
         curve3_div() : 
             m_approximation_scale(1.0),
+            m_distance_tolerance_square(0.0),
             m_angle_tolerance(0.0),
             m_count(0)
         {}
@@ -376,6 +377,7 @@ namespace agg
     public:
         curve4_div() : 
             m_approximation_scale(1.0),
+            m_distance_tolerance_square(0.0),
             m_angle_tolerance(0.0),
             m_cusp_limit(0.0),
             m_count(0)
diff --git a/agg-src/include/agg_math_stroke.h b/agg-src/include/agg_math_stroke.h
index 6a9d604..b139711 100644
--- a/agg-src/include/agg_math_stroke.h
+++ b/agg-src/include/agg_math_stroke.h
@@ -172,11 +172,9 @@ namespace agg
     {
         double a1 = std::atan2(dy1 * m_width_sign, dx1 * m_width_sign);
         double a2 = std::atan2(dy2 * m_width_sign, dx2 * m_width_sign);
-        double da = a1 - a2;
+        double da = std::acos(m_width_abs / (m_width_abs + 0.125 / m_approx_scale)) * 2;
         int i, n;
 
-        da = std::acos(m_width_abs / (m_width_abs + 0.125 / m_approx_scale)) * 2;
-
         add_vertex(vc, x + dx1, y + dy1);
         if(m_width_sign > 0)
         {
diff --git a/agg-src/include/agg_pixfmt_rgba.h b/agg-src/include/agg_pixfmt_rgba.h
index c9172f6..2c7223c 100644
--- a/agg-src/include/agg_pixfmt_rgba.h
+++ b/agg-src/include/agg_pixfmt_rgba.h
@@ -2371,7 +2371,7 @@ namespace agg
         //--------------------------------------------------------------------
         AGG_INLINE void copy_pixel(int x, int y, const color_type& c)
         {
-            make_pix(pix_value_ptr(x, y, 1), c);
+            pix_value_ptr(x, y, 1)->set(c);
         }
 
         //--------------------------------------------------------------------
diff --git a/agg-src/include/agg_trans_affine.h b/agg-src/include/agg_trans_affine.h
index 90e464b..b3cc1b0 100644
--- a/agg-src/include/agg_trans_affine.h
+++ b/agg-src/include/agg_trans_affine.h
@@ -318,8 +318,8 @@ namespace agg
     //------------------------------------------------------------------------
     inline double trans_affine::scale() const
     {
-        double x = 0.707106781 * sx  + 0.707106781 * shx;
-        double y = 0.707106781 * shy + 0.707106781 * sy;
+        double x = 0.70710678118654752440 * sx  + 0.70710678118654752440 * shx;
+        double y = 0.70710678118654752440 * shy + 0.70710678118654752440 * sy;
         return std::sqrt(x*x + y*y);
     }
 
-- 
2.37.3


From bc2fdaadbf5da438d43e95eae2adf2596fdff93e Mon Sep 17 00:00:00 2001
From: Zhardshard <zhardshard@ghaiku-os.org>
Date: Mon, 4 Sep 2023 01:13:27 +0000
Subject: Fix member initialization order


diff --git a/agg-src/src/agg_trans_double_path.cpp b/agg-src/src/agg_trans_double_path.cpp
index cd40c7f..d5692a9 100644
--- a/agg-src/src/agg_trans_double_path.cpp
+++ b/agg-src/src/agg_trans_double_path.cpp
@@ -21,10 +21,10 @@ namespace agg
 
     //------------------------------------------------------------------------
     trans_double_path::trans_double_path() :
-        m_kindex1(0.0),
-        m_kindex2(0.0),
         m_base_length(0.0),
         m_base_height(1.0),
+        m_kindex1(0.0),
+        m_kindex2(0.0),
         m_status1(initial),
         m_status2(initial),
         m_preserve_x_scale(true)
-- 
2.37.3

