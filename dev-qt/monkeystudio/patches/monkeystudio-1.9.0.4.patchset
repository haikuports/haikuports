From 6135e21baff428fcc70bcace1a1884913abf9aaf Mon Sep 17 00:00:00 2001
From: Augustin Cavalier <waddlesplash@gmail.com>
Date: Wed, 3 Dec 2014 20:58:56 -0500
Subject: Don't pass -rdynamic on Haiku.

Our GCC4 doesn't support this and throws an error.

diff --git a/monkey/monkey.pro b/monkey/monkey.pro
index a5f6cfc..bd7910f 100644
--- a/monkey/monkey.pro
+++ b/monkey/monkey.pro
@@ -28,7 +28,7 @@ mac {
 } else {
     *-*g++* {
         LIBS    *= -Wl,--whole-archive # import all symbols as the not used ones too
-        unix:LIBS   *= -rdynamic
+        unix:LIBS   *=
     } else:*-*clang* {
         LIBS    *= -Wl,--whole-archive # import all symbols as the not used ones too
         unix:LIBS   *= -rdynamic
-- 
2.19.0


From 41e0737628e79cadbee4ba1195e1a223bbeacde8 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Mon, 18 Dec 2017 11:41:28 +0300
Subject: Link against qscintilla2_qt5


diff --git a/qscintilla/qscintilla.pri b/qscintilla/qscintilla.pri
index 51a052b..d2e8ddc 100644
--- a/qscintilla/qscintilla.pri
+++ b/qscintilla/qscintilla.pri
@@ -22,7 +22,7 @@ isEqual( SYSTEM_QSCINTILLA, 1 ) {
 
 QSCINTILLA_TARGET   = qscintilla2
 greaterThan(QT_MAJOR_VERSION, 4) {
-    isEqual( SYSTEM_QSCINTILLA, 1 ):QSCINTILLA_TARGET   = qt5scintilla2
+    isEqual( SYSTEM_QSCINTILLA, 1 ):QSCINTILLA_TARGET   = qscintilla2_qt5
     QT *= widgets printsupport
     # MacExtras is Qt 5.2 & up
     greaterThan(QT_MINOR_VERSION, 1) {
-- 
2.19.0


From 8f3681fecda808d2c5536e3a345bdee6a023b05a Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Tue, 25 Sep 2018 13:22:50 +0300
Subject: Add support for Qt 5.11


diff --git a/plugins/child/QtDesigner/src/3rdparty/designer/5.11/pluginmanager_p.h b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/pluginmanager_p.h
new file mode 100644
index 0000000..35a2bf1
--- /dev/null
+++ b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/pluginmanager_p.h
@@ -0,0 +1,149 @@
+/****************************************************************************
+**
+** Copyright (C) 2016 The Qt Company Ltd.
+** Contact: https://www.qt.io/licensing/
+**
+** This file is part of the Qt Designer of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:GPL-EXCEPT$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see https://www.qt.io/terms-conditions. For further
+** information use the contact form at https://www.qt.io/contact-us.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3 as published by the Free Software
+** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
+** included in the packaging of this file. Please review the following
+** information to ensure the GNU General Public License requirements will
+** be met: https://www.gnu.org/licenses/gpl-3.0.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists for the convenience
+// of Qt Designer.  This header
+// file may change from version to version without notice, or even be removed.
+//
+// We mean it.
+//
+
+#ifndef PLUGINMANAGER_H
+#define PLUGINMANAGER_H
+
+#include "shared_global_p.h"
+#include "shared_enums_p.h"
+
+#include <QtCore/QSharedDataPointer>
+#include <QtCore/QMap>
+#include <QtCore/QPair>
+#include <QtCore/QObject>
+#include <QtCore/QStringList>
+
+QT_BEGIN_NAMESPACE
+
+class QDesignerFormEditorInterface;
+class QDesignerCustomWidgetInterface;
+class QDesignerPluginManagerPrivate;
+
+class QDesignerCustomWidgetSharedData;
+
+/* Information contained in the Dom XML of a custom widget. */
+class QDESIGNER_SHARED_EXPORT QDesignerCustomWidgetData {
+public:
+    // StringPropertyType: validation mode and translatable flag.
+    typedef QPair<qdesigner_internal::TextPropertyValidationMode, bool> StringPropertyType;
+
+    explicit QDesignerCustomWidgetData(const QString &pluginPath = QString());
+
+    enum ParseResult { ParseOk, ParseWarning, ParseError };
+    ParseResult parseXml(const QString &xml, const QString &name, QString *errorMessage);
+
+    QDesignerCustomWidgetData(const QDesignerCustomWidgetData&);
+    QDesignerCustomWidgetData& operator=(const QDesignerCustomWidgetData&);
+    ~QDesignerCustomWidgetData();
+
+    bool isNull() const;
+
+    QString pluginPath() const;
+
+    // Data as parsed from the widget's domXML().
+    QString xmlClassName() const;
+    // Optional. The language the plugin is supposed to be used with.
+    QString xmlLanguage() const;
+    // Optional. method used to add pages to a container with a container extension
+    QString xmlAddPageMethod() const;
+    // Optional. Base class
+    QString xmlExtends() const;
+    // Optional. The name to be used in the widget box.
+    QString xmlDisplayName() const;
+    // Type of a string property
+    bool xmlStringPropertyType(const QString &name, StringPropertyType *type) const;
+    // Custom tool tip of property
+    QString propertyToolTip(const QString &name) const;
+
+private:
+    QSharedDataPointer<QDesignerCustomWidgetSharedData> m_d;
+};
+
+class QDESIGNER_SHARED_EXPORT QDesignerPluginManager: public QObject
+{
+    Q_OBJECT
+public:
+    typedef QList<QDesignerCustomWidgetInterface*> CustomWidgetList;
+
+    explicit QDesignerPluginManager(QDesignerFormEditorInterface *core);
+    virtual ~QDesignerPluginManager();
+
+    QDesignerFormEditorInterface *core() const;
+
+    QObject *instance(const QString &plugin) const;
+
+    QStringList registeredPlugins() const;
+
+    QStringList findPlugins(const QString &path);
+
+    QStringList pluginPaths() const;
+    void setPluginPaths(const QStringList &plugin_paths);
+
+    QStringList disabledPlugins() const;
+    void setDisabledPlugins(const QStringList &disabled_plugins);
+
+    QStringList failedPlugins() const;
+    QString failureReason(const QString &pluginName) const;
+
+    QObjectList instances() const;
+
+    CustomWidgetList registeredCustomWidgets() const;
+    QDesignerCustomWidgetData customWidgetData(QDesignerCustomWidgetInterface *w) const;
+    QDesignerCustomWidgetData customWidgetData(const QString &className) const;
+
+    bool registerNewPlugins();
+
+public slots:
+    bool syncSettings();
+    void ensureInitialized();
+
+private:
+    void updateRegisteredPlugins();
+    void registerPath(const QString &path);
+    void registerPlugin(const QString &plugin);
+
+private:
+    static QStringList defaultPluginPaths();
+
+    QDesignerPluginManagerPrivate *m_d;
+};
+
+QT_END_NAMESPACE
+
+#endif // PLUGINMANAGER_H
diff --git a/plugins/child/QtDesigner/src/3rdparty/designer/5.11/previewmanager_p.h b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/previewmanager_p.h
new file mode 100644
index 0000000..271df5d
--- /dev/null
+++ b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/previewmanager_p.h
@@ -0,0 +1,171 @@
+/****************************************************************************
+**
+** Copyright (C) 2016 The Qt Company Ltd.
+** Contact: https://www.qt.io/licensing/
+**
+** This file is part of the Qt Designer of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:GPL-EXCEPT$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see https://www.qt.io/terms-conditions. For further
+** information use the contact form at https://www.qt.io/contact-us.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3 as published by the Free Software
+** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
+** included in the packaging of this file. Please review the following
+** information to ensure the GNU General Public License requirements will
+** be met: https://www.gnu.org/licenses/gpl-3.0.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists for the convenience
+// of Qt Designer.  This header
+// file may change from version to version without notice, or even be removed.
+//
+// We mean it.
+//
+
+#ifndef PREVIEWMANAGER_H
+#define PREVIEWMANAGER_H
+
+#include "shared_global_p.h"
+
+#include <QtCore/QObject>
+#include <QtCore/QString>
+#include <QtCore/QSharedDataPointer>
+
+QT_BEGIN_NAMESPACE
+
+class QDesignerFormWindowInterface;
+class QWidget;
+class QPixmap;
+class QAction;
+class QActionGroup;
+class QMenu;
+class QWidget;
+class QDesignerSettingsInterface;
+
+namespace qdesigner_internal {
+
+// ----------- PreviewConfiguration
+
+class PreviewConfigurationData;
+
+class QDESIGNER_SHARED_EXPORT PreviewConfiguration {
+public:
+    PreviewConfiguration();
+    explicit PreviewConfiguration(const QString &style,
+                                  const QString &applicationStyleSheet = QString(),
+                                  const QString &deviceSkin = QString());
+
+    PreviewConfiguration(const PreviewConfiguration&);
+    PreviewConfiguration& operator=(const PreviewConfiguration&);
+    ~PreviewConfiguration();
+
+    QString style() const;
+    void setStyle(const QString &);
+
+    // Style sheet to prepend (to simulate the effect od QApplication::setSyleSheet()).
+    QString applicationStyleSheet() const;
+    void setApplicationStyleSheet(const QString &);
+
+    QString deviceSkin() const;
+    void setDeviceSkin(const QString &);
+
+    void clear();
+    void toSettings(const QString &prefix, QDesignerSettingsInterface *settings) const;
+    void fromSettings(const QString &prefix, const QDesignerSettingsInterface *settings);
+
+private:
+    QSharedDataPointer<PreviewConfigurationData> m_d;
+};
+
+QDESIGNER_SHARED_EXPORT bool operator<(const PreviewConfiguration &pc1, const PreviewConfiguration &pc2);
+QDESIGNER_SHARED_EXPORT bool operator==(const PreviewConfiguration &pc1, const PreviewConfiguration &pc2);
+QDESIGNER_SHARED_EXPORT bool operator!=(const PreviewConfiguration &pc1, const PreviewConfiguration &pc2);
+
+// ----------- Preview window manager.
+// Maintains a list of preview widgets with their associated form windows and configuration.
+
+class PreviewManagerPrivate;
+
+class QDESIGNER_SHARED_EXPORT PreviewManager : public QObject
+{
+    Q_OBJECT
+public:
+
+    enum PreviewMode {
+        // Modal preview. Do not use on Macs as dialogs would have no close button
+        ApplicationModalPreview,
+        // Non modal previewing of one form in different configurations (closes if form window changes)
+        SingleFormNonModalPreview,
+        // Non modal previewing of several forms in different configurations
+        MultipleFormNonModalPreview };
+
+    explicit PreviewManager(PreviewMode mode, QObject *parent);
+    virtual ~PreviewManager();
+
+    // Show preview. Raise existing preview window if there is one with a matching
+    // configuration, else create a new preview.
+    QWidget *showPreview(const QDesignerFormWindowInterface *, const PreviewConfiguration &pc, int deviceProfileIndex /*=-1*/, QString *errorMessage);
+    // Convenience that creates a preview using a configuration taken from the settings.
+    QWidget *showPreview(const QDesignerFormWindowInterface *, const QString &style, int deviceProfileIndex /*=-1*/, QString *errorMessage);
+    QWidget *showPreview(const QDesignerFormWindowInterface *, const QString &style, QString *errorMessage);
+
+    int previewCount() const;
+
+    // Create a pixmap for printing.
+    QPixmap createPreviewPixmap(const QDesignerFormWindowInterface *fw, const PreviewConfiguration &pc, int deviceProfileIndex /*=-1*/, QString *errorMessage);
+    // Convenience that creates a pixmap using a configuration taken from the settings.
+    QPixmap createPreviewPixmap(const QDesignerFormWindowInterface *fw, const QString &style, int deviceProfileIndex /*=-1*/, QString *errorMessage);
+    QPixmap createPreviewPixmap(const QDesignerFormWindowInterface *fw, const QString &style, QString *errorMessage);
+
+    bool eventFilter(QObject *watched, QEvent *event) override;
+
+public slots:
+    void closeAllPreviews();
+
+signals:
+    void firstPreviewOpened();
+    void lastPreviewClosed();
+
+private slots:
+    void slotZoomChanged(int);
+
+private:
+
+    virtual Qt::WindowFlags previewWindowFlags(const QWidget *widget) const;
+    virtual QWidget *createDeviceSkinContainer(const QDesignerFormWindowInterface *) const;
+
+    QWidget *raise(const QDesignerFormWindowInterface *, const PreviewConfiguration &pc);
+    QWidget *createPreview(const QDesignerFormWindowInterface *,
+                           const PreviewConfiguration &pc,
+                           int deviceProfileIndex /* = -1 */,
+                           QString *errorMessage,
+                           /*Disabled by default, <0 */
+                           int initialZoom = -1);
+
+    void updatePreviewClosed(QWidget *w);
+
+    PreviewManagerPrivate *d;
+
+    PreviewManager(const PreviewManager &other);
+    PreviewManager &operator =(const PreviewManager &other);
+};
+}
+
+QT_END_NAMESPACE
+
+#endif // PREVIEWMANAGER_H
diff --git a/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_enums_p.h b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_enums_p.h
new file mode 100644
index 0000000..d9c3dc0
--- /dev/null
+++ b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_enums_p.h
@@ -0,0 +1,87 @@
+/****************************************************************************
+**
+** Copyright (C) 2016 The Qt Company Ltd.
+** Contact: https://www.qt.io/licensing/
+**
+** This file is part of the Qt Designer of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:GPL-EXCEPT$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see https://www.qt.io/terms-conditions. For further
+** information use the contact form at https://www.qt.io/contact-us.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3 as published by the Free Software
+** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
+** included in the packaging of this file. Please review the following
+** information to ensure the GNU General Public License requirements will
+** be met: https://www.gnu.org/licenses/gpl-3.0.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists for the convenience
+// of Qt Designer.  This header
+// file may change from version to version without notice, or even be removed.
+//
+// We mean it.
+//
+
+#ifndef SHAREDENUMS_H
+#define SHAREDENUMS_H
+
+#include "shared_global_p.h"
+
+QT_BEGIN_NAMESPACE
+
+namespace qdesigner_internal {
+
+    // Validation mode of text property line edits
+    enum TextPropertyValidationMode {
+        // Allow for multiline editing using literal "\n".
+        ValidationMultiLine,
+        // Allow for HTML rich text including multiline editing using literal "\n".
+        ValidationRichText,
+        // Validate a stylesheet
+        ValidationStyleSheet,
+        // Single line mode, suppresses newlines
+        ValidationSingleLine,
+        // Allow only for identifier characters
+        ValidationObjectName,
+        // Allow only for identifier characters and colons
+        ValidationObjectNameScope,
+        // URL
+        ValidationURL
+        };
+
+    // Container types
+    enum ContainerType {
+        // A container with pages, at least one of which one must always be present (for example, QTabWidget)
+        PageContainer,
+        // Mdi type container. All pages may be deleted, no concept of page order
+        MdiContainer,
+        // Wizard container
+        WizardContainer
+        };
+
+    enum AuxiliaryItemDataRoles {
+        // item->flags while being edited
+        ItemFlagsShadowRole = 0x13370551
+    };
+
+    enum ObjectNamingMode { CamelCase, Underscore };
+}
+
+QT_END_NAMESPACE
+
+#endif // SHAREDENUMS_H
diff --git a/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_global_p.h b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_global_p.h
new file mode 100644
index 0000000..3609e5b
--- /dev/null
+++ b/plugins/child/QtDesigner/src/3rdparty/designer/5.11/shared_global_p.h
@@ -0,0 +1,63 @@
+/****************************************************************************
+**
+** Copyright (C) 2016 The Qt Company Ltd.
+** Contact: https://www.qt.io/licensing/
+**
+** This file is part of the Qt Designer of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:GPL-EXCEPT$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see https://www.qt.io/terms-conditions. For further
+** information use the contact form at https://www.qt.io/contact-us.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3 as published by the Free Software
+** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
+** included in the packaging of this file. Please review the following
+** information to ensure the GNU General Public License requirements will
+** be met: https://www.gnu.org/licenses/gpl-3.0.html.
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists for the convenience
+// of Qt Designer.  This header
+// file may change from version to version without notice, or even be removed.
+//
+// We mean it.
+//
+
+#ifndef SHARED_GLOBAL_H
+#define SHARED_GLOBAL_H
+
+#include <QtCore/qglobal.h>
+
+#ifdef QT_DESIGNER_STATIC
+#define QDESIGNER_SHARED_EXTERN
+#define QDESIGNER_SHARED_IMPORT
+#else
+#define QDESIGNER_SHARED_EXTERN Q_DECL_EXPORT
+#define QDESIGNER_SHARED_IMPORT Q_DECL_IMPORT
+#endif
+
+#ifndef QT_NO_SHARED_EXPORT
+#  ifdef QDESIGNER_SHARED_LIBRARY
+#    define QDESIGNER_SHARED_EXPORT QDESIGNER_SHARED_EXTERN
+#  else
+#    define QDESIGNER_SHARED_EXPORT QDESIGNER_SHARED_IMPORT
+#  endif
+#else
+#  define QDESIGNER_SHARED_EXPORT
+#endif
+
+#endif // SHARED_GLOBAL_H
-- 
2.19.0

