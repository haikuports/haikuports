From e14a0062b596f09bb98f18fe55a7b51add633d62 Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Tue, May 21 2019 08:10:16 +0000
Subject: QtWebEngine 5.12.3 patchset

From: Jan Steffens <heftig@archlinux.org>
Date: 2017-09-19 23:30:08 -0700
Subject: This is required for QtWebEngine to show the patent-free LCD rendering. Without this patch, only grayscale rendering is used.
References: boo#1061344
Upstream: submitted
Index: qtwebengine-everywhere-src-5.11.0/src/3rdparty/chromium/third_party/skia/src/ports/SkFontHost_FreeType.cpp
===================================================================
--- qtwebengine-everywhere-src-5.11.0.orig/src/3rdparty/chromium/third_party/skia/src/ports/SkFontHost_FreeType.cpp
+++ qtwebengine-everywhere-src-5.11.0/src/3rdparty/chromium/third_party/skia/src/ports/SkFontHost_FreeType.cpp
@@ -99,8 +99,6 @@ public:
     FreeTypeLibrary()
         : fGetVarDesignCoordinates(nullptr)
         , fLibrary(nullptr)
-        , fIsLCDSupported(false)
-        , fLCDExtra(0)
     {
         if (FT_New_Library(&gFTMemory, &fLibrary)) {
             return;
@@ -150,8 +148,6 @@ public:
         // Setup LCD filtering. This reduces color fringes for LCD smoothed glyphs.
         // The default has changed over time, so this doesn't mean the same thing to all users.
         if (FT_Library_SetLcdFilter(fLibrary, FT_LCD_FILTER_DEFAULT) == 0) {
-            fIsLCDSupported = true;
-            fLCDExtra = 2; //Using a filter adds one full pixel to each side.
         }
     }
     ~FreeTypeLibrary() {
@@ -161,8 +157,6 @@ public:
     }
 
     FT_Library library() { return fLibrary; }
-    bool isLCDSupported() { return fIsLCDSupported; }
-    int lcdExtra() { return fLCDExtra; }
 
     // FT_Get_{MM,Var}_{Blend,Design}_Coordinates were added in FreeType 2.7.1.
     // Prior to this there was no way to get the coordinates out of the FT_Face.
@@ -173,8 +167,6 @@ public:
 
 private:
     FT_Library fLibrary;
-    bool fIsLCDSupported;
-    int fLCDExtra;
 
     // FT_Library_SetLcdFilterWeights was introduced in FreeType 2.4.0.
     // The following platforms provide FreeType of at least 2.4.0.
@@ -659,17 +651,6 @@ void SkTypeface_FreeType::onFilterRec(Sk
         rec->fTextSize = SkIntToScalar(1 << 14);
     }
 
-    if (isLCD(*rec)) {
-        // TODO: re-work so that FreeType is set-up and selected by the SkFontMgr.
-        SkAutoMutexAcquire ama(gFTMutex);
-        ref_ft_library();
-        if (!gFTLibrary->isLCDSupported()) {
-            // If the runtime Freetype library doesn't support LCD, disable it here.
-            rec->fMaskFormat = SkMask::kA8_Format;
-        }
-        unref_ft_library();
-    }
-
     SkPaint::Hinting h = rec->getHinting();
     if (SkPaint::kFull_Hinting == h && !isLCD(*rec)) {
         // collapse full->normal hinting if we're not doing LCD
@@ -1062,11 +1043,11 @@ bool SkScalerContext_FreeType::getCBoxFo
 void SkScalerContext_FreeType::updateGlyphIfLCD(SkGlyph* glyph) {
     if (isLCD(fRec)) {
         if (fLCDIsVert) {
-            glyph->fHeight += gFTLibrary->lcdExtra();
-            glyph->fTop -= gFTLibrary->lcdExtra() >> 1;
+            glyph->fHeight += 2;
+            glyph->fTop -= 1;
         } else {
-            glyph->fWidth += gFTLibrary->lcdExtra();
-            glyph->fLeft -= gFTLibrary->lcdExtra() >> 1;
+            glyph->fWidth += 2;
+            glyph->fLeft -= 1;
         }
     }
 }

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/allocator/partition_allocator/page_allocator.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/allocator/partition_allocator/page_allocator.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/allocator/partition_allocator/page_allocator.cc	2018-06-15 09:47:20.041943040 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/allocator/partition_allocator/page_allocator.cc	2018-09-23 05:55:23.099876864 +0200
@@ -31,6 +32,7 @@
 #ifndef MAP_ANONYMOUS
 #define MAP_ANONYMOUS MAP_ANON
 #endif
+#endif
 
 namespace base {
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/base_paths_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/base_paths_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/base_paths_posix.cc	2018-06-15 09:47:20.051380224 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/base_paths_posix.cc	2018-09-22 18:21:15.522715136 +0200
@@ -29,6 +29,8 @@
 #include <sys/sysctl.h>
 #elif defined(OS_SOLARIS) || defined(OS_AIX)
 #include <stdlib.h>
+#elif defined(OS_HAIKU)
+#include <private/app/AppMisc.h>
 #endif
 
 namespace base {
@@ -74,6 +76,14 @@
       else
         *result = FilePath("/usr/local/chrome/chrome");
       return true;
+#elif defined(OS_HAIKU)
+      char path[B_PATH_NAME_LENGTH];
+      if(BPrivate::get_app_path(path) != B_OK) {
+        NOTREACHED() << "Unable to find current process path.";
+        return false;
+      }
+      *result = FilePath(path);
+      return true;
 #endif
     }
     case DIR_SOURCE_ROOT: {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/BUILD.gn	2018-06-15 09:47:20.060293120 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/BUILD.gn	2018-10-01 20:06:27.918814720 +0200
@@ -1298,6 +1298,23 @@
     libs = [ "launchpad" ]
   }
 
+  if (is_haiku) {
+    sources += [
+      "base_paths_posix.cc",
+      "process/memory_stubs.cc",
+      "process/process_handle_haiku.cc",
+      "process/process_metrics_haiku.cc",
+      "threading/platform_thread_haiku.cc",
+      "sys_info_haiku.cc",
+    ]
+
+    deps += [
+      "//base/third_party/xdg_user_dirs",
+    ]
+
+    defines += [ "_BSD_SOURCE", "__USE_XOPEN2K8" ]
+  }
+
   # NaCl.
   if (is_nacl) {
     # We reset sources_assignment_filter in order to explicitly include
@@ -1589,12 +1606,14 @@
     ]
   } else {
     # Non-Linux.
-    sources -= [
-      "nix/mime_util_xdg.cc",
-      "nix/mime_util_xdg.h",
-      "nix/xdg_util.cc",
-      "nix/xdg_util.h",
-    ]
+    if(!is_haiku) {
+      sources -= [
+        "nix/mime_util_xdg.cc",
+        "nix/mime_util_xdg.h",
+        "nix/xdg_util.cc",
+        "nix/xdg_util.h",
+      ]
+    }
 
     if (!is_android) {
       sources -= [

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/debugger_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/debugger_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/debugger_posix.cc	2018-06-15 09:47:20.007864320 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/debugger_posix.cc	2018-09-22 15:40:11.969932800 +0200
@@ -168,6 +168,12 @@
   return false;
 }
 
+#elif defined(OS_HAIKU)
+
+bool BeingDebugged() {
+  return false;
+}
+
 #else
 
 bool BeingDebugged() {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/stack_trace_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/stack_trace_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/stack_trace_posix.cc	2018-06-15 09:47:20.009961472 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/stack_trace_posix.cc	2018-09-12 14:29:10.716177408 +0200
@@ -27,7 +27,7 @@
 #if !defined(USE_SYMBOLIZE)
 #include <cxxabi.h>
 #endif
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
 #include <execinfo.h>
 #endif
 
@@ -85,7 +85,7 @@
   // Note: code in this function is NOT async-signal safe (std::string uses
   // malloc internally).
 
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
   std::string::size_type search_from = 0;
   while (search_from < text->size()) {
     // Look for the start of a mangled symbol, from search_from.
@@ -132,7 +132,7 @@
   virtual ~BacktraceOutputHandler() = default;
 };
 
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
 void OutputPointer(void* pointer, BacktraceOutputHandler* handler) {
   // This should be more than enough to store a 64-bit number in hex:
   // 16 hex digits + 1 for null-terminator.
@@ -800,7 +800,7 @@
 // NOTE: This code MUST be async-signal safe (it's used by in-process
 // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
   count = std::min(arraysize(trace_), count);
 
   // Though the backtrace API man page does not list any possible negative
@@ -815,13 +815,13 @@
   // NOTE: This code MUST be async-signal safe (it's used by in-process
   // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
   PrintBacktraceOutputHandler handler;
   ProcessBacktrace(trace_, count_, &handler);
 #endif
 }
 
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
 void StackTrace::OutputToStream(std::ostream* os) const {
   StreamBacktraceOutputHandler handler(os);
   ProcessBacktrace(trace_, count_, &handler);

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/stack_trace.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/stack_trace.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/debug/stack_trace.cc	2018-06-15 09:47:20.011010048 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/debug/stack_trace.cc	2018-09-12 14:36:49.875560960 +0200
@@ -214,7 +214,7 @@
 
 std::string StackTrace::ToString() const {
   std::stringstream stream;
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX) && !defined(OS_HAIKU)
   OutputToStream(&stream);
 #endif
   return stream.str();

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/export_template.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/export_template.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/export_template.h	2018-06-15 09:47:20.013369344 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/export_template.h	2018-09-22 19:57:00.677117952 +0200
@@ -150,6 +150,7 @@
                 #export)
 #define EXPORT_TEMPLATE_TEST_DEFAULT_DEFAULT(...) true
 #define EXPORT_TEMPLATE_TEST_MSVC_HACK_MSVC_HACK(...) true
+#define EXPORT_TEMPLATE_TEST_MSVC_HACK_DEFAULT(...) true
 
 EXPORT_TEMPLATE_TEST(DEFAULT, );
 EXPORT_TEMPLATE_TEST(DEFAULT, __attribute__((visibility("default"))));
@@ -159,5 +160,6 @@
 #undef EXPORT_TEMPLATE_TEST
 #undef EXPORT_TEMPLATE_TEST_DEFAULT_DEFAULT
 #undef EXPORT_TEMPLATE_TEST_MSVC_HACK_MSVC_HACK
+#undef EXPORT_TEMPLATE_TEST_MSVC_HACK_DEFAULT
 
 #endif  // BASE_EXPORT_TEMPLATE_H_

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/files/memory_mapped_file_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/files/memory_mapped_file_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/files/memory_mapped_file_posix.cc	2018-06-15 09:47:20.009175040 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/files/memory_mapped_file_posix.cc	2018-09-12 14:01:50.445906944 +0200
@@ -106,7 +106,7 @@
       // fail if the disk is full and the file is sparse.
       bool do_manual_extension = false;
 
-#if defined(OS_ANDROID) && __ANDROID_API__ < 21
+#if defined(OS_HAIKU) || defined(OS_ANDROID) && __ANDROID_API__ < 21
       // Only Android API>=21 supports the fallocate call. Older versions need
       // to manually extend the file by writing zeros at block intervals.
       do_manual_extension = true;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/logging.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/logging.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/logging.cc	2018-06-15 09:47:20.060030976 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/logging.cc	2018-09-12 14:33:06.756023296 +0200
@@ -575,7 +575,7 @@
 LogMessage::~LogMessage() {
   size_t stack_start = stream_.tellp();
 #if !defined(OFFICIAL_BUILD) && !defined(OS_NACL) && !defined(__UCLIBC__) && \
-    !defined(OS_AIX)
+    !defined(OS_AIX) && !defined(OS_HAIKU)
   if (severity_ == LOG_FATAL && !base::debug::BeingDebugged()) {
     // Include a stack trace on a fatal, unless a debugger is attached.
     base::debug::StackTrace trace;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/memory/discardable_shared_memory.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/memory/discardable_shared_memory.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/memory/discardable_shared_memory.cc	2018-06-15 09:47:20.024903680 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/memory/discardable_shared_memory.cc	2018-09-23 06:02:22.341049344 +0200
@@ -367,7 +367,7 @@
 // Note: this memory will not be accessed again.  The segment will be
 // freed asynchronously at a later time, so just do the best
 // immediately.
-#if defined(OS_POSIX) && !defined(OS_NACL)
+#if defined(OS_POSIX) && !defined(OS_NACL) && !defined(OS_HAIKU)
 // Linux and Android provide MADV_REMOVE which is preferred as it has a
 // behavior that can be verified in tests. Other POSIX flavors (MacOSX, BSDs),
 // provide MADV_FREE which has the same result but memory is purged lazily.

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/posix/unix_domain_socket.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/posix/unix_domain_socket.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/posix/unix_domain_socket.cc	2018-06-15 09:47:20.050593792 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/posix/unix_domain_socket.cc	2018-09-23 06:01:01.745537536 +0200
@@ -56,7 +56,7 @@
 
 // static
 bool UnixDomainSocket::EnableReceiveProcessId(int fd) {
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_HAIKU)
   const int enable = 1;
   return setsockopt(fd, SOL_SOCKET, SO_PASSCRED, &enable, sizeof(enable)) == 0;
 #else
@@ -175,7 +175,7 @@
         wire_fds = reinterpret_cast<int*>(CMSG_DATA(cmsg));
         wire_fds_len = payload_len / sizeof(int);
       }
-#if !defined(OS_NACL_NONSFI) && !defined(OS_MACOSX)
+#if !defined(OS_NACL_NONSFI) && !defined(OS_MACOSX) && !defined(OS_HAIKU)
       // The PNaCl toolchain for Non-SFI binary build and macOS do not support
       // SCM_CREDENTIALS.
       if (cmsg->cmsg_level == SOL_SOCKET &&
@@ -184,7 +184,7 @@
         DCHECK_EQ(pid, -1);
         pid = reinterpret_cast<struct ucred*>(CMSG_DATA(cmsg))->pid;
       }
-#endif  // !defined(OS_NACL_NONSFI) && !defined(OS_MACOSX)
+#endif  // !defined(OS_NACL_NONSFI) && !defined(OS_MACOSX) && !defined(OS_HAIKU)
     }
   }
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/launch_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/launch_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/launch_posix.cc	2018-06-15 09:47:20.022806528 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/launch_posix.cc	2018-09-22 19:39:16.994574336 +0200
@@ -14,7 +14,9 @@
 #include <stdint.h>
 #include <stdlib.h>
 #include <sys/resource.h>
+#if !defined(OS_HAIKU)
 #include <sys/syscall.h>
+#endif
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/wait.h>
@@ -234,6 +236,7 @@
   // DANGER: no calls to malloc or locks are allowed from now on:
   // http://crbug.com/36678
 
+#if !defined(OS_HAIKU)
   // Get the maximum number of FDs possible.
   size_t max_fds = GetMaxFds();
 
@@ -288,6 +291,7 @@
     int ret = IGNORE_EINTR(close(fd));
     DPCHECK(ret == 0);
   }
+#endif
 }
 
 Process LaunchProcess(const CommandLine& cmdline,

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/memory.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/memory.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/memory.cc	2018-06-15 09:47:20.022544384 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/memory.cc	2018-09-12 15:04:02.241958912 +0200
@@ -10,7 +10,7 @@
 namespace base {
 
 // Defined in memory_win.cc for Windows.
-#if !defined(OS_WIN)
+#if !defined(OS_WIN) && !defined(OS_HAIKU)
 
 namespace {
 
@@ -31,7 +31,7 @@
 #endif
 
 // Defined in memory_mac.mm for Mac.
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_HAIKU)
 
 bool UncheckedCalloc(size_t num_items, size_t size, void** result) {
   const size_t alloc_size = num_items * size;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_handle_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_handle_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_handle_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_handle_haiku.cc	2018-09-12 16:10:10.069730304 +0200
@@ -0,0 +1,22 @@
+// Copyright (c) 2013 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "base/logging.h"
+#include "base/process/process_handle.h"
+
+#include "base/files/file_util.h"
+
+namespace base {
+
+ProcessId GetParentProcessId(ProcessHandle process) {
+  NOTIMPLEMENTED();
+  return -1;
+}
+
+FilePath GetProcessExecutablePath(ProcessHandle process) {
+  NOTIMPLEMENTED();
+  return FilePath();
+}
+
+}  // namespace base

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics_haiku.cc	2018-06-15 09:47:20.413663232 +0200
@@ -0,0 +1,52 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "base/process/process_metrics.h"
+
+namespace base {
+
+size_t GetSystemCommitCharge() {
+  // Not available, doesn't seem likely that it will be (for the whole system).
+  NOTIMPLEMENTED();
+  return 0;
+}
+
+// static
+std::unique_ptr<ProcessMetrics> ProcessMetrics::CreateProcessMetrics(
+    ProcessHandle process) {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return nullptr;
+}
+
+double ProcessMetrics::GetPlatformIndependentCPUUsage() {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return 0.0;
+}
+
+size_t ProcessMetrics::GetPagefileUsage() const {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return 0;
+}
+
+size_t ProcessMetrics::GetWorkingSetSize() const {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return 0;
+}
+
+size_t ProcessMetrics::GetPeakWorkingSetSize() const {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return 0;
+}
+
+bool ProcessMetrics::GetWorkingSetKBytes(WorkingSetKBytes* ws_usage) const {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return false;
+}
+
+bool GetSystemMemoryInfo(SystemMemoryInfoKB* meminfo) {
+  NOTIMPLEMENTED();  // TODO(fuchsia): https://crbug.com/706592.
+  return false;
+}
+
+}  // namespace base

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics_posix.cc	2018-06-15 09:47:20.017563648 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics_posix.cc	2018-09-12 14:00:27.150208512 +0200
@@ -49,6 +49,8 @@
 static const rlim_t kSystemDefaultMaxFds = 1024;
 #elif defined(OS_AIX)
 static const rlim_t kSystemDefaultMaxFds = 8192;
+#elif defined(OS_HAIKU)
+static const rlim_t kSystemDefaultMaxFds = 8192;
 #endif
 
 size_t GetMaxFds() {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_metrics.h	2018-06-15 09:47:20.020709376 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_metrics.h	2018-09-12 02:21:49.550502400 +0200
@@ -358,7 +358,8 @@
 #endif  // defined(OS_POSIX)
 
 #if defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX) || \
-    defined(OS_ANDROID) || defined(OS_AIX) || defined(OS_FUCHSIA)
+    defined(OS_ANDROID) || defined(OS_AIX) || defined(OS_FUCHSIA) || \
+    defined(OS_HAIKU)
 // Data about system-wide memory consumption. Values are in KB. Available on
 // Windows, Mac, Linux, Android and Chrome OS.
 //
@@ -406,7 +407,7 @@
 #endif
 
 #if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_AIX) || \
-    defined(OS_FUCHSIA)
+    defined(OS_FUCHSIA) || defined(OS_HAIKU)
   int buffers = 0;
   int cached = 0;
   int active_anon = 0;
@@ -416,7 +417,7 @@
   int dirty = 0;
   int reclaimable = 0;
 #endif  // defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_AIX) ||
-        // defined(OS_FUCHSIA)
+        // defined(OS_FUCHSIA) || defined(OS_HAIKU)
 
 #if defined(OS_CHROMEOS)
   int shmem = 0;
@@ -442,7 +443,8 @@
 BASE_EXPORT bool GetSystemMemoryInfo(SystemMemoryInfoKB* meminfo);
 
 #endif  // defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX) ||
-        // defined(OS_ANDROID) || defined(OS_AIX) || defined(OS_FUCHSIA)
+        // defined(OS_ANDROID) || defined(OS_AIX) || defined(OS_FUCHSIA) ||
+        // defined(OS_HAIKU)
 
 #if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_AIX)
 // Parse the data found in /proc/<pid>/stat and return the sum of the

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/process/process_posix.cc	2018-06-15 09:47:20.023592960 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/process/process_posix.cc	2018-09-12 13:58:59.974389248 +0200
@@ -396,7 +396,11 @@
 
 int Process::GetPriority() const {
   DCHECK(IsValid());
+#ifndef OS_HAIKU
   return getpriority(PRIO_PROCESS, process_);
+#else
+  return 0;
+#endif
 }
 
 }  // namespace base

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/sys_info_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/sys_info_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/sys_info_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/sys_info_haiku.cc	2018-09-12 15:12:31.089391104 +0200
@@ -0,0 +1,39 @@
+// Copyright 2018 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "base/sys_info.h"
+
+#include "base/logging.h"
+
+#include <kernel/OS.h>
+
+namespace base {
+
+// static
+int64_t SysInfo::AmountOfPhysicalMemoryImpl() {
+    system_info systemInfo;
+    get_system_info(&systemInfo);
+    return static_cast<int64_t>(systemInfo.max_pages * (B_PAGE_SIZE / 1048576.0f) + 0.5f);
+}
+
+// static
+int64_t SysInfo::AmountOfAvailablePhysicalMemoryImpl() {
+  // TODO(fuchsia): https://crbug.com/706592 This is not exposed.
+  NOTREACHED();
+  return 0;
+}
+
+// static
+int SysInfo::NumberOfProcessors() {
+    system_info systemInfo;
+    get_system_info(&systemInfo);
+    return static_cast<int>(systemInfo.cpu_count);
+}
+
+// static
+int64_t SysInfo::AmountOfVirtualMemory() {
+  return 0;
+}
+
+}  // namespace base

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/sys_info_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/sys_info_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/sys_info_posix.cc	2018-06-15 09:47:20.032768000 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/sys_info_posix.cc	2018-09-12 15:14:06.481296384 +0200
@@ -35,7 +35,7 @@
 
 namespace {
 
-#if !defined(OS_OPENBSD) && !defined(OS_FUCHSIA)
+#if !defined(OS_OPENBSD) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 int NumberOfProcessors() {
   // sysconf returns the number of "logical" (not "physical") processors on both
   // Mac and Linux.  So we get the number of max available "logical" processors.
@@ -64,7 +64,7 @@
     g_lazy_number_of_processors = LAZY_INSTANCE_INITIALIZER;
 #endif  // !defined(OS_OPENBSD) && !defined(OS_FUCHSIA)
 
-#if !defined(OS_FUCHSIA)
+#if !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 int64_t AmountOfVirtualMemory() {
   struct rlimit limit;
   int result = getrlimit(RLIMIT_DATA, &limit);
@@ -130,13 +130,13 @@
 
 namespace base {
 
-#if !defined(OS_OPENBSD) && !defined(OS_FUCHSIA)
+#if !defined(OS_OPENBSD) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 int SysInfo::NumberOfProcessors() {
   return g_lazy_number_of_processors.Get().value();
 }
 #endif
 
-#if !defined(OS_FUCHSIA)
+#if !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 // static
 int64_t SysInfo::AmountOfVirtualMemory() {
   return g_lazy_virtual_memory.Get().value();

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/BUILD.gn	2018-06-15 09:47:20.013893632 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/BUILD.gn	2018-09-23 00:30:51.276824064 +0200
@@ -78,6 +78,13 @@
       "nacl_nonsfi/signal_stub.c",
     ]
     include_dirs = [ "nacl_nonsfi" ]
+  } else if (is_haiku) {
+      sources += [
+        "haiku/config.h",
+        "haiku/event-config.h",
+      ]
+      include_dirs = [ "haiku", "compat" ]
+      libs = [ "network" ]
   }
 
   configs -= [ "//build/config/compiler:chromium_code" ]

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/config.h.in qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/config.h.in
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/config.h.in	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/config.h.in	2018-09-12 12:51:58.050593792 +0200
@@ -0,0 +1,274 @@
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define if clock_gettime is available in libc */
+#undef DNS_USE_CPU_CLOCK_FOR_ID
+
+/* Define is no secure id variant is available */
+#undef DNS_USE_GETTIMEOFDAY_FOR_ID
+
+/* Define to 1 if you have the `clock_gettime' function. */
+#undef HAVE_CLOCK_GETTIME
+
+/* Define if /dev/poll is available */
+#undef HAVE_DEVPOLL
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#undef HAVE_DLFCN_H
+
+/* Define if your system supports the epoll system calls */
+#undef HAVE_EPOLL
+
+/* Define to 1 if you have the `epoll_ctl' function. */
+#undef HAVE_EPOLL_CTL
+
+/* Define if your system supports event ports */
+#undef HAVE_EVENT_PORTS
+
+/* Define to 1 if you have the `fcntl' function. */
+#undef HAVE_FCNTL
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#undef HAVE_FCNTL_H
+
+/* Define to 1 if the system has the type `fd_mask'. */
+#undef HAVE_FD_MASK
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#undef HAVE_GETADDRINFO
+
+/* Define to 1 if you have the `getegid' function. */
+#undef HAVE_GETEGID
+
+/* Define to 1 if you have the `geteuid' function. */
+#undef HAVE_GETEUID
+
+/* Define to 1 if you have the `getnameinfo' function. */
+#undef HAVE_GETNAMEINFO
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#undef HAVE_GETTIMEOFDAY
+
+/* Define to 1 if you have the `inet_ntop' function. */
+#undef HAVE_INET_NTOP
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#undef HAVE_INTTYPES_H
+
+/* Define to 1 if you have the `issetugid' function. */
+#undef HAVE_ISSETUGID
+
+/* Define to 1 if you have the `kqueue' function. */
+#undef HAVE_KQUEUE
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+#undef HAVE_LIBNSL
+
+/* Define to 1 if you have the `resolv' library (-lresolv). */
+#undef HAVE_LIBRESOLV
+
+/* Define to 1 if you have the `rt' library (-lrt). */
+#undef HAVE_LIBRT
+
+/* Define to 1 if you have the `socket' library (-lsocket). */
+#undef HAVE_LIBSOCKET
+
+/* Define to 1 if you have the <memory.h> header file. */
+#undef HAVE_MEMORY_H
+
+/* Define to 1 if you have the <netinet/in6.h> header file. */
+#undef HAVE_NETINET_IN6_H
+
+/* Define to 1 if you have the `poll' function. */
+#undef HAVE_POLL
+
+/* Define to 1 if you have the <poll.h> header file. */
+#undef HAVE_POLL_H
+
+/* Define to 1 if you have the `port_create' function. */
+#undef HAVE_PORT_CREATE
+
+/* Define to 1 if you have the <port.h> header file. */
+#undef HAVE_PORT_H
+
+/* Define to 1 if you have the `select' function. */
+#undef HAVE_SELECT
+
+/* Define if F_SETFD is defined in <fcntl.h> */
+#undef HAVE_SETFD
+
+/* Define to 1 if you have the `sigaction' function. */
+#undef HAVE_SIGACTION
+
+/* Define to 1 if you have the `signal' function. */
+#undef HAVE_SIGNAL
+
+/* Define to 1 if you have the <signal.h> header file. */
+#undef HAVE_SIGNAL_H
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#undef HAVE_STDARG_H
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#undef HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#undef HAVE_STDLIB_H
+
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#undef HAVE_STRING_H
+
+/* Define to 1 if you have the `strlcpy' function. */
+#undef HAVE_STRLCPY
+
+/* Define to 1 if you have the `strsep' function. */
+#undef HAVE_STRSEP
+
+/* Define to 1 if you have the `strtok_r' function. */
+#undef HAVE_STRTOK_R
+
+/* Define to 1 if you have the `strtoll' function. */
+#undef HAVE_STRTOLL
+
+/* Define to 1 if the system has the type `struct in6_addr'. */
+#undef HAVE_STRUCT_IN6_ADDR
+
+/* Define to 1 if you have the <sys/devpoll.h> header file. */
+#undef HAVE_SYS_DEVPOLL_H
+
+/* Define to 1 if you have the <sys/epoll.h> header file. */
+#undef HAVE_SYS_EPOLL_H
+
+/* Define to 1 if you have the <sys/event.h> header file. */
+#undef HAVE_SYS_EVENT_H
+
+/* Define to 1 if you have the <sys/ioctl.h> header file. */
+#undef HAVE_SYS_IOCTL_H
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#undef HAVE_SYS_PARAM_H
+
+/* Define to 1 if you have the <sys/queue.h> header file. */
+#undef HAVE_SYS_QUEUE_H
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#undef HAVE_SYS_SELECT_H
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#undef HAVE_SYS_SOCKET_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#undef HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#undef HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#undef HAVE_SYS_TYPES_H
+
+/* Define if TAILQ_FOREACH is defined in <sys/queue.h> */
+#undef HAVE_TAILQFOREACH
+
+/* Define if timeradd is defined in <sys/time.h> */
+#undef HAVE_TIMERADD
+
+/* Define if timerclear is defined in <sys/time.h> */
+#undef HAVE_TIMERCLEAR
+
+/* Define if timercmp is defined in <sys/time.h> */
+#undef HAVE_TIMERCMP
+
+/* Define if timerisset is defined in <sys/time.h> */
+#undef HAVE_TIMERISSET
+
+/* Define to 1 if the system has the type `uint16_t'. */
+#undef HAVE_UINT16_T
+
+/* Define to 1 if the system has the type `uint32_t'. */
+#undef HAVE_UINT32_T
+
+/* Define to 1 if the system has the type `uint64_t'. */
+#undef HAVE_UINT64_T
+
+/* Define to 1 if the system has the type `uint8_t'. */
+#undef HAVE_UINT8_T
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#undef HAVE_UNISTD_H
+
+/* Define to 1 if you have the `vasprintf' function. */
+#undef HAVE_VASPRINTF
+
+/* Define if kqueue works correctly with pipes */
+#undef HAVE_WORKING_KQUEUE
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+#undef LT_OBJDIR
+
+/* Numeric representation of the version */
+#undef NUMERIC_VERSION
+
+/* Name of package */
+#undef PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#undef PACKAGE_URL
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* The size of `int', as computed by sizeof. */
+#undef SIZEOF_INT
+
+/* The size of `long', as computed by sizeof. */
+#undef SIZEOF_LONG
+
+/* The size of `long long', as computed by sizeof. */
+#undef SIZEOF_LONG_LONG
+
+/* The size of `short', as computed by sizeof. */
+#undef SIZEOF_SHORT
+
+/* Define to 1 if you have the ANSI C header files. */
+#undef STDC_HEADERS
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#undef TIME_WITH_SYS_TIME
+
+/* Version number of package */
+#undef VERSION
+
+/* Define to appropriate substitue if compiler doesnt have __func__ */
+#undef __func__
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#undef const
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#undef inline
+#endif
+
+/* Define to `int' if <sys/types.h> does not define. */
+#undef pid_t
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+#undef size_t
+
+/* Define to unsigned int if you dont have it */
+#undef socklen_t

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/event-config.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/event-config.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/event-config.h	2018-06-15 09:47:20.015466496 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/event-config.h	2018-09-12 13:03:52.569638912 +0200
@@ -19,6 +19,8 @@
 #include "base/third_party/libevent/solaris/event-config.h"
 #elif defined(_AIX)
 #include "base/third_party/libevent/aix/event-config.h"
+#elif defined(__HAIKU__)
+#include "base/third_party/libevent/haiku/event-config.h"
 #else
 #error generate event-config.h for your platform
 #endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/haiku/config.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/haiku/config.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/haiku/config.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/haiku/config.h	2018-09-12 13:01:50.065536000 +0200
@@ -0,0 +1,272 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define if clock_gettime is available in libc */
+#define DNS_USE_CPU_CLOCK_FOR_ID 1
+
+/* Define is no secure id variant is available */
+/* #undef DNS_USE_GETTIMEOFDAY_FOR_ID */
+
+/* Define to 1 if you have the `clock_gettime' function. */
+#define HAVE_CLOCK_GETTIME 1
+
+/* Define if /dev/poll is available */
+/* #undef HAVE_DEVPOLL */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define if your system supports the epoll system calls */
+/* #undef HAVE_EPOLL */
+
+/* Define to 1 if you have the `epoll_ctl' function. */
+/* #undef HAVE_EPOLL_CTL */
+
+/* Define if your system supports event ports */
+/* #undef HAVE_EVENT_PORTS */
+
+/* Define to 1 if you have the `fcntl' function. */
+#define HAVE_FCNTL 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if the system has the type `fd_mask'. */
+/* #undef HAVE_FD_MASK */
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#define HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the `getegid' function. */
+#define HAVE_GETEGID 1
+
+/* Define to 1 if you have the `geteuid' function. */
+#define HAVE_GETEUID 1
+
+/* Define to 1 if you have the `getnameinfo' function. */
+#define HAVE_GETNAMEINFO 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#define HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the `inet_ntop' function. */
+#define HAVE_INET_NTOP 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `issetugid' function. */
+/* #undef HAVE_ISSETUGID */
+
+/* Define to 1 if you have the `kqueue' function. */
+/* #undef HAVE_KQUEUE */
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+/* #undef HAVE_LIBNSL */
+
+/* Define to 1 if you have the `resolv' library (-lresolv). */
+/* #undef HAVE_LIBRESOLV */
+
+/* Define to 1 if you have the `rt' library (-lrt). */
+/* #undef HAVE_LIBRT */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netinet/in6.h> header file. */
+/* #undef HAVE_NETINET_IN6_H */
+
+/* Define to 1 if you have the `poll' function. */
+#define HAVE_POLL 1
+
+/* Define to 1 if you have the <poll.h> header file. */
+#define HAVE_POLL_H 1
+
+/* Define to 1 if you have the `port_create' function. */
+/* #undef HAVE_PORT_CREATE */
+
+/* Define to 1 if you have the <port.h> header file. */
+/* #undef HAVE_PORT_H */
+
+/* Define to 1 if you have the `select' function. */
+#define HAVE_SELECT 1
+
+/* Define if F_SETFD is defined in <fcntl.h> */
+#define HAVE_SETFD 1
+
+/* Define to 1 if you have the `sigaction' function. */
+#define HAVE_SIGACTION 1
+
+/* Define to 1 if you have the `signal' function. */
+#define HAVE_SIGNAL 1
+
+/* Define to 1 if you have the <signal.h> header file. */
+#define HAVE_SIGNAL_H 1
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#define HAVE_STDARG_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strlcpy' function. */
+#define HAVE_STRLCPY 1
+
+/* Define to 1 if you have the `strsep' function. */
+/* #undef HAVE_STRSEP */
+
+/* Define to 1 if you have the `strtok_r' function. */
+#define HAVE_STRTOK_R 1
+
+/* Define to 1 if you have the `strtoll' function. */
+#define HAVE_STRTOLL 1
+
+/* Define to 1 if the system has the type `struct in6_addr'. */
+#define HAVE_STRUCT_IN6_ADDR 1
+
+/* Define to 1 if you have the <sys/devpoll.h> header file. */
+/* #undef HAVE_SYS_DEVPOLL_H */
+
+/* Define to 1 if you have the <sys/epoll.h> header file. */
+/* #undef HAVE_SYS_EPOLL_H */
+
+/* Define to 1 if you have the <sys/event.h> header file. */
+/* #undef HAVE_SYS_EVENT_H */
+
+/* Define to 1 if you have the <sys/ioctl.h> header file. */
+#define HAVE_SYS_IOCTL_H 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#define HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/queue.h> header file. */
+#define HAVE_SYS_QUEUE_H 1
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#define HAVE_SYS_SELECT_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define if TAILQ_FOREACH is defined in <sys/queue.h> */
+/* #undef HAVE_TAILQFOREACH */
+
+/* Define if timeradd is defined in <sys/time.h> */
+#define HAVE_TIMERADD 1
+
+/* Define if timerclear is defined in <sys/time.h> */
+#define HAVE_TIMERCLEAR 1
+
+/* Define if timercmp is defined in <sys/time.h> */
+#define HAVE_TIMERCMP 1
+
+/* Define if timerisset is defined in <sys/time.h> */
+#define HAVE_TIMERISSET 1
+
+/* Define to 1 if the system has the type `uint16_t'. */
+#define HAVE_UINT16_T 1
+
+/* Define to 1 if the system has the type `uint32_t'. */
+#define HAVE_UINT32_T 1
+
+/* Define to 1 if the system has the type `uint64_t'. */
+#define HAVE_UINT64_T 1
+
+/* Define to 1 if the system has the type `uint8_t'. */
+#define HAVE_UINT8_T 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vasprintf' function. */
+#define HAVE_VASPRINTF 1
+
+/* Define if kqueue works correctly with pipes */
+/* #undef HAVE_WORKING_KQUEUE */
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+#define LT_OBJDIR ".libs/"
+
+/* Numeric representation of the version */
+#define NUMERIC_VERSION 0x01040e00
+
+/* Name of package */
+#define PACKAGE "libevent"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME ""
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION ""
+
+/* The size of `int', as computed by sizeof. */
+#define SIZEOF_INT 4
+
+/* The size of `long', as computed by sizeof. */
+#define SIZEOF_LONG 8
+
+/* The size of `long long', as computed by sizeof. */
+#define SIZEOF_LONG_LONG 8
+
+/* The size of `short', as computed by sizeof. */
+#define SIZEOF_SHORT 2
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* Version number of package */
+#define VERSION "1.4.14b-stable"
+
+/* Define to appropriate substitue if compiler doesnt have __func__ */
+/* #undef __func__ */
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef const */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+/* Define to `int' if <sys/types.h> does not define. */
+/* #undef pid_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef size_t */
+
+/* Define to unsigned int if you dont have it */
+/* #undef socklen_t */

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/haiku/event-config.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/haiku/event-config.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/libevent/haiku/event-config.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/libevent/haiku/event-config.h	2018-09-12 13:05:05.653262848 +0200
@@ -0,0 +1,280 @@
+/* event-config.h
+ * Generated by autoconf; post-processed by libevent.
+ * Do not edit this file.
+ * Do not rely on macros in this file existing in later versions.
+ */
+#ifndef _EVENT_CONFIG_H_
+#define _EVENT_CONFIG_H_
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Define if clock_gettime is available in libc */
+#define _EVENT_DNS_USE_CPU_CLOCK_FOR_ID 1
+
+/* Define is no secure id variant is available */
+/* #undef _EVENT_DNS_USE_GETTIMEOFDAY_FOR_ID */
+
+/* Define to 1 if you have the `clock_gettime' function. */
+#define _EVENT_HAVE_CLOCK_GETTIME 1
+
+/* Define if /dev/poll is available */
+/* #undef _EVENT_HAVE_DEVPOLL */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define _EVENT_HAVE_DLFCN_H 1
+
+/* Define if your system supports the epoll system calls */
+/* #undef _EVENT_HAVE_EPOLL */
+
+/* Define to 1 if you have the `epoll_ctl' function. */
+/* #undef _EVENT_HAVE_EPOLL_CTL */
+
+/* Define if your system supports event ports */
+/* #undef _EVENT_HAVE_EVENT_PORTS */
+
+/* Define to 1 if you have the `fcntl' function. */
+#define _EVENT_HAVE_FCNTL 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define _EVENT_HAVE_FCNTL_H 1
+
+/* Define to 1 if the system has the type `fd_mask'. */
+#define _EVENT_HAVE_FD_MASK
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#define _EVENT_HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the `getegid' function. */
+#define _EVENT_HAVE_GETEGID 1
+
+/* Define to 1 if you have the `geteuid' function. */
+#define _EVENT_HAVE_GETEUID 1
+
+/* Define to 1 if you have the `getnameinfo' function. */
+#define _EVENT_HAVE_GETNAMEINFO 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#define _EVENT_HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the `inet_ntop' function. */
+#define _EVENT_HAVE_INET_NTOP 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define _EVENT_HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `issetugid' function. */
+/* #undef _EVENT_HAVE_ISSETUGID */
+
+/* Define to 1 if you have the `kqueue' function. */
+/* #undef _EVENT_HAVE_KQUEUE */
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+/* #undef _EVENT_HAVE_LIBNSL */
+
+/* Define to 1 if you have the `resolv' library (-lresolv). */
+/* #undef _EVENT_HAVE_LIBRESOLV */
+
+/* Define to 1 if you have the `rt' library (-lrt). */
+/* #undef _EVENT_HAVE_LIBRT */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define _EVENT_HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netinet/in6.h> header file. */
+/* #undef _EVENT_HAVE_NETINET_IN6_H */
+
+/* Define to 1 if you have the `poll' function. */
+#define _EVENT_HAVE_POLL 1
+
+/* Define to 1 if you have the <poll.h> header file. */
+#define _EVENT_HAVE_POLL_H 1
+
+/* Define to 1 if you have the `port_create' function. */
+/* #undef _EVENT_HAVE_PORT_CREATE */
+
+/* Define to 1 if you have the <port.h> header file. */
+/* #undef _EVENT_HAVE_PORT_H */
+
+/* Define to 1 if you have the `select' function. */
+#define _EVENT_HAVE_SELECT 1
+
+/* Define if F_SETFD is defined in <fcntl.h> */
+#define _EVENT_HAVE_SETFD 1
+
+/* Define to 1 if you have the `sigaction' function. */
+#define _EVENT_HAVE_SIGACTION 1
+
+/* Define to 1 if you have the `signal' function. */
+#define _EVENT_HAVE_SIGNAL 1
+
+/* Define to 1 if you have the <signal.h> header file. */
+#define _EVENT_HAVE_SIGNAL_H 1
+
+/* Define to 1 if you have the <stdarg.h> header file. */
+#define _EVENT_HAVE_STDARG_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define _EVENT_HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define _EVENT_HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define _EVENT_HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define _EVENT_HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strlcpy' function. */
+#define _EVENT_HAVE_STRLCPY 1
+
+/* Define to 1 if you have the `strsep' function. */
+/* #undef _EVENT_HAVE_STRSEP */
+
+/* Define to 1 if you have the `strtok_r' function. */
+#define _EVENT_HAVE_STRTOK_R 1
+
+/* Define to 1 if you have the `strtoll' function. */
+#define _EVENT_HAVE_STRTOLL 1
+
+/* Define to 1 if the system has the type `struct in6_addr'. */
+#define _EVENT_HAVE_STRUCT_IN6_ADDR 1
+
+/* Define to 1 if you have the <sys/devpoll.h> header file. */
+/* #undef _EVENT_HAVE_SYS_DEVPOLL_H */
+
+/* Define to 1 if you have the <sys/epoll.h> header file. */
+/* #undef _EVENT_HAVE_SYS_EPOLL_H */
+
+/* Define to 1 if you have the <sys/event.h> header file. */
+/* #undef _EVENT_HAVE_SYS_EVENT_H */
+
+/* Define to 1 if you have the <sys/ioctl.h> header file. */
+#define _EVENT_HAVE_SYS_IOCTL_H 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#define _EVENT_HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/queue.h> header file. */
+#define _EVENT_HAVE_SYS_QUEUE_H 1
+
+/* Define to 1 if you have the <sys/select.h> header file. */
+#define _EVENT_HAVE_SYS_SELECT_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define _EVENT_HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define _EVENT_HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define _EVENT_HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define _EVENT_HAVE_SYS_TYPES_H 1
+
+/* Define if TAILQ_FOREACH is defined in <sys/queue.h> */
+/* #undef _EVENT_HAVE_TAILQFOREACH */
+
+/* Define if timeradd is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERADD 1
+
+/* Define if timerclear is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERCLEAR 1
+
+/* Define if timercmp is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERCMP 1
+
+/* Define if timerisset is defined in <sys/time.h> */
+#define _EVENT_HAVE_TIMERISSET 1
+
+/* Define to 1 if the system has the type `uint16_t'. */
+#define _EVENT_HAVE_UINT16_T 1
+
+/* Define to 1 if the system has the type `uint32_t'. */
+#define _EVENT_HAVE_UINT32_T 1
+
+/* Define to 1 if the system has the type `uint64_t'. */
+#define _EVENT_HAVE_UINT64_T 1
+
+/* Define to 1 if the system has the type `uint8_t'. */
+#define _EVENT_HAVE_UINT8_T 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define _EVENT_HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vasprintf' function. */
+#define _EVENT_HAVE_VASPRINTF 1
+
+/* Define if kqueue works correctly with pipes */
+/* #undef _EVENT_HAVE_WORKING_KQUEUE */
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+#define _EVENT_LT_OBJDIR ".libs/"
+
+/* Numeric representation of the version */
+#define _EVENT_NUMERIC_VERSION 0x01040e00
+
+/* Name of package */
+#define _EVENT_PACKAGE "libevent"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define _EVENT_PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define _EVENT_PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define _EVENT_PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define _EVENT_PACKAGE_TARNAME ""
+
+/* Define to the home page for this package. */
+#define _EVENT_PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define _EVENT_PACKAGE_VERSION ""
+
+/* The size of `int', as computed by sizeof. */
+#define _EVENT_SIZEOF_INT 4
+
+/* The size of `long', as computed by sizeof. */
+#define _EVENT_SIZEOF_LONG 8
+
+/* The size of `long long', as computed by sizeof. */
+#define _EVENT_SIZEOF_LONG_LONG 8
+
+/* The size of `short', as computed by sizeof. */
+#define _EVENT_SIZEOF_SHORT 2
+
+/* Define to 1 if you have the ANSI C header files. */
+#define _EVENT_STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define _EVENT_TIME_WITH_SYS_TIME 1
+
+/* Version number of package */
+#define _EVENT_VERSION "1.4.14b-stable"
+
+/* Define to appropriate substitue if compiler doesnt have __func__ */
+/* #undef _EVENT___func__ */
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef _EVENT_const */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef _EVENT___cplusplus
+/* #undef _EVENT_inline */
+#endif
+
+/* Define to `int' if <sys/types.h> does not define. */
+/* #undef _EVENT_pid_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef _EVENT_size_t */
+
+/* Define to unsigned int if you dont have it */
+/* #undef _EVENT_socklen_t */
+#endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/symbolize/symbolize.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/symbolize/symbolize.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/third_party/symbolize/symbolize.h	2018-06-15 09:47:20.027787264 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/third_party/symbolize/symbolize.h	2018-09-12 14:24:02.558366720 +0200
@@ -67,7 +67,7 @@
 #include <elf.h>
 #endif
 
-#if !defined(ANDROID)
+#if !defined(ANDROID) && !defined(__HAIKU__)
 #include <link.h>  // For ElfW() macro.
 #endif
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/threading/platform_thread_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/threading/platform_thread_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/threading/platform_thread_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/threading/platform_thread_haiku.cc	2018-09-12 14:35:39.099876864 +0200
@@ -0,0 +1,55 @@
+// Copyright 2018 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "base/threading/platform_thread.h"
+
+#include <pthread.h>
+#include <sched.h>
+
+#include "base/threading/platform_thread_internal_posix.h"
+#include "base/threading/thread_id_name_manager.h"
+
+namespace base {
+
+namespace internal {
+
+const ThreadPriorityToNiceValuePair kThreadPriorityToNiceValueMap[4] = {
+    {ThreadPriority::BACKGROUND, 10},
+    {ThreadPriority::NORMAL, 0},
+    {ThreadPriority::DISPLAY, -8},
+    {ThreadPriority::REALTIME_AUDIO, -10},
+};
+
+bool SetCurrentThreadPriorityForPlatform(ThreadPriority priority) {
+  sched_param prio = {0};
+  prio.sched_priority = ThreadPriorityToNiceValue(priority);
+  return pthread_setschedparam(pthread_self(), SCHED_OTHER, &prio) == 0;
+}
+
+bool GetCurrentThreadPriorityForPlatform(ThreadPriority* priority) {
+  sched_param prio = {0};
+  int policy;
+  if (pthread_getschedparam(pthread_self(), &policy, &prio) != 0) {
+    return false;
+  }
+  *priority = NiceValueToThreadPriority(prio.sched_priority);
+  return true;
+}
+
+}  // namespace internal
+
+void InitThreading() {}
+
+void TerminateOnThread() {}
+
+size_t GetDefaultThreadStackSize(const pthread_attr_t& attributes) {
+  return 0;
+}
+
+// static
+void PlatformThread::SetName(const std::string& name) {
+  
+}
+
+}  // namespace base

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/threading/platform_thread_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/threading/platform_thread_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/threading/platform_thread_posix.cc	2018-06-15 09:47:20.049545216 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/threading/platform_thread_posix.cc	2018-09-12 13:46:47.670826496 +0200
@@ -251,7 +251,7 @@
 
 // static
 void PlatformThread::SetCurrentThreadPriority(ThreadPriority priority) {
-#if defined(OS_NACL)
+#if defined(OS_NACL) || defined(OS_HAIKU)
   NOTIMPLEMENTED();
 #else
   if (internal::SetCurrentThreadPriorityForPlatform(priority))
@@ -273,7 +273,7 @@
 
 // static
 ThreadPriority PlatformThread::GetCurrentThreadPriority() {
-#if defined(OS_NACL)
+#if defined(OS_NACL) || defined(OS_HAIKU)
   NOTIMPLEMENTED();
   return ThreadPriority::NORMAL;
 #else

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2018-06-15 09:47:20.003145728 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2018-09-12 02:17:16.782499840 +0200
@@ -250,7 +250,7 @@
     allocated_objects_size = main_heap_info.allocated_size;
     allocated_objects_count = main_heap_info.block_count;
   }
-#elif defined(OS_FUCHSIA)
+#elif defined(OS_FUCHSIA) || defined(OS_HAIKU)
 // TODO(fuchsia): Port, see https://crbug.com/706592.
 #else
   struct mallinfo info = mallinfo();

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/trace_event/process_memory_dump.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/trace_event/process_memory_dump.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/base/trace_event/process_memory_dump.cc	2018-06-15 09:47:20.061603840 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/base/trace_event/process_memory_dump.cc	2018-09-12 02:16:41.926416896 +0200
@@ -124,7 +124,7 @@
 
     for (size_t i = 0; i < page_count; i++)
       resident_page_count += vec[i].VirtualAttributes.Valid;
-#elif defined(OS_FUCHSIA)
+#elif defined(OS_FUCHSIA) || defined(OS_HAIKU)
     // TODO(fuchsia): Port, see https://crbug.com/706592.
     ALLOW_UNUSED_LOCAL(chunk_start);
     ALLOW_UNUSED_LOCAL(page_count);

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/BUILDCONFIG.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/BUILDCONFIG.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/BUILDCONFIG.gn	2018-06-15 09:47:20.000786432 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/BUILDCONFIG.gn	2018-09-22 19:05:33.301465600 +0200
@@ -220,6 +220,8 @@
     }
   } else if (host_os == "aix") {
     host_toolchain = "//build/toolchain/aix:$host_cpu"
+  } else if (host_os == "haiku") {
+    host_toolchain = "//build/toolchain/haiku:$host_cpu"
   } else {
     assert(false, "Unsupported host_os: $host_os")
   }
@@ -240,6 +242,8 @@
   }
 } else if (target_os == "fuchsia") {
   _default_toolchain = "//build/toolchain/fuchsia:$target_cpu"
+} else if (target_os == "haiku") {
+  _default_toolchain = "//build/toolchain/haiku:$target_cpu"
 } else if (target_os == "ios") {
   _default_toolchain = "//build/toolchain/mac:ios_clang_$target_cpu"
 } else if (target_os == "mac") {
@@ -302,6 +306,7 @@
   is_nacl = false
   is_posix = false
   is_win = true
+  is_haiku = false
 } else if (current_os == "mac") {
   is_android = false
   is_chromeos = false
@@ -312,6 +317,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "android") {
   is_android = true
   is_chromeos = false
@@ -322,6 +328,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "chromeos") {
   is_android = false
   is_chromeos = true
@@ -332,6 +339,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "nacl") {
   # current_os == "nacl" will be passed by the nacl toolchain definition.
   # It is not set by default or on the command line. We treat is as a
@@ -345,6 +353,7 @@
   is_nacl = true
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "fuchsia") {
   is_android = false
   is_chromeos = false
@@ -355,6 +364,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "ios") {
   is_android = false
   is_chromeos = false
@@ -365,6 +375,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "linux") {
   is_android = false
   is_chromeos = false
@@ -375,6 +386,7 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
 } else if (current_os == "aix") {
   is_android = false
   is_chromeos = false
@@ -384,6 +396,18 @@
   is_nacl = false
   is_posix = true
   is_win = false
+  is_haiku = false
+} else if (current_os == "haiku") {
+  is_android = false
+  is_chromeos = false
+  is_fuchsia = false
+  is_ios = false
+  is_linux = false
+  is_mac = false
+  is_nacl = false
+  is_posix = true
+  is_win = false
+  is_haiku = true
 }
 
 # =============================================================================
@@ -483,6 +507,16 @@
   ]
 }
 
+if (!is_haiku) {
+  sources_assignment_filter += [
+    "*_haiku.h",
+    "*_haiku.cc",
+    "*_haiku_unittest.h",
+    "*_haiku_unittest.cc",
+    "*\bhaiku/*",
+  ]
+}
+
 # DO NOT ADD MORE PATTERNS TO THIS LIST, see set_sources_assignment_filter call
 # below.
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/compiler/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/compiler/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/compiler/BUILD.gn	2018-06-15 09:47:20.056623104 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/compiler/BUILD.gn	2018-09-22 17:17:41.391905280 +0200
@@ -208,6 +208,8 @@
     configs += [ "//build/config/fuchsia:compiler" ]
   } else if (current_os == "aix") {
     configs += [ "//build/config/aix:compiler" ]
+  } else if (is_haiku) {
+    configs += [ "//build/config/haiku:compiler" ]
   }
 
   configs += [
@@ -269,7 +271,7 @@
       # The x86 toolchain currently has problems with stack-protector.
       if (is_android && current_cpu == "x86") {
         cflags += [ "-fno-stack-protector" ]
-      } else if (current_os != "aix") {
+      } else if (current_os != "aix" && current_os != "haiku") {
         # Not available on aix.
         cflags += [ "-fstack-protector" ]
       }
@@ -1084,6 +1086,8 @@
     configs += [ "//build/config/mac:runtime_library" ]
   } else if (is_android) {
     configs += [ "//build/config/android:runtime_library" ]
+  } else if (is_haiku) {
+    configs += [ "//build/config/haiku:runtime_library" ]
   }
 
   if (is_posix) {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/crypto.gni qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/crypto.gni
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/crypto.gni	2018-06-15 09:47:20.000524288 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/crypto.gni	2018-09-23 02:34:51.808976384 +0200
@@ -12,4 +12,4 @@
 # to set up feature flags.
 
 # True if NSS is used for certificate handling.
-use_nss_certs = is_linux
+use_nss_certs = is_linux || is_haiku

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/haiku/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/haiku/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/haiku/BUILD.gn	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/haiku/BUILD.gn	2018-09-22 17:22:45.559153152 +0200
@@ -0,0 +1,19 @@
+# Copyright (c) 2013 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("//build/config/ui.gni")
+
+# This is included by reference in the //build/config/compiler config that
+# is applied to all targets. It is here to separate out the logic that is
+# Linux-only. This is not applied to Android, but is applied to ChromeOS.
+config("compiler") {
+}
+
+# This is included by reference in the //build/config/compiler:runtime_library
+# config that is applied to all targets. It is here to separate out the logic
+# that is Linux-only. Please see that target for advice on what should go in
+# :runtime_library vs. :compiler.
+config("runtime_library") {
+  libs = [ "be" ]
+}

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/linux/pkg-config.py qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/linux/pkg-config.py
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/config/linux/pkg-config.py	2018-06-15 09:47:20.065011712 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/config/linux/pkg-config.py	2018-09-23 00:55:47.898891776 +0200
@@ -107,7 +107,7 @@
   # If this is run on non-Linux platforms, just return nothing and indicate
   # success. This allows us to "kind of emulate" a Linux build from other
   # platforms.
-  if "linux" not in sys.platform:
+  if "linux" not in sys.platform and "haiku" not in sys.platform:
     print "[[],[],[],[],[]]"
     return 0
 
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/gn_helpers.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/gn_helpers.pyc differ

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/secondary/third_party/libjpeg_turbo/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/secondary/third_party/libjpeg_turbo/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/secondary/third_party/libjpeg_turbo/BUILD.gn	2018-06-15 09:47:20.034865152 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/secondary/third_party/libjpeg_turbo/BUILD.gn	2018-10-01 22:02:58.104333312 +0200
@@ -93,7 +93,7 @@
       }
     } else if (is_mac || is_ios) {
       defines += [ "MACHO" ]
-    } else if (is_linux || is_android || is_fuchsia) {
+    } else if (is_linux || is_android || is_fuchsia || is_haiku) {
       defines += [ "ELF" ]
     }
   }

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/secondary/third_party/nss/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/secondary/third_party/nss/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/secondary/third_party/nss/BUILD.gn	2018-06-15 09:47:20.034603008 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/secondary/third_party/nss/BUILD.gn	2018-09-23 02:46:23.250085376 +0200
@@ -4,7 +4,7 @@
 
 import("//build/config/linux/pkg_config.gni")
 
-if (is_linux) {
+if (is_linux || is_haiku) {
   # This is a dependency on NSS with no libssl. On Linux we use a built-in SSL
   # library but the system NSS libraries. Non-Linux platforms using NSS use the
   # hermetic one in //third_party/nss.

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/toolchain/haiku/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/toolchain/haiku/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/toolchain/haiku/BUILD.gn	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/toolchain/haiku/BUILD.gn	2018-09-12 15:20:57.648806400 +0200
@@ -0,0 +1,44 @@
+# Copyright 2013 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+import("//build/config/sysroot.gni")
+import("//build/toolchain/gcc_toolchain.gni")
+
+gcc_toolchain("x86") {
+  cc = "gcc"
+  cxx = "g++"
+
+  readelf = "readelf"
+  nm = "nm"
+  ar = "ar"
+  ld = cxx
+
+  # Output linker map files for binary size analysis.
+  #enable_linker_map = true
+
+  toolchain_args = {
+    current_cpu = "x86"
+    current_os = "haiku"
+    is_clang = false
+  }
+}
+
+gcc_toolchain("x64") {
+  cc = "gcc"
+  cxx = "g++"
+
+  readelf = "readelf"
+  nm = "nm"
+  ar = "ar"
+  ld = cxx
+
+  # Output linker map files for binary size analysis.
+  #enable_linker_map = true
+
+  toolchain_args = {
+    current_cpu = "x64"
+    current_os = "haiku"
+    is_clang = false
+  }
+}
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/build/toolchain/wrapper_utils.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/build/toolchain/wrapper_utils.pyc differ

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/BUILD.gn	2018-06-15 09:47:20.023592960 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/BUILD.gn	2018-09-22 20:56:18.813432832 +0200
@@ -149,7 +149,7 @@
     ]
   }
 
-  if (!is_ios) {
+  if (!is_ios && !is_haiku) {
     deps += [
       "//cc:cc_unittests",
       "//components/policy:policy_templates",
@@ -455,7 +455,7 @@
       "//ui/compositor:compositor_unittests",
     ]
 
-    if (!is_android) {
+    if (!is_android && !is_haiku) {
       deps += [
         "//chrome/test:load_library_perf_tests",
         "//chrome/test:sync_performance_tests",
@@ -526,7 +526,7 @@
       "//third_party/breakpad:minidump_stackwalk($host_toolchain)",
     ]
 
-    if (!is_android) {
+    if (!is_android && !is_haiku) {
       deps += [
         "//chrome/test:chrome_app_unittests",
         "//gpu/khronos_glcts_support:khronos_glcts_test",
@@ -591,7 +591,7 @@
       deps +=
           [ "//chrome/installer/mini_installer:next_version_mini_installer" ]
     }
-  } else if (!is_android && !is_ios && !is_fuchsia) {
+  } else if (!is_android && !is_ios && !is_fuchsia && !is_haiku) {
     deps += [ "//third_party/breakpad:symupload($host_toolchain)" ]
   }
 
@@ -1032,7 +1032,7 @@
 group("chromium_builder_perf") {
   testonly = true
 
-  if (!is_ios && !is_android && !is_chromecast && !is_fuchsia) {
+  if (!is_ios && !is_android && !is_chromecast && !is_fuchsia && !is_haiku) {
     data_deps = [
       "//cc:cc_perftests",
       "//chrome/test:load_library_perf_tests",
@@ -1075,7 +1075,7 @@
   }
 }
 
-if (!is_ios && !is_android && !is_chromecast && !is_fuchsia) {
+if (!is_ios && !is_android && !is_chromecast && !is_fuchsia && !is_haiku) {
   group("chromium_builder_asan") {
     testonly = true
 

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/cc/paint/paint_typeface.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/cc/paint/paint_typeface.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/cc/paint/paint_typeface.cc	2018-06-15 09:47:20.015990784 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/cc/paint/paint_typeface.cc	2018-09-23 15:49:38.350224384 +0200
@@ -122,7 +122,7 @@
       break;
     case Type::kFontConfigInterfaceIdAndTtcIndex: {
 // Mimic FontCache::CreateTypeface defines to ensure same behavior.
-#if !defined(OS_WIN) && !defined(OS_ANDROID) && !defined(OS_FUCHSIA)
+#if !defined(OS_WIN) && !defined(OS_ANDROID) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
       sk_sp<SkFontConfigInterface> fci(SkFontConfigInterface::RefGlobal());
       SkFontConfigInterface::FontIdentity font_identity;
       font_identity.fID = font_config_interface_id_;
@@ -133,7 +133,7 @@
     }
     case Type::kFilenameAndTtcIndex:
 // Mimic FontCache::CreateTypeface defines to ensure same behavior.
-#if !defined(OS_WIN) && !defined(OS_ANDROID) && !defined(OS_FUCHSIA)
+#if !defined(OS_WIN) && !defined(OS_ANDROID) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
       sk_typeface_ = SkTypeface::MakeFromFile(filename_.c_str(), ttc_index_);
 #endif
       break;


diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/BUILD.gn	2018-06-15 09:47:20.053477376 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/BUILD.gn	2018-09-22 20:07:08.916979712 +0200
@@ -172,7 +172,7 @@
       "//components/signin/ios/browser:unit_tests",
       "//components/translate/ios/browser:unit_tests",
     ]
-  } else {  # !iOS
+  } else if(!is_haiku) {  # !iOS
     deps += [
       "//components/app_modal:unit_tests",
       "//components/autofill/content/browser:unit_tests",
@@ -396,7 +396,7 @@
   }
 }
 
-if (!is_ios) {
+if (!is_ios && !is_haiku) {
   test("components_browsertests") {
     defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
 

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/crash/content/browser/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/crash/content/browser/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/crash/content/browser/BUILD.gn	2018-06-15 09:47:20.054525952 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/crash/content/browser/BUILD.gn	2018-09-22 23:26:04.838336512 +0200
@@ -8,6 +8,7 @@
 
 # TODO(crbug.com/753619): Enable crash reporting on Fuchsia.
 assert(!is_fuchsia)
+assert(!is_haiku)
 
 source_set("browser") {
   sources = [

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/data_reduction_proxy/content/browser/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/data_reduction_proxy/content/browser/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/data_reduction_proxy/content/browser/BUILD.gn	2018-06-15 09:47:20.038797312 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/data_reduction_proxy/content/browser/BUILD.gn	2018-09-22 23:47:53.400293888 +0200
@@ -16,7 +16,6 @@
 
   deps = [
     "//base",
-    "//components/crash/content/browser",
     "//components/data_reduction_proxy/core/browser",
     "//components/data_reduction_proxy/core/common",
     "//components/data_use_measurement/core",
@@ -26,6 +25,11 @@
     "//content/public/common",
     "//net",
   ]
+  if(is_android) {
+    deps += [
+      "//components/crash/content/browser",
+    ]
+  }
 }
 
 source_set("unit_tests") {
@@ -40,7 +44,6 @@
   deps = [
     ":browser",
     "//base",
-    "//components/crash/content/browser",
     "//components/data_reduction_proxy/core/browser:test_support",
     "//components/data_reduction_proxy/core/common:test_support",
     "//content/public/browser",
@@ -50,4 +53,9 @@
     "//testing/gmock",
     "//testing/gtest",
   ]
+  if(is_android) {
+    deps += [
+      "//components/crash/content/browser",
+    ]
+  }
 }

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/error_page/common/localized_error.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/error_page/common/localized_error.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/error_page/common/localized_error.cc	2018-06-15 09:47:20.040632320 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/error_page/common/localized_error.cc	2018-09-23 03:10:34.219414528 +0200
@@ -795,7 +795,7 @@
           IDS_ERRORPAGES_SUGGESTION_CHECK_CONNECTION_BODY, false);
   }
 
-#if !defined(OS_ANDROID) && !defined(OS_IOS)
+#if !defined(OS_ANDROID) && !defined(OS_IOS) && !defined(OS_HAIKU)
   if (suggestions & SUGGEST_DNS_CONFIG) {
     AddSuggestionDetailDictionaryToList(suggestions_details,
           IDS_ERRORPAGES_SUGGESTION_DNS_CONFIG_HEADER,

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/url_formatter/idn_spoof_checker.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/url_formatter/idn_spoof_checker.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/url_formatter/idn_spoof_checker.cc	2018-06-15 09:47:20.018087936 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/url_formatter/idn_spoof_checker.cc	2018-09-23 02:28:18.735051776 +0200
@@ -318,7 +318,7 @@
   if ((u04cf_pos = host.indexOf(0x4CF)) != -1) {
     icu::UnicodeString host_alt(host);
     size_t length = host_alt.length();
-    char16_t* buffer = host_alt.getBuffer(-1);
+    char16_t* buffer = reinterpret_cast<char16_t*>(host_alt.getBuffer(-1));
     for (char16_t* uc = buffer + u04cf_pos ; uc < buffer + length; ++uc) {
       if (*uc == 0x4CF)
         *uc = 0x6C;  // Lowercase L

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/variations/client_filterable_state.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/variations/client_filterable_state.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/components/variations/client_filterable_state.cc	2018-06-15 09:47:20.036438016 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/components/variations/client_filterable_state.cc	2018-09-23 01:25:28.001310720 +0200
@@ -22,7 +22,7 @@
   return Study::PLATFORM_ANDROID;
 #elif defined(OS_FUCHSIA)
   return Study::PLATFORM_FUCHSIA;
-#elif defined(OS_LINUX) || defined(OS_BSD) || defined(OS_SOLARIS)
+#elif defined(OS_LINUX) || defined(OS_BSD) || defined(OS_SOLARIS) || defined(OS_HAIKU)
   // Default BSD and SOLARIS to Linux to not break those builds, although these
   // platforms are not officially supported by Chrome.
   return Study::PLATFORM_LINUX;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/browser_main_loop.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/browser_main_loop.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/browser_main_loop.cc	2018-06-15 09:47:20.028573696 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/browser_main_loop.cc	2018-09-23 17:32:41.415236096 +0200
@@ -1730,12 +1730,12 @@
       base::WrapUnique<SwapMetricsDriver::Delegate>(
           new SwapMetricsDelegateUma()));
 
-#if !defined(OS_FUCHSIA)
+#if !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
   swap_metrics_driver_ =
       SwapMetricsDriver::Create(std::move(delegate), kSwapMetricsInterval);
   if (swap_metrics_driver_)
     swap_metrics_driver_->Start();
-#endif  // !defined(OS_FUCHSIA)
+#endif  // !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 }
 
 bool BrowserMainLoop::InitializeToolkit() {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/BUILD.gn	2018-06-15 09:47:20.038273024 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/BUILD.gn	2018-10-01 19:56:30.982253568 +0200
@@ -1731,6 +1731,11 @@
       "child_process_launcher_helper_fuchsia.cc",
       "memory/memory_monitor_fuchsia.cc",
     ]
+  } else if (is_haiku) {
+    sources += [
+      "child_process_launcher_helper_haiku.cc",
+      "memory/memory_monitor_haiku.cc",
+    ]
   } else if (is_posix) {
     sources += [
       "child_process_launcher_helper_posix.cc",
@@ -2220,7 +2225,7 @@
     ]
   }
 
-  if (use_aura || is_mac) {
+  if (use_aura || is_mac || is_haiku) {
     sources += [
       "compositor/browser_compositor_output_surface.cc",
       "compositor/browser_compositor_output_surface.h",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/child_process_launcher_helper_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/child_process_launcher_helper_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/child_process_launcher_helper_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/child_process_launcher_helper_haiku.cc	2018-10-01 19:47:38.287571968 +0200
@@ -0,0 +1,121 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "content/browser/child_process_launcher_helper.h"
+
+#include "base/command_line.h"
+#include "base/process/launch.h"
+#include "content/browser/child_process_launcher.h"
+#include "content/common/sandbox_policy_fuchsia.h"
+#include "content/public/common/sandboxed_process_launcher_delegate.h"
+#include "mojo/edk/embedder/platform_channel_pair.h"
+
+namespace content {
+namespace internal {
+
+void ChildProcessLauncherHelper::SetProcessPriorityOnLauncherThread(
+    base::Process process,
+    const ChildProcessLauncherPriority& priority) {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+  // TODO(fuchsia): Implement this. (crbug.com/707031)
+  NOTIMPLEMENTED();
+}
+
+base::TerminationStatus ChildProcessLauncherHelper::GetTerminationStatus(
+    const ChildProcessLauncherHelper::Process& process,
+    bool known_dead,
+    int* exit_code) {
+  return base::GetTerminationStatus(process.process.Handle(), exit_code);
+}
+
+// static
+bool ChildProcessLauncherHelper::TerminateProcess(const base::Process& process,
+                                                  int exit_code,
+                                                  bool wait) {
+  return process.Terminate(exit_code, wait);
+}
+
+// static
+void ChildProcessLauncherHelper::SetRegisteredFilesForService(
+    const std::string& service_name,
+    catalog::RequiredFileMap required_files) {
+  // TODO(fuchsia): Implement this. (crbug.com/707031)
+  NOTIMPLEMENTED();
+}
+
+// static
+void ChildProcessLauncherHelper::ResetRegisteredFilesForTesting() {
+  // TODO(fuchsia): Implement this. (crbug.com/707031)
+  NOTIMPLEMENTED();
+}
+
+void ChildProcessLauncherHelper::BeforeLaunchOnClientThread() {
+  DCHECK_CURRENTLY_ON(client_thread_id_);
+}
+
+mojo::edk::ScopedPlatformHandle
+ChildProcessLauncherHelper::PrepareMojoPipeHandlesOnClientThread() {
+  DCHECK_CURRENTLY_ON(client_thread_id_);
+
+  // By doing nothing here, StartLaunchOnClientThread() will construct a channel
+  // pair instead.
+  return mojo::edk::ScopedPlatformHandle();
+}
+
+std::unique_ptr<FileMappedForLaunch>
+ChildProcessLauncherHelper::GetFilesToMap() {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+  return std::unique_ptr<FileMappedForLaunch>();
+}
+
+bool ChildProcessLauncherHelper::BeforeLaunchOnLauncherThread(
+    const PosixFileDescriptorInfo& files_to_register,
+    base::LaunchOptions* options) {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+
+  /*mojo::edk::PlatformChannelPair::PrepareToPassHandleToChildProcess(
+      mojo_client_handle(), command_line(), &options->handles_to_transfer);
+
+  UpdateLaunchOptionsForSandbox(delegate_->GetSandboxType(), options);*/
+  NOTIMPLEMENTED();
+  return true;
+}
+
+ChildProcessLauncherHelper::Process
+ChildProcessLauncherHelper::LaunchProcessOnLauncherThread(
+    const base::LaunchOptions& options,
+    std::unique_ptr<FileMappedForLaunch> files_to_register,
+    bool* is_synchronous_launch,
+    int* launch_result) {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+  DCHECK(mojo_client_handle().is_valid());
+
+  // TODO(750938): Implement sandboxed/isolated subprocess launching.
+  Process child_process;
+  child_process.process = base::LaunchProcess(*command_line(), options);
+  return child_process;
+}
+
+void ChildProcessLauncherHelper::AfterLaunchOnLauncherThread(
+    const ChildProcessLauncherHelper::Process& process,
+    const base::LaunchOptions& options) {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+
+  if (process.process.IsValid()) {
+    // |mojo_client_handle_| has already been transferred to the child process
+    // by this point. Remove it from the scoped container so that we don't
+    // erroneously delete it.
+    ignore_result(mojo_client_handle_.release());
+  }
+}
+
+// static
+void ChildProcessLauncherHelper::ForceNormalProcessTerminationSync(
+    ChildProcessLauncherHelper::Process process) {
+  DCHECK_CURRENTLY_ON(BrowserThread::PROCESS_LAUNCHER);
+  process.process.Terminate(RESULT_CODE_NORMAL_EXIT, true);
+}
+
+}  // namespace internal
+}  // namespace content


diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/memory/memory_monitor_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/memory/memory_monitor_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/memory/memory_monitor_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/memory/memory_monitor_haiku.cc	2018-06-15 09:47:20.073662464 +0200
@@ -0,0 +1,17 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "content/browser/memory/memory_monitor.h"
+
+#include "base/logging.h"
+
+namespace content {
+
+// TODO(crbug.com/707031): Implement this.
+std::unique_ptr<MemoryMonitor> CreateMemoryMonitor() {
+  NOTIMPLEMENTED();
+  return nullptr;
+}
+
+}  // namespace content


diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/renderer_host/render_process_host_impl.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/renderer_host/render_process_host_impl.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/browser/renderer_host/render_process_host_impl.cc	2018-06-15 09:47:20.052166656 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/browser/renderer_host/render_process_host_impl.cc	2018-09-23 17:28:45.829161472 +0200
@@ -2737,7 +2737,7 @@
     renderer_cmd->AppendSwitch(switches::kDisableDatabases);
   }
 
-#if !defined(OS_ANDROID) && !defined(OS_CHROMEOS)
+#if !defined(OS_ANDROID) && !defined(OS_CHROMEOS) && !defined(OS_HAIKU)
 #if !BUILDFLAG(ENABLE_MUS)
   // If gpu compositing is not being used, tell the renderer at startup. This
   // is inherently racey, as it may change while the renderer is being launched,


diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/child/blink_platform_impl.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/child/blink_platform_impl.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/child/blink_platform_impl.h	2018-06-15 09:47:20.036700160 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/child/blink_platform_impl.h	2018-09-23 04:48:35.645660672 +0200
@@ -24,7 +24,7 @@
 #include "third_party/WebKit/public/public_features.h"
 #include "ui/base/layout.h"
 
-#if BUILDFLAG(USE_DEFAULT_RENDER_THEME)
+#if BUILDFLAG(USE_DEFAULT_RENDER_THEME) || defined(OS_HAIKU)
 #include "content/child/webthemeengine_impl_default.h"
 #elif defined(OS_WIN)
 #include "content/child/webthemeengine_impl_win.h"

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/child/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/child/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/child/BUILD.gn	2018-06-15 09:47:20.035389440 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/child/BUILD.gn	2018-10-01 21:09:57.436731904 +0200
@@ -136,7 +136,7 @@
     "//v8",
   ]
 
-  if (!use_default_render_theme) {
+  if (!use_default_render_theme && !is_haiku) {
     sources -= [
       "webthemeengine_impl_default.cc",
       "webthemeengine_impl_default.h",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/common/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/common/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/common/BUILD.gn	2018-06-15 09:47:20.029360128 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/common/BUILD.gn	2018-09-23 06:13:24.516947968 +0200
@@ -446,6 +446,10 @@
     ]
   }
 
+  if (is_haiku) {
+    sources += [ "cursors/webcursor_haiku.cc" ]
+  }
+
   if (use_ozone) {
     deps += [ "//ui/ozone" ]
   } else {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/common/cursors/webcursor_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/common/cursors/webcursor_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/common/cursors/webcursor_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/common/cursors/webcursor_haiku.cc	2018-06-15 09:47:20.662700032 +0200
@@ -0,0 +1,37 @@
+// Copyright (c) 2012 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "content/common/cursors/webcursor.h"
+
+#include "base/logging.h"
+#include "third_party/WebKit/public/platform/WebCursorInfo.h"
+
+namespace content {
+
+gfx::NativeCursor WebCursor::GetNativeCursor() {
+  return gfx::kNullCursor;
+}
+
+#if defined(USE_AURA)
+// In the future when we want to support cursors of various kinds in Aura on
+// Android, we should switch to using webcursor_aura rather than add an
+// implementation here.
+void WebCursor::SetDisplayInfo(const display::Display& display) {
+}
+#endif
+
+void WebCursor::InitPlatformData() {
+}
+
+bool WebCursor::IsPlatformDataEqual(const WebCursor& other) const {
+  return true;
+}
+
+void WebCursor::CleanupPlatformData() {
+}
+
+void WebCursor::CopyPlatformData(const WebCursor& other) {
+}
+
+}  // namespace content

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/BUILD.gn	2018-06-15 09:47:20.024379392 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/BUILD.gn	2018-10-01 21:28:12.493355008 +0200
@@ -675,6 +675,13 @@
     ]
   }
 
+  if (is_haiku) {
+    sources += [
+      "render_view_haiku.cc",
+      "renderer_main_platform_delegate_haiku.cc",
+    ]
+  }
+
   if (enable_media_remoting) {
     deps += [ "//media/remoting" ]
   }

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/render_view_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/render_view_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/render_view_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/render_view_haiku.cc	2018-06-15 09:47:20.008126464 +0200
@@ -0,0 +1,14 @@
+// Copyright (c) 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "content/renderer/render_view_impl.h"
+
+namespace content {
+
+void RenderViewImpl::UpdateFontRenderingFromRendererPrefs() {
+  // TODO(fuchsia): Implement this. See crbug.com/750946
+  NOTIMPLEMENTED();
+}
+
+}  // namespace content

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.cc	2018-06-15 09:47:20.014417920 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.cc	2018-10-01 19:31:31.649592832 +0200
@@ -232,7 +232,7 @@
   scoped_refptr<mojom::ThreadSafeFileUtilitiesHostPtr> file_utilities_host_;
 };
 
-#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 class RendererBlinkPlatformImpl::SandboxSupport
     : public blink::WebSandboxSupport {
  public:
@@ -324,7 +324,7 @@
 }
 
 void RendererBlinkPlatformImpl::Shutdown() {
-#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
   // SandboxSupport contains a map of WebFallbackFont objects, which hold
   // WebStrings and WebVectors, which become invalidated when blink is shut
   // down. Hence, we need to clear that map now, just before blink::shutdown()
@@ -432,7 +432,7 @@
 }
 
 blink::WebSandboxSupport* RendererBlinkPlatformImpl::GetSandboxSupport() {
-#if defined(OS_ANDROID) || defined(OS_WIN) || defined(OS_FUCHSIA)
+#if defined(OS_ANDROID) || defined(OS_WIN) || defined(OS_FUCHSIA) || defined(OS_HAIKU)
   // These platforms do not require sandbox support.
   return NULL;
 #else
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.h	2018-06-15 09:47:20.025690112 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_blink_platform_impl.h	2018-10-01 19:30:37.341835776 +0200
@@ -298,7 +298,7 @@
   class FileUtilities;
   std::unique_ptr<FileUtilities> file_utilities_;
 
-#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
   class SandboxSupport;
   std::unique_ptr<SandboxSupport> sandbox_support_;
 #endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_main_platform_delegate_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_main_platform_delegate_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/renderer/renderer_main_platform_delegate_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/renderer/renderer_main_platform_delegate_haiku.cc	2018-06-15 09:47:20.617086976 +0200
@@ -0,0 +1,25 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "content/renderer/renderer_main_platform_delegate.h"
+
+namespace content {
+
+RendererMainPlatformDelegate::RendererMainPlatformDelegate(
+    const MainFunctionParams& parameters) {}
+
+RendererMainPlatformDelegate::~RendererMainPlatformDelegate() {}
+
+void RendererMainPlatformDelegate::PlatformInitialize() {}
+
+void RendererMainPlatformDelegate::PlatformUninitialize() {}
+
+bool RendererMainPlatformDelegate::EnableSandbox() {
+  // TODO(750938): Report NOTIMPLEMENTED() here until we re-enable sandboxing
+  // of sub-processes.
+  NOTIMPLEMENTED();
+  return true;
+}
+
+}  // namespace content

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/shell/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/shell/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/content/shell/BUILD.gn	2018-06-15 09:47:20.002883584 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/content/shell/BUILD.gn	2018-09-23 00:09:24.203423744 +0200
@@ -291,7 +291,7 @@
     "//v8",
   ]
 
-  if (is_fuchsia) {
+  if (is_fuchsia || is_haiku) {
     sources += [ "app/blink_test_platform_support_fuchsia.cc" ]
     deps -= [
       "//components/crash/content/app",
@@ -391,7 +391,7 @@
     ]
   }
 
-  if (is_linux) {
+  if (is_linux || is_haiku) {
     deps += [ "//build/config/freetype" ]
   }
 
@@ -866,7 +866,7 @@
   if (is_win) {
     data_deps += [ "//build/win:copy_cdb_to_output" ]
   }
-  if (is_posix && !is_android) {
+  if (is_posix && !is_android && !is_haiku) {
     data_deps += [
       "//third_party/breakpad:dump_syms($host_toolchain)",
       "//third_party/breakpad:minidump_stackwalk($host_toolchain)",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/config/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/config/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/config/BUILD.gn	2018-06-15 09:47:20.028835840 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/config/BUILD.gn	2018-10-01 20:02:01.213385216 +0200
@@ -110,6 +110,9 @@
   if (is_fuchsia) {
     sources += [ "gpu_info_collector_fuchsia.cc" ]
   }
+  if (is_haiku) {
+    sources += [ "gpu_info_collector_haiku.cc" ]
+  }
 
   sources += process_json_outputs
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/config/gpu_info_collector_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/config/gpu_info_collector_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/config/gpu_info_collector_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/config/gpu_info_collector_haiku.cc	2018-06-15 09:47:20.480509952 +0200
@@ -0,0 +1,31 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "gpu/config/gpu_info_collector.h"
+
+namespace gpu {
+
+CollectInfoResult CollectContextGraphicsInfo(GPUInfo* gpu_info) {
+  // TODO(crbug.com/707031): Implement this.
+  NOTIMPLEMENTED();
+  return kCollectInfoFatalFailure;
+}
+
+CollectInfoResult CollectBasicGraphicsInfo(GPUInfo* gpu_info) {
+  // TODO(crbug.com/707031): Implement this.
+  NOTIMPLEMENTED();
+  return kCollectInfoFatalFailure;
+}
+
+CollectInfoResult CollectDriverInfoGL(GPUInfo* gpu_info) {
+  // TODO(crbug.com/707031): Implement this.
+  NOTIMPLEMENTED();
+  return kCollectInfoFatalFailure;
+}
+
+void MergeGPUInfo(GPUInfo* basic_gpu_info, const GPUInfo& context_gpu_info) {
+  MergeGPUInfoGL(basic_gpu_info, context_gpu_info);
+}
+
+}  // namespace gpu

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/ipc/common/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/ipc/common/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/ipc/common/BUILD.gn	2018-06-15 09:47:20.019136512 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/ipc/common/BUILD.gn	2018-10-01 20:46:20.046661632 +0200
@@ -125,6 +125,14 @@
     ]
     libs = [ "android" ]
   }
+  if (is_haiku) {
+    sources += [
+      "gpu_surface_lookup.cc",
+      "gpu_surface_lookup.h",
+      "gpu_surface_tracker.cc",
+      "gpu_surface_tracker.h",
+    ]
+  }
 
   if (use_ozone) {
     deps += [ "//ui/ozone" ]

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/ipc/common/surface_handle.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/ipc/common/surface_handle.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/gpu/ipc/common/surface_handle.h	2018-06-15 09:47:20.020709376 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/gpu/ipc/common/surface_handle.h	2018-10-01 20:14:43.210763776 +0200
@@ -11,7 +11,7 @@
 
 #if (defined(OS_MACOSX) || defined(OS_WIN) || defined(USE_X11) || \
      defined(USE_OZONE)) &&                                       \
-    !defined(OS_NACL)
+    !defined(OS_NACL) && !defined(OS_HAIKU)
 #include "ui/gfx/native_widget_types.h"
 #define GPU_SURFACE_HANDLE_IS_ACCELERATED_WINDOW
 #endif
@@ -34,7 +34,7 @@
 using SurfaceHandle = gfx::AcceleratedWidget;
 constexpr SurfaceHandle kNullSurfaceHandle = gfx::kNullAcceleratedWidget;
 #elif defined(OS_MACOSX) || defined(OS_ANDROID) || defined(OS_NACL) || \
-    defined(OS_FUCHSIA)
+    defined(OS_FUCHSIA) || defined(OS_HAIKU)
 using SurfaceHandle = int32_t;
 constexpr SurfaceHandle kNullSurfaceHandle = 0;
 #else

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/headless/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/headless/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/headless/BUILD.gn	2018-06-15 09:47:20.053215232 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/headless/BUILD.gn	2018-09-22 23:49:34.945815552 +0200
@@ -597,7 +597,7 @@
     "//testing/gtest",
   ]
 
-  if (!is_fuchsia) {
+  if (!is_fuchsia && !is_haiku) {
     deps += [ "//components/crash/content/browser" ]
   }
 
@@ -759,7 +759,7 @@
     "//testing/gtest",
   ]
 
-  if (!is_fuchsia) {
+  if (!is_fuchsia && !is_haiku) {
     deps += [
       "//components/crash/content/app:test_support",
       "//components/crash/content/browser",
@@ -892,7 +892,7 @@
     "//content/public/common",
   ]
 
-  if (!is_fuchsia) {
+  if (!is_fuchsia && !is_haiku) {
     deps += [ "//components/crash/content/browser" ]
   }
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ipc/ipc_message_utils.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ipc/ipc_message_utils.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ipc/ipc_message_utils.cc	2018-06-15 09:47:20.005505024 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ipc/ipc_message_utils.cc	2018-09-22 20:20:11.444334080 +0200
@@ -344,7 +344,7 @@
 }
 
 #if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FUCHSIA) || \
-    (defined(OS_ANDROID) && defined(ARCH_CPU_64_BITS))
+    defined(OS_HAIKU) || (defined(OS_ANDROID) && defined(ARCH_CPU_64_BITS))
 void ParamTraits<long>::Log(const param_type& p, std::string* l) {
   l->append(base::NumberToString(p));
 }

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ipc/ipc_message_utils.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ipc/ipc_message_utils.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ipc/ipc_message_utils.h	2018-06-15 09:47:20.010485760 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ipc/ipc_message_utils.h	2018-09-22 20:20:25.693895168 +0200
@@ -196,7 +196,7 @@
 // Since we want to support Android 32<>64 bit IPC, as long as we don't have
 // these traits for 32 bit ARM then that'll catch any errors.
 #if defined(OS_WIN) || defined(OS_LINUX) || defined(OS_FUCHSIA) || \
-    (defined(OS_ANDROID) && defined(ARCH_CPU_64_BITS))
+    defined(OS_HAIKU) || (defined(OS_ANDROID) && defined(ARCH_CPU_64_BITS))
 template <>
 struct ParamTraits<long> {
   typedef long param_type;
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/audio/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/audio/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/audio/BUILD.gn	2018-06-15 09:47:20.035127296 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/audio/BUILD.gn	2018-09-23 06:23:54.941621248 +0200
@@ -166,6 +166,12 @@
     "//media:subcomponent_config",
   ]
 
+  if (is_haiku) {
+    sources += [
+      "haiku/audio_manager_haiku.cc",
+    ]
+  }
+
   if (is_mac) {
     sources += [
       "mac/audio_auhal_mac.cc",
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/audio/haiku/audio_manager_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/audio/haiku/audio_manager_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/audio/haiku/audio_manager_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/audio/haiku/audio_manager_haiku.cc	2018-09-23 06:23:11.451936256 +0200
@@ -0,0 +1,23 @@
+// Copyright (c) 2012 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include <memory>
+
+#include "base/command_line.h"
+#include "base/metrics/histogram_macros.h"
+#include "media/base/media_switches.h"
+
+#include "media/audio/fake_audio_manager.h"
+
+
+namespace media {
+
+std::unique_ptr<media::AudioManager> CreateAudioManager(
+    std::unique_ptr<AudioThread> audio_thread,
+    AudioLogFactory* audio_log_factory) {
+  return std::make_unique<FakeAudioManager>(std::move(audio_thread),
+                                            audio_log_factory);
+}
+
+}  // namespace media
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/capture/video/fake_video_capture_device_factory.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/capture/video/fake_video_capture_device_factory.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/media/capture/video/fake_video_capture_device_factory.cc	2018-06-15 09:47:20.040370176 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/media/capture/video/fake_video_capture_device_factory.cc	2018-09-23 02:12:14.828375040 +0200
@@ -208,7 +208,7 @@
         VideoCaptureApi::WIN_DIRECT_SHOW
 #elif defined(OS_ANDROID)
         VideoCaptureApi::ANDROID_API2_LEGACY
-#elif defined(OS_FUCHSIA)
+#elif defined(OS_FUCHSIA) || defined(OS_HAIKU)
         VideoCaptureApi::UNKNOWN
 #endif
         );
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/generators/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/generators/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/generators/mojom_cpp_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/generators/mojom_cpp_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/generators/mojom_js_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/generators/mojom_js_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/error.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/error.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/fileutil.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/fileutil.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/module.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/module.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/pack.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/pack.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/template_expander.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/template_expander.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/translate.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/generate/translate.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/ast.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/ast.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/lexer.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/lexer.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/parser.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/mojo/public/tools/bindings/pylib/mojom/parse/parser.pyc differ
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/net_errors_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/net_errors_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/net_errors_posix.cc	2018-06-15 09:47:20.027525120 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/net_errors_posix.cc	2018-09-23 02:29:28.655360000 +0200
@@ -106,8 +106,10 @@
       return ERR_ACCESS_DENIED;
     case ETXTBSY:  // Text file busy.
       return ERR_ACCESS_DENIED;
+#if !defined(OS_HAIKU)
     case EUSERS:  // Too many users.
       return ERR_INSUFFICIENT_RESOURCES;
+#endif
     case EMFILE:  // Too many open files.
       return ERR_INSUFFICIENT_RESOURCES;
 #if defined(OS_FUCHSIA)
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/network_interfaces_getifaddrs.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/network_interfaces_getifaddrs.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/network_interfaces_getifaddrs.cc	2018-06-15 09:47:20.023068672 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/network_interfaces_getifaddrs.cc	2018-09-23 02:32:22.893911040 +0200
@@ -4,6 +4,11 @@
 
 #include "net/base/network_interfaces_getifaddrs.h"
 
+#if defined(OS_HAIKU)
+#define _BSD_SOURCE
+#define IFF_RUNNING IFF_LINK
+#endif
+
 #include <ifaddrs.h>
 #include <net/if.h>
 #include <netinet/in.h>
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/platform_mime_util_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/platform_mime_util_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/base/platform_mime_util_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/base/platform_mime_util_haiku.cc	2018-06-15 09:47:20.983302144 +0200
@@ -0,0 +1,34 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "net/base/platform_mime_util.h"
+
+#include <string>
+
+#include "base/logging.h"
+#include "build/build_config.h"
+
+namespace net {
+
+bool PlatformMimeUtil::GetPlatformMimeTypeFromExtension(
+    const base::FilePath::StringType& extension,
+    std::string* result) const {
+  // TODO(fuchsia): Integrate with MIME DB when Fuchsia provides an API.
+  return false;
+}
+
+bool PlatformMimeUtil::GetPlatformPreferredExtensionForMimeType(
+    const std::string& mime_type,
+    base::FilePath::StringType* extension) const {
+  // TODO(fuchsia): Integrate with MIME DB when Fuchsia provides an API.
+  return false;
+}
+
+void PlatformMimeUtil::GetPlatformExtensionsForMimeType(
+    const std::string& mime_type,
+    std::unordered_set<base::FilePath::StringType>* extensions) const {
+  // TODO(fuchsia): Integrate with MIME DB when Fuchsia provides an API.
+}
+
+}  // namespace net
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/dns/host_resolver_impl.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/dns/host_resolver_impl.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/dns/host_resolver_impl.cc	2018-06-15 09:47:20.028573696 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/dns/host_resolver_impl.cc	2018-09-23 02:53:09.100401152 +0200
@@ -15,6 +15,9 @@
 #if !defined(OS_NACL)
 #include <net/if.h>
 #if !defined(OS_ANDROID)
+#if defined(OS_HAIKU)
+#define _BSD_SOURCE
+#endif  // defined(OS_HAIKU)
 #include <ifaddrs.h>
 #endif  // !defined(OS_ANDROID)
 #endif  // !defined(OS_NACL)
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/udp_socket_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/udp_socket_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/udp_socket_posix.cc	2018-06-15 09:47:20.015466496 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/udp_socket_posix.cc	2018-09-23 03:01:19.272105472 +0200
@@ -57,6 +57,11 @@
 #include <netstack/netconfig.h>
 #endif  // defined(OS_FUCHSIA)
 
+#if defined(OS_HAIKU)
+#define IPV6_TCLASS 61
+#define IP_DEFAULT_MULTICAST_TTL 1
+#endif
+
 namespace net {
 
 namespace {
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.cc	2018-06-15 09:47:20.003670016 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.cc	2018-09-23 03:02:23.946864128 +0200
@@ -47,7 +47,7 @@
 // static
 bool UnixDomainServerSocket::GetPeerCredentials(SocketDescriptor socket,
                                                 Credentials* credentials) {
-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FUCHSIA)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FUCHSIA) || defined(OS_HAIKU)
   struct ucred user_cred;
   socklen_t len = sizeof(user_cred);
   if (getsockopt(socket, SOL_SOCKET, SO_PEERCRED, &user_cred, &len) < 0)
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.h	2018-06-15 09:47:20.014680064 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/net/socket/unix_domain_server_socket_posix.h	2018-09-23 03:02:57.753401856 +0200
@@ -29,7 +29,7 @@
  public:
   // Credentials of a peer process connected to the socket.
   struct NET_EXPORT Credentials {
-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FUCHSIA)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FUCHSIA) || defined(OS_HAIKU)
     // Linux and Fuchsia provide more information about the connected peer
     // than Windows/OS X. It's useful for permission-based authorization on
     // Android.
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_ast.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_ast.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_lexer.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_lexer.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_lint.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_lint.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_log.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_log.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_namespace.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_namespace.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_node.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_node.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_option.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_option.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_outfile.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_outfile.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_parser.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_parser.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_propertynode.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_propertynode.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_release.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_release.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ppapi/generators/idl_visitor.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ppapi/generators/idl_visitor.pyc differ
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/public/cpp/manifest_parsing_util.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/public/cpp/manifest_parsing_util.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/public/cpp/manifest_parsing_util.cc	2018-06-15 09:47:20.036700160 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/public/cpp/manifest_parsing_util.cc	2018-09-22 20:24:29.194510848 +0200
@@ -17,7 +17,8 @@
          name == Store::kRequiredFilesKey_PlatformValue_Linux ||
          name == Store::kRequiredFilesKey_PlatformValue_MacOSX ||
          name == Store::kRequiredFilesKey_PlatformValue_Android ||
-         name == Store::kRequiredFilesKey_PlatformValue_Fuchsia;
+         name == Store::kRequiredFilesKey_PlatformValue_Fuchsia ||
+         name == Store::kRequiredFilesKey_PlatformValue_Haiku;
 }
 
 bool IsCurrentPlatform(const std::string& name) {
@@ -31,6 +32,8 @@
   return name == Store::kRequiredFilesKey_PlatformValue_Android;
 #elif defined(OS_FUCHSIA)
   return name == Store::kRequiredFilesKey_PlatformValue_Fuchsia;
+#elif defined(OS_HAIKU)
+  return name == Store::kRequiredFilesKey_PlatformValue_Haiku;
 #else
 #error This architecture is not supported.
 #endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/store.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/store.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/store.cc	2018-06-15 09:47:20.037486592 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/store.cc	2018-09-22 20:23:52.887619584 +0200
@@ -36,5 +36,7 @@
 const char Store::kRequiredFilesKey_PlatformValue_Android[] = "android";
 // static
 const char Store::kRequiredFilesKey_PlatformValue_Fuchsia[] = "fuchsia";
+// static
+const char Store::kRequiredFilesKey_PlatformValue_Haiku[] = "haiku";
 
 }  // namespace catalog

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/store.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/store.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/catalog/store.h	2018-06-15 09:47:20.037224448 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/catalog/store.h	2018-09-22 20:23:32.703856640 +0200
@@ -36,6 +36,7 @@
   static const char kRequiredFilesKey_PlatformValue_MacOSX[];
   static const char kRequiredFilesKey_PlatformValue_Android[];
   static const char kRequiredFilesKey_PlatformValue_Fuchsia[];
+  static const char kRequiredFilesKey_PlatformValue_Haiku[];
 };
 
 }  // namespace catalog

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/time_zone_monitor/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/time_zone_monitor/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/time_zone_monitor/BUILD.gn	2018-06-15 09:47:20.036962304 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/time_zone_monitor/BUILD.gn	2018-10-01 21:02:39.659030016 +0200
@@ -51,6 +51,10 @@
   if (is_fuchsia) {
     sources += [ "time_zone_monitor_fuchsia.cc" ]
   }
+
+  if (is_haiku) {
+    sources += [ "time_zone_monitor_haiku.cc" ]
+  }
 }
 
 if (is_android) {
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/time_zone_monitor/time_zone_monitor_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/time_zone_monitor/time_zone_monitor_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/time_zone_monitor/time_zone_monitor_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/time_zone_monitor/time_zone_monitor_haiku.cc	2018-10-01 21:02:27.250347520 +0200
@@ -0,0 +1,36 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "services/device/time_zone_monitor/time_zone_monitor.h"
+
+#include <memory>
+
+#include "base/logging.h"
+#include "base/memory/ptr_util.h"
+
+namespace device {
+namespace {
+
+// TODO(fuchsia): Implement this. crbug.com/750934
+class TimeZoneMonitorHaiku : public TimeZoneMonitor {
+ public:
+  TimeZoneMonitorHaiku() = default;
+  ~TimeZoneMonitorHaiku() override = default;
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(TimeZoneMonitorHaiku);
+};
+
+}  // namespace
+
+// static
+std::unique_ptr<TimeZoneMonitor> TimeZoneMonitor::Create(
+    scoped_refptr<base::SequencedTaskRunner> file_task_runner) {
+  // TODO(fuchsia): Implement this. crbug.com/750934
+  NOTIMPLEMENTED();
+
+  return std::make_unique<TimeZoneMonitorHaiku>();
+}
+
+}  // namespace device

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/BUILD.gn	2018-06-15 09:47:20.046923776 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/BUILD.gn	2018-10-01 20:34:20.464781312 +0200
@@ -30,6 +30,10 @@
     "power_save_blocker_x11.cc",
   ]
 
+  if (is_haiku) {
+    sources += [ "power_save_blocker_haiku.cc" ]
+  }
+
   public_deps = [
     "//services/device/public/interfaces",
   ]

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/power_save_blocker_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/power_save_blocker_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/power_save_blocker_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/device/wake_lock/power_save_blocker/power_save_blocker_haiku.cc	2018-06-15 09:47:20.428605440 +0200
@@ -0,0 +1,40 @@
+// Copyright 2013 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "services/device/wake_lock/power_save_blocker/power_save_blocker.h"
+
+#include "base/macros.h"
+#include "base/memory/ref_counted.h"
+
+namespace device {
+
+// TODO(derat): Consider renaming this file; '_ozone' is a misnomer as power
+// save is OS-specific, not display-system-specific.  This implementation
+// ends up being used for non-ChromeOS Ozone platforms such as Chromecast.
+// See crbug.com/495661 for more detail.
+class PowerSaveBlocker::Delegate
+    : public base::RefCountedThreadSafe<PowerSaveBlocker::Delegate> {
+ public:
+  Delegate() {}
+
+ private:
+  friend class base::RefCountedThreadSafe<Delegate>;
+  virtual ~Delegate() {}
+
+  DISALLOW_COPY_AND_ASSIGN(Delegate);
+};
+
+PowerSaveBlocker::PowerSaveBlocker(
+    mojom::WakeLockType type,
+    mojom::WakeLockReason reason,
+    const std::string& description,
+    scoped_refptr<base::SequencedTaskRunner> ui_task_runner,
+    scoped_refptr<base::SingleThreadTaskRunner> blocking_task_runner)
+    : delegate_(new Delegate()),
+      ui_task_runner_(ui_task_runner),
+      blocking_task_runner_(blocking_task_runner) {}
+
+PowerSaveBlocker::~PowerSaveBlocker() {}
+
+}  // namespace device
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/resource_coordinator/public/cpp/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/resource_coordinator/public/cpp/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/resource_coordinator/public/cpp/BUILD.gn	2018-06-15 09:47:20.060030976 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/resource_coordinator/public/cpp/BUILD.gn	2018-10-01 20:45:33.509345792 +0200
@@ -55,6 +55,9 @@
   if (is_fuchsia) {
     sources += [ "memory_instrumentation/os_metrics_fuchsia.cc" ]
   }
+  if (is_haiku) {
+    sources += [ "memory_instrumentation/os_metrics_haiku.cc" ]
+  }
 
   defines = [ "SERVICES_RESOURCE_COORDINATOR_PUBLIC_CPP_IMPLEMENTATION" ]
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics_haiku.cc	2018-06-15 09:47:20.550764544 +0200
@@ -0,0 +1,27 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics.h"
+
+#include <vector>
+
+namespace memory_instrumentation {
+
+// static
+bool OSMetrics::FillOSMemoryDump(base::ProcessId pid,
+                                 mojom::RawOSMemDump* dump) {
+  // TODO(fuchsia): Implement this. See crbug.com/750948
+  NOTIMPLEMENTED();
+  return false;
+}
+
+// static
+std::vector<mojom::VmRegionPtr> OSMetrics::GetProcessMemoryMaps(
+    base::ProcessId) {
+  // TODO(fuchsia): Implement this. See crbug.com/750948
+  NOTIMPLEMENTED();
+  return std::vector<mojom::VmRegionPtr>();
+}
+
+}  // namespace memory_instrumentation

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/service_manager/embedder/set_process_title.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/service_manager/embedder/set_process_title.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/services/service_manager/embedder/set_process_title.cc	2018-06-15 09:47:20.019922944 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/services/service_manager/embedder/set_process_title.cc	2018-09-23 03:13:55.857997312 +0200
@@ -34,7 +34,7 @@
 
 // TODO(jrg): Find out if setproctitle or equivalent is available on Android.
 #if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_SOLARIS) && \
-    !defined(OS_ANDROID) && !defined(OS_FUCHSIA)
+    !defined(OS_ANDROID) && !defined(OS_FUCHSIA) && !defined(OS_HAIKU)
 
 void SetProcessTitleFromCommandLine(const char** main_argv) {
   // Build a single string which consists of all the arguments separated

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/skia/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/skia/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/skia/BUILD.gn	2018-06-15 09:47:20.013631488 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/skia/BUILD.gn	2018-10-02 00:19:22.824705024 +0200
@@ -413,12 +413,13 @@
     set_sources_assignment_filter(sources_assignment_filter)
   }
 
-  if (is_linux) {
+  if (is_linux || is_haiku) {
     sources += [
       "//third_party/skia/src/ports/SkFontConfigInterface.cpp",
       "//third_party/skia/src/ports/SkFontConfigInterface_direct.cpp",
       "//third_party/skia/src/ports/SkFontConfigInterface_direct_factory.cpp",
       "//third_party/skia/src/ports/SkFontMgr_FontConfigInterface.cpp",
+      "//third_party/skia/src/ports/SkFontMgr_FontConfigInterface_factory.cpp",
     ]
   }
 
@@ -485,7 +486,7 @@
     ]
   }
 
-  if (is_linux) {
+  if (is_linux || is_haiku) {
     deps += [
       "//third_party/expat",
       "//third_party/fontconfig",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/skia/ext/platform_canvas.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/skia/ext/platform_canvas.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/skia/ext/platform_canvas.h	2018-06-15 09:47:20.024641536 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/skia/ext/platform_canvas.h	2018-09-23 01:45:46.143130624 +0200
@@ -58,7 +58,7 @@
 
 #elif defined(__linux__) || defined(__FreeBSD__) || defined(__OpenBSD__) || \
     defined(__sun) || defined(ANDROID) || defined(__APPLE__) ||             \
-    defined(__Fuchsia__)
+    defined(__Fuchsia__) || defined(__HAIKU__)
 // Construct a canvas from the given memory region. The memory is not cleared
 // first. @data must be, at least, @height * StrideForWidth(@width) bytes.
 SK_API std::unique_ptr<SkCanvas> CreatePlatformCanvasWithPixels(
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elfutils.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elfutils.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elfutils.h	2018-06-15 09:47:20.001835008 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elfutils.h	2018-09-22 20:47:06.546570240 +0200
@@ -34,7 +34,9 @@
 #define COMMON_LINUX_ELFUTILS_H_
 
 #include <elf.h>
+#ifndef __HAIKU__
 #include <link.h>
+#endif
 #include <stdint.h>
 
 #include "common/memory_allocator.h"

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/memory_allocator.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/memory_allocator.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/memory_allocator.h	2018-06-15 09:47:20.011796480 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/memory_allocator.h	2018-09-22 20:51:11.586678272 +0200
@@ -46,6 +46,9 @@
 #define sys_mmap mmap
 #define sys_munmap munmap
 #define MAP_ANONYMOUS MAP_ANON
+#elif defined(__HAIKU__)
+#define sys_mmap mmap
+#define sys_munmap munmap
 #else
 #include "third_party/lss/linux_syscall_support.h"
 #endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/fontconfig/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/fontconfig/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/fontconfig/BUILD.gn	2018-06-15 09:47:20.031981568 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/fontconfig/BUILD.gn	2018-10-02 00:19:51.852754432 +0200
@@ -4,7 +4,7 @@
 
 import("//third_party/fontconfig/fontconfig.gni")
 
-assert(is_linux)
+assert(is_linux || is_haiku)
 
 if (use_bundled_fontconfig) {
   config("fontconfig_config") {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/fontconfig/fontconfig.gni qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/fontconfig/fontconfig.gni
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/fontconfig/fontconfig.gni	2018-06-15 09:47:20.011534336 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/fontconfig/fontconfig.gni	2018-10-02 00:20:34.969670656 +0200
@@ -4,7 +4,7 @@
 
 import("//build/config/features.gni")
 
-assert(is_linux)
+assert(is_linux || is_haiku)
 
 declare_args() {
   use_bundled_fontconfig = is_chromecast || is_desktop_linux
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/_compat.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/_compat.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/bccache.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/bccache.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/compiler.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/compiler.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/defaults.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/defaults.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/environment.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/environment.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/exceptions.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/exceptions.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/ext.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/ext.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/filters.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/filters.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/lexer.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/lexer.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/loaders.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/loaders.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/nodes.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/nodes.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/optimizer.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/optimizer.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/parser.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/parser.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/runtime.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/runtime.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/tests.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/tests.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/utils.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/utils.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/jinja2/visitor.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/jinja2/visitor.pyc differ

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/khronos/EGL/eglplatform.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/khronos/EGL/eglplatform.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/khronos/EGL/eglplatform.h	2018-06-15 09:47:20.011534336 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/khronos/EGL/eglplatform.h	2018-09-23 02:20:55.036438016 +0200
@@ -99,6 +99,13 @@
 typedef intptr_t EGLNativeWindowType;
 typedef intptr_t EGLNativePixmapType;
 
+#elif defined(__HAIKU__)
+
+#include <kernel/image.h>
+typedef void				*EGLNativeDisplayType;
+typedef uintptr_t			EGLNativePixmapType;
+typedef uintptr_t			EGLNativeWindowType;
+
 #elif defined(__unix__)
 
 /* X11 (tentative)  */

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/libjpeg_turbo/libjpeg.gyp qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/libjpeg_turbo/libjpeg.gyp
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/libjpeg_turbo/libjpeg.gyp	2018-06-15 09:47:20.062128128 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/libjpeg_turbo/libjpeg.gyp	2018-10-01 21:48:06.996409344 +0200
@@ -24,7 +24,6 @@
         '.',
       ],
       'defines': [
-        'WITH_SIMD',
         'NO_GETENV',
       ],
       'sources': [
@@ -101,16 +100,16 @@
         [ 'target_arch=="ia32"', {
           'sources': [
             'simd/jsimd_i386.c',
-            'simd/jccolor-mmx.asm', 
+            'simd/jccolor-mmx.asm',
             'simd/jccolor-sse2.asm',
-            'simd/jcgray-mmx.asm',  
+            'simd/jcgray-mmx.asm',
             'simd/jcgray-sse2.asm',
-            'simd/jchuff-sse2.asm', 
+            'simd/jchuff-sse2.asm',
             'simd/jcsample-mmx.asm',
             'simd/jcsample-sse2.asm',
-            'simd/jdcolor-mmx.asm', 
+            'simd/jdcolor-mmx.asm',
             'simd/jdcolor-sse2.asm',
-            'simd/jdmerge-mmx.asm', 
+            'simd/jdmerge-mmx.asm',
             'simd/jdmerge-sse2.asm',
             'simd/jdsample-mmx.asm',
             'simd/jdsample-sse2.asm',
@@ -129,11 +128,11 @@
             'simd/jidctint-sse2.asm',
             'simd/jidctred-mmx.asm',
             'simd/jidctred-sse2.asm',
-            'simd/jquant-3dn.asm',  
+            'simd/jquant-3dn.asm',
             'simd/jquantf-sse2.asm',
             'simd/jquanti-sse2.asm',
-            'simd/jquant-mmx.asm',  
-            'simd/jquant-sse.asm',  
+            'simd/jquant-mmx.asm',
+            'simd/jquant-sse.asm',
             'simd/jsimdcpu.asm',
           ],
         }],
@@ -244,7 +243,7 @@
             ],
           },
         }],
-        [ 'OS=="linux" or OS=="freebsd" or (OS=="android" and (target_arch=="ia32" or target_arch=="x64"))', {
+        [ 'OS=="linux" or OS=="freebsd" or OS=="haiku" or (OS=="android" and (target_arch=="ia32" or target_arch=="x64"))', {
           'conditions': [
             [ 'use_system_yasm==0', {
               'dependencies': [

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/libxml/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/libxml/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/libxml/BUILD.gn	2018-06-15 09:47:20.022282240 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/libxml/BUILD.gn	2018-09-12 16:31:43.222035968 +0200
@@ -4,7 +4,7 @@
 
 # Define an "os_include" variable that points at the OS-specific generated
 # headers.  These were generated by running the configure script offline.
-if (is_linux || is_android || is_nacl || is_fuchsia) {
+if (is_linux || is_android || is_nacl || is_fuchsia || is_haiku) {
   os_include = "linux"
 } else if (is_mac || is_ios) {
   os_include = "mac"
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/markupsafe/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/markupsafe/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/markupsafe/_compat.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/markupsafe/_compat.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/markupsafe/_native.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/markupsafe/_native.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/ply/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/ply/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/ply/lex.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/ply/lex.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/ply/yacc.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/ply/yacc.pyc differ

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/BUILD.gn	2018-06-15 09:47:20.033292288 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/BUILD.gn	2018-10-01 23:01:59.833093632 +0200
@@ -19,8 +19,8 @@
   skia_use_angle = false
   skia_use_egl = false
   skia_use_expat = true
-  skia_use_fontconfig = is_linux
-  skia_use_freetype = is_android || is_fuchsia || is_linux
+  skia_use_fontconfig = is_linux || is_haiku
+  skia_use_freetype = is_android || is_fuchsia || is_linux || is_haiku
   skia_use_icu = !is_fuchsia && !is_ios && !is_win  # TODO: Windows
   skia_use_libjpeg_turbo = true
   skia_use_libpng = true
@@ -889,6 +889,10 @@
   if (is_fuchsia) {
     sources += [ "src/ports/SkDebug_stdio.cpp" ]
   }
+
+  if (is_haiku) {
+    sources += [ "src/ports/SkDebug_stdio.cpp" ]
+  }
 }
 
 # Targets guarded by skia_enable_tools may use //third_party freely.

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/include/core/SkPreConfig.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/include/core/SkPreConfig.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/include/core/SkPreConfig.h	2018-06-15 09:47:20.027525120 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/include/core/SkPreConfig.h	2018-09-23 01:49:18.466616320 +0200
@@ -31,7 +31,8 @@
     #elif defined(linux) || defined(__linux) || defined(__FreeBSD__) || \
           defined(__OpenBSD__) || defined(__sun) || defined(__NetBSD__) || \
           defined(__DragonFly__) || defined(__Fuchsia__) || \
-          defined(__GLIBC__) || defined(__GNU__) || defined(__unix__)
+          defined(__GLIBC__) || defined(__GNU__) || defined(__unix__) || \
+          defined(__HAIKU__)
         #define SK_BUILD_FOR_UNIX
     #elif TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR
         #define SK_BUILD_FOR_IOS

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h	2018-06-15 09:47:20.041680896 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/skia/src/gpu/GrAutoLocaleSetter.h	2018-09-23 01:54:24.902299648 +0200
@@ -25,7 +25,7 @@
 #define HAVE_XLOCALE 0
 #endif
 
-#if defined(SK_BUILD_FOR_ANDROID) || defined(__UCLIBC__) || defined(_NEWLIB_VERSION)
+#if defined(SK_BUILD_FOR_ANDROID) || defined(__UCLIBC__) || defined(_NEWLIB_VERSION) || defined(__HAIKU__)
 #define HAVE_LOCALE_T 0
 #else
 #define HAVE_LOCALE_T 1

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/core/layout/LayoutThemeHaiku.cpp qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/core/layout/LayoutThemeHaiku.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/core/layout/LayoutThemeHaiku.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/core/layout/LayoutThemeHaiku.cpp	2018-10-01 19:24:31.441712640 +0200
@@ -0,0 +1,26 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "core/layout/LayoutThemeDefault.h"
+
+namespace blink {
+namespace {
+
+// Fuchsia is headless-only for now, so no native themes are applied.
+// TODO(fuchsia): Implement this when we enable the UI. (crbug.com/750946)
+class LayoutThemeHaiku : public LayoutThemeDefault {
+ public:
+  static scoped_refptr<LayoutTheme> Create() {
+    return base::AdoptRef(new LayoutThemeHaiku());
+  }
+};
+
+}  // namespace
+
+LayoutTheme& LayoutTheme::NativeTheme() {
+  DEFINE_STATIC_REF(LayoutTheme, layout_theme, (LayoutThemeHaiku::Create()));
+  return *layout_theme;
+}
+
+}  // namespace blink
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontCacheHaiku.cpp qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontCacheHaiku.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontCacheHaiku.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontCacheHaiku.cpp	2018-06-15 09:47:20.552337408 +0200
@@ -0,0 +1,58 @@
+/*
+ * Copyright (C) 2017 Google Inc. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1.  Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ * 2.  Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in the
+ *     documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+ * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "platform/fonts/FontCache.h"
+
+#include "platform/fonts/FontPlatformData.h"
+
+namespace blink {
+
+// static
+const AtomicString& FontCache::SystemFontFamily() {
+  // TODO(fuchsia): Implement this when UI support is ready. crbug.com/750946
+  NOTIMPLEMENTED();
+
+  DEFINE_THREAD_SAFE_STATIC_LOCAL(AtomicString, font_family, ());
+  return font_family;
+}
+
+void FontCache::GetFontForCharacter(
+    UChar32 c,
+    const char* preferred_locale,
+    FontCache::PlatformFallbackFont* fallback_font) {
+  // TODO(fuchsia): Implement this when UI support is ready. crbug.com/750946
+  NOTIMPLEMENTED();
+}
+
+scoped_refptr<SimpleFontData> FontCache::PlatformFallbackFontForCharacter(
+    const FontDescription&,
+    UChar32,
+    const SimpleFontData* font_data_to_substitute,
+    FontFallbackPriority priority) {
+  // TODO(fuchsia): Implement this when UI support is ready. crbug.com/750946
+  NOTIMPLEMENTED();
+  return nullptr;
+}
+
+}  // namespace blink

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontPlatformDataHaiku.cpp qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontPlatformDataHaiku.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontPlatformDataHaiku.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/fonts/haiku/FontPlatformDataHaiku.cpp	2018-06-15 09:47:20.552337408 +0200
@@ -0,0 +1,41 @@
+/*
+ * Copyright (c) 2017, Google Inc. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *
+ *     * Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above
+ * copyright notice, this list of conditions and the following disclaimer
+ * in the documentation and/or other materials provided with the
+ * distribution.
+ *     * Neither the name of Google Inc. nor the names of its
+ * contributors may be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include "platform/fonts/FontPlatformData.h"
+
+namespace blink {
+
+void FontPlatformData::SetupPaintFont(PaintFont* font,
+                                      float device_scale_factor,
+                                      const Font*) const {
+  font->SetTypeface(paint_typeface_);
+}
+
+}  // namespace blink

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/haiku/HyphenationHaiku.cpp qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/haiku/HyphenationHaiku.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/haiku/HyphenationHaiku.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/haiku/HyphenationHaiku.cpp	2018-06-15 09:47:20.660865024 +0200
@@ -0,0 +1,15 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "platform/text/Hyphenation.h"
+
+namespace blink {
+
+scoped_refptr<Hyphenation> Hyphenation::PlatformGetHyphenation(
+    const AtomicString&) {
+  // TODO(fuchsia): Implement this when UI support is ready. crbug.com/750946
+  return nullptr;
+}
+
+}  // namespace blink

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/BUILD.gn	2018-06-15 09:47:20.057147392 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/BUILD.gn	2018-09-23 01:44:13.560726016 +0200
@@ -75,6 +75,9 @@
     if (is_posix) {
       cflags = [ "-std=gnu99" ]
     }
+    if (is_haiku) {
+      libs = [ "intl" ]
+    }
   }
 
   executable("genmacro") {
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/source/config/haiku/config.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/source/config/haiku/config.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/source/config/haiku/config.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/source/config/haiku/config.h	2018-09-23 01:20:19.658243584 +0200
@@ -0,0 +1,173 @@
+/* config.h.  Generated from config.h.in by configure.  */
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Command name to run C preprocessor */
+#define CPP_PROG "cc -E"
+
+/* */
+#define ENABLE_NLS 1
+
+/* Define to 1 if you have the `abort' function. */
+#define HAVE_ABORT 1
+
+/* */
+/* #undef HAVE_CATGETS */
+
+/* Define to 1 if you have the Mac OS X function CFLocaleCopyCurrent in the
+   CoreFoundation framework. */
+/* #undef HAVE_CFLOCALECOPYCURRENT */
+
+/* Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in
+   the CoreFoundation framework. */
+/* #undef HAVE_CFPREFERENCESCOPYAPPVALUE */
+
+/* Define if the GNU dcgettext() function is already present or preinstalled.
+   */
+#define HAVE_DCGETTEXT 1
+
+/* Define to 1 if you have the <direct.h> header file. */
+/* #undef HAVE_DIRECT_H */
+
+/* Define to 1 if you have the `ftruncate' function. */
+#define HAVE_FTRUNCATE 1
+
+/* Define to 1 if you have the `getcwd' function. */
+#define HAVE_GETCWD 1
+
+/* */
+#define HAVE_GETTEXT 1
+
+/* Define to 1 if you have the GNU C Library */
+/* #undef HAVE_GNU_C_LIBRARY */
+
+/* Define if you have the iconv() function and it works. */
+#define HAVE_ICONV 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* */
+/* #undef HAVE_LC_MESSAGES */
+
+/* Define to 1 if you have the <libgen.h> header file. */
+#define HAVE_LIBGEN_H 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `mergesort' function. */
+#define HAVE_MERGESORT 1
+
+/* Define to 1 if you have the `popen' function. */
+#define HAVE_POPEN 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* */
+/* #undef HAVE_STPCPY */
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#define HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the `strcmpi' function. */
+/* #undef HAVE_STRCMPI */
+
+/* Define to 1 if you have the `stricmp' function. */
+/* #undef HAVE_STRICMP */
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strncasecmp' function. */
+#define HAVE_STRNCASECMP 1
+
+/* Define to 1 if you have the `strsep' function. */
+/* #undef HAVE_STRSEP */
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the `toascii' function. */
+#define HAVE_TOASCII 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#define HAVE_VSNPRINTF 1
+
+/* Define to 1 if you have the `_stricmp' function. */
+/* #undef HAVE__STRICMP */
+
+/* Name of package */
+#define PACKAGE "yasm"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "bug-yasm@tortall.net"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "yasm"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "yasm 1.3.0"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "yasm"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.3.0"
+
+/* Define to 1 if the C compiler supports function prototypes. */
+#define PROTOTYPES 1
+
+/* The size of `char', as computed by sizeof. */
+/* #undef SIZEOF_CHAR */
+
+/* The size of `int', as computed by sizeof. */
+/* #undef SIZEOF_INT */
+
+/* The size of `long', as computed by sizeof. */
+/* #undef SIZEOF_LONG */
+
+/* The size of `short', as computed by sizeof. */
+/* #undef SIZEOF_SHORT */
+
+/* The size of `void*', as computed by sizeof. */
+/* #undef SIZEOF_VOIDP */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Version number of package */
+#define VERSION "1.3.0"
+
+/* Define if using the dmalloc debugging malloc package */
+/* #undef WITH_DMALLOC */
+
+/* Define like PROTOTYPES; this can be used by system headers. */
+#define __PROTOTYPES 1
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef const */
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef size_t */

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/source/config/haiku/libyasm-stdint.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/source/config/haiku/libyasm-stdint.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/third_party/yasm/source/config/haiku/libyasm-stdint.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/third_party/yasm/source/config/haiku/libyasm-stdint.h	2018-09-23 01:20:20.466354176 +0200
@@ -0,0 +1,9 @@
+#ifndef _YASM_LIBYASM_STDINT_H
+#define _YASM_LIBYASM_STDINT_H 1
+#ifndef _GENERATED_STDINT_H
+#define _GENERATED_STDINT_H "yasm 1.3.0"
+/* generated using gcc */
+#define _STDINT_HAVE_STDINT_H 1
+#include <stdint.h>
+#endif
+#endif

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/battor_agent/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/battor_agent/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/battor_agent/BUILD.gn	2018-06-15 09:47:20.031195136 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/battor_agent/BUILD.gn	2018-09-22 14:48:29.561512448 +0200
@@ -5,7 +5,7 @@
 import("//testing/test.gni")
 
 # Works only on desktop platforms.
-assert(is_win || is_linux || is_mac)
+assert(is_win || is_linux || is_mac || is_haiku)
 
 executable("battor_agent") {
   sources = [

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/grit/grit/node/base.py qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/grit/grit/node/base.py
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/grit/grit/node/base.py	2018-06-15 09:47:20.062914560 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/grit/grit/node/base.py	2018-09-23 03:39:54.594804736 +0200
@@ -467,6 +467,8 @@
 
       elif name == 'is_linux':
         value = target_platform.startswith('linux')
+      elif name == 'is_haiku':
+        value = target_platform.startswith('haiku')
       elif name == 'is_macosx':
         value = target_platform == 'darwin'
       elif name == 'is_win':
@@ -479,7 +481,7 @@
         value = 'bsd' in target_platform
       elif name == 'is_posix':
         value = (target_platform in ('darwin', 'linux2', 'linux3', 'sunos5',
-                                     'android', 'ios')
+                                     'android', 'ios', 'haiku1')
                  or 'bsd' in target_platform)
 
       elif name == 'pp_ifdef':

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/gyp/pylib/gyp/common.py qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/gyp/pylib/gyp/common.py
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/gyp/pylib/gyp/common.py	2018-06-15 09:47:20.021495808 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/gyp/pylib/gyp/common.py	2018-10-01 19:01:01.447217664 +0200
@@ -429,6 +429,8 @@
     return 'netbsd'
   if sys.platform.startswith('aix'):
     return 'aix'
+  if sys.platform.startswith('haiku'):
+    return 'haiku'
 
   return 'linux'
 
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/idl_parser/__init__.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/idl_parser/__init__.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/idl_parser/idl_lexer.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/idl_parser/idl_lexer.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/idl_parser/idl_node.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/idl_parser/idl_node.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/idl_parser/idl_parser.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/idl_parser/idl_parser.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_comment_eater/json_comment_eater.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_comment_eater/json_comment_eater.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cc_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cc_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/code.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/code.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cpp_bundle_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cpp_bundle_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cpp_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cpp_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cpp_namespace_environment.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cpp_namespace_environment.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cpp_type_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cpp_type_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/cpp_util.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/cpp_util.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/h_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/h_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/idl_schema.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/idl_schema.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/js_externs_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/js_externs_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/js_interface_generator.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/js_interface_generator.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/js_util.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/js_util.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/json_parse.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/json_parse.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/json_schema.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/json_schema.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/memoize.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/memoize.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/model.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/model.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/namespace_resolver.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/namespace_resolver.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/schema_loader.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/schema_loader.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/schema_util.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/schema_util.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/json_schema_compiler/util_cc_helper.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/json_schema_compiler/util_cc_helper.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/common/models.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/common/models.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/common/pretty_print_xml.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/common/pretty_print_xml.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/ukm/builders_template.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/ukm/builders_template.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/ukm/codegen.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/ukm/codegen.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/ukm/decode_template.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/ukm/decode_template.pyc differ
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/tools/metrics/ukm/model.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/tools/metrics/ukm/model.pyc differ

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/display/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/display/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/display/BUILD.gn	2018-06-15 09:47:20.032505856 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/display/BUILD.gn	2018-10-01 20:57:37.445906944 +0200
@@ -67,6 +67,10 @@
     sources -= [ "screen_aura.cc" ]
   }
 
+  if (is_haiku) {
+    sources += [ "screen_haiku.cc" ]
+  }
+
   if (is_mac) {
     libs = [
       "AppKit.framework",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/display/screen_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/display/screen_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/display/screen_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/display/screen_haiku.cc	2018-10-01 20:56:47.459014144 +0200
@@ -0,0 +1,16 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/display/screen.h"
+
+#include "base/logging.h"
+
+namespace display {
+
+// static
+gfx::NativeWindow Screen::GetWindowForView(gfx::NativeView view) {
+  return view;
+}
+
+}  // namespace display

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/BUILD.gn	2018-06-15 09:47:20.014155776 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/BUILD.gn	2018-09-23 15:51:52.656146432 +0200
@@ -257,6 +257,13 @@
     "//third_party/zlib",
   ]
 
+  if(is_haiku) {
+    sources += [
+      "platform_font_haiku.cc",
+      "font_render_params_haiku.cc",
+      "font_fallback_haiku.cc",
+    ]
+  }
   # Text rendering conditions (complicated so separated out).
   if (use_aura || is_mac || (is_android && enable_vr) || is_fuchsia) {
     # Mac doesn't use RenderTextHarfBuzz by default yet.

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/font_fallback_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/font_fallback_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/font_fallback_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/font_fallback_haiku.cc	2018-06-15 09:47:20.645660672 +0200
@@ -0,0 +1,18 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/gfx/font_fallback.h"
+
+#include <string>
+#include <vector>
+
+namespace gfx {
+
+std::vector<Font> GetFallbackFonts(const Font& font) {
+  // TODO(fuchsia): Stubbed while bringing up headless build, see
+  // https://crbug.com/743296.
+  return std::vector<Font>();
+}
+
+}  // namespace gfx

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/font_render_params_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/font_render_params_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/font_render_params_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/font_render_params_haiku.cc	2018-06-15 09:47:20.608436224 +0200
@@ -0,0 +1,38 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/gfx/font_render_params.h"
+
+#include "base/logging.h"
+#include "base/macros.h"
+
+namespace gfx {
+
+namespace {
+
+// Returns the system's default settings.
+FontRenderParams LoadDefaults() {
+  FontRenderParams params;
+  params.antialiasing = true;
+  params.autohinter = true;
+  params.use_bitmaps = true;
+  params.subpixel_rendering = FontRenderParams::SUBPIXEL_RENDERING_NONE;
+  params.subpixel_positioning = true;
+  params.hinting = FontRenderParams::HINTING_SLIGHT;
+
+  return params;
+}
+
+}  // namespace
+
+FontRenderParams GetFontRenderParams(const FontRenderParamsQuery& query,
+                                     std::string* family_out) {
+  if (family_out)
+    NOTIMPLEMENTED();
+  // Customized font rendering settings are not supported, only defaults.
+  CR_DEFINE_STATIC_LOCAL(const gfx::FontRenderParams, params, (LoadDefaults()));
+  return params;
+}
+
+}  // namespace gfx

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/native_widget_types.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/native_widget_types.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/native_widget_types.h	2018-06-15 09:47:20.008650752 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/native_widget_types.h	2018-09-23 02:02:23.431489024 +0200
@@ -132,6 +132,11 @@
 typedef ui::ViewAndroid* NativeView;
 typedef ui::WindowAndroid* NativeWindow;
 typedef base::android::ScopedJavaGlobalRef<jobject> NativeEvent;
+#elif defined(OS_HAIKU)
+typedef void* NativeCursor;
+typedef void* NativeView;
+typedef void* NativeWindow;
+typedef void* NativeEvent;
 #else
 #error Unknown build environment.
 #endif
@@ -193,6 +198,9 @@
 #elif defined(OS_ANDROID)
 typedef ANativeWindow* AcceleratedWidget;
 constexpr AcceleratedWidget kNullAcceleratedWidget = 0;
+#elif defined(OS_HAIKU)
+typedef int32_t AcceleratedWidget;
+constexpr AcceleratedWidget kNullAcceleratedWidget = 0;
 #elif defined(USE_OZONE)
 typedef int32_t AcceleratedWidget;
 constexpr AcceleratedWidget kNullAcceleratedWidget = 0;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/platform_font_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/platform_font_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gfx/platform_font_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gfx/platform_font_haiku.cc	2018-06-15 09:47:20.069206016 +0200
@@ -0,0 +1,26 @@
+// Copyright 2017 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/gfx/platform_font.h"
+
+#include "base/logging.h"
+
+namespace gfx {
+
+// static
+PlatformFont* PlatformFont::CreateDefault() {
+  // TODO(fuchsia): Stubbed during headless bringup, https://crbug.com/743296.
+  NOTIMPLEMENTED();
+  return NULL;
+}
+
+// static
+PlatformFont* PlatformFont::CreateFromNameAndSize(const std::string& font_name,
+                                                  int font_size) {
+  // TODO(fuchsia): Stubbed during headless bringup, https://crbug.com/743296.
+  NOTIMPLEMENTED();
+  return NULL;
+}
+
+}  // namespace gfx

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gl/init/gl_factory_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gl/init/gl_factory_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gl/init/gl_factory_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gl/init/gl_factory_haiku.cc	2018-09-23 17:20:02.604241920 +0200
@@ -0,0 +1,157 @@
+// Copyright 2016 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/gl/init/gl_factory.h"
+
+#include "base/trace_event/trace_event.h"
+#include "ui/gl/gl_context.h"
+#include "ui/gl/gl_context_egl.h"
+#include "ui/gl/gl_context_osmesa.h"
+#include "ui/gl/gl_context_stub.h"
+#include "ui/gl/gl_egl_api_implementation.h"
+#include "ui/gl/gl_implementation.h"
+#include "ui/gl/gl_share_group.h"
+#include "ui/gl/gl_surface.h"
+#include "ui/gl/gl_surface_egl.h"
+#include "ui/gl/gl_surface_osmesa.h"
+#include "ui/gl/gl_surface_stub.h"
+
+namespace gl {
+namespace init {
+
+std::vector<GLImplementation> GetAllowedGLImplementations() {
+  std::vector<GLImplementation> impls;
+  //impls.push_back(kGLImplementationDesktopGL);
+  impls.push_back(kGLImplementationEGLGLES2);
+  impls.push_back(kGLImplementationOSMesaGL);
+  impls.push_back(kGLImplementationSwiftShaderGL);
+  return impls;
+}
+
+bool GetGLWindowSystemBindingInfo(GLWindowSystemBindingInfo* info) {
+  switch (GetGLImplementation()) {
+    case kGLImplementationDesktopGL:
+    case kGLImplementationEGLGLES2:
+      return GetGLWindowSystemBindingInfoEGL(info);
+    default:
+      return false;
+  }
+}
+
+scoped_refptr<GLContext> CreateGLContext(GLShareGroup* share_group,
+                                         GLSurface* compatible_surface,
+                                         const GLContextAttribs& attribs) {
+  TRACE_EVENT0("gpu", "gl::init::CreateGLContext");
+  switch (GetGLImplementation()) {
+    case kGLImplementationOSMesaGL:
+      return InitializeGLContext(new GLContextOSMesa(share_group),
+                                 compatible_surface, attribs);
+    case kGLImplementationDesktopGL:
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationEGLGLES2:
+      return InitializeGLContext(new GLContextEGL(share_group),
+                                 compatible_surface, attribs);
+    case kGLImplementationMockGL:
+      return new GLContextStub(share_group);
+    case kGLImplementationStubGL: {
+      scoped_refptr<GLContextStub> stub_context =
+          new GLContextStub(share_group);
+      stub_context->SetUseStubApi(true);
+      return stub_context;
+    }
+    default:
+      NOTREACHED();
+      return nullptr;
+  }
+}
+
+#ifndef TOOLKIT_QT
+scoped_refptr<GLSurface> CreateViewGLSurface(gfx::AcceleratedWidget window) {
+  TRACE_EVENT0("gpu", "gl::init::CreateViewGLSurface");
+  switch (GetGLImplementation()) {
+    case kGLImplementationOSMesaGL:
+      return InitializeGLSurface(new GLSurfaceOSMesaX11(window));
+    case kGLImplementationDesktopGL:
+      return InitializeGLSurface(new GLSurfaceGLXX11(window));
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationEGLGLES2:
+      DCHECK(window != gfx::kNullAcceleratedWidget);
+      return InitializeGLSurface(new NativeViewGLSurfaceEGLX11(window));
+    case kGLImplementationMockGL:
+    case kGLImplementationStubGL:
+      return new GLSurfaceStub;
+    default:
+      NOTREACHED();
+      return nullptr;
+  }
+}
+
+scoped_refptr<GLSurface> CreateOffscreenGLSurfaceWithFormat(
+    const gfx::Size& size, GLSurfaceFormat format) {
+  TRACE_EVENT0("gpu", "gl::init::CreateOffscreenGLSurface");
+  switch (GetGLImplementation()) {
+    case kGLImplementationOSMesaGL:
+      format.SetDefaultPixelLayout(GLSurfaceFormat::PIXEL_LAYOUT_RGBA);
+      return InitializeGLSurfaceWithFormat(
+          new GLSurfaceOSMesa(format, size), format);
+    case kGLImplementationDesktopGL:
+      return InitializeGLSurfaceWithFormat(
+          new UnmappedNativeViewGLSurfaceGLX(size), format);
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationEGLGLES2:
+      if (GLSurfaceEGL::IsEGLSurfacelessContextSupported() &&
+          size.width() == 0 && size.height() == 0) {
+        return InitializeGLSurfaceWithFormat(new SurfacelessEGL(size), format);
+      } else {
+        return InitializeGLSurfaceWithFormat(new PbufferGLSurfaceEGL(size),
+                                             format);
+      }
+    case kGLImplementationMockGL:
+    case kGLImplementationStubGL:
+      return new GLSurfaceStub;
+    default:
+      NOTREACHED();
+      return nullptr;
+  }
+}
+#endif
+
+void SetDisabledExtensionsPlatform(const std::string& disabled_extensions) {
+  GLImplementation implementation = GetGLImplementation();
+  DCHECK_NE(kGLImplementationNone, implementation);
+  switch (implementation) {
+    case kGLImplementationDesktopGL:
+    case kGLImplementationEGLGLES2:
+      SetDisabledExtensionsEGL(disabled_extensions);
+      break;
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationOSMesaGL:
+    case kGLImplementationMockGL:
+    case kGLImplementationStubGL:
+      break;
+    default:
+      NOTREACHED();
+  }
+}
+
+bool InitializeExtensionSettingsOneOffPlatform() {
+  GLImplementation implementation = GetGLImplementation();
+  DCHECK_NE(kGLImplementationNone, implementation);
+  switch (implementation) {
+    case kGLImplementationDesktopGL:
+    case kGLImplementationEGLGLES2:
+      return InitializeExtensionSettingsOneOffEGL();
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationOSMesaGL:
+    case kGLImplementationMockGL:
+    case kGLImplementationStubGL:
+      return true;
+    default:
+      NOTREACHED();
+      return false;
+  }
+}
+
+}  // namespace init
+}  // namespace gl

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gl/init/gl_initializer_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gl/init/gl_initializer_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/gl/init/gl_initializer_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/gl/init/gl_initializer_haiku.cc	2018-10-01 21:01:50.949485568 +0200
@@ -0,0 +1,174 @@
+// Copyright 2016 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/gl/init/gl_initializer.h"
+
+#include "base/command_line.h"
+#include "base/logging.h"
+#include "base/path_service.h"
+#include "base/threading/thread_restrictions.h"
+#include "build/build_config.h"
+#include "ui/gfx/switches.h"
+#include "ui/gl/gl_bindings.h"
+#include "ui/gl/gl_egl_api_implementation.h"
+#include "ui/gl/gl_features.h"
+#include "ui/gl/gl_gl_api_implementation.h"
+#include "ui/gl/gl_implementation_osmesa.h"
+#include "ui/gl/gl_osmesa_api_implementation.h"
+#include "ui/gl/gl_surface_egl.h"
+#include "ui/gl/gl_switches.h"
+
+namespace gl {
+namespace init {
+
+namespace {
+
+#if defined(OS_OPENBSD) || defined(OS_HAIKU)
+const char kGLLibraryName[] = "libGL.so";
+#else
+const char kGLLibraryName[] = "libGL.so.1";
+#endif
+
+const char kGLESv2LibraryName[] = "libGLESv2.so.2";
+const char kEGLLibraryName[] = "libEGL.so.1";
+
+const char kGLESv2ANGLELibraryName[] = "libGLESv2.so";
+const char kEGLANGLELibraryName[] = "libEGL.so";
+
+#if BUILDFLAG(ENABLE_SWIFTSHADER)
+const char kGLESv2SwiftShaderLibraryName[] = "libGLESv2.so";
+const char kEGLSwiftShaderLibraryName[] = "libEGL.so";
+#endif
+
+bool InitializeStaticEGLInternal(GLImplementation implementation) {
+  base::FilePath glesv2_path(kGLESv2LibraryName);
+  base::FilePath egl_path(kEGLLibraryName);
+
+  const base::CommandLine* cmd = base::CommandLine::ForCurrentProcess();
+
+  if (implementation == kGLImplementationSwiftShaderGL) {
+#if BUILDFLAG(ENABLE_SWIFTSHADER)
+    base::FilePath module_path;
+    if (!PathService::Get(base::DIR_MODULE, &module_path))
+      return false;
+    module_path = module_path.Append("swiftshader/");
+
+    glesv2_path = module_path.Append(kGLESv2SwiftShaderLibraryName);
+    egl_path = module_path.Append(kEGLSwiftShaderLibraryName);
+#else
+    return false;
+#endif
+  } else if (cmd->GetSwitchValueASCII(switches::kUseGL) ==
+             kGLImplementationANGLEName) {
+    base::FilePath module_path;
+    if (!PathService::Get(base::DIR_MODULE, &module_path))
+      return false;
+
+    glesv2_path = module_path.Append(kGLESv2ANGLELibraryName);
+    egl_path = module_path.Append(kEGLANGLELibraryName);
+  }
+
+  base::NativeLibrary gles_library = LoadLibraryAndPrintError(glesv2_path);
+  if (!gles_library)
+    return false;
+  base::NativeLibrary egl_library = LoadLibraryAndPrintError(egl_path);
+  if (!egl_library) {
+    base::UnloadNativeLibrary(gles_library);
+    return false;
+  }
+
+  GLGetProcAddressProc get_proc_address =
+      reinterpret_cast<GLGetProcAddressProc>(
+          base::GetFunctionPointerFromNativeLibrary(egl_library,
+                                                    "eglGetProcAddress"));
+  if (!get_proc_address) {
+    LOG(ERROR) << "eglGetProcAddress not found.";
+    base::UnloadNativeLibrary(egl_library);
+    base::UnloadNativeLibrary(gles_library);
+    return false;
+  }
+
+  SetGLGetProcAddressProc(get_proc_address);
+  AddGLNativeLibrary(egl_library);
+  AddGLNativeLibrary(gles_library);
+  SetGLImplementation(kGLImplementationEGLGLES2);
+
+  InitializeStaticGLBindingsGL();
+  InitializeStaticGLBindingsEGL();
+
+  return true;
+}
+
+}  // namespace
+
+#if !defined(TOOLKIT_QT)
+bool InitializeGLOneOffPlatform() {
+  const base::CommandLine* command_line =
+      base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch(switches::kHeadless) &&
+      command_line->GetSwitchValueASCII(switches::kUseGL) ==
+          kGLImplementationOSMesaName)
+    return true;
+
+  switch (GetGLImplementation()) {
+    case kGLImplementationDesktopGL:
+      return true;
+    case kGLImplementationOSMesaGL:
+      return true;
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationEGLGLES2:
+      /*if (!GLSurfaceEGL::InitializeOneOff(gfx::GetXDisplay())) {
+        LOG(ERROR) << "GLSurfaceEGL::InitializeOneOff failed.";
+        return false;
+      }*/
+      return true;
+    default:
+      return true;
+  }
+}
+
+#endif // !defined(TOOLKIT_QT)
+bool InitializeStaticGLBindings(GLImplementation implementation) {
+  // Prevent reinitialization with a different implementation. Once the gpu
+  // unit tests have initialized with kGLImplementationMock, we don't want to
+  // later switch to another GL implementation.
+  DCHECK_EQ(kGLImplementationNone, GetGLImplementation());
+
+  // Allow the main thread or another to initialize these bindings
+  // after instituting restrictions on I/O. Going forward they will
+  // likely be used in the browser process on most platforms. The
+  // one-time initialization cost is small, between 2 and 5 ms.
+  base::ThreadRestrictions::ScopedAllowIO allow_io;
+
+  switch (implementation) {
+    case kGLImplementationOSMesaGL:
+    case kGLImplementationDesktopGL:
+    case kGLImplementationSwiftShaderGL:
+    case kGLImplementationEGLGLES2:
+      return InitializeStaticEGLInternal(implementation);
+    case kGLImplementationMockGL:
+    case kGLImplementationStubGL:
+      SetGLImplementation(implementation);
+      InitializeStaticGLBindingsGL();
+      return true;
+    default:
+      NOTREACHED();
+  }
+
+  return false;
+}
+
+void InitializeDebugGLBindings() {
+  InitializeDebugGLBindingsEGL();
+  InitializeDebugGLBindingsGL();
+}
+
+void ShutdownGLPlatform() {
+  GLSurfaceEGL::ShutdownOneOff();
+  ClearBindingsEGL();
+  ClearBindingsGL();
+}
+
+}  // namespace init
+}  // namespace gl

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/snapshot/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/snapshot/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/snapshot/BUILD.gn	2018-06-15 09:47:20.052953088 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/snapshot/BUILD.gn	2018-10-01 20:52:58.116654080 +0200
@@ -71,6 +71,13 @@
       "CoreGraphics.framework",
     ]
   }
+
+  if (is_haiku) {
+    sources += [
+      "snapshot_haiku.cc",
+      "snapshot_haiku.h",
+    ]
+  }
 }
 
 jumbo_source_set("snapshot_win") {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/snapshot/snapshot_haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/snapshot/snapshot_haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/snapshot/snapshot_haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/snapshot/snapshot_haiku.cc	2018-10-01 20:59:11.691011584 +0200
@@ -0,0 +1,28 @@
+// Copyright (c) 2012 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/snapshot/snapshot.h"
+
+namespace ui {
+
+bool GrabWindowSnapshot(gfx::NativeWindow window,
+                        const gfx::Rect& snapshot_bounds,
+                        gfx::Image* image) {
+  // Not supported in Aura.  Callers should fall back to the async version.
+  return false;
+}
+
+bool GrabViewSnapshot(gfx::NativeView view,
+                      const gfx::Rect& snapshot_bounds,
+                      gfx::Image* image) {
+  return false;
+}
+
+void GrabViewSnapshotAsync(gfx::NativeView view,
+                           const gfx::Rect& source_rect,
+                           const GrabWindowSnapshotAsyncCallback& callback) {
+  //GrabWindowSnapshotAsyncAura(view, source_rect, callback);
+}
+
+}  // namespace ui

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/strings/app_locale_settings.grd qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/strings/app_locale_settings.grd
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/ui/strings/app_locale_settings.grd	2018-06-15 09:47:20.065536000 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/ui/strings/app_locale_settings.grd	2018-09-23 03:16:34.038273024 +0200
@@ -135,7 +135,7 @@
            the family specified. This should be default for locales
            other than Indian locales.
            TODO(jungshik): This and IDS_UI_FONT_SIZE_SCALER are only used
-           on Windows now and are likely to be so in the future because Mac and 
+           on Windows now and are likely to be so in the future because Mac and
            Linux fonts do not have the issue Windows fonts for some locales
            (Indian) have. In that case, this need to be enclosed
            by platform-dependent if-clause. -->
@@ -187,7 +187,7 @@
           75%
         </message>
       </if>
-      <if expr="(is_linux or is_android or is_bsd) and not chromeos">
+      <if expr="(is_linux or is_android or is_bsd or is_haiku) and not chromeos">
         <!-- The font used in Web UI (e.g. History). Note that these are only
              backups. We try to use the system font if possible. -->
         <message name="IDS_WEB_FONT_FAMILY" use_name_for_id="true">

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/BUILD.gn qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/BUILD.gn
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/BUILD.gn	2018-06-15 09:47:20.058720256 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/BUILD.gn	2018-09-23 04:42:03.035389440 +0200
@@ -2634,6 +2634,11 @@
       "src/base/debug/stack_trace_fuchsia.cc",
       "src/base/platform/platform-fuchsia.cc",
     ]
+  } else if (is_haiku) {
+    sources += [
+      "src/base/debug/stack_trace_posix.cc",
+      "src/base/platform/platform-haiku.cc",
+    ]
   } else if (is_mac) {
     sources += [
       "src/base/debug/stack_trace_posix.cc",

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/include/v8config.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/include/v8config.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/include/v8config.h	2018-06-15 09:47:20.055312384 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/include/v8config.h	2018-09-23 03:34:09.822607872 +0200
@@ -116,6 +116,9 @@
 # define V8_OS_QNX 1
 #elif defined(_WIN32)
 # define V8_OS_WIN 1
+#elif defined(__HAIKU__)
+#define V8_OS_HAIKU 1
+#define V8_OS_POSIX 1
 #endif
 
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/export-template.h qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/export-template.h
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/export-template.h	2018-06-15 09:47:20.029097984 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/export-template.h	2018-09-23 04:11:57.710672384 +0200
@@ -150,6 +150,7 @@
                 #export)
 #define EXPORT_TEMPLATE_TEST_DEFAULT_DEFAULT(...) true
 #define EXPORT_TEMPLATE_TEST_MSVC_HACK_MSVC_HACK(...) true
+#define EXPORT_TEMPLATE_TEST_MSVC_HACK_DEFAULT(...) true
 
 EXPORT_TEMPLATE_TEST(DEFAULT, );
 EXPORT_TEMPLATE_TEST(DEFAULT, __attribute__((visibility("default"))));
@@ -159,5 +160,6 @@
 #undef EXPORT_TEMPLATE_TEST
 #undef EXPORT_TEMPLATE_TEST_DEFAULT_DEFAULT
 #undef EXPORT_TEMPLATE_TEST_MSVC_HACK_MSVC_HACK
+#undef EXPORT_TEMPLATE_TEST_MSVC_HACK_DEFAULT
 
 #endif  // V8_BASE_EXPORT_TEMPLATE_H_

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/platform/platform-haiku.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/platform/platform-haiku.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/platform/platform-haiku.cc	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/platform/platform-haiku.cc	2018-09-23 04:45:15.452198400 +0200
@@ -0,0 +1,89 @@
+// Copyright 2012 the V8 project authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+// Platform-specific code for FreeBSD goes here. For the POSIX-compatible
+// parts, the implementation is in platform-posix.cc.
+
+#include <pthread.h>
+#include <semaphore.h>
+#include <signal.h>
+#include <stdlib.h>
+#include <sys/resource.h>
+#include <sys/time.h>
+#include <sys/types.h>
+
+#include <fcntl.h>  // open
+#include <sys/mman.h>   // mmap & munmap
+#include <sys/stat.h>   // open
+#include <unistd.h>     // getpagesize
+// If you don't have execinfo.h then you need devel/libexecinfo from ports.
+#include <errno.h>
+#include <limits.h>
+#include <stdarg.h>
+#include <strings.h>    // index
+
+#include <cmath>
+
+#undef MAP_TYPE
+
+#include "src/base/macros.h"
+#include "src/base/platform/platform-posix-time.h"
+#include "src/base/platform/platform-posix.h"
+#include "src/base/platform/platform.h"
+
+namespace v8 {
+namespace base {
+
+TimezoneCache* OS::CreateTimezoneCache() {
+  return new PosixDefaultTimezoneCache();
+}
+
+static unsigned StringToLong(char* buffer) {
+  return static_cast<unsigned>(strtol(buffer, nullptr, 16));  // NOLINT
+}
+
+std::vector<OS::SharedLibraryAddress> OS::GetSharedLibraryAddresses() {
+  std::vector<SharedLibraryAddress> result;
+  static const int MAP_LENGTH = 1024;
+  int fd = open("/proc/self/maps", O_RDONLY);
+  if (fd < 0) return result;
+  while (true) {
+    char addr_buffer[11];
+    addr_buffer[0] = '0';
+    addr_buffer[1] = 'x';
+    addr_buffer[10] = 0;
+    ssize_t bytes_read = read(fd, addr_buffer + 2, 8);
+    if (bytes_read < 8) break;
+    unsigned start = StringToLong(addr_buffer);
+    bytes_read = read(fd, addr_buffer + 2, 1);
+    if (bytes_read < 1) break;
+    if (addr_buffer[2] != '-') break;
+    bytes_read = read(fd, addr_buffer + 2, 8);
+    if (bytes_read < 8) break;
+    unsigned end = StringToLong(addr_buffer);
+    char buffer[MAP_LENGTH];
+    bytes_read = -1;
+    do {
+      bytes_read++;
+      if (bytes_read >= MAP_LENGTH - 1) break;
+      bytes_read = read(fd, buffer + bytes_read, 1);
+      if (bytes_read < 1) break;
+    } while (buffer[bytes_read] != '\n');
+    buffer[bytes_read] = 0;
+    // Ignore mappings that are not executable.
+    if (buffer[3] != 'x') continue;
+    char* start_of_path = index(buffer, '/');
+    // There may be no filename in this line.  Skip to next.
+    if (start_of_path == nullptr) continue;
+    buffer[bytes_read] = 0;
+    result.push_back(SharedLibraryAddress(start_of_path, start, end));
+  }
+  close(fd);
+  return result;
+}
+
+void OS::SignalCodeMovingGC() {}
+
+}  // namespace base
+}  // namespace v8

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc	2018-06-15 09:47:20.032768000 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc	2018-09-23 04:15:06.162267136 +0200
@@ -55,7 +55,7 @@
 #include <sys/prctl.h>  // NOLINT, for prctl
 #endif
 
-#if !defined(_AIX) && !defined(V8_OS_FUCHSIA)
+#if !defined(_AIX) && !defined(V8_OS_FUCHSIA) && !defined(V8_OS_HAIKU)
 #include <sys/syscall.h>
 #endif
 
@@ -120,7 +120,7 @@
 int GetFlagsForMemoryPermission(OS::MemoryPermission access) {
   int flags = MAP_PRIVATE | MAP_ANONYMOUS;
   if (access == OS::MemoryPermission::kNoAccess) {
-#if !V8_OS_AIX && !V8_OS_FREEBSD && !V8_OS_QNX
+#if !V8_OS_AIX && !V8_OS_FREEBSD && !V8_OS_QNX && !V8_OS_HAIKU
     flags |= MAP_NORESERVE;
 #endif  // !V8_OS_AIX && !V8_OS_FREEBSD && !V8_OS_QNX
 #if V8_OS_QNX
@@ -139,6 +139,7 @@
 }
 
 int ReclaimInaccessibleMemory(void* address, size_t size) {
+#if !defined(V8_OS_HAIKU)
 #if defined(OS_MACOSX)
   // On OSX, MADV_FREE_REUSABLE has comparable behavior to MADV_FREE, but also
   // marks the pages with the reusable bit, which allows both Activity Monitor
@@ -160,6 +161,9 @@
 #endif
   }
   return ret;
+#else
+  return 0;
+#endif
 }
 
 #endif  // !V8_OS_FUCHSIA
Binary files qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/inspector/build/rjsmin.pyc and qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/inspector/build/rjsmin.pyc differ
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/libsampler/sampler.cc qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/libsampler/sampler.cc
--- qtwebengine-everywhere-src-5.11.1-old/src/3rdparty/chromium/v8/src/libsampler/sampler.cc	2018-06-15 09:47:20.013893632 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/3rdparty/chromium/v8/src/libsampler/sampler.cc	2018-09-23 04:04:31.961019904 +0200
@@ -21,7 +21,7 @@
 #include <mach/mach.h>
 // OpenBSD doesn't have <ucontext.h>. ucontext_t lives in <signal.h>
 // and is a typedef for struct sigcontext. There is no uc_mcontext.
-#elif(!V8_OS_ANDROID || defined(__BIONIC_HAVE_UCONTEXT_T)) && !V8_OS_OPENBSD
+#elif(!V8_OS_ANDROID || defined(__BIONIC_HAVE_UCONTEXT_T)) && !V8_OS_OPENBSD && !V8_OS_HAIKU
 #include <ucontext.h>
 #endif
 
@@ -193,7 +193,7 @@
 
 // Returns hash value for hash map.
 uint32_t ThreadHash(pthread_t thread_id) {
-#if V8_OS_BSD
+#if V8_OS_BSD || V8_OS_HAIKU
   return static_cast<uint32_t>(reinterpret_cast<intptr_t>(thread_id));
 #else
   return static_cast<uint32_t>(thread_id);

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/api/qtbug-61521.cpp qtwebengine-everywhere-src-5.11.1/src/core/api/qtbug-61521.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/core/api/qtbug-61521.cpp	2018-06-15 11:13:33.024117248 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/api/qtbug-61521.cpp	2018-09-23 05:35:13.694943744 +0200
@@ -111,7 +111,11 @@
 }
 
 SHIM_HIDDEN void* ShimPvalloc(size_t size) {
+#ifndef __HAIKU__
     return pvalloc(size);
+#else
+    return valloc(size);
+#endif
 }
 
 SHIM_HIDDEN int ShimPosixMemalign(void** r, size_t a, size_t s) {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/config/common.pri qtwebengine-everywhere-src-5.11.1/src/core/config/common.pri
--- qtwebengine-everywhere-src-5.11.1-old/src/core/config/common.pri	2018-06-15 11:13:33.030146560 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/config/common.pri	2018-09-22 15:13:23.937426944 +0200
@@ -56,13 +56,13 @@
 
 CONFIG(release, debug|release) {
     gn_args += is_debug=false
-    force_debug_info {
+    #force_debug_info {
         # Level 1 is not enough to generate all Chromium debug symbols on Windows
         msvc: gn_args += symbol_level=2
         else: gn_args += symbol_level=1
-    } else {
-        gn_args += symbol_level=0
-    }
+    #} else {
+    #    gn_args += symbol_level=0
+    #}
 }
 
 CONFIG(debug, debug|release) {

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/config/haiku.pri qtwebengine-everywhere-src-5.11.1/src/core/config/haiku.pri
--- qtwebengine-everywhere-src-5.11.1-old/src/core/config/haiku.pri	1970-01-01 01:00:00.000000000 +0100
+++ qtwebengine-everywhere-src-5.11.1/src/core/config/haiku.pri	2018-10-01 22:57:42.255590400 +0200
@@ -0,0 +1,70 @@
+include(common.pri)
+include($$QTWEBENGINE_OUT_ROOT/qtwebengine-config.pri)
+QT_FOR_CONFIG += gui-private webengine-private
+
+gn_args += \
+    use_cups=false \
+    use_gio=false \
+    use_gnome_keyring=false \
+    use_alsa=false \
+    use_pulseaudio=false \
+    use_kerberos=false \
+    use_sysroot=false \
+    enable_session_service=false \
+    toolkit_views=false \
+    linux_use_bundled_binutils=false \
+    enable_pdf=false \
+    enable_basic_printing=false \
+    enable_print_preview=false \
+    enable_extensions=false \
+    enable_webrtc=false \
+    enable_plugins=false \
+    use_system_zlib=true \
+    use_system_minizip=true \
+    use_system_libpng=true \
+    use_system_freetype=true \
+    use_system_harfbuzz=true \
+    use_system_icu=true \
+    use_system_ffmpeg=true \
+    icu_use_data_file=false \
+    use_system_lcms2=true \
+    use_system_libxml=true \
+    use_system_libxslt=true \
+    pdfium_use_system_zlib=true \
+    pdfium_use_system_libpng=true
+
+#    use_ozone=true \
+#    ozone_auto_platforms=false \
+#    ozone_platform_headless=true \
+#    ozone_platform_external=true \
+#    ozone_platform=\"qt\"
+
+gcc:!clang: greaterThan(QT_GCC_MAJOR_VERSION, 5): gn_args += no_delete_null_pointer_checks=true
+
+qtConfig(webengine-system-libevent): gn_args += use_system_libevent=true
+qtConfig(webengine-system-libwebp):  gn_args += use_system_libwebp=true
+qtConfig(webengine-system-libxml2):  gn_args += use_system_libxml=true use_system_libxslt=true
+qtConfig(webengine-system-opus):     gn_args += use_system_opus=true
+qtConfig(webengine-system-snappy):   gn_args += use_system_snappy=true
+qtConfig(webengine-system-libvpx):   gn_args += use_system_libvpx=true
+qtConfig(webengine-system-icu):      gn_args += use_system_icu=true icu_use_data_file=false
+qtConfig(webengine-system-ffmpeg):   gn_args += use_system_ffmpeg=true
+qtConfig(webengine-system-re2):      gn_args += use_system_re2=true
+qtConfig(webengine-system-lcms2):    gn_args += use_system_lcms2=true
+qtConfig(webengine-system-png): gn_args += use_system_libpng=true
+qtConfig(webengine-system-jpeg): gn_args += use_system_libjpeg=true
+qtConfig(webengine-system-freetype): gn_args += use_system_freetype=true
+qtConfig(webengine-system-harfbuzz): gn_args += use_system_harfbuzz=true
+!qtConfig(webengine-system-glib): gn_args += use_glib=false
+# FIXME
+#qtConfig(webengine-system-protobuf): gn_args += use_system_protobuf=true
+#qtConfig(webengine-system-jsoncpp): gn_args += use_system_jsoncpp=true
+#qtConfig(webengine-system-libsrtp: gn_args += use_system_libsrtp=true
+qtConfig(webengine-system-zlib) {
+    qtConfig(webengine-system-minizip): gn_args += use_system_zlib=true use_system_minizip=true
+    qtConfig(webengine-printing-and-pdf): gn_args += pdfium_use_system_zlib=true
+}
+qtConfig(webengine-system-png) {
+    gn_args += use_system_libpng=true
+    qtConfig(webengine-printing-and-pdf): gn_args += pdfium_use_system_libpng=true
+}

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/core_module.pro qtwebengine-everywhere-src-5.11.1/src/core/core_module.pro
--- qtwebengine-everywhere-src-5.11.1-old/src/core/core_module.pro	2018-06-15 11:13:33.020709376 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/core_module.pro	2018-09-23 05:47:16.423100416 +0200
@@ -33,9 +33,11 @@
 write_file($$RSP_FILE, RSP_CONTENT)
 macos:LIBS_PRIVATE += -Wl,-filelist,$$shell_quote($$RSP_FILE)
 linux:LIBS_PRIVATE += @$$RSP_FILE
+haiku:LIBS_PRIVATE += @$$RSP_FILE
 # QTBUG-58710 add main rsp file on windows
 win32:QMAKE_LFLAGS += @$$RSP_FILE
 linux: LIBS_PRIVATE += -Wl,--start-group $$NINJA_ARCHIVES -Wl,--end-group
+haiku: LIBS_PRIVATE += -Wl,--start-group $$NINJA_ARCHIVES -Wl,--end-group
 else: LIBS_PRIVATE += $$NINJA_ARCHIVES
 LIBS_PRIVATE += $$NINJA_LIB_DIRS $$NINJA_LIBS
 # GN's LFLAGS doesn't always work across all the Linux configurations we support.

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/printing/print_view_manager_base_qt.cpp qtwebengine-everywhere-src-5.11.1/src/core/printing/print_view_manager_base_qt.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/core/printing/print_view_manager_base_qt.cpp	2018-06-15 11:13:33.031195136 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/printing/print_view_manager_base_qt.cpp	2018-09-23 05:17:06.355729408 +0200
@@ -488,7 +490,10 @@
     int cookie = cookie_;
     cookie_ = 0;
 
-    printing::PrintJobManager* printJobManager = WebEngineContext::current()->getPrintJobManager();
+    printing::PrintJobManager* printJobManager = nullptr;
+#if BUILDFLAG(ENABLE_BASIC_PRINTING)
+    printJobManager = WebEngineContext::current()->getPrintJobManager();
+#endif
     // May be NULL in tests.
     if (!printJobManager)
         return;

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/printing/print_view_manager_qt.cpp qtwebengine-everywhere-src-5.11.1/src/core/printing/print_view_manager_qt.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/core/printing/print_view_manager_qt.cpp	2018-06-15 11:13:33.031457280 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/printing/print_view_manager_qt.cpp	2018-09-23 05:31:46.641728512 +0200
@@ -338,6 +344,7 @@
                FROM_HERE,
                base::Bind(&SavePdfFile, data_bytes, pdfOutputPath, pdf_save_callback));
     }
+    #endif
 }
 
 void PrintViewManagerQt::OnDidShowPrintDialog()

diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/core/printing/printing_message_filter_qt.cpp qtwebengine-everywhere-src-5.11.1/src/core/printing/printing_message_filter_qt.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/core/printing/printing_message_filter_qt.cpp	2018-06-15 11:13:33.031719424 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/core/printing/printing_message_filter_qt.cpp	2018-09-23 05:28:13.635699200 +0200
@@ -64,8 +64,12 @@
 
 PrintingMessageFilterQt::PrintingMessageFilterQt(int render_process_id)
     : BrowserMessageFilter(PrintMsgStart),
-      render_process_id_(render_process_id),
-      queue_(WebEngineContext::current()->getPrintJobManager()->queue()) {
+      render_process_id_(render_process_id)
+#if BUILDFLAG(ENABLE_BASIC_PRINTING)
+      , queue_(WebEngineContext::current()->getPrintJobManager()->queue()) {
+#else
+      {
+#endif
   DCHECK(queue_.get());
 }
 
@@ -78,6 +82,7 @@
 
 bool PrintingMessageFilterQt::OnMessageReceived(const IPC::Message& message) {
   bool handled = true;
+  #if BUILDFLAG(ENABLE_BASIC_PRINTING)
   IPC_BEGIN_MESSAGE_MAP(PrintingMessageFilterQt, message)
     IPC_MESSAGE_HANDLER_DELAY_REPLY(PrintHostMsg_GetDefaultPrintSettings,
                                     OnGetDefaultPrintSettings)
@@ -87,6 +92,7 @@
     IPC_MESSAGE_HANDLER(PrintHostMsg_CheckForCancel, OnCheckForCancel)
     IPC_MESSAGE_UNHANDLED(handled = false)
   IPC_END_MESSAGE_MAP()
+  #endif
   return handled;
 }
 
diff -ruN -x build-new -x '*.m4' -x autom4te.cache -x config.sub -x config.guess -x configure -x compile -x install-sh -x ltmain.sh -x missing -x config.h.in~ qtwebengine-everywhere-src-5.11.1-old/src/webenginewidgets/api/qwebenginepage.cpp qtwebengine-everywhere-src-5.11.1/src/webenginewidgets/api/qwebenginepage.cpp
--- qtwebengine-everywhere-src-5.11.1-old/src/webenginewidgets/api/qwebenginepage.cpp	2018-06-15 11:13:33.001572864 +0200
+++ qtwebengine-everywhere-src-5.11.1/src/webenginewidgets/api/qwebenginepage.cpp	2018-10-02 00:31:45.452460544 +0200
@@ -99,7 +99,7 @@
 #if defined(ENABLE_PRINTING) && defined(ENABLE_PDF)
 static bool printPdfDataOnPrinter(const QByteArray& data, QPrinter& printer)
 {
-    if (!data.size()) {
+    /*if (!data.size()) {
         qWarning("Failure to print on printer %ls: Print result data is empty.",
                  qUtf16Printable(printer.printerName()));
         return false;
@@ -174,7 +174,7 @@
             printer.newPage();
     }
     painter.end();
-
+*/
     return true;
 }
 #endif // defined(ENABLE_PRINTING) && defined(ENABLE_PDF)
