From 8f1c9d1ebc310b1a4b1f18678d0fd526759fff9b Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 15 Jul 2017 15:42:32 +0200
Subject: apply patch from 4.1.0.


diff --git a/share/qtcreator/qml/qmlpuppet/qml2puppet/instances/qt5nodeinstanceclientproxy.cpp b/share/qtcreator/qml/qmlpuppet/qml2puppet/instances/qt5nodeinstanceclientproxy.cpp
index defbf56..b8b3b81 100644
--- a/share/qtcreator/qml/qmlpuppet/qml2puppet/instances/qt5nodeinstanceclientproxy.cpp
+++ b/share/qtcreator/qml/qmlpuppet/qml2puppet/instances/qt5nodeinstanceclientproxy.cpp
@@ -45,7 +45,7 @@
 namespace QmlDesigner {
 static void prioritizeDown()
 {
-#if defined(Q_OS_UNIX)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_HAIKU)
     nice(19);
 #elif defined(Q_OS_WIN)
     SetPriorityClass(GetCurrentProcess(), BELOW_NORMAL_PRIORITY_CLASS);
diff --git a/share/qtcreator/qml/qmlpuppet/qml2puppet/qml2puppet.pri b/share/qtcreator/qml/qmlpuppet/qml2puppet/qml2puppet.pri
index f772fd8..186d63a 100644
--- a/share/qtcreator/qml/qmlpuppet/qml2puppet/qml2puppet.pri
+++ b/share/qtcreator/qml/qmlpuppet/qml2puppet/qml2puppet.pri
@@ -29,7 +29,7 @@ RESOURCES +=  $$PWD/../qmlpuppet.qrc
 
 DISTFILES += Info.plist
 
-unix:!openbsd:!osx: LIBS += -lrt # posix shared memory
+unix:!openbsd:!osx:!haiku: LIBS += -lrt # posix shared memory
 
 osx {
     CONFIG -= app_bundle
diff --git a/src/libs/sqlite/sqlite-lib.pri b/src/libs/sqlite/sqlite-lib.pri
index 8ded8ca..6a16c2e 100644
--- a/src/libs/sqlite/sqlite-lib.pri
+++ b/src/libs/sqlite/sqlite-lib.pri
@@ -6,7 +6,7 @@ shared {
 
 INCLUDEPATH += $$PWD
 
-unix:!bsd: LIBS += -ldl
+unix:!bsd:!haiku: LIBS += -ldl
 
 include(../3rdparty/sqlite/sqlite.pri)
 
@@ -58,7 +58,7 @@ DEFINES += SQLITE_THREADSAFE=2 SQLITE_ENABLE_FTS5 SQLITE_ENABLE_UNLOCK_NOTIFY \
     SQLITE_MAX_EXPR_DEPTH=0 SQLITE_OMIT_SHARED_CACHE SQLITE_USE_ALLOCA  \
     SQLITE_ENABLE_MEMORY_MANAGEMENT SQLITE_ENABLE_NULL_TRIM SQLITE_OMIT_EXPLAIN \
     SQLITE_OMIT_LOAD_EXTENSION SQLITE_OMIT_UTF16 SQLITE_DQS=0 \
-    SQLITE_ENABLE_STAT4 HAVE_ISNAN HAVE_FDATASYNC HAVE_MALLOC_USABLE_SIZE \
+    SQLITE_ENABLE_STAT4 HAVE_ISNAN HAVE_MALLOC_USABLE_SIZE \
     SQLITE_DEFAULT_MMAP_SIZE=268435456 SQLITE_CORE SQLITE_ENABLE_SESSION SQLITE_ENABLE_PREUPDATE_HOOK \
     SQLITE_LIKE_DOESNT_MATCH_BLOBS
 
diff --git a/src/libs/utils/process_stub_unix.c b/src/libs/utils/process_stub_unix.c
index ef5921b..9be08ad 100644
--- a/src/libs/utils/process_stub_unix.c
+++ b/src/libs/utils/process_stub_unix.c
@@ -1,3 +1,4 @@
+#if 0
 /****************************************************************************
 **
 ** Copyright (C) 2016 The Qt Company Ltd.
@@ -174,8 +175,10 @@ static void sigchldHandler(int sig)
 
 /* syntax: $0 {"run"|"debug"} <pid-socket> <continuation-msg> <workdir> <env-file> <exe> <args...> */
 /* exit codes: 0 = ok, 1 = invocation error, 3 = internal error */
+#endif
 int main(int argc, char *argv[])
 {
+#if 0
     int errNo, hadInvalidCommand = 0;
     char **env = 0;
     struct sockaddr_un sau;
@@ -366,5 +369,6 @@ int main(int argc, char *argv[])
             }
     }
     assert(0);
+#endif
     return 0;
 }
diff --git a/src/plugins/qmldesigner/qmldesignerplugin.pro b/src/plugins/qmldesigner/qmldesignerplugin.pro
index 6590dcb..1894edf 100644
--- a/src/plugins/qmldesigner/qmldesignerplugin.pro
+++ b/src/plugins/qmldesigner/qmldesignerplugin.pro
@@ -4,7 +4,7 @@ CONFIG += exceptions
 INCLUDEPATH += $$PWD
 INCLUDEPATH += $$PWD/components
 
-unix:!openbsd:!osx: LIBS += -lrt # posix shared memory
+unix:!openbsd:!osx:!haiku: LIBS += -lrt # posix shared memory
 
 include(../../qtcreatorplugin.pri)
 
diff --git a/src/shared/qbs/src/lib/corelib/tools/processutils.cpp b/src/shared/qbs/src/lib/corelib/tools/processutils.cpp
index b27592f..ca5fcd6 100644
--- a/src/shared/qbs/src/lib/corelib/tools/processutils.cpp
+++ b/src/shared/qbs/src/lib/corelib/tools/processutils.cpp
@@ -57,6 +57,8 @@
 # if !defined(Q_OS_NETBSD)
 #   include <sys/user.h>
 # endif
+#elif defined(Q_OS_HAIKU)
+// Do nothing.
 #else
 #   error Missing implementation of processNameByPid for this platform.
 #endif
-- 
2.28.0


From a3c6ee9a1d2a91607e2bf1f36f464ae87e96f6d1 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 15 Jul 2017 18:20:31 +0200
Subject: Fix rpath handling.


diff --git a/qtcreator.pro b/qtcreator.pro
index a8cb39f..b77216e 100644
--- a/qtcreator.pro
+++ b/qtcreator.pro
@@ -45,7 +45,7 @@ exists(src/shared/qbs/qbs.pro) {
         QBS_APPS_RPATH_DIR = @loader_path/../Frameworks
     } else {
         QBS_PLUGINS_BUILD_DIR = $$IDE_PLUGIN_PATH
-        QBS_APPS_RPATH_DIR = \$\$ORIGIN/../$$IDE_LIBRARY_BASENAME/qtcreator
+        QBS_APPS_RPATH_DIR = $$ORIGIN/../$$IDE_LIBRARY_BASENAME/qtcreator
     }
     cache(QBS_PLUGINS_BUILD_DIR)
     cache(QBS_APPS_RPATH_DIR)
diff --git a/src/rpath.pri b/src/rpath.pri
index ef0a6b7..49dfaf6 100644
--- a/src/rpath.pri
+++ b/src/rpath.pri
@@ -16,4 +16,10 @@ macos {
     IDE_PLUGIN_RPATH = $$join(QMAKE_RPATHDIR, ":")
     QMAKE_LFLAGS += -Wl,-z,origin \'-Wl,-rpath,$${IDE_PLUGIN_RPATH}\'
     QMAKE_RPATHDIR =
+} else:haiku-* {
+    QMAKE_RPATHDIR += $ORIGIN/$$REL_PATH_TO_LIBS
+    QMAKE_RPATHDIR += $ORIGIN/$$REL_PATH_TO_PLUGINS
+	QMAKE_RPATHDIR += $ORIGIN
+    QMAKE_RPATHDIR += $ORIGIN/..
+    QMAKE_RPATHDIR += $ORIGIN/../$$IDE_LIBRARY_BASENAME/qtcreator
 }
diff --git a/src/shared/qbs/src/app/app.pri b/src/shared/qbs/src/app/app.pri
index d0c94a7..cc35826 100644
--- a/src/shared/qbs/src/app/app.pri
+++ b/src/shared/qbs/src/app/app.pri
@@ -7,6 +7,7 @@ DEFINES += QT_NO_CAST_FROM_ASCII QT_NO_PROCESS_COMBINED_ARGUMENT_START
 else:DESTDIR = ../../../bin
 
 !isEmpty(QBS_APPS_RPATH_DIR) {
+    haiku: QMAKE_RPATHDIR += $ORIGIN/../lib/qtcreator
     linux-*:QMAKE_LFLAGS += -Wl,-z,origin \'-Wl,-rpath,$${QBS_APPS_RPATH_DIR}\'
     macx:QMAKE_LFLAGS += -Wl,-rpath,$${QBS_APPS_RPATH_DIR}
 }
-- 
2.28.0


From 18795889273f1561440151a97332273897004347 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Mon, 25 Jun 2018 16:18:26 +0300
Subject: Enable Terminal on Haiku


diff --git a/src/libs/utils/consoleprocess.cpp b/src/libs/utils/consoleprocess.cpp
index 0edcd13..f2ce8fc 100644
--- a/src/libs/utils/consoleprocess.cpp
+++ b/src/libs/utils/consoleprocess.cpp
@@ -148,6 +148,9 @@ void ConsoleProcess::setSettings(QSettings *settings)
 
 Q_GLOBAL_STATIC_WITH_ARGS(const QVector<TerminalCommand>, knownTerminals, (
 {
+#ifdef Q_OS_HAIKU
+    {"Terminal", "", ""},
+#endif
     {"x-terminal-emulator", "", "-e"},
     {"xdg-terminal", "", "", true},
     {"xterm", "", "-e"},
@@ -175,7 +178,11 @@ TerminalCommand ConsoleProcess::defaultTerminalEmulator()
                 defaultTerm = {"/usr/X11/bin/xterm", "", "-e"};
 
         } else if (HostOsInfo::isAnyUnixHost()) {
+#ifdef Q_OS_HAIKU
+            return {"/system/apps/Terminal", "", ""};
+#else
             defaultTerm = {"xterm", "", "-e"};
+#endif
             const Environment env = Environment::systemEnvironment();
             for (const TerminalCommand &term : *knownTerminals) {
                 const QString result = env.searchInPath(term.command).toString();
diff --git a/src/libs/utils/unixutils.cpp b/src/libs/utils/unixutils.cpp
index 77daae6..4940d3e 100644
--- a/src/libs/utils/unixutils.cpp
+++ b/src/libs/utils/unixutils.cpp
@@ -34,7 +34,11 @@ using namespace Utils;
 
 QString UnixUtils::defaultFileBrowser()
 {
+#ifdef Q_OS_HAIKU
+    return QLatin1String("open %d");
+#else
     return QLatin1String("xdg-open %d");
+#endif
 }
 
 QString UnixUtils::fileBrowser(const QSettings *settings)
-- 
2.28.0


From c388e265713c6658ff1339ef94aaad7d500af289 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 28 May 2020 14:42:59 +1000
Subject: Don't using Manhattan style for QMenu and QMenuBar


diff --git a/src/plugins/coreplugin/mainwindow.cpp b/src/plugins/coreplugin/mainwindow.cpp
index ed90cae..7c01d8a 100644
--- a/src/plugins/coreplugin/mainwindow.cpp
+++ b/src/plugins/coreplugin/mainwindow.cpp
@@ -135,6 +135,9 @@ MainWindow::MainWindow()
             && baseName == QLatin1String("windows")) {
         baseName = QLatin1String("fusion");
     }
+#ifndef __HAIKU__
+    baseName = QLatin1String("haiku");
+#endif
 
     // if the user has specified as base style in the theme settings,
     // prefer that
@@ -147,6 +150,7 @@ MainWindow::MainWindow()
     }
 
     QApplication::setStyle(new ManhattanStyle(baseName));
+
     m_generalSettings->setShowShortcutsInContextMenu(
         m_generalSettings->showShortcutsInContextMenu());
 
diff --git a/src/plugins/coreplugin/manhattanstyle.cpp b/src/plugins/coreplugin/manhattanstyle.cpp
index d161753..3683057 100644
--- a/src/plugins/coreplugin/manhattanstyle.cpp
+++ b/src/plugins/coreplugin/manhattanstyle.cpp
@@ -200,16 +200,20 @@ int ManhattanStyle::pixelMetric(PixelMetric metric, const QStyleOption *option,
     case PM_DockWidgetHandleExtent:
     case PM_DockWidgetSeparatorExtent:
         return 1;
+#ifndef __HAIKU__
     case PM_MenuPanelWidth:
     case PM_MenuBarHMargin:
     case PM_MenuBarVMargin:
+#endif
     case PM_ToolBarFrameWidth:
         if (panelWidget(widget))
             retval = 1;
         break;
     case PM_ButtonShiftVertical:
     case PM_ButtonShiftHorizontal:
+#ifndef __HAIKU__
     case PM_MenuBarPanelWidth:
+#endif
     case PM_ToolBarItemMargin:
     case PM_ToolBarItemSpacing:
         if (panelWidget(widget))
@@ -630,6 +634,7 @@ void ManhattanStyle::drawControl(ControlElement element, const QStyleOption *opt
     }
 
     switch (element) {
+#ifndef __HAIKU__
     case CE_MenuItem:
         painter->save();
         if (const auto mbi = qstyleoption_cast<const QStyleOptionMenuItem *>(option)) {
@@ -687,7 +692,7 @@ void ManhattanStyle::drawControl(ControlElement element, const QStyleOption *opt
         }
         painter->restore();
         break;
-
+#endif
     case CE_ComboBoxLabel:
         if (const auto cb = qstyleoption_cast<const QStyleOptionComboBox *>(option)) {
             if (panelWidget(widget)) {
@@ -782,7 +787,7 @@ void ManhattanStyle::drawControl(ControlElement element, const QStyleOption *opt
             painter->restore();
         }
         break;
-
+#ifndef __HAIKU__
     case CE_MenuBarEmptyArea: {
             if (creatorTheme()->flag(Theme::FlatMenuBar))
                 painter->fillRect(option->rect, StyleHelper::baseColor());
@@ -796,7 +801,7 @@ void ManhattanStyle::drawControl(ControlElement element, const QStyleOption *opt
             painter->restore();
         }
         break;
-
+#endif
     case CE_ToolBar:
         {
             QRect rect = option->rect;
-- 
2.28.0


From 1042165b6cb8c639c80ac651b7e9d731d827b842 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 28 May 2020 15:38:35 +1000
Subject: Don't validate Qt toolkit


diff --git a/src/plugins/qtsupport/baseqtversion.cpp b/src/plugins/qtsupport/baseqtversion.cpp
index 46ac87c..be4350b 100644
--- a/src/plugins/qtsupport/baseqtversion.cpp
+++ b/src/plugins/qtsupport/baseqtversion.cpp
@@ -510,7 +510,7 @@ Tasks BaseQtVersion::validateKit(const Kit *k)
     const QSet<Id> tdt = targetDeviceTypes();
     if (!tdt.isEmpty() && !tdt.contains(dt))
         result << BuildSystemTask(Task::Warning, tr("Device type is not supported by Qt version."));
-
+#ifndef __HAIKU__
     if (ToolChain *tc = ToolChainKitAspect::cxxToolChain(k)) {
         Abi targetAbi = tc->targetAbi();
         bool fuzzyMatch = false;
@@ -542,6 +542,7 @@ Tasks BaseQtVersion::validateKit(const Kit *k)
         const QString message = tr("The kit has a Qt version, but no C++ compiler.");
         result << BuildSystemTask(Task::Warning, message);
     }
+#endif
     return result;
 }
 
-- 
2.28.0


From 307532174d86abf78d7fd79af448fe43588ddf01 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Thu, 28 May 2020 17:26:06 +1000
Subject: Make unknown host abi for Haiku


diff --git a/src/plugins/projectexplorer/abi.cpp b/src/plugins/projectexplorer/abi.cpp
index 8cc8bcb..b95a8f2 100644
--- a/src/plugins/projectexplorer/abi.cpp
+++ b/src/plugins/projectexplorer/abi.cpp
@@ -1127,6 +1127,10 @@ Abi Abi::hostAbi()
     subos = WindowsMSysFlavor;
 #endif
     format = PEFormat;
+#elif defined (Q_OS_HAIKU)
+    os = UnknownOS;
+    subos = GenericFlavor;
+    format = UnknownFormat;
 #elif defined (Q_OS_LINUX)
     os = LinuxOS;
     subos = GenericFlavor;
-- 
2.28.0


From 398a6b915224b275db90ca172a29aa536f307398 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Fri, 23 Oct 2020 09:14:22 +1000
Subject: Use fsync


diff --git a/src/libs/3rdparty/sqlite/sqlite3.c b/src/libs/3rdparty/sqlite/sqlite3.c
index 55dc686..272ed4c 100644
--- a/src/libs/3rdparty/sqlite/sqlite3.c
+++ b/src/libs/3rdparty/sqlite/sqlite3.c
@@ -36917,7 +36917,7 @@ static int full_fsync(int fd, int fullSync, int dataOnly){
   */
   if( rc ) rc = fsync(fd);
 
-#elif defined(__APPLE__)
+#elif defined(__APPLE__) || defined(__HAIKU__)
   /* fdatasync() on HFS+ doesn't yet flush the file size if it changed correctly
   ** so currently we default to the macro that redefines fdatasync to fsync
   */
diff --git a/src/libs/utils/savefile.cpp b/src/libs/utils/savefile.cpp
index e96845e..9d6f471 100644
--- a/src/libs/utils/savefile.cpp
+++ b/src/libs/utils/savefile.cpp
@@ -106,7 +106,7 @@ bool SaveFile::commit()
     }
 #ifdef Q_OS_WIN
     FlushFileBuffers(reinterpret_cast<HANDLE>(_get_osfhandle(handle())));
-#elif _POSIX_SYNCHRONIZED_IO > 0
+#elif _POSIX_SYNCHRONIZED_IO > 0 && !defined(__HAIKU__)
     fdatasync(handle());
 #else
     fsync(handle());
-- 
2.28.0

