SUMMARY="DAV protocol implementation with KJobs"
DESCRIPTION="This is an DAV protocol implementation with KJobs.

Calendars and todos are supported, using either GroupDAV or CalDAV, and contacts are supported \
using GroupDAV or CardDAV."
HOMEPAGE="https://invent.kde.org/frameworks/kdav"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="$HOMEPAGE/-/archive/v$portVersion/kdav-v$portVersion.tar.bz2"
CHECKSUM_SHA256="befb1ddcad4d43104714118660a4ff27e48d8340b31a820cf8e0abb02da908a5"
SOURCE_DIR="kdav-v$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	kdav$secondaryArchSuffix = $portVersion
	cmd:projectx$secondaryArchSuffix = $portVersion
	lib:libKF5DAV$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libKF5ConfigCore$secondaryArchSuffix
	lib:libKF5CoreAddons$secondaryArchSuffix
	lib:libKF5I18n$secondaryArchSuffix
	lib:libKF5KIOCore$secondaryArchSuffix
	lib:libKF5Service$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5DBus$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Network$secondaryArchSuffix
	lib:libQt5Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	kdav${secondaryArchSuffix}_devel = $portVersion
	devel:libKF5DAV$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	kdav$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix  >= $portVersion
	devel:libKF5Auth$secondaryArchSuffix
	devel:libKF5Bookmarks$secondaryArchSuffix
	devel:libKF5Codecs$secondaryArchSuffix
	devel:libKF5Completion$secondaryArchSuffix
	devel:libKF5ConfigCore$secondaryArchSuffix
	devel:libKF5ConfigWidgets$secondaryArchSuffix
	devel:libKF5CoreAddons$secondaryArchSuffix == $portVersion
	devel:libKF5I18n$secondaryArchSuffix == $portVersion
	devel:libKF5KIOCore$secondaryArchSuffix == $portVersion
	devel:libKF5ItemViews$secondaryArchSuffix
	devel:libKF5JobWidgets$secondaryArchSuffix
	devel:libKF5Service$secondaryArchSuffix
	devel:libKF5Solid$secondaryArchSuffix
	devel:libKF5WidgetsAddons$secondaryArchSuffix
	devel:libKF5WindowSystem$secondaryArchSuffix
	devel:libKF5XmlGui$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt5DBus$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt
	cmd:msgmerge
	cmd:pkg_config$secondaryArchSuffix
	cmd:qdbuscpp2xml$secondaryArchSuffix >= 5
	"

TEST_REQUIRES="
	qthaikuplugins$secondaryArchSuffix
	"

PATCH()
{
	sed -e '/platforms:/ a \ \ \ \ - name: Haiku' -i $sourceDir/metainfo.yaml
}

BUILD()
{
	cmake -Bbuild -S. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt5 \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt5/qml \
		-DECM_MKSPECS_INSTALL_DIR=$dataDir/Qt5/mkspecs \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake
	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLib \
		libKF5DAV

	packageEntries devel \
		$developDir \
		$dataDir/Qt5 \
		$libDir/cmake
}

TEST()
{
	# 67% tests passed, 2 tests failed out of 6
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	make -C build test
}
