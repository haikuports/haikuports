SUMMARY="Lightweight user interface framework for mobile and convergent applications"
DESCRIPTION="Kirigami is KDE's powerful but lightweight user interface framework for \
mobile and convergent applications. It allows Qt developers to easily create applications \
that run on most major mobile and desktop platforms without modification (though adapted \
user interfaces for different form-factors are supported and recommended for optimal user \
experience). It extends the touch-friendly Qt Quick Controls 2 with larger application \
building blocks, following the design philosophy laid out in the KDE Human Interface Guidelines."
HOMEPAGE="https://invent.kde.org/frameworks/kirigami"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/kirigami-${portVersion}.tar.xz"
CHECKSUM_SHA256="4d645a0374d33b9465e79e3e17170882e2cbda1526f45bc5b6b176dadda77d76"
SOURCE_DIR="kirigami-$portVersion"
PATCHES="1582.patch"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	kirigami6$secondaryArchSuffix = $portVersion
	lib:libKirigami$secondaryArchSuffix = $libVersionCompat
	lib:libKirigamiDelegates$secondaryArchSuffix = $libVersionCompat
	lib:libKirigamiDialogs$secondaryArchSuffix = $libVersionCompat
	lib:libKirigamiLayouts$secondaryArchSuffix = $libVersionCompat
	lib:libKirigamiPlatform$secondaryArchSuffix = $libVersionCompat
	lib:libKirigamiPrimitives$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libgomp$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Qml$secondaryArchSuffix
	lib:libQt6Quick$secondaryArchSuffix
	"

PROVIDES_devel="
	kirigami6${secondaryArchSuffix}_devel = $portVersion
	devel:libKirigami$secondaryArchSuffix = $libVersionCompat
	devel:libKirigamiDelegates$secondaryArchSuffix = $libVersionCompat
	devel:libKirigamiDialogs$secondaryArchSuffix = $libVersionCompat
	devel:libKirigamiLayouts$secondaryArchSuffix = $libVersionCompat
	devel:libKirigamiPlatform$secondaryArchSuffix = $libVersionCompat
	devel:libKirigamiPrimitives$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	kirigami6$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	qt6_tools${secondaryArchSuffix}_devel
#	devel:libgomp$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libQt6Quick$secondaryArchSuffix
	devel:libQt6QuickTest$secondaryArchSuffix
	devel:libQt6ShaderTools$secondaryArchSuffix
	devel:libQt6Svg$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:dot
	cmd:doxygen
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

TEST_REQUIRES="
	qthaikuplugins$secondaryArchSuffix
	"

defineDebugInfoPackage kirigami6$secondaryArchSuffix \
	$libDir/libKirigami.so.$libVersion \
	$libDir/libKirigamiDelegates.so.$libVersion \
	$libDir/libKirigamiDialogs.so.$libVersion \
	$libDir/libKirigamiLayouts.so.$libVersion \
	$libDir/libKirigamiPlatform.so.$libVersion \
	$libDir/libKirigamiPrimitives.so.$libVersion

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=RelWithDebInfo \
		$cmakeDirArgs \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt6 \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt6/qml \
		-DKDE_INSTALL_QTPLUGINDIR=$addOnsDir/Qt6 \
		-DKDE_INSTALL_QTQCHDIR=$documentationDir/packages/qt6 \
		-DECM_MKSPECS_INSTALL_DIR=$dataDir/Qt6/mkspecs \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DDESKTOP_ENABLED=OFF \
		-DBUILD_EXAMPLES=OFF \
		-DBUILD_QCH=ON \
		-DBUILD_TESTING=OFF \
		-Wno-dev
	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLibs \
		libKirigami \
		libKirigamiDelegates \
		libKirigamiDialogs \
		libKirigamiLayouts \
		libKirigamiPlatform \
		libKirigamiPrimitives

	packageEntries devel \
		$developDir \
		$documentationDir \
		$libDir/cmake
}

TEST()
{
	# 94% tests passed, 2 tests failed out of 35
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	ctest --test-dir build --output-on-failure
}
