From 72f2c9c02a0052e4e4148af5ca57e86b664bcaa9 Mon Sep 17 00:00:00 2001
From: Luc Schrijvers <begasus@gmail.com>
Date: Mon, 7 Jul 2025 12:18:20 +0200
Subject: Fix crash for software rendering on Haiku


Revert: https://invent.kde.org/frameworks/kirigami/-/merge_requests/1839
Bug report: https://bugs.kde.org/show_bug.cgi?id=506707

diff --git a/src/primitives/scenegraph/softwarerectanglenode.cpp b/src/primitives/scenegraph/softwarerectanglenode.cpp
index 5c0c466..1337102 100644
--- a/src/primitives/scenegraph/softwarerectanglenode.cpp
+++ b/src/primitives/scenegraph/softwarerectanglenode.cpp
@@ -53,6 +53,18 @@ void SoftwareRectangleNode::setImage(const QImage &image)
         return;
     }
 
+    if (m_imageNode) {
+        removeChildNode(m_imageNode);
+        delete m_imageNode;
+    }
+
+    m_imageNode = m_window->createImageNode();
+    if (!m_imageNode) {
+        return;
+    }
+
+    m_imageNode->setFiltering(QSGTexture::Filtering::Linear);
+
     m_textureInfo = ShaderNode::TextureInfo{
         .channel = 0,
         .options = {},
@@ -60,6 +72,9 @@ void SoftwareRectangleNode::setImage(const QImage &image)
         .provider = nullptr,
         .providerConnection = {},
     };
+
+    m_imageNode->setTexture(m_textureInfo.texture.get());
+    appendChildNode(m_imageNode);
 }
 
 void SoftwareRectangleNode::setTextureProvider(QSGTextureProvider *provider)
@@ -68,6 +83,18 @@ void SoftwareRectangleNode::setTextureProvider(QSGTextureProvider *provider)
         return;
     }
 
+    if (m_imageNode) {
+        removeChildNode(m_imageNode);
+        delete m_imageNode;
+    }
+
+    m_imageNode = m_window->createImageNode();
+    if (!m_imageNode) {
+        return;
+    }
+
+    m_imageNode->setFiltering(QSGTexture::Filtering::Linear);
+
     m_textureInfo = ShaderNode::TextureInfo{
         .channel = 0,
         .options = {},
@@ -75,6 +102,9 @@ void SoftwareRectangleNode::setTextureProvider(QSGTextureProvider *provider)
         .provider = provider,
         .providerConnection = {},
     };
+
+    m_imageNode->setTexture(m_textureInfo.provider->texture());
+    appendChildNode(m_imageNode);
 }
 
 void SoftwareRectangleNode::setRadius(qreal radius)
@@ -114,33 +144,12 @@ QSGRenderNode::RenderingFlags SoftwareRectangleNode::flags() const
 
 void SoftwareRectangleNode::preprocess()
 {
-    QSGTexture *texture = nullptr;
-    if (QSGTextureProvider *provider = m_textureInfo.provider) {
-        texture = provider->texture();
+    auto provider = m_textureInfo.provider;
+    if (provider && m_imageNode) {
+        m_imageNode->setTexture(provider->texture());
         if (QSGDynamicTexture *dynamic_texture = qobject_cast<QSGDynamicTexture *>(provider->texture())) {
             dynamic_texture->updateTexture();
         }
-    } else if (m_textureInfo.texture) {
-        texture = m_textureInfo.texture.get();
-    }
-
-    if (texture) {
-        if (!m_imageNode) {
-            m_imageNode = m_window->createImageNode();
-            m_imageNode->setFlag(OwnedByParent);
-        }
-
-        // The rect will be set in render().
-        m_imageNode->setFiltering(QSGTexture::Filtering::Linear);
-        m_imageNode->setTexture(texture);
-
-        if (!m_imageNode->parent()) {
-            appendChildNode(m_imageNode);
-        }
-    } else if (m_imageNode) {
-        removeChildNode(m_imageNode);
-        delete m_imageNode;
-        m_imageNode = nullptr;
     }
 }
 
-- 
2.48.1

