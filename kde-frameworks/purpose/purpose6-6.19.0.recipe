SUMMARY="Library for providing abstractions to get the developer's purposes fulfilled"
DESCRIPTION="This framework offers the possibility to create integrate services and actions \
on  any application without having to implement them specifically. Purpose will offer them \
mechanisms to list the different alternatives to execute given the requested action type and \
will facilitate components so that all the plugins can receive all the information they need."
HOMEPAGE="https://invent.kde.org/frameworks/purpose"
COPYRIGHT="2010-2025 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/purpose-${portVersion}.tar.xz"
CHECKSUM_SHA256="799ff3e69872400d2fa6e5e2c91fed66ed6bd0d7a9163efc004eee0bf6d093a2"
SOURCE_DIR="purpose-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	purpose6$secondaryArchSuffix = $portVersion
	lib:libKF6Purpose$secondaryArchSuffix = $libVersionCompat
	lib:libKF6PurposeWidgets$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libKF6ConfigCore$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libKF6I18n$secondaryArchSuffix
	lib:libKF6ItemModels$secondaryArchSuffix
	lib:libKF6Prison$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Network$secondaryArchSuffix
	lib:libQt6Qml$secondaryArchSuffix
	lib:libQt6Widgets$secondaryArchSuffix
	"
if [ "$targetArchitecture" != x86_gcc2 ]; then
	REQUIRES+="
	accounts_qml$secondaryArchSuffix
	lib:libkaccounts6$secondaryArchSuffix
	"
fi

PROVIDES_devel="
	purpose6${secondaryArchSuffix}_devel = $portVersion
	devel:libKF6Purpose$secondaryArchSuffix = $libVersionCompat
	devel:libKF6PurposeWidgets$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	purpose6$secondaryArchSuffix == $portVersion base
	"

ARCHITECTURES_doc="any"

PROVIDES_doc="
	purpose6_doc = $portVersion
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	qt6_tools${secondaryArchSuffix}_devel
	devel:libKF6CalendarEvents$secondaryArchSuffix >= $libVersion
	devel:libKF6ConfigCore$secondaryArchSuffix >= $libVersion
	devel:libKF6CoreAddons$secondaryArchSuffix >= $libVersion
	devel:libKF6I18n$secondaryArchSuffix >= $libVersion
	devel:libKF6ItemModels$secondaryArchSuffix >= $libVersion
	devel:libKF6KIOCore$secondaryArchSuffix >= $libVersion
	devel:libKF6Notifications$secondaryArchSuffix >= $libVersion
	devel:libKF6PrisonScanner$secondaryArchSuffix >= $libVersion
	devel:libKF6Service$secondaryArchSuffix >= $libVersion
	devel:libKirigami$secondaryArchSuffix >= $libVersion
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	"
if [ "$targetArchitecture" != x86_gcc2 ]; then
	BUILD_REQUIRES+="
	accounts_qml$secondaryArchSuffix
	devel:libkaccounts6$secondaryArchSuffix
	"
fi
BUILD_PREREQUIRES="
	kde_qdoc_common
	cmd:arc
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:intltool_merge
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

TEST_REQUIRES="
	qthaikuplugins
	"

BUILD()
{
	export KDE_DOCS="`finddir B_SYSTEM_DATA_DIRECTORY`"/kde-qdoc-common

	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs
	cmake --build build --target prepare_docs
	cmake --build build --target generate_docs
	cmake --build build --target generate_qch
}

INSTALL()
{
	make -C build install
#	cmake --build build --target install_html_docs
	cmake --build build --target install_qch_docs

	prepareInstalledDevelLibs \
		libKF6Purpose \
		libKF6PurposeWidgets

	packageEntries devel \
		$developDir \
		$libDir/cmake

	packageEntries doc \
		$documentationDir
}

TEST()
{
	# 0% tests passed, 2 tests failed out of 2
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	ctest --test-dir build --output-on-failure
}
