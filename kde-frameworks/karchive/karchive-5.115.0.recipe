SUMMARY="Qt addon providing access to numerous types of archives"
DESCRIPTION="KArchive provides classes for easy reading, creation and \
manipulation of /"archive/" formats like ZIP and TAR.

It also provides transparent compression and decompression of data, like the \
GZip format, via a subclass of QIODevice."
HOMEPAGE="https://invent.kde.org/frameworks/karchive/"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/karchive-${portVersion}.tar.xz"
CHECKSUM_SHA256="e89951c58beca1f9802b9a3a8b8b2beff9b534d2de433ad7947258dd27d6b475"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	karchive$secondaryArchSuffix = $portVersion
	lib:libkf5archive$secondaryArchSuffix = $portVersion compat >= 5
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libbz2$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	karchive${secondaryArchSuffix}_devel = $portVersion
	devel:libkf5archive$secondaryArchSuffix = $portVersion compat >= 5
	"
REQUIRES_devel="
	karchive$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	devel:libbz2$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:linguist$secondaryArchSuffix >= 5
	cmd:make
	"

PATCH()
{
	sed -e '/platforms:/ a \ \ \ \ - name: Haiku' -i $sourceDir/metainfo.yaml
}

BUILD()
{
	mkdir -p build
	cd build

	cmake .. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DECM_MKSPECS_INSTALL_DIR=$dataDir/Qt5/mkspecs \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	prepareInstalledDevelLibs \
		libKF5Archive

	fixPkgconfig

	packageEntries devel \
		$libDir/cmake \
		$dataDir/Qt5/mkspecs \
		$developDir
}

TEST()
{
	cd build
	make test
}
