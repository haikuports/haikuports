SUMMARY="An RSS/Atom parser library"
DESCRIPTION="RSS (0.9/1.0, 0.91..2.0) and Atom (0.3 and 1.0) feeds are supported. syndication \
offers a unified, format-agnostic view on the parsed feed,  so that the using application does \
not need to distinguish between feed formats."
HOMEPAGE="https://invent.kde.org/frameworks/syndication"
COPYRIGHT="2010-2025 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/syndication-${portVersion}.tar.xz"
CHECKSUM_SHA256="901f5270720911818174024e6cd2fe44c94c752f36db0ce18d3a7dcd9a6cb6de"
SOURCE_DIR="syndication-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	syndication6$secondaryArchSuffix = $portVersion
	lib:libKF6Syndication$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libKF6Codecs$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	syndication6${secondaryArchSuffix}_devel = $portVersion
	devel:libKF6Syndication$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	syndication6$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix == $portVersion
	qt6_tools${secondaryArchSuffix}_devel
	devel:libKF6Codecs$secondaryArchSuffix == $libVersion
	devel:libQt6Core$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DKDE_INSTALL_PLUGINDIR=$addOnsDir/Qt6 \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt6/qml \
		-DKDE_INSTALL_QTPLUGINDIR=$addOnsDir/Qt6 \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	prepareInstalledDevelLib \
		libKF6Syndication

	packageEntries devel \
		$developDir \
		$libDir/cmake
}

TEST()
{
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	# manual tests (all pass)
	build/bin/loaderutiltest
	build/bin/syndicationtest
	# build/bin/testlibsyndication # needs argument
	# build/bin/testloader # needs argument
	build/bin/testpersonimpl
}
