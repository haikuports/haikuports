SUMMARY="A library providing access to Open Collaboration services"
DESCRIPTION="Attica supports multiple Open Collaboration Service (OCS) \
providers at the same time. With Attica you can easily access services \
rom providers such as openDesktop.org. It implements the freedesktop.org \
specification for the Open Collaboration Services API."
HOMEPAGE="https://invent.kde.org/frameworks/attica"
COPYRIGHT="2010-2025 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/attica-${portVersion}.tar.xz"
CHECKSUM_SHA256="30813efb577f75b87eec4f02300a906e5f39a8dd2c7e7488958a7ffeaaaee1a8"
SOURCE_DIR="attica-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

pythonVersion="3.10"
pythonPackage=python${pythonVersion//.}

PROVIDES="
	attica6$secondaryArchSuffix = $portVersion
	lib:libKF6Attica$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	"

PROVIDES_devel="
	attica6${secondaryArchSuffix}_devel = $portVersion
	devel:libKF6Attica$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	attica6$secondaryArchSuffix == $portVersion base
	"

ARCHITECTURES_doc="any"

PROVIDES_doc="
	attica6_doc = $portVersion
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	qt6_tools${secondaryArchSuffix}_devel
	devel:libQt6Core$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	kde_qdoc_common
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python$pythonVersion
	"

TEST_REQUIRES="
	markupsafe_$pythonPackage
	chardet_$pythonPackage
	jinja_$pythonPackage
	"

BUILD()
{
	export KDE_DOCS="`finddir B_SYSTEM_DATA_DIRECTORY`"/kde-qdoc-common

	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs

	cmake --build build --target prepare_docs
	cmake --build build --target generate_docs
	cmake --build build --target generate_qch
}

INSTALL()
{
	make -C build install
#	cmake --build build --target install_html_docs
	cmake --build build --target install_qch_docs

	prepareInstalledDevelLib \
		libKF6Attica
	fixPkgconfig

	packageEntries devel \
		$developDir \
		$libDir/cmake

	packageEntries doc \
		$documentationDir
}

TEST()
{
	python$pythonVersion -m ensurepip --default-pip
#	python$pythonVersion -m pip install --upgrade pip
	pip$pythonVersion install --user reuse
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	ctest --test-dir build --output-on-failure
	pip$pythonVersion uninstall reuse -y
}
