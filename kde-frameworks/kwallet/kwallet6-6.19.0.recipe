SUMMARY="The KDE KWallet Framework"
DESCRIPTION="Safe desktop-wide storage for passwords."
HOMEPAGE="https://invent.kde.org/frameworks/kwallet"
COPYRIGHT="2010-2025 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/kwallet-${portVersion}.tar.xz"
CHECKSUM_SHA256="1de4a3f60b0c170d8d9d0476ed8e0cfdf37f6711bf4e507a8f7ec4268eadc4ad"
SOURCE_DIR="kwallet-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	kwallet6$secondaryArchSuffix = $portVersion
	cmd:kwallet_query$secondaryArchSuffix = $portVersion
	cmd:kwalletd6$secondaryArchSuffix = $portVersion
	cmd:ksecretd$secondaryArchSuffix = $portVersion
	lib:libKF6Wallet$secondaryArchSuffix = $libVersionCompat
	lib:libKF6WalletBackend$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libassuan$secondaryArchSuffix
	lib:libgcrypt$secondaryArchSuffix
	lib:libgio_2.0$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgobject_2.0$secondaryArchSuffix
	lib:libgpgme$secondaryArchSuffix
	lib:libgpgmepp$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libKF6ColorScheme$secondaryArchSuffix
	lib:libKF6ConfigCore$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libKF6Crash$secondaryArchSuffix
	lib:libKF6DBusAddons$secondaryArchSuffix
	lib:libKF6I18n$secondaryArchSuffix
	lib:libKF6Notifications$secondaryArchSuffix
	lib:libKF6WidgetsAddons$secondaryArchSuffix
	lib:libKF6WindowSystem$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libqca_qt6$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libsecret_1$secondaryArchSuffix
	"

PROVIDES_devel="
	kwallet6${secondaryArchSuffix}_devel = $portVersion
	devel:libKF6Wallet$secondaryArchSuffix = $libVersionCompat
	devel:libKF6WalletBackend$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	kwallet6$secondaryArchSuffix == $portVersion base
	"

ARCHITECTURES_doc="any"

PROVIDES_doc="
	kwallet6_doc = $portVersion
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	qt6_tools${secondaryArchSuffix}_devel
	devel:libgcrypt$secondaryArchSuffix
	devel:libgpgmepp$secondaryArchSuffix
	devel:libKF6ColorScheme$secondaryArchSuffix >= $libVersion
	devel:libKF6ConfigCore$secondaryArchSuffix >= $libVersion
	devel:libKF6CoreAddons$secondaryArchSuffix >= $libVersion
	devel:libKF6Crash$secondaryArchSuffix >= $libVersion
	devel:libKF6DBusAddons$secondaryArchSuffix >= $libVersion
	devel:libKF6I18n$secondaryArchSuffix >= $libVersion
	devel:libKF6Notifications$secondaryArchSuffix >= $libVersion
	devel:libKF6WidgetsAddons$secondaryArchSuffix >= $libVersion
	devel:libKF6WindowSystem$secondaryArchSuffix >= $libVersion
	devel:libqca_qt6$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libsecret_1$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	kde_qdoc_common
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

TEST_REQUIRES="
	lib:libdbus_1$secondaryArchSuffix
	lib:libqca_qt6$secondaryArchSuffix
	devel:libnss3$secondaryArchSuffix
	"

BUILD()
{
	export KDE_DOCS="`finddir B_SYSTEM_DATA_DIRECTORY`"/kde-qdoc-common

	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs
	cmake --build build --target prepare_docs
	cmake --build build --target generate_docs
	cmake --build build --target generate_qch
}

INSTALL()
{
	make -C build install
#	cmake --build build --target install_html_docs
	cmake --build build --target install_qch_docs

	# cleanup
	rm -rf $dataDir/{applications,knotifications6,qlogging-categories6,xdg-desktop-portal}

	prepareInstalledDevelLibs \
		libKF6Wallet \
		libKF6WalletBackend

	packageEntries devel \
		$developDir \
		$libDir/cmake

	packageEntries doc \
		$documentationDir
}

TEST()
{
	export LIBRARY_PATH="$sourceDir/build/bin${LIBRARY_PATH:+:$LIBRARY_PATH}"
	ctest --test-dir build --output-on-failure
}
