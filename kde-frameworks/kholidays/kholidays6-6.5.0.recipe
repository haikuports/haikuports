SUMMARY="Dates for holidays and other special events"
DESCRIPTION="This library provides a C++ API that determines holiday and \
other special events for a geographical region."
HOMEPAGE="https://invent.kde.org/frameworks/kholidays"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU LGPL v2"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/kholidays-${portVersion}.tar.xz"
CHECKSUM_SHA256="84a03085ffafab06cd28a32154b0fe4694f58b37d21f1468818b5fec2c643dca"
SOURCE_DIR="kholidays-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	kholidays6$secondaryArchSuffix = $portVersion
	lib:libKF6Holidays$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libbz2$secondaryArchSuffix
	lib:liblzma$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	kholidays6${secondaryArchSuffix}_devel = $portVersion
	devel:libKF6Holidays$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	kholidays6$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	extra_cmake_modules$secondaryArchSuffix >= $portVersion
	qt6_tools${secondaryArchSuffix}_devel
	devel:libbz2$secondaryArchSuffix
	devel:liblzma$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:dot
	cmd:doxygen >= 1.9
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt
	cmd:msgmerge
	"

BUILD()
{
	cmake -Bbuild -S. $cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt6/qml \
		-DKDE_INSTALL_QTQCHDIR=$documentationDir/packages/qt6 \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DBUILD_QCH=ON \
		-DBUILD_TESTING=OFF
	make -Cbuild $jobArgs
}

INSTALL()
{
	make -Cbuild install

	prepareInstalledDevelLib \
		libKF6Holidays

	packageEntries devel \
		$developDir \
		$documentationDir \
		$libDir/cmake
}

TEST()
{
	export LIBRARY_PATH=$LIBRARY_PATH:$sourceDir/build/bin
	ctest --test-dir build --output-on-failure
}
