SUMMARY="Powerful completion framework"
DESCRIPTION="When typing filenames, email addresses and other text where the \
user often wants to select from existing data (including what they previously \
typed) rather than enter anything wholly original, users often find it \
helpful if they only need to type the first few characters, and then have the \
application offer them a set of choices or attempt to finish off what they \
were typing. Email clients, shells and \"open file\" dialogs often provide \
this functionality.

This framework helps implement this in Qt-based applications. You can use one \
of the completion-ready widgets provided by this framework, or integrate it \
into your application's other widgets directly."
HOMEPAGE="https://github.com/KDE/kconfig/"
COPYRIGHT="2010-2017 KDE Organisation"
LICENSE="BSD (2-clause)"
REVISION="1"
SOURCE_URI="https://github.com/KDE/kcompletion/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="b89c942eceecda68c7d97d0e30e5406eb0836695456e88742498d3c634aa7450"

ARCHITECTURES="!x86_gcc2 x86_64"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	kcompletion$secondaryArchSuffix = $portVersion
	lib:libKF5Completion$secondaryArchSuffix = $portVersion compat >= 5
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libKF5ConfigGui$secondaryArchSuffix
	lib:libKF5WidgetsAddons$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	kcompletion${secondaryArchSuffix}_devel = $portVersion
	devel:libKF5Completion$secondaryArchSuffix = $portVersion compat >= 5
	"
REQUIRES_devel="
	kcompletion$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	extra_cmake_modules >= 5.39
	haiku${secondaryArchSuffix}_devel
	devel:libKF5ConfigGui$secondaryArchSuffix
	devel:libKF5WidgetsAddons$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix >= 5.7
	devel:libQt5Gui$secondaryArchSuffix >= 5.7
	devel:libQt5Xml$secondaryArchSuffix >= 5.7
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	mkdir -p build
	cd build

	cmake .. $cmakeDirArgs \
		-DECM_MKSPECS_INSTALL_DIR=$dataDir/Qt5/mkspecs \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake
	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	prepareInstalledDevelLibs \
		libKF5Completion

	packageEntries devel \
		$libDir/cmake \
		$dataDir/Qt5/mkspecs \
		$developDir
}

TEST()
{
	cd build
	make test
}
