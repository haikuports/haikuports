SUMMARY="Extra modules and scripts for CMake"
DESCRIPTION="The Extra CMake Modules package, or ECM, adds to the \
modules provided by CMake, including ones used by find_package() to find \
common software, ones that can be used directly in CMakeLists.txt files to \
perform common tasks and toolchain files that must be specified on the \
commandline by the user."
HOMEPAGE="https://invent.kde.org/frameworks/extra-cmake-modules"
COPYRIGHT="2010-2025 KDE Organisation"
LICENSE="BSD (2-clause)"
REVISION="1"
SOURCE_URI="https://download.kde.org/stable/frameworks/${portVersion%.*}/extra-cmake-modules-$portVersion.tar.xz"
CHECKSUM_SHA256="a4f0c1d8181f43e9af4b9b44696c77760b5bc9dae5bdb921f090bce664e9ca84"
SOURCE_DIR="extra-cmake-modules-$portVersion"
PATCHES="extra_cmake_modules-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	extra_cmake_modules$secondaryArchSuffix = $portVersion
	"
if [ "$targetArchitecture" = "x86_gcc2" ]; then
	PROVIDES+="
		extra_cmake_modules = $portVersion
		"
fi

pythonVersion="3.10"
pythonPackage=python${pythonVersion//.}

ARCHITECTURES_doc="any"
PROVIDES_doc="
	extra_cmake_modules_doc = $portVersion
	"

REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	qt6_tools${secondaryArchSuffix}_devel
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Quick$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	cmd:python$pythonVersion
	sphinx_$pythonPackage
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$prefix \
		-DSHARE_INSTALL_DIR=$dataDir \
		-DDOC_INSTALL_DIR=$documentationDir/packages/qt6_base/ \
		-DMAN_INSTALL_DIR=$manDir \
		-DBUILD_TESTING=OFF \
		-Wno-dev

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	mv $documentationDir/packages/qt6_base/html $documentationDir/packages/qt6_base/ECM

	packageEntries doc \
		$documentationDir
}

TEST()
{
	ctest --test-dir build --output-on-failure -E KDEFetchTranslations
}
