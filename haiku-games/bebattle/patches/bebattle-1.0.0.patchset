From 5dd75922da05e89311adf480d94e39a6e0b285f2 Mon Sep 17 00:00:00 2001
From: nys <33534144+nysnatuss@users.noreply.github.com>
Date: Sun, 31 Dec 2017 22:52:34 +0000
Subject: patch for x86_64


diff --git a/src/Makefile b/src/Makefile
index 45465ea..3154ead 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -56,7 +56,7 @@ RSRCS =
 #	- 	if your library does not follow the standard library naming scheme,
 #		you need to specify the path to the library and it's name.
 #		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
-LIBS = be translation
+LIBS = be translation $(STDCPPLIBS)
 
 #	Specify additional paths to directories following the standard libXXX.so
 #	or libXXX.a naming scheme. You can specify full paths or paths relative
diff --git a/src/ai.h b/src/ai.h
index 57d445c..863ce50 100644
--- a/src/ai.h
+++ b/src/ai.h
@@ -4,7 +4,7 @@
 #include "dview.h"
 #include "beunit.h"
 //---------------------------------------------------------------------
-typedef	list<Item>::iterator ITER;
+typedef	std::list<Item>::iterator ITER;
 //---------------------------------------------------------------------
 struct Action //A possible action
 {
@@ -27,4 +27,4 @@ class MrAI //Mister AI :)
 	Action GetChoosenOption(); //return the action choosed by the AI
 };
 //---------------------------------------------------------------------
-#endif
\ No newline at end of file
+#endif
diff --git a/src/dview.h b/src/dview.h
index 4361f25..5a60fb0 100644
--- a/src/dview.h
+++ b/src/dview.h
@@ -9,8 +9,8 @@
 #include "animation.h"
 #include "convert.h"
 //---------------------------------------------------------------------
-typedef	list<Item>::iterator ITER;
-typedef	list<Item>::reverse_iterator RITER;
+typedef	std::list<Item>::iterator ITER;
+typedef	std::list<Item>::reverse_iterator RITER;
 enum BUTTONMODE{Option, Unit};
 //---------------------------------------------------------------------
 class DView : public BView
@@ -20,7 +20,7 @@ class DView : public BView
 	BBitmap* OffscreenBitmap; //to avoid flicker while drawing
 	BView* OffscreenView; //used by the offscreen bitmap
 	
-	list<Item> Liste; //All units are in this list
+	std::list<Item> Liste; //All units are in this list
 	ITER Active; //iterator to active unit
 	ITER Passive; //iterator to current target (passive unit)
 	BUTTONMODE Mode; //current button set
@@ -61,4 +61,4 @@ class DView : public BView
 	virtual void MouseMoved(BPoint where, uint32 transit, const BMessage *message);
 };
 //---------------------------------------------------------------------
-#endif
\ No newline at end of file
+#endif
-- 
2.15.0

