SUMMARY="Extracts audio tracks from an audio CD image to separate tracks"
DESCRIPTION="Flacon extracts individual tracks from one big audio file \
containing the entire album of music and saves them as separate audio files. \
To do this, it uses information from the appropriate CUE file.
Besides, Flacon makes it possible to conveniently revise or specify tags both \
for all tracks at once or for each tag separately."
HOMEPAGE="https://flacon.github.io/"
COPYRIGHT="2012-2015 Alexander Sokoloff"
LICENSE="GNU LGPL v2.1"
REVISION="1"
SOURCE_URI="https://github.com/flacon/flacon/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="8e9b7e9b12b79d7dbe1b1e4f47d7561538a62a55ab752a7269736a77bf56dd70"
SOURCE_FILENAME="flacon-$portVersion.tar.gz"
PATCHES="flacon-$portVersion.patchset"
ADDITIONAL_FILES="flacon.rdef.in"

ARCHITECTURES="?x86_gcc2 ?x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	flacon$secondaryArchSuffix = $portVersion
	app:flacon$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	cmd:faac$secondaryArchSuffix
	cmd:flac$secondaryArchSuffix
	cmd:lame$secondaryArchSuffix
#	cmd:mac$secondaryArchSuffix
	cmd:metaflac$secondaryArchSuffix
	cmd:mp3gain$secondaryArchSuffix
	cmd:oggenc$secondaryArchSuffix
	cmd:opusenc$secondaryArchSuffix
#	cmd:ttaenc$secondaryArchSuffix
#	cmd:vorbisgain$secondaryArchSuffix
	cmd:wavpack$secondaryArchSuffix
	cmd:wvgain$secondaryArchSuffix
	cmd:wvunpack$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5Network$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libuchardet$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt5Gui$secondaryArchSuffix
	devel:libQt5Network$secondaryArchSuffix
	devel:libQt5Widgets$secondaryArchSuffix
	devel:libuchardet$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	mkdir -p build && cd "$_"

	cmake .. \
		-DBIN_DIR=$appsDir \
		-DDATA_DIR=$dataDir \
		-DMAN_DIR=$manDir \
		-DTRANSLATIONS_DIR=$dataDir/Flacon/translations

	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	mv $appsDir/flacon $appsDir/Flacon

	# Add Haiku resources
	local APP_SIGNATURE="application/x-vnd.qt5-flacon"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"
	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/flacon.rdef.in > flacon.rdef

	addResourcesToBinaries flacon.rdef $appsDir/Flacon
	addAppDeskbarSymlink $appsDir/Flacon

}
