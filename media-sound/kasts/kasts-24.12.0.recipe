SUMMARY="Kirigami-based podcast player"
DESCRIPTION="Kasts is a convergent podcast application that looks good on desktop and mobile.

Its main features are:
* Episode management through play queue
* Sync playback positions with other clients through gpodder.net or gpodder-nextcloud
* Variable playback speed
* Search for podcasts
* Full system integration: e.g. inhibit system suspend while listening"
HOMEPAGE="https://apps.kde.org/kasts/"
COPYRIGHT="2010-2024 KDE Organisation"
LICENSE="GNU GPL v2"
REVISION="2"
SOURCE_URI="https://download.kde.org/stable/release-service/$portVersion/src/kasts-$portVersion.tar.xz"
CHECKSUM_SHA256="48668ee817c68166795f89ec5d51132ee88aeb3d66da1abba1b56f86ed7511a6"
ADDITIONAL_FILES="kasts.rdef.in"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	kasts$secondaryArchSuffix = $portVersion
	cmd:kasts$commandSuffix = $portVersion
	lib:libKastsSolidExtras$secondaryArchSuffix
	lib:libKMediaSession$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	gst_plugins_good$secondaryArchSuffix
	qqc2_desktop_style6$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libKirigamiAddonsStatefulApp$secondaryArchSuffix
	lib:libopenal$secondaryArchSuffix
	lib:libQt6Keychain$secondaryArchSuffix
	lib:libtag$secondaryArchSuffix
	lib:libvlc$secondaryArchSuffix
	# KF6
	lib:libKF6BreezeIcons$secondaryArchSuffix
	lib:libKF6ColorScheme$secondaryArchSuffix
	lib:libKF6ConfigCore$secondaryArchSuffix
	lib:libKF6ConfigGui$secondaryArchSuffix
	lib:libKF6CoreAddons$secondaryArchSuffix
	lib:libKF6Crash$secondaryArchSuffix
	lib:libKF6I18n$secondaryArchSuffix
	lib:libKF6IconThemes$secondaryArchSuffix
	lib:libKirigami$secondaryArchSuffix
	lib:libKF6Syndication$secondaryArchSuffix
	lib:libKF6ThreadWeaver$secondaryArchSuffix
	lib:libKirigami$secondaryArchSuffix
	# Qt6
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6DBus$secondaryArchSuffix
	lib:libQt6Gui$secondaryArchSuffix
	lib:libQt6Multimedia$secondaryArchSuffix
	lib:libQt6Network$secondaryArchSuffix
	lib:libQt6Qml$secondaryArchSuffix
	lib:libQt6Quick$secondaryArchSuffix
	lib:libQt6Sql$secondaryArchSuffix
	lib:libQt6Svg$secondaryArchSuffix
	lib:libQt6Widgets$secondaryArchSuffix
	lib:libQt6Xml$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libKirigamiAddonsStatefulApp$secondaryArchSuffix
	devel:libQt6Keychain$secondaryArchSuffix
	devel:libtag$secondaryArchSuffix
	devel:libvlc$secondaryArchSuffix
	# KF6
	extra_cmake_modules$secondaryArchSuffix
	devel:libKF6BreezeIcons$secondaryArchSuffix
	devel:libKF6ColorScheme$secondaryArchSuffix
	devel:libKF6ConfigCore$secondaryArchSuffix
	devel:libKF6CoreAddons$secondaryArchSuffix
	devel:libKF6Crash$secondaryArchSuffix
	devel:libKF6I18n$secondaryArchSuffix
	devel:libKF6Syndication$secondaryArchSuffix
	devel:libKF6ThreadWeaver$secondaryArchSuffix
	devel:libKirigami$secondaryArchSuffix
	# Qt6
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Multimedia$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libQt6Svg$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:msgfmt$secondaryArchSuffix
	cmd:msgmerge$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	cmake -Bbuild -S. $cmakeDirArgs \
		-DCMAKE_INSTALL_BINDIR=$commandBinDir \
		-DCMAKE_BUILD_TYPE=Release \
		-DKDE_INSTALL_QMLDIR=$dataDir/Qt6/qml \
		-DECM_DIR=/system/data/cmake/Modules/ECM/cmake \
		-DBUILD_TESTING=ON \
		-Wno-dev
	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	rm -rf $dataDir/{applications,icons,metainfo}

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local APP_NAME="Kasts"
	local LONG_INFO="$SUMMARY"
	local APP_SIGNATURE="application/x-vnd.kasts"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		-e "s|@APP_NAME@|$APP_NAME|" \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		$portDir/additional-files/kasts.rdef.in > kasts.rdef

	addResourcesToBinaries kasts.rdef $commandBinDir/kasts
	addAppDeskbarSymlink $commandBinDir/kasts Kasts
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
