SUMMARY="MusicBrainz music tagger"
DESCRIPTION="Tag your music with the next generation MusicBrainz tagger.

* Multiple formats - Picard supports all popular music formats, including MP3, \
FLAC, OGG, M4A, WMA, WAV, and more.
* AcoustID - Picard uses AcoustID audio fingerprints, allowing files to be \
identified by the actual music, even if they have no metadata.
* CD lookups - Picard can lookup entire music CDs with a click.
* Plugin support - If you need a particular feature, you can choose from a \
selection of available plugins or write your own."
HOMEPAGE="https://picard.musicbrainz.org/"
COPYRIGHT="2004-2023 Robert Kaye, Lukas Lalinsky, Laurent Monin, \
Sambhav Kothari, Philipp Wolfer and others"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="ftp://ftp.eu.metabrainz.org/pub/musicbrainz/picard/picard-$portVersion.tar.gz"
CHECKSUM_SHA256="89eb2d299f40eac9de7166593733c57942583dd1118f5c7a0b58278255fcd129"
SOURCE_DIR="picard-release-$portVersion"
SOURCE_FILENAME="picard-$portVersion"
ADDITIONAL_FILES="
	picard.rdef.in
	haikuicons.zip
	"

ARCHITECTURES="all !x86_gcc2 ?x86"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	picard$secondaryArchSuffix = $portVersion
	app:Picard = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	cmd:fpcalc
	cmd:python3.9
	dateutil_python39
	discid_python39
	fasteners_python39
	lib:libdiscid$secondaryArchSuffix
	markdown_python39
	mutagen_python39
	pyjwt_python39
	pyqt5_python39
	pyyaml_python39
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	pyqt5_python39
	setuptools_python39
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:msgfmt$secondaryArchSuffix
	cmd:python3.9
	"

PATCH()
{
	unzip -o $sourceDir/../../additional-files/haikuicons.zip -d $sourceDir/resources/images
}

BUILD()
{
	LC_ALL=en_US.UTF-8

	#Rebuild resources
	rm -f resources/picard.qrc
	rm -f picard/resources.py
	python3.9 resources/makeqrc.py
	python3.9 resources/compile.py

	python3.9 setup.py config
}

INSTALL()
{
	LC_ALL=en_US.UTF-8
	python3.9 setup.py install \
		--root=/ --prefix=$prefix \
		--install-data=$dataDir \
		--install-locales=$dataDir/locale \
		--disable-autoupdate

	mkdir -p $appsDir
	mv $prefix/bin/picard $appsDir/Picard
	rm -rf $binDir

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3 | cut -d~ -f1`"
	if [ -z "$MINOR" ]; then MINOR=0; fi

	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/picard.rdef.in > $sourceDir/build/picard.rdef

	settype -t application/x-vnd.Be-elfexecutable $appsDir/Picard

	rc $sourceDir/build/picard.rdef
	resattr -o $appsDir/Picard $sourceDir/build/picard.rsrc
	mimeset -f $appsDir/Picard
	addAppDeskbarSymlink $appsDir/Picard

	rm -rf $dataDir/share
}
