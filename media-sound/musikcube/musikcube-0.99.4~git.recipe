SUMMARY="Terminal-based music player, audio engine, metadata indexer, server"
DESCRIPTION="musikcube is a fully functional terminal-based music player, \
library, and streaming audio server that runs natively on Windows, macOS, and \
Linux. it also runs well on a Raspberry Pi with a custom DAC (e.g. IQaudIO \
DAC+, HiFiBerry DAC+ and others), and can output 24bit/192k audio comfortably."
HOMEPAGE="https://musikcube.com/"
COPYRIGHT="2004-2021 musikcube team"
LICENSE="BSD (3-clause)"
REVISION="1"
srcGitRev="0abdac4f65aef05e07254987c6992300d4854260"
SOURCE_URI="https://github.com/clangen/musikcube/archive/$srcGitRev.tar.gz"
CHECKSUM_SHA256="603364461d3696cd7ad9a5cef2549d98042e696944f4064285bdd37932278221"
SOURCE_DIR="musikcube-$srcGitRev"
srcGitRev_2="147f7225a96d45a2807a64e443177f621844e51c"
SOURCE_URI_2="https://github.com/chriskohlhoff/asio/archive/$srcGitRev_2.zip"
CHECKSUM_SHA256_2="2556f28f39010b94060fe1bff2a4e98d9477b9b6363fc0eea6613e5902071530"
SOURCE_DIR_2="asio-$srcGitRev_2"
PATCHES="musikcube-$portVersion.patchset"

ARCHITECTURES="all ?x86_gcc2"
SECONDARY_ARCHITECTURES="?x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	musikcube$secondaryArchSuffix = $portVersion
	cmd:musikcube$secondaryArchSuffix = $portVersion
	cmd:musikcubed$secondaryArchSuffix = $portVersion
	lib:libmusikcore$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
	lib:libcrypto$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libev$secondaryArchSuffix
	lib:libgme$secondaryArchSuffix
	lib:libmicrohttpd$secondaryArchSuffix
	lib:libmp3lame$secondaryArchSuffix
	lib:libmpg123$secondaryArchSuffix
	lib:libncursesw$secondaryArchSuffix
	lib:libopenmpt$secondaryArchSuffix
	lib:libpanelw$secondaryArchSuffix
	lib:libportaudio$secondaryArchSuffix
	lib:libswresample$secondaryArchSuffix
	lib:libtag$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	musikcube${secondaryArchSuffix}_devel = $portVersion
	devel:libmusikcore$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	musikcube${secondaryArchSuffix} == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libavcodec$secondaryArchSuffix
	devel:libavformat$secondaryArchSuffix
	devel:libavutil$secondaryArchSuffix
	devel:libcrypto$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix
	devel:libev$secondaryArchSuffix
	devel:libgme$secondaryArchSuffix
	devel:libmicrohttpd$secondaryArchSuffix
	devel:libmp3lame$secondaryArchSuffix
	devel:libmpg123$secondaryArchSuffix
	devel:libncursesw$secondaryArchSuffix
	devel:libopenmpt$secondaryArchSuffix
	devel:libpanelw$secondaryArchSuffix
	devel:libportaudio$secondaryArchSuffix
	devel:libswresample$secondaryArchSuffix
	devel:libtag$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	# link submodules
	rm -rf $sourceDir/src/3rdparty/{asio,bin}
	ln -s $sourceDir2 $sourceDir/src/3rdparty/asio

	mkdir -p build
	cd build
	cmake $cmakeDirArgs .. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$prefix \
		-DCMAKE_INSTALL_LIBDIR="$libDir" \
		-DCMAKE_INSTALL_PLUGINSDIR="$appsDir/musikcube/plugins" \
		-DCMAKE_INSTALL_INCLUDEDIR="$includeDir/musikcube/musikcore/sdk" \
		-DCMAKE_INSTALL_THEMESDIR="$appsDir/musikcube/themes" \
		-DCMAKE_INSTALL_LOCALESDIR="$appsDir/musikcube/locales" \
		-DCMAKE_INSTALL_BINDIR="$appsDir/musikcube" \
		-DCMAKE_INSTALL_SCRIPTDIR="$commandBinDir"

	make $jobArgs
}

INSTALL()
{
	cd build
	make install
	rm -rf $commandBinDir/*
	ln -s $appsDir/musikcube/musikcube* $commandBinDir

	prepareInstalledDevelLib libmusikcore
	fixPkgconfig

	packageEntries devel \
		$developDir
}
