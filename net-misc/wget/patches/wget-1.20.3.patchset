From 1bc5fbc916fbae452197457afcd41c17f7c6ed84 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Mon, 19 May 2014 15:38:37 +0000
Subject: apply wget-1.14.patch


diff --git a/configure.ac b/configure.ac
index 53cf142..2596bbd 100644
--- a/configure.ac
+++ b/configure.ac
@@ -263,6 +263,7 @@ AC_HEADER_STDBOOL
 AC_CHECK_HEADERS(unistd.h sys/time.h)
 AC_CHECK_HEADERS(termios.h sys/ioctl.h sys/select.h utime.h sys/utime.h)
 AC_CHECK_HEADERS(stdint.h inttypes.h pwd.h wchar.h dlfcn.h)
+AC_CHECK_HEADERS(arpa/inet.h)
 
 AC_CHECK_DECLS(h_errno,,,[#include <netdb.h>])
 
@@ -331,6 +332,9 @@ dnl
 
 PKG_PROG_PKG_CONFIG
 
+AC_CHECK_LIB(network, gethostbyname)
+AC_CHECK_LIB(network, socket)
+
 AS_IF([test "x$with_libpsl" != xno], [
   PKG_CHECK_MODULES([LIBPSL], libpsl, [
     with_libpsl=yes
diff --git a/src/config.h.in b/src/config.h.in
index 1dcbf68..0f71c4a 100644
--- a/src/config.h.in
+++ b/src/config.h.in
@@ -920,6 +920,9 @@
 /* Define if libcares is available. */
 #undef HAVE_LIBCARES
 
+/* Define to 1 if you have the `bind' library (-lbind). */
+#undef HAVE_LIBBIND
+
 /* Define to 1 if you have the `dl' library (-ldl). */
 #undef HAVE_LIBDL
 
@@ -932,6 +935,9 @@
 /* Define to 1 if you have the <libintl.h> header file. */
 #undef HAVE_LIBINTL_H
 
+/* Define to 1 if you have the `network' library (-lnetwork). */
+#undef HAVE_LIBNETWORK
+
 /* Define if libpcre is available. */
 #undef HAVE_LIBPCRE
 
diff --git a/src/connect.c b/src/connect.c
index 7b0dbbd..b231714 100644
--- a/src/connect.c
+++ b/src/connect.c
@@ -46,7 +46,7 @@ as that of the covered work.  */
 #  include <netdb.h>
 # endif /* def __VMS [else] */
 # include <netinet/in.h>
-# ifndef __BEOS__
+# ifdef HAVE_ARPA_INET_H
 #  include <arpa/inet.h>
 # endif
 #endif /* not WINDOWS */
diff --git a/src/host.h b/src/host.h
index 560391d..b105e03 100644
--- a/src/host.h
+++ b/src/host.h
@@ -41,9 +41,9 @@ as that of the covered work.  */
 # endif /* def __VMS [else] */
 # include <sys/socket.h>
 # include <netinet/in.h>
-#ifndef __BEOS__
-# include <arpa/inet.h>
-#endif
+# ifdef HAVE_ARPA_INET_H
+#  include <arpa/inet.h>
+# endif
 #endif
 
 struct url;
-- 
2.23.0


From e51cec62b3e033d562397220f5cc21daaddc34d6 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Mon, 19 May 2014 15:47:24 +0000
Subject: apply and augment wget-1.14-build-fixes.patch


diff --git a/src/utils.c b/src/utils.c
index 89a87b0..f68b209 100644
--- a/src/utils.c
+++ b/src/utils.c
@@ -60,7 +60,9 @@ as that of the covered work.  */
 
 /* For TIOCGWINSZ and friends: */
 #ifndef WINDOWS
+#ifndef __HAIKU__
 # include <sys/ioctl.h>
+#endif
 # include <termios.h>
 #endif
 
-- 
2.23.0


From 146c81df840142f4d4c542262ed922c625b621ec Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 14 Feb 2016 11:05:10 +0100
Subject: Move wget-hsts out of home directory.


diff --git a/src/main.c b/src/main.c
index 65b7f3f..bf6f9c2 100644
--- a/src/main.c
+++ b/src/main.c
@@ -87,6 +87,10 @@ as that of the covered work.  */
 # include "vms.h"
 #endif /* __VMS */
 
+#ifdef __HAIKU__
+#include "FindDirectory.h"
+#endif
+
 #ifndef PATH_SEPARATOR
 # define PATH_SEPARATOR '/'
 #endif
@@ -175,6 +179,16 @@ get_hsts_database (void)
   if (opt.hsts_file)
     return xstrdup (opt.hsts_file);
 
+#ifdef __HAIKU__
+  {
+    char buffer[256];
+    if (find_directory(B_USER_SETTINGS_DIRECTORY, 0, false, buffer, sizeof(buffer)) == B_OK) {
+      opt.homedir = aprintf("%s/wget-hsts", buffer);
+      return opt.homedir;
+    }
+  }
+#endif
+
   if (opt.homedir)
     {
       char *dir = aprintf ("%s/.wget-hsts", opt.homedir);
-- 
2.23.0


From eeaeab445325e205ae8504a493d6c27968204cf0 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Mon, 22 May 2017 18:46:27 +0200
Subject: gcc2 patch


diff --git a/src/init.c b/src/init.c
index 9b6665a..4c603a9 100644
--- a/src/init.c
+++ b/src/init.c
@@ -894,7 +894,7 @@ setval_internal (int comind, const char *com, const char *val)
   assert (0 <= comind && ((size_t) comind) < countof (commands));
 
   if ((unsigned) comind >= countof (commands))
-    return NULL;
+    return false;
 
   DEBUGP (("Setting %s (%s) to %s\n", com, commands[comind].name, val));
   return commands[comind].action (com, val, commands[comind].place);
-- 
2.23.0


From f41fb048231046df5f88292a6372622de72ca362 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Thu, 23 Nov 2017 09:09:48 +0100
Subject: Handle SSL_ERROR_WANT_READ.

According to OpenSSL docs this isn't supposed to happen, but it does
and I can't figure out where it would be intercepted in OpenSSL side.

So let's just handle it and retry reads when requestred to do so.

This allows EINTR detection to work, so no error happens when you
resize terminal anymore.

diff --git a/src/openssl.c b/src/openssl.c
index a150217..00bb950 100644
--- a/src/openssl.c
+++ b/src/openssl.c
@@ -444,9 +444,11 @@ static void openssl_read_callback(void *arg)
   int bufsize = args->bufsize;
   int ret;
 
-  do
+  do {
     ret = SSL_read (conn, buf, bufsize);
-  while (ret == -1 && SSL_get_error (conn, ret) == SSL_ERROR_SYSCALL
+  } while (ret == -1
+         && (SSL_get_error (conn, ret) == SSL_ERROR_SYSCALL
+             || SSL_get_error (conn, ret) == SSL_ERROR_WANT_READ)
          && errno == EINTR);
   args->retval = ret;
 }
-- 
2.23.0


From 67d8c9938774ce78c7f310fa6440708ddf92846d Mon Sep 17 00:00:00 2001
From: Crestwave <crest.wave@yahoo.com>
Date: Sun, 25 Nov 2018 12:01:08 +0000
Subject: Also move wget-hsts out of the home directory in hsts.c.


diff --git a/src/hsts.c b/src/hsts.c
index b91bc56..0b5c474 100644
--- a/src/hsts.c
+++ b/src/hsts.c
@@ -49,6 +49,10 @@ as that of the covered work.  */
 #include <stdio.h>
 #include <sys/file.h>
 
+#ifdef __HAIKU__
+#include "FindDirectory.h"
+#endif
+
 struct hsts_store {
   struct hash_table *table;
   time_t last_mtime;
@@ -628,6 +632,16 @@ get_hsts_store_filename (void)
   char *filename = NULL;
   FILE *fp = NULL;
 
+#ifdef __HAIKU__
+  {
+    char buffer[256];
+    if (find_directory(B_USER_SETTINGS_DIRECTORY, 0, false, buffer, sizeof(buffer)) == B_OK) {
+      opt.homedir = aprintf("%s/wget-hsts", buffer);
+      return opt.homedir;
+    }
+  }
+#endif
+
   if (opt.homedir)
     {
       filename = aprintf ("%s/.wget-hsts-test", opt.homedir);
-- 
2.23.0


From 0eb18282d23626203244e7b439ac2ec7e9257c6e Mon Sep 17 00:00:00 2001
From: Crestwave <crest.wave@yahoo.com>
Date: Mon, 26 Nov 2018 07:13:07 +0000
Subject: Fix segmentation violation when executing fuzzers.


diff --git a/fuzz/wget_cookie_fuzzer.c b/fuzz/wget_cookie_fuzzer.c
index cf27c61..f3dd400 100644
--- a/fuzz/wget_cookie_fuzzer.c
+++ b/fuzz/wget_cookie_fuzzer.c
@@ -58,11 +58,13 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 	return NULL;
 }
 
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_css_fuzzer.c b/fuzz/wget_css_fuzzer.c
index d2d8b09..b332bc9 100644
--- a/fuzz/wget_css_fuzzer.c
+++ b/fuzz/wget_css_fuzzer.c
@@ -69,6 +69,7 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 
 static int do_jump;
 static jmp_buf jmpbuf;
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
@@ -89,6 +90,7 @@ void exit(int status)
 	}
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_ftpls_fuzzer.c b/fuzz/wget_ftpls_fuzzer.c
index 2b67485..19d0f38 100644
--- a/fuzz/wget_ftpls_fuzzer.c
+++ b/fuzz/wget_ftpls_fuzzer.c
@@ -61,6 +61,7 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 
 static int do_jump;
 static jmp_buf jmpbuf;
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
@@ -81,6 +82,7 @@ void exit(int status)
 	}
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_html_fuzzer.c b/fuzz/wget_html_fuzzer.c
index 75c8153..e31bf68 100644
--- a/fuzz/wget_html_fuzzer.c
+++ b/fuzz/wget_html_fuzzer.c
@@ -68,11 +68,13 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 #endif
 }
 
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_netrc_fuzzer.c b/fuzz/wget_netrc_fuzzer.c
index b0d1c0f..d30ec96 100644
--- a/fuzz/wget_netrc_fuzzer.c
+++ b/fuzz/wget_netrc_fuzzer.c
@@ -60,6 +60,7 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 
 static int do_jump;
 static jmp_buf jmpbuf;
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
@@ -80,6 +81,7 @@ void exit(int status)
 	}
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_options_fuzzer.c b/fuzz/wget_options_fuzzer.c
index 9813ab4..2f8e2a2 100644
--- a/fuzz/wget_options_fuzzer.c
+++ b/fuzz/wget_options_fuzzer.c
@@ -62,6 +62,7 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 
 static int do_jump;
 static jmp_buf jmpbuf;
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
@@ -82,6 +83,7 @@ void exit(int status)
 	}
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_robots_fuzzer.c b/fuzz/wget_robots_fuzzer.c
index a62e1f5..4cfe708 100644
--- a/fuzz/wget_robots_fuzzer.c
+++ b/fuzz/wget_robots_fuzzer.c
@@ -59,11 +59,13 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 	return NULL;
 }
 
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
diff --git a/fuzz/wget_url_fuzzer.c b/fuzz/wget_url_fuzzer.c
index b62ab78..c16f005 100644
--- a/fuzz/wget_url_fuzzer.c
+++ b/fuzz/wget_url_fuzzer.c
@@ -58,11 +58,13 @@ FILE *fopen_wgetrc(const char *pathname, const char *mode)
 	return NULL;
 }
 
+#ifndef __HAIKU__
 #ifdef FUZZING
 void exit_wget(int status)
 {
 }
 #endif
+#endif
 
 int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
 {
-- 
2.23.0


From 71785d01e475dcaa6858bd6ce0668600226bb335 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 30 Mar 2019 14:19:17 +0100
Subject: gcc2 patch for version 1.20.3


diff --git a/lib/md5.c b/lib/md5.c
index 5c8bcf9..3463426 100644
--- a/lib/md5.c
+++ b/lib/md5.c
@@ -144,19 +144,20 @@ md5_finish_ctx (struct md5_ctx *ctx, void *resbuf)
 int
 md5_stream (FILE *stream, void *resblock)
 {
+  char *buffer;
+  struct md5_ctx ctx;
+  size_t sum;
   switch (afalg_stream (stream, "md5", resblock, MD5_DIGEST_SIZE))
     {
     case 0: return 0;
     case -EIO: return 1;
     }
 
-  char *buffer = malloc (BLOCKSIZE + 72);
+  buffer = malloc (BLOCKSIZE + 72);
   if (!buffer)
     return 1;
 
-  struct md5_ctx ctx;
   md5_init_ctx (&ctx);
-  size_t sum;
 
   /* Iterate over full file contents.  */
   while (1)
diff --git a/lib/mktime.c b/lib/mktime.c
index e3783d7..0e6a5bf 100644
--- a/lib/mktime.c
+++ b/lib/mktime.c
@@ -274,6 +274,8 @@ ranged_convert (struct tm *(*convert) (const time_t *, struct tm *),
   long_int t1 = (*t < mktime_min ? mktime_min
 		 : *t <= mktime_max ? *t : mktime_max);
   struct tm *r = convert_time (convert, t1, tp);
+  long_int bad, ok;
+  struct tm oktm;
   if (r)
     {
       *t = t1;
@@ -282,9 +284,9 @@ ranged_convert (struct tm *(*convert) (const time_t *, struct tm *),
   if (errno != EOVERFLOW)
     return NULL;
 
-  long_int bad = t1;
-  long_int ok = 0;
-  struct tm oktm; oktm.tm_sec = -1;
+  bad = t1;
+  ok = 0;
+  oktm.tm_sec = -1;
 
   /* BAD is a known out-of-range value, and OK is a known in-range one.
      Use binary search to narrow the range between BAD and OK until
@@ -366,6 +368,7 @@ __mktime_internal (struct tm *tp,
   int negative_offset_guess;
 
   int sec_requested = sec;
+  long_int t0, t, t1, t2;
 
   if (LEAP_SECONDS_POSSIBLE)
     {
@@ -381,18 +384,19 @@ __mktime_internal (struct tm *tp,
      time.  */
 
   INT_SUBTRACT_WRAPV (0, off, &negative_offset_guess);
-  long_int t0 = ydhms_diff (year, yday, hour, min, sec,
+  t0 = ydhms_diff (year, yday, hour, min, sec,
 			    EPOCH_YEAR - TM_YEAR_BASE, 0, 0, 0,
 			    negative_offset_guess);
-  long_int t = t0, t1 = t0, t2 = t0;
+  t = t0, t1 = t0, t2 = t0;
 
   /* Repeatedly use the error to improve the guess.  */
 
   while (true)
     {
+      long_int dt;
       if (! ranged_convert (convert, &t, &tm))
 	return -1;
-      long_int dt = tm_diff (year, yday, hour, min, sec, &tm);
+      dt = tm_diff (year, yday, hour, min, sec, &tm);
       if (dt == 0)
 	break;
 
@@ -530,8 +534,9 @@ mktime (struct tm *tp)
   __tzset ();
 
 # if defined _LIBC || NEED_MKTIME_WORKING
-  static mktime_offset_t localtime_offset;
+{  static mktime_offset_t localtime_offset;
   return __mktime_internal (tp, __localtime_r, &localtime_offset);
+}
 # else
 #  undef mktime
   return mktime (tp);
diff --git a/lib/regexec.c b/lib/regexec.c
index f464869..3a944b0 100644
--- a/lib/regexec.c
+++ b/lib/regexec.c
@@ -3298,6 +3298,7 @@ build_trtable (const re_dfa_t *dfa, re_dfastate_t *state)
   re_node_set follows, *dests_node;
   bitset_t *dests_ch;
   bitset_t acceptable;
+  size_t ndests_max;
 
   struct dests_alloc
   {
@@ -3348,7 +3349,7 @@ build_trtable (const re_dfa_t *dfa, re_dfastate_t *state)
     goto out_free;
 
   /* Avoid arithmetic overflow in size calculation.  */
-  size_t ndests_max
+  ndests_max
     = ((SIZE_MAX - (sizeof (re_node_set) + sizeof (bitset_t)) * SBC_MAX)
        / (3 * sizeof (re_dfastate_t *)));
   if (__glibc_unlikely (ndests_max < ndests))
diff --git a/lib/sha1.c b/lib/sha1.c
index d94c437..a56090a 100644
--- a/lib/sha1.c
+++ b/lib/sha1.c
@@ -132,19 +132,20 @@ sha1_finish_ctx (struct sha1_ctx *ctx, void *resbuf)
 int
 sha1_stream (FILE *stream, void *resblock)
 {
+  char *buffer;
+  struct sha1_ctx ctx;
+  size_t sum;
   switch (afalg_stream (stream, "sha1", resblock, SHA1_DIGEST_SIZE))
     {
     case 0: return 0;
     case -EIO: return 1;
     }
 
-  char *buffer = malloc (BLOCKSIZE + 72);
+  buffer = malloc (BLOCKSIZE + 72);
   if (!buffer)
     return 1;
 
-  struct sha1_ctx ctx;
   sha1_init_ctx (&ctx);
-  size_t sum;
 
   /* Iterate over full file contents.  */
   while (1)
diff --git a/lib/sha256.c b/lib/sha256.c
index 721e944..68df9b6 100644
--- a/lib/sha256.c
+++ b/lib/sha256.c
@@ -182,19 +182,20 @@ shaxxx_stream (FILE *stream, char const *alg, void *resblock,
                ssize_t hashlen, void (*init_ctx) (struct sha256_ctx *),
                void *(*finish_ctx) (struct sha256_ctx *, void *))
 {
+  char *buffer;
+  struct sha256_ctx ctx;
+  size_t sum;
   switch (afalg_stream (stream, alg, resblock, hashlen))
     {
     case 0: return 0;
     case -EIO: return 1;
     }
 
-  char *buffer = malloc (BLOCKSIZE + 72);
+  buffer = malloc (BLOCKSIZE + 72);
   if (!buffer)
     return 1;
 
-  struct sha256_ctx ctx;
   init_ctx (&ctx);
-  size_t sum;
 
   /* Iterate over full file contents.  */
   while (1)
diff --git a/lib/sha512.c b/lib/sha512.c
index e7f5bd5..80a7897 100644
--- a/lib/sha512.c
+++ b/lib/sha512.c
@@ -183,19 +183,20 @@ shaxxx_stream (FILE *stream, char const *alg, void *resblock,
                ssize_t hashlen, void (*init_ctx) (struct sha512_ctx *),
                void *(*finish_ctx) (struct sha512_ctx *, void *))
 {
+  char *buffer;
+  struct sha512_ctx ctx;
+  size_t sum;
   switch (afalg_stream (stream, alg, resblock, hashlen))
     {
     case 0: return 0;
     case -EIO: return 1;
     }
 
-  char *buffer = malloc (BLOCKSIZE + 72);
+  buffer = malloc (BLOCKSIZE + 72);
   if (!buffer)
     return 1;
 
-  struct sha512_ctx ctx;
   init_ctx (&ctx);
-  size_t sum;
 
   /* Iterate over full file contents.  */
   while (1)
diff --git a/src/ftp.c b/src/ftp.c
index 03d7deb..2c5ae52 100644
--- a/src/ftp.c
+++ b/src/ftp.c
@@ -2572,6 +2572,8 @@ ftp_retrieve_glob (struct url *u, struct url *original_url,
 {
   struct fileinfo *f, *start;
   uerr_t res;
+  int (*matcher) (const char *, const char *, int);
+  int (*cmp) (const char *, const char *);
 
   con->cmd |= LEAVE_PENDING;
 
@@ -2580,7 +2582,7 @@ ftp_retrieve_glob (struct url *u, struct url *original_url,
     return res;
 
   // Set the function used for glob matching.
-  int (*matcher) (const char *, const char *, int)
+  matcher
     = opt.ignore_case ? fnmatch_nocase : fnmatch;
 
   // Set the function used to compare strings
@@ -2594,10 +2596,10 @@ ftp_retrieve_glob (struct url *u, struct url *original_url,
    * the senseless type cast clears the complaint, and looks
    * harmless.
    */
-  int (*cmp) (const char *, const char *)
+  cmp
     = opt.ignore_case ? strcasecmp : (int (*)())strcmp;
 #else /* def __VMS */
-  int (*cmp) (const char *, const char *)
+  cmp
     = opt.ignore_case ? strcasecmp : strcmp;
 #endif /* def __VMS [else] */
 
diff --git a/src/main.c b/src/main.c
index bf6f9c2..25893dc 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1372,11 +1372,12 @@ main (int argc, char **argv)
   bool use_userconfig = false;
   bool noconfig = false;
   bool append_to_log = false;
+  double start_time;
 
   cleaned_up = 0; /* do cleanup later */
 
   timer = ptimer_new ();
-  double start_time = ptimer_measure (timer);
+  start_time = ptimer_measure (timer);
 
   total_downloaded_bytes = 0;
   program_name = argv[0];
diff --git a/src/openssl.c b/src/openssl.c
index 00bb950..93e5cc0 100644
--- a/src/openssl.c
+++ b/src/openssl.c
@@ -338,6 +338,7 @@ ssl_init (void)
    * intermediate CA to clients, can be used as a trust anchor without
    * the entire IdentTrust PKI.
    */
+{
   X509_VERIFY_PARAM *param = X509_VERIFY_PARAM_new();
   if (param)
     {
@@ -357,6 +358,7 @@ ssl_init (void)
       logprintf(LOG_NOTQUIET, _("OpenSSL: Failed to allocate verification param\n"));
       /* We continue on error */
     }
+}
 #endif
 
   if (opt.crl_file)
-- 
2.23.0

