From 92ed1dcaa05f0f425b809a7e1972cad5689c6634 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 15 Feb 2020 20:53:00 +0100
Subject: [PATCH] gcc2 build fix

---
 openbsd-compat/sha2.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/openbsd-compat/sha2.c b/openbsd-compat/sha2.c
index e36cc24..235d279 100644
--- a/openbsd-compat/sha2.c
+++ b/openbsd-compat/sha2.c
@@ -616,11 +616,13 @@ SHA256Final(u_int8_t digest[SHA256_DIGEST_LENGTH], SHA2_CTX *context)
 	SHA256Pad(context);
 
 #if BYTE_ORDER == LITTLE_ENDIAN
+{
 	int	i;
 
 	/* Convert TO host byte order */
 	for (i = 0; i < 8; i++)
 		BE_32_TO_8(digest + i * 4, context->state.st32[i]);
+}
 #else
 	memcpy(digest, context->state.st32, SHA256_DIGEST_LENGTH);
 #endif
@@ -897,11 +899,13 @@ SHA512Final(u_int8_t digest[SHA512_DIGEST_LENGTH], SHA2_CTX *context)
 	SHA512Pad(context);
 
 #if BYTE_ORDER == LITTLE_ENDIAN
+{
 	int	i;
 
 	/* Convert TO host byte order */
 	for (i = 0; i < 8; i++)
 		BE_64_TO_8(digest + i * 8, context->state.st64[i]);
+}
 #else
 	memcpy(digest, context->state.st64, SHA512_DIGEST_LENGTH);
 #endif
@@ -954,11 +958,13 @@ SHA384Final(u_int8_t digest[SHA384_DIGEST_LENGTH], SHA2_CTX *context)
 	SHA384Pad(context);
 
 #if BYTE_ORDER == LITTLE_ENDIAN
+{
 	int	i;
 
 	/* Convert TO host byte order */
 	for (i = 0; i < 6; i++)
 		BE_64_TO_8(digest + i * 8, context->state.st64[i]);
+}
 #else
 	memcpy(digest, context->state.st64, SHA384_DIGEST_LENGTH);
 #endif
-- 
2.24.0

