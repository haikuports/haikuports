SUMMARY="A commandline-tool and library for downloading data from URLs"
DESCRIPTION="Curl is a command line tool for transferring data with URL \
syntax, supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, \
LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, Telnet and TFTP.
curl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form \
based upload, proxies, cookies, user+password authentication (Basic, Digest, \
NTLM, Negotiate, kerberos...), file transfer resume, proxy tunneling and a \
busload of other useful tricks."
HOMEPAGE="https://curl.haxx.se/"
COPYRIGHT="1996-2016 Daniel Stenberg"
LICENSE="Curl"
REVISION="1"
SOURCE_URI="https://curl.haxx.se/download/curl-$portVersion.tar.bz2"
CHECKSUM_SHA256="7f8240048907e5030f67be0a6129bc4b333783b9cca1391026d700835a788dde"
ADDITIONAL_FILES="curl.rdef"

ARCHITECTURES="x86_gcc2 x86 x86_64 arm"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	curl$secondaryArchSuffix = $portVersion
	lib:libcurl$secondaryArchSuffix = 4.4.0 compat >= 4
	cmd:curl$secondaryArchSuffix = $portVersion compat >= 7.16
	"

REQUIRES="
	haiku$secondaryArchSuffix
	ca_root_certificates
	lib:libssl$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	curl${secondaryArchSuffix}_devel = $portVersion
	cmd:curl_config$secondaryArchSuffix = $portVersion compat >= 7.16
	devel:libcurl$secondaryArchSuffix = 4.4.0 compat >= 4
	"
REQUIRES_devel="
	curl$secondaryArchSuffix == $portVersion base
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:autoheader
	cmd:cut
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:nroff
	cmd:python
	cmd:pkg_config$secondaryArchSuffix
	cmd:sed
	"

BUILD()
{
	certsInstallDir="$portPackageLinksDir/ca_root_certificates"
	certsDir="$certsInstallDir/$relativeDataRootDir/ssl"

	autoconf
	CFLAGS=-D_BSD_SOURCE CXXFLAGS=-D_BSD_SOURCE runConfigure ./configure \
		--enable-ipv6 --enable-manual \
		--with-ca-bundle="$certsDir/CARootCertificates.pem"
	make $jobArgs
}

INSTALL()
{
	make install

	# remove libtool file
	rm $libDir/libcurl.la

	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/curl.rdef > curl.rdef

	addResourcesToBinaries curl.rdef \
		$binDir/curl

	# prepare develop/lib
	prepareInstalledDevelLib libcurl
	fixPkgconfig

	# fix curl-config
	fixDevelopLibDirReferences $binDir/curl-config
	sed -i \
		-e "s,--libexecdir=$developLibDir,--libexecdir=$libExecDir,g" \
		-e "s,--libdir=$developLibDir,--libdir=$libDir,g" \
		$binDir/curl-config

	if [ -n "$secondaryArchSuffix" ]; then
		maybe_manDir_man1_curl_config=
		maybe_manDir_man3=
	else
		maybe_manDir_man1_curl_config=$manDir/man1/curl-config.1
		maybe_manDir_man3=$manDir/man3
	fi

	# devel package
	packageEntries devel \
		$binDir/curl-config \
		$developDir \
		$maybe_manDir_man1_curl_config \
		$maybe_manDir_man3

	# Remove stuff we don't need in the secondary architecture base package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $documentationDir
	fi
}

TEST()
{
	make check
}
