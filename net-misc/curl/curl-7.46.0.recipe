SUMMARY="A commandline-tool and library for downloading data from URLs"
DESCRIPTION="Curl is a command line tool for transferring data with URL \
syntax, supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, \
LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, Telnet and TFTP. curl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form \
based upload, proxies, cookies, user+password authentication (Basic, Digest, \
NTLM, Negotiate, kerberos...), file transfer resume, proxy tunneling and a \
busload of other useful tricks."
HOMEPAGE="http://curl.haxx.se"
COPYRIGHT="1996-2015, Daniel Stenberg"
LICENSE="Curl"
REVISION="2"
SOURCE_URI="http://curl.haxx.se/download/curl-$portVersion.tar.bz2"
CHECKSUM_SHA256="b7d726cdd8ed4b6db0fa1b474a3c59ebbbe4dcd4c61ac5e7ade0e0270d3195ad"

ARCHITECTURES="x86_gcc2 x86 x86_64 arm"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	curl$secondaryArchSuffix = $portVersion
	lib:libcurl$secondaryArchSuffix = 4.4.0 compat >= 4
	"
if [ -z "$secondaryArchSuffix" ]; then
	PROVIDES="$PROVIDES
		cmd:curl = $portVersion compat >= 7.16
		"
fi

REQUIRES="
	haiku$secondaryArchSuffix
	ca_root_certificates
	lib:libssl$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"
BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	curl${secondaryArchSuffix}_devel = $portVersion
	cmd:curl_config$secondaryArchSuffix = $portVersion compat >= 7.16
	devel:libcurl$secondaryArchSuffix = 4.4.0 compat >= 4
	"
REQUIRES_devel="
	curl$secondaryArchSuffix == $portVersion base
	devel:libssl$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

BUILD_PREREQUIRES="
	cmd:autoconf
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize
	cmd:make
	cmd:nroff
	cmd:python
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	certsInstallDir="$portPackageLinksDir/ca_root_certificates"
	certsDir="$certsInstallDir/$relativeDataRootDir/ssl"

	libtoolize --force --copy --install
	autoconf
	runConfigure ./configure \
		--enable-ipv6 --enable-manual \
		--with-ca-bundle="$certsDir/CARootCertificates.pem"
	make $jobArgs
}

INSTALL()
{
	make install

	# prepare develop/lib
	prepareInstalledDevelLibs libcurl
	fixPkgconfig

	# fix curl-config
	fixDevelopLibDirReferences $binDir/curl-config
	sed -i -e "s,--libexecdir=$developLibDir,--libexecdir=$libExecDir,g" \
		-e "s,--libdir=$developLibDir,--libdir=$libDir,g" $binDir/curl-config

	# install html documentation for curl
	mkdir -p "$docDir"
	install -c -m 644 "docs/curl.html" "$docDir"

	# install html development documentation for libcurl
	mkdir -p "$developDocDir"
	for h in docs/libcurl/*.html; do
		install -c -m 644 "$h" "$developDocDir"
	done

	# devel package
	packageEntries devel \
		$binDir/curl-config \
		$developDir \
		$manDir/man3

	# Remove stuff we don't need in the secondary architecture base package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir
		rm -rf $documentationDir
	fi
}

TEST()
{
	make check
}
