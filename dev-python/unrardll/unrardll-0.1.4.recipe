SUMMARY="Python wrapper for the UnRAR DLL"
DESCRIPTION="Wrap the Unrar DLL to enable unraring of files in python"
HOMEPAGE="https://github.com/kovidgoyal/unrardll
	https://pypi.org/project/unrardll/"
COPYRIGHT="2017 Kovid Goyal"
LICENSE="BSD (3-clause)"
REVISION="6"
SOURCE_URI="https://github.com/kovidgoyal/unrardll/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="88c23a76492cf0d4aef5861947064698984c930294776dc66e9c46c2004ff0a2"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	unrardll$secondaryArchSuffix = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libunrar$secondaryArchSuffix
	"

PYTHON_PACKAGES=(python39)
PYTHON_VERSIONS=(3.9)
for i in "${!PYTHON_PACKAGES[@]}"; do
	pythonPackage=${PYTHON_PACKAGES[i]}
	pythonVersion=${PYTHON_VERSIONS[$i]}

	eval "PROVIDES_${pythonPackage}=\"
		${portName}_$pythonPackage = $portVersion
		\""

	if [ "$targetArchitecture" = x86_gcc2 ]; then
		eval "PROVIDES_$pythonPackage=\"
			unrardll_$pythonPackage = $portVersion
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		haiku
		lib:libunrar$secondaryArchSuffix
		cmd:python$pythonVersion
		\""
	BUILD_REQUIRES+="
		setuptools_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		cmd:gcc$secondaryArchSuffix
		"
done

INSTALL()
{
	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonPackage=${PYTHON_PACKAGES[i]}
		pythonVersion=${PYTHON_VERSIONS[$i]}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH
		mkdir -p $installLocation
		rm -rf build
		$python setup.py build install \
			--root=/ --prefix=$prefix

		packageEntries  $pythonPackage \
			$prefix/lib/python*
	done
}
