SUMMARY="An event-driven networking engine written in Python"
DESCRIPTION="Twisted is an event-based framework for internet applications.
It includes modules for many different purposes, including:

- twisted.application: A "Service" system that allows you to organize your \
application in hierarchies with well-defined startup and dependency semantics.
- twisted.cred: A general credentials and authentication system that \
facilitates pluggable authentication backends.
- twisted.enterprise: Asynchronous database access, compatible with any \
Python DBAPI2.0 modules.
- twisted.internet: Low-level asynchronous networking APIs that allow you \
to define your own protocols that run over certain transports.
- twisted.manhole: A tool for remote debugging of your services which gives \
you a Python interactive interpreter.
- twisted.protocols: Basic protocol implementations and helpers for your own \
protocol implementations.
- twisted.python: A large set of utilities for Python tricks, reflection, \
text processing, and anything else.
- twisted.spread: A secure, fast remote object system.
- twisted.trial: A unit testing framework that integrates well with \
Twisted-based code."
HOMEPAGE="https://twistedmatrix.com"
COPYRIGHT="2001-2022 Twisted project members"
LICENSE="MIT"
REVISION="3"
SOURCE_URI="https://github.com/twisted/twisted/archive/twisted-$portVersion.tar.gz"
CHECKSUM_SHA256="3d17049da4b7c66b11359ff29eeea103ef8356f2aec2e4fc3d78c1920fc622a1"
SOURCE_DIR="twisted-twisted-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	"
PYTHON_PACKAGES=(python39 python310)
PYTHON_VERSIONS=(3.9 3.10)
for i in "${!PYTHON_PACKAGES[@]}"; do
pythonPackage=${PYTHON_PACKAGES[i]}
pythonVersion=${PYTHON_VERSIONS[$i]}
eval "PROVIDES_${pythonPackage}=\"\
	${portName}_$pythonPackage = $portVersion\
	\"; \
REQUIRES_$pythonPackage=\"\
	haiku$secondaryArchSuffix\n\
	cmd:python$pythonVersion\n\
	attrs_$pythonPackage\n\
	automat_$pythonPackage\n\
	bcrypt_$pythonPackage\n\
	constantly_$pythonPackage\n\
	cryptography_$pythonPackage\n\
	hyperlink_$pythonPackage\n\
	incremental_$pythonPackage\n\
	zope_interface_$pythonPackage\n\
	\""
if [ "$targetArchitecture" = "x86_gcc2" ]; then
	eval "PROVIDES_${pythonPackage}+=\"\n\
		twisted_$pythonPackage = $portVersion\
		\""
fi
BUILD_REQUIRES="$BUILD_REQUIRES
	incremental_$pythonPackage
	setuptools_$pythonPackage"
BUILD_PREREQUIRES="$BUILD_PREREQUIRES
	cmd:python$pythonVersion"
done

for i in "${!PYTHON_VERSIONS[@]}"; do
pyVer=${PYTHON_VERSIONS[i]//.} # remove dot from version
eval "PROVIDES_python${pyVer}+=\"\n\
	cmd:cftp$pyVer\n\
	cmd:ckeygen$pyVer\n\
	cmd:conch$pyVer\n\
	cmd:mailmail$pyVer\n\
	cmd:manhole$pyVer\n\
	cmd:pyhtmlizer$pyVer\n\
	cmd:tap2deb$pyVer\n\
	cmd:tap2rpm$pyVer\n\
	cmd:tkconch$pyVer\n\
	cmd:trial$pyVer\n\
	cmd:twist$pyVer\n\
	cmd:twistd$pyVer\n\
	\""
done

INSTALL()
{
	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonPackage=${PYTHON_PACKAGES[i]}
		pythonVersion=${PYTHON_VERSIONS[$i]}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH
		mkdir -p $installLocation
		rm -rf build
		$python setup.py build install \
			--root=/ --prefix=$prefix

		pyVer=${pythonVersion//.}
		for f in $prefix/bin/*; do
			mv $f ${f}$pyVer
		done

		install -m 755 -d "$docDir"
		install -m 644 -t "$docDir" README.rst

		packageEntries  $pythonPackage \
			"$prefix"/lib/$python \
			"$prefix"/bin \
			"$docDir"
	done
}
