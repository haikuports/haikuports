SUMMARY="Pure python SSH implementation"
DESCRIPTION="Paramiko is a module for python 2.2 (or higher) that implements \
the SSH2 protocol for secure (encrypted and authenticated) connections to \
remote machines."
HOMEPAGE="https://www.lag.net/paramiko/"
COPYRIGHT="2003-2009  Robey Pointer"
LICENSE="GNU LGPL v2.1"
REVISION="4"
SOURCE_URI="https://files.pythonhosted.org/packages/source/p/paramiko/paramiko-$portVersion.tar.gz"
CHECKSUM_SHA256="003e6bee7c034c21fbb051bf83dc0a9ee4106204dd3c53054c71452cc4ec3938"

ARCHITECTURES="any"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"

PYTHON_VERSIONS=(3.10)

for i in "${!PYTHON_VERSIONS[@]}"; do
	pythonVersion=${PYTHON_VERSIONS[$i]}
	pythonPackage=python${pythonVersion//.}

	eval "PROVIDES_$pythonPackage=\"
		${portName}_$pythonPackage = $portVersion
		\""
	eval "REQUIRES_$pythonPackage=\"
		haiku
		bcrypt_$pythonPackage
		cryptography_$pythonPackage
		pynacl_$pythonPackage
#		pyasn1_$pythonPackage # for the "gssapi" extra only.
		six_$pythonPackage
		cmd:python$pythonVersion
		\""

	BUILD_REQUIRES="$BUILD_REQUIRES
		setuptools_$pythonPackage
		"
	BUILD_PREREQUIRES="$BUILD_PREREQUIRES
		cmd:python$pythonVersion
		"
	TEST_REQUIRES="$TEST_REQUIRES
		bcrypt_$pythonPackage
		cryptography_$pythonPackage
		importlib_metadata_$pythonPackage
#		mock_$pythonPackage # can use unittest.mock instead (newer versions do so).
		pynacl_$pythonPackage
		pytest_$pythonPackage
		six_$pythonPackage
		tomli_$pythonPackage
		typing_extensions_$pythonPackage
		"
done

INSTALL()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}
		pythonPackage=python${pythonVersion//.}

		python=python$pythonVersion

		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH

		mkdir -p $installLocation
		rm -rf build

		$python setup.py build install \
			--root=/ --prefix=$prefix

		packageEntries $pythonPackage \
			$prefix/lib/python*
	done
}

TEST()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}

		pytest-$pythonVersion
	done
}
