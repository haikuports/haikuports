SUMMARY="Python library for working with RDF"
DESCRIPTION="RDFLib is a Python library for working with RDF, a simple \
yet powerful language for representing information as graphs."
HOMEPAGE="https://github.com/RDFLib/rdflib"
COPYRIGHT="2002-2017 RDFLib Team"
LICENSE="BSD (3-clause)"
REVISION="4"
SOURCE_URI="https://pypi.io/packages/source/r/rdflib/rdflib-$portVersion.tar.gz"
CHECKSUM_SHA256="78149dd49d385efec3b3adfbd61c87afaf1281c30d3fcaf1b323b34f603fb155"

ARCHITECTURES="any"

PROVIDES="
	rdflib = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"

PYTHON_PACKAGES=(python310)
PYTHON_VERSIONS=(3.10)
defaultVersion=3.10 # just in case we support it for more than one Python version
for i in "${!PYTHON_PACKAGES[@]}"; do
	pythonPackage=${PYTHON_PACKAGES[i]}
	pythonVersion=${PYTHON_VERSIONS[$i]}

	eval "PROVIDES_$pythonPackage=\"
		${portName}_$pythonPackage = $portVersion
		cmd:csv2rdf_$pythonVersion
		cmd:rdf2dot_$pythonVersion
		cmd:rdfgraphisomorphism_$pythonVersion
		cmd:rdfpipe_$pythonVersion
		cmd:rdfs2dot_$pythonVersion
		\""

	if [ $pythonVersion = $defaultVersion ]; then
		eval "PROVIDES_${pythonPackage}+=\"
			cmd:csv2rdf
			cmd:rdf2dot
			cmd:rdfgraphisomorphism
			cmd:rdfpipe
			cmd:rdfs2dot
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		haiku
		cmd:python$pythonVersion
		\""
	BUILD_REQUIRES+="
		setuptools_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
	TEST_REQUIRES+="
		nose_$pythonPackage
		setuptools_$pythonPackage
		pip_$pythonPackage # to install "doctest-ignore-unicode"
		wheel_$pythonPackage
		"
done

INSTALL()
{
	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonPackage=${PYTHON_PACKAGES[i]}
		pythonVersion=${PYTHON_VERSIONS[$i]}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH

		mkdir -p $installLocation
		rm -rf build

		$python setup.py build install \
			--root=/ --prefix=$prefix

		# Version suffix all the scripts
		for f in $binDir/*; do
			mv $f $f-$pythonVersion
		done

		# And provide suffix-less symlinks for the default version
		if [ $pythonVersion = $defaultVersion ]; then
			for f in $binDir/*; do
				ln -sr $f ${f%-$pythonVersion}
			done
		fi

		packageEntries $pythonPackage \
			$prefix/lib/python* \
			$binDir
	done
}

TEST()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		python=python${PYTHON_VERSIONS[$i]}
		$python setup.py test
	done
}
