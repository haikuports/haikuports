SUMMARY="Scientific algorithms library for Python"
DESCRIPTION="SciPy is an open source library of scientific tools for Python. \
SciPy supplements the popular numpy module, gathering a variety of high level \
science and engineering modules together as a single package. SciPy includes \
modules for graphics and plotting, optimization, integration, special \
functions, signal and image processing, genetic algorithms, ODE solvers, and \
others.

This package does not contain ndimage module."
HOMEPAGE="https://www.scipy.org/"
COPYRIGHT=" 2001-2002 Enthought, Inc.
	2003-2021 SciPy Developers"
LICENSE="BSD (3-clause)"
REVISION="1"
SOURCE_URI="https://github.com/scipy/scipy/releases/download/v$portVersion/scipy-$portVersion.tar.xz"
CHECKSUM_SHA256="3851fdcb1e6877241c3377aa971c85af0d44f90c57f4dd4e54e1b2bbd742635e"
SOURCE_DIR="scipy-$portVersion"
PATCHES="scipy-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 !x86_64"
# scipy can be build directly on x86
# but I was unable to make recipe do
# in the same way as "setarch x86" do
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libcblas$secondaryArchSuffix
	lib:libarpack$secondaryArchSuffix
	lib:libblis$secondaryArchSuffix
	lib:liblapack$secondaryArchSuffix
	lib:libopenblas$secondaryArchSuffix
	lib:libumfpack$secondaryArchSuffix # not sure if actually used
	numpy$secondaryArchSuffix
	"

PYTHON_PACKAGES=(python3)
PYTHON_VERSIONS=(3.7)
for i in "${!PYTHON_PACKAGES[@]}"; do
pythonPackage=${PYTHON_PACKAGES[i]}
pythonVersion=${PYTHON_VERSIONS[$i]}
eval "PROVIDES_${pythonPackage}=\"\
	${portName}_$pythonPackage = $portVersion\n\
	\"; \
REQUIRES_$pythonPackage=\"\
	haiku$secondaryArchSuffix\n\
	scipy$secondaryArchSuffix\n\
	cmd:f2py$pythonVersion\n\
	cmd:python$pythonVersion\
	\""
done

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcblas$secondaryArchSuffix
	devel:libarpack$secondaryArchSuffix
	devel:libblis$secondaryArchSuffix
	devel:liblapack$secondaryArchSuffix
	devel:libopenblas$secondaryArchSuffix
	devel:libumfpack$secondaryArchSuffix
	pybind11${secondaryArchSuffix}_python3
	numpy${secondaryArchSuffix}_python3
	setuptools_python3
	"

BUILD_PREREQUIRES="
	cmd:g++$secondaryArchSuffix
	cmd:gfortran$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3.7
	cmd:swig # not sure if actually used
	"


INSTALL()
{
# Check at every update in site.cfg.example!
cat > site.cfg << EOF
[ALL]
libraries = execinfo,lapack,openblas
library_dirs = /system/$relativeDevelopLibDir
include_dirs = /system/$relativeIncludeDir
runtime_library_dirs = /system/$relativeLibDir
[openblas]
libraries = openblas
library_dirs = /system/$relativeDevelopLibDir
include_dirs = /system/$relativeIncludeDir
runtime_library_dirs = /system/$relativeLibDir
[blis]
libraries = blis
library_dirs = /system/$relativeDevelopLibDir
include_dirs = /system/$relativeIncludeDir/blis
runtime_library_dirs = /system/$relativeLibDir
[lapack]
library_dirs = /system/$relativeDevelopLibDir
include_dirs = /system/$relativeIncludeDir
runtime_library_dirs = /system/$relativeLibDir
EOF

	rm -rf doc/sphinxext/.git

	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonPackage=${PYTHON_PACKAGES[i]}
		pythonVersion=${PYTHON_VERSIONS[$i]}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH
		mkdir -p $installLocation
		rm -rf build
		$python setup.py build install \
			--root=/ --prefix=$prefix

		packageEntries  $pythonPackage \
			$prefix/lib/python*
	done
}
