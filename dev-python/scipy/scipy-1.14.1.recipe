SUMMARY="Fundamental algorithms for scientific computing in Python"
DESCRIPTION="SciPy is an open source library of scientific tools for Python. \
SciPy supplements the popular numpy module, gathering a variety of high level \
science and engineering modules together as a single package. SciPy includes \
modules for graphics and plotting, optimization, integration, special \
functions, signal and image processing, genetic algorithms, ODE solvers, and \
others."
HOMEPAGE="https://www.scipy.org/"
COPYRIGHT=" 2001-2002 Enthought, Inc.
	2003-2024 SciPy Developers"
LICENSE="BSD (3-clause)"
REVISION="1"

SOURCE_URI="https://pypi.io/packages/source/s/$portName/$portName-$portVersion.tar.gz"
CHECKSUM_SHA256="5a275584e726026a5699459aa72f828a610821006228e841b94275c4a7c08417"
SOURCE_DIR="$portName-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	gcc${secondaryArchSuffix}_syslibs
	numpy$secondaryArchSuffix
	lib:liblapack$secondaryArchSuffix
	lib:libopenblas$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:liblapack$secondaryArchSuffix
	devel:libopenblas$secondaryArchSuffix
	"

BUILD_PREREQUIRES="
	cmd:g++$secondaryArchSuffix
	cmd:gfortran$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	cmd:make
	cmd:f2py
	cmd:cython
	"

PYTHON_PACKAGES=(python310)
PYTHON_VERSIONS=(3.10)
for i in "${!PYTHON_PACKAGES[@]}"; do
	pythonPackage=${PYTHON_PACKAGES[i]}
	pythonVersion=${PYTHON_VERSIONS[$i]}

	eval "PROVIDES_$pythonPackage=\"
		${portName}_$pythonPackage = $portVersion
		\""

	if [ "$targetArchitecture" = x86_gcc2 ]; then
		eval "PROVIDES_$pythonPackage+=\"
			$portName_$pythonPackage = $portVersion
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		$REQUIRES
		numpy_$pythonPackage
		cmd:python$pythonVersion
		\""

	BUILD_REQUIRES+="
		build_$pythonPackage
		installer_$pythonPackage
		meson_python_$pythonPackage
		numpy_$pythonPackage
		pybind11_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
done


INSTALL()
{
	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}
		python=python$pythonVersion

		rm -rf dist

		# Workaround until pybind11's .pc files location gets fixed.
		#export PKG_CONFIG_PATH=$(pkg-config --variable pc_path pkg-config):$(pybind11-config --pkgconfigdir)
		#export PKG_CONFIG_PATH=$(pybind11-config --pkgconfigdir)

		$python -m build --wheel --skip-dependency-check --no-isolation \
			-Csetup-args="-Dlapack=openblas" \
			-Csetup-args="-Duse-pythran=false" \
			-Cbuilddir="build"

		$python -m installer --p $prefix dist/*.whl

		packageEntries ${PYTHON_PACKAGES[i]} \
			"$prefix"/lib/python*

	done
}
