SUMMARY="A HTTP library for Python"
DESCRIPTION="Requests is a HTTP library, written in Python, made for humans."
HOMEPAGE="http://python-requests.org/
	http://pypi.python.org/pypi/requests"
COPYRIGHT="2019 Kenneth Reitz"
LICENSE="Apache v2"
REVISION="2"
SOURCE_URI="https://github.com/kennethreitz/requests/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="dcacea1b6a7bfd2cbb6c6a05743606b428f2739f37825e41fbf79af3cc2fd240"
SOURCE_FILENAME="requests-$portVersion.tar.gz"

ARCHITECTURES="any"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"
PYTHON_PACKAGES=(python python36 python3)
PYTHON_VERSIONS=(2.7 3.6 3.7)
for i in "${!PYTHON_PACKAGES[@]}"; do
pythonPackage=${PYTHON_PACKAGES[i]}
pythonVersion=${PYTHON_VERSIONS[$i]}
eval "PROVIDES_${pythonPackage}=\"\
	${portName}_$pythonPackage = $portVersion\
	\"; \
REQUIRES_$pythonPackage=\"\
	haiku\n\
	ca_root_certificates\n\
	chardet_$pythonPackage\n\
	idna_$pythonPackage\n\
	urllib3_$pythonPackage\n\
	cmd:python$pythonVersion\
	\""
BUILD_REQUIRES="$BUILD_REQUIRES
	setuptools_$pythonPackage"
BUILD_PREREQUIRES="$BUILD_PREREQUIRES
	cmd:python$pythonVersion"
done

REPLACES_python="
	python_requests
	"

INSTALL()
{
	cp requests/certs.py certs.py.in
	for i in "${!PYTHON_PACKAGES[@]}"; do
		pythonPackage=${PYTHON_PACKAGES[i]}
		pythonVersion=${PYTHON_VERSIONS[$i]}
		pythonPackageName=${portName}_$pythonPackage-$portFullVersion
		pythonLinksDir=$(dirname $portPackageLinksDir)/$pythonPackageName
		certificatePath=$pythonLinksDir/ca_root_certificates/$relativeDataRootDir/ssl/CARootCertificates.pem
		whereDef="def where(): return \"$certificatePath\""

		sed -e 's|from certifi import where|'"$whereDef"'|' \
			certs.py.in > requests/certs.py

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH
		mkdir -p $installLocation
		rm -rf build
		$python setup.py build install \
			--root=/ --prefix=$prefix

		packageEntries  $pythonPackage \
			$prefix/lib/python*
	done
}
