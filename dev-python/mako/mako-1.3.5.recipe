SUMMARY="Hyperfast and lightweight templating for the Python platform"
DESCRIPTION="Mako is a template library written in Python. It provides a \
familiar, non-XML syntax which compiles into Python modules for maximum \
performance. Mako's syntax and API borrows from the best ideas of many \
others, including Django and Jinja2 templates, Cheetah, Myghty, and Genshi.

Conceptually, Mako is an embedded Python (i.e. Python Server Page) language, \
which refines the familiar ideas of componentized layout and inheritance to \
produce one of the most straightforward and flexible models available, while \
also maintaining close ties to Python calling and scoping semantics."
HOMEPAGE="http://www.makotemplates.org"
COPYRIGHT="2006-2024 the Mako authors and contributors"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://pypi.python.org/packages/source/M/Mako/Mako-$portVersion.tar.gz"
CHECKSUM_SHA256="48dbc20568c1d276a2698b36d968fa76161bf127194907ea6fc594fa81f943bc"
SOURCE_DIR="Mako-$portVersion"

ARCHITECTURES="any"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"

PYTHON_VERSIONS=(3.10)
defaultVersion=3.10

for i in "${!PYTHON_VERSIONS[@]}"; do
	pythonVersion=${PYTHON_VERSIONS[$i]}
	pythonPackage=python${pythonVersion//.}

	eval "PROVIDES_${pythonPackage}=\"
		${portName}_$pythonPackage = $portVersion
		cmd:mako_render$pythonVersion
		\""

	if [ $pythonVersion = $defaultVersion ]; then
		eval "PROVIDES_${pythonPackage}+=\"
			cmd:mako_render = $portVersion
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		haiku
		markupsafe_$pythonPackage
		cmd:python$pythonVersion
		\""
	BUILD_REQUIRES+="
		build_$pythonPackage
		installer_$pythonPackage
		setuptools_$pythonPackage
		wheel_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
done

INSTALL()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}
		pythonPackage=python${pythonVersion//.}

		python=python$pythonVersion

		$python -m build --wheel --skip-dependency-check --no-isolation
		$python -m installer -p $prefix dist/*.whl

		# Version suffix the script, and provide suffixless version for the default one.
		mv $binDir/mako-render $binDir/mako-render$pythonVersion
		if [ $pythonVersion = $defaultVersion ]; then
			ln -sr $binDir/mako-render$pythonVersion $binDir/mako-render
		fi

		packageEntries $pythonPackage \
			$prefix/lib/python* \
			$binDir
	done
}
