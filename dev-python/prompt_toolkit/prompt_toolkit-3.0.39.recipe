SUMMARY="Library for building powerful interactive command line applications in Python"
DESCRIPTION="prompt_toolkit could be a replacement for GNU readline, but it can be much \
more than that.

Some features:

- Pure Python.
- Syntax highlighting of the input while typing. (For instance, with a Pygments lexer.)
- Multi-line input editing.
- Advanced code completion.
- Both Emacs and Vi key bindings. (Similar to readline.)
- Even some advanced Vi functionality, like named registers and digraphs.
- Reverse and forward incremental search.
- Works well with Unicode double width characters. (Chinese input.)
- Selecting text for copy/paste. (Both Emacs and Vi style.)
- Support for bracketed paste.
- Mouse support for cursor positioning and scrolling.
- Auto suggestions. (Like fish shell.)
- Multiple input buffers.
- No global state.
- Lightweight, the only dependencies are Pygments and wcwidth.
- Runs on Linux, OS X, FreeBSD, OpenBSD and Windows systems.
- And much more..."
HOMEPAGE="https://github.com/prompt-toolkit/python-prompt-toolkit"
COPYRIGHT="2014 Jonathan Slenders"
LICENSE="BSD (3-clause)"
REVISION="1"
SOURCE_URI="https://pypi.io/packages/source/p/prompt_toolkit/prompt_toolkit-$portVersion.tar.gz"
CHECKSUM_SHA256="04505ade687dc26dc4284b1ad19a83be2f2afe83e7a828ace0c72f3a1df72aac"

ARCHITECTURES="any"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku
	"

PYTHON_PACKAGES=(python310)
PYTHON_VERSIONS=(3.10)
for i in "${!PYTHON_PACKAGES[@]}"; do
	pythonPackage=${PYTHON_PACKAGES[i]}
	pythonVersion=${PYTHON_VERSIONS[$i]}

	eval "PROVIDES_${pythonPackage}=\"
		${portName}_$pythonPackage = $portVersion
		\""
	eval "REQUIRES_$pythonPackage=\"
		haiku
		pygments_$pythonPackage
		wcwidth_$pythonPackage
		cmd:python$pythonVersion
		\""

	BUILD_REQUIRES+="
		build_$pythonPackage
		installer_$pythonPackage
		setuptools_$pythonPackage
		wheel_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
done


INSTALL()
{
	for i in "${!PYTHON_PACKAGES[@]}"; do
		python=python${PYTHON_VERSIONS[$i]}

		$python -m build --wheel --skip-dependency-check --no-isolation
		$python -m installer -p $prefix dist/*.whl

		packageEntries ${PYTHON_PACKAGES[i]} \
			$prefix/lib/python*
	done
}
