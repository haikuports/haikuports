SUMMARY="HTTP client/server for asyncio"
DESCRIPTION="Supports both client and server side of HTTP protocol. \
Supports both client and server Web-Sockets out-of-the-box and avoids Callback Hell.

Provides Web-server with middlewares and pluggable routing."
HOMEPAGE="https://pypi.python.org/pypi/aiohttp"
COPYRIGHT="2013-2021 Nikolay Kim and Andrew Svetlov"
LICENSE="Apache v2"
REVISION="6"
SOURCE_URI="https://files.pythonhosted.org/packages/source/a/aiohttp/aiohttp-$portVersion.tar.gz"
CHECKSUM_SHA256="fc5471e1a54de15ef71c1bc6ebe80d4dc681ea600e68bfd1cbce40427f0b7578"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	gcc$secondaryArchSuffix
	"

PYTHON_VERSIONS=(3.10)

for i in "${!PYTHON_VERSIONS[@]}"; do
	pythonVersion=${PYTHON_VERSIONS[$i]}
	pythonPackage=python${pythonVersion//.}

	eval "PROVIDES_$pythonPackage=\"
		${portName}_$pythonPackage = $portVersion
		\""

	if [ "$targetArchitecture" = x86_gcc2 ]; then
		eval "PROVIDES_$pythonPackage+=\"
			aiohttp_$pythonPackage = $portVersion
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		haiku$secondaryArchSuffix
		aiosignal_$pythonPackage
		attrs_$pythonPackage
		async_timeout_$pythonPackage
		charset_normalizer_$pythonPackage
		frozenlist_$pythonPackage
		multidict_$pythonPackage
		yarl_$pythonPackage
		cmd:python$pythonVersion
		\""

	BUILD_REQUIRES+="
		setuptools_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
done

INSTALL()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}
		pythonPackage=python${pythonVersion//.}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH

		mkdir -p $installLocation
		rm -rf build

		$python setup.py build install \
			--root=/ --prefix=$prefix

		packageEntries $pythonPackage \
			$prefix/lib/python*
	done
}
