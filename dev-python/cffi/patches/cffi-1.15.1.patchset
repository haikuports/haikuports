From 341e07c1e8aa6f78ecfa5809a920a369f4b05405 Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Mon, 3 Feb 2025 13:55:59 +0100
Subject: Fix tests


diff --git a/testing/cffi0/test_ownlib.py b/testing/cffi0/test_ownlib.py
index bbdab8c..ee9aae8 100644
--- a/testing/cffi0/test_ownlib.py
+++ b/testing/cffi0/test_ownlib.py
@@ -388,7 +388,7 @@ class TestOwnLib(object):
     def test_dlopen_handle(self):
         if self.module is None:
             py.test.skip("fix the auto-generation of the tiny test lib")
-        if sys.platform == 'win32' or is_musl:
+        if sys.platform == 'win32' or sys.platform[:5] == 'haiku' or is_musl:
             py.test.skip("uses 'dl' explicitly")
         if self.__class__.Backend is CTypesBackend:
             py.test.skip("not for the ctypes backend")
diff --git a/testing/cffi0/test_parsing.py b/testing/cffi0/test_parsing.py
index 5d93a8d..20d8469 100644
--- a/testing/cffi0/test_parsing.py
+++ b/testing/cffi0/test_parsing.py
@@ -16,7 +16,7 @@ class FakeBackend(object):
         if sys.platform == 'win32':
             assert name is None or "msvcr" in name
         else:
-            assert name is None or "libc" in name or "libm" in name
+            assert name is None or "libc" in name or "libm" in name or "libroot" in name
         return FakeLibrary()
 
     def new_function_type(self, args, result, has_varargs):
diff --git a/testing/cffi1/test_re_python.py b/testing/cffi1/test_re_python.py
index 45dd70c..50598be 100644
--- a/testing/cffi1/test_re_python.py
+++ b/testing/cffi1/test_re_python.py
@@ -269,7 +269,7 @@ def test_selfref():
 def test_dlopen_handle():
     import _cffi_backend
     from re_python_pysrc import ffi
-    if sys.platform == 'win32' or is_musl:
+    if sys.platform == 'win32' or sys.platform[:5] == 'haiku' or is_musl:
         py.test.skip("uses 'dl' explicitly")
     ffi1 = FFI()
     ffi1.cdef("""void *dlopen(const char *filename, int flags);
-- 
2.45.2

