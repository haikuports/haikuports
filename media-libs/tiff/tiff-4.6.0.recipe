SUMMARY="A library to read/write TIFF images"
DESCRIPTION="TIFF the Tag Image File Format, is a widely used format for \
storing image data. Included in this software is a library, libtiff, for \
reading and writing TIFF and a small collection of tools for doing simple \
manipulations of TIFF images."
HOMEPAGE="http://www.libtiff.org/"
COPYRIGHT="1988-1997 Sam Leffler
	1991-1997 Silicon Graphics, Inc."
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://download.osgeo.org/libtiff/tiff-$portVersion.tar.gz"
CHECKSUM_SHA256="88b3979e6d5c7e32b50d7ec72fb15af724f6ab2cbf7e10880c360a77e4b5d99a"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

libVersion="6.0.2"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"
portVersionCompat="$portVersion compat >= ${portVersion%%.*}"

PROVIDES="
	tiff$secondaryArchSuffix = $portVersionCompat
	lib:libtiff$secondaryArchSuffix = $libVersionCompat
	lib:libtiffxx$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	tiff${secondaryArchSuffix}_devel = $portVersionCompat
	devel:libtiff$secondaryArchSuffix = $libVersionCompat
	devel:libtiffxx$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	tiff$secondaryArchSuffix == $portVersion base
	"
CONFLICTS_devel="
	tiff4${secondaryArchSuffix}_devel
	"

if [ -z "$secondaryArchSuffix" ]; then
	SUMMARY_tools="The TIFF tools"
	PROVIDES_tools="
		tiff_tools = $portVersion
		cmd:tiffcp
		cmd:tiffdump
		cmd:tiffinfo
		cmd:tiffset
		cmd:tiffsplit
		"
	REQUIRES_tools="
		haiku
		tiff == $portVersion base
		lib:libjpeg
		lib:libz
		"
	CONFLICTS_tools="
		tiff4_tools
		"
fi

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libjpeg$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

debugList=(
	"$libDir"/libtiff.so.$libVersion
	"$libDir"/libtiffxx.so.$libVersion
	)
if [ -z "$secondaryArchSuffix" ]; then
	for i in `echo "$PROVIDES_tools" | sed -n -e "s/^\s*cmd://p"`; do
		debugList+=("${binDir/$portName/${portName}_tools}"/$i)
	done
fi
defineDebugInfoPackage $portName "${debugList[@]}"

BUILD()
{
	autoreconf -fi
	runConfigure ./configure --with-docdir=$developDocDir
	make $jobArgs
}

INSTALL()
{
	make install

	# remove static library
	rm -f $libDir/libtiff*.*a

	prepareInstalledDevelLibs libtiff libtiffxx
	fixPkgconfig

	# devel package
	packageEntries devel \
		$developDir \
		$manDir/man3

	# tools package
	if [ -z "$secondaryArchSuffix" ]; then
		packageEntries tools \
			$binDir \
			$documentationDir
	fi

	# Remove stuff we don't need in the secondary architecture base package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir
		rm -rf $documentationDir
	fi
}

TEST()
{
	make check
}
