SUMMARY="An image compression library and tools for JPEGs"
DESCRIPTION="This package contains C software to implement JPEG image \
encoding, decoding, and transcoding. JPEG is a standardized compression \
method for full-color and gray-scale images.

The distributed programs provide conversion between JPEG 'JFIF' format and \
image files in PBMPLUS PPM/PGM, GIF, BMP, and Targa file formats. The core \
compression and decompression library can easily be reused in other programs, \
such as image viewers. The package is highly portable C code; it was tested \
on many machines ranging from PCs to Crays."
HOMEPAGE="http://www.ijg.org"
COPYRIGHT="1991-2014, Thomas G. Lane, Guido Vollbeding"
LICENSE="JPEG"
REVISION="5"
SOURCE_URI="http://www.ijg.org/files/jpegsrc.v$portVersion.tar.gz"
CHECKSUM_SHA256="240fd398da741669bf3c90366f58452ea59041cacc741a489b99f2f6a0bad052"
PATCHES="jpeg-9.patchset"

ARCHITECTURES="x86_gcc2 x86 x86_64 arm"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	jpeg$secondaryArchSuffix = $portVersion compat >= 9
	lib:libjpeg$secondaryArchSuffix = 9.2.0 compat >= 9
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	jpeg${secondaryArchSuffix}_devel = $portVersion compat >= 9
	devel:libjpeg$secondaryArchSuffix = 9.2.0 compat >= 9
	"
REQUIRES_devel="
	jpeg$secondaryArchSuffix == $portVersion base
	"

if [ -z "$secondaryArchSuffix" ]; then
	SUMMARY_tools="The JPEG tools"
	PROVIDES_tools="
		jpeg_tools = $portVersion compat >= 9
		cmd:cjpeg = $portVersion compat >= 9
		cmd:djpeg = $portVersion compat >= 9
		cmd:jpegtran = $portVersion compat >= 9
		cmd:rdjpgcom = $portVersion compat >= 9
		cmd:wrjpgcom = $portVersion compat >= 9
		"
	REQUIRES_tools="
		haiku
		jpeg == $portVersion base
		"
fi

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:gcc$secondaryArchSuffix
	cmd:grep
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

defineDebugInfoPackage jpeg$secondaryArchSuffix \
	$libDir/libjpeg.so.9.2.0

BUILD()
{
	autoreconf -fi
	runConfigure ./configure \
		--enable-shared
	make $jobArgs
}

INSTALL()
{
	make install

	rm $libDir/libjpeg.la

	prepareInstalledDevelLibs libjpeg

	# devel package
	packageEntries devel \
		$developDir

	# tools package
	if [ -z "$secondaryArchSuffix" ]; then
		packageEntries tools \
			$binDir \
			$documentationDir
	fi

	# Remove stuff we don't need in the secondary architecture base package.
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir
		rm -rf $documentationDir
	fi
}
