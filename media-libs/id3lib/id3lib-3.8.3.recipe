SUMMARY="Id3 library for C/C++"
DESCRIPTION="id3lib is a software library for reading, writing, \
and manipulating ID3v2 tags. Additionally it is possible to get \
some basic mp3 header information like bitrate etc."
HOMEPAGE="https://sourceforge.net/projects/id3lib/"
COPYRIGHT="2000-2004 Underbit Technologies, Inc."
LICENSE="GNU LGPL v2.1"
REVISION="2"
SOURCE_URI="https://sourceforge.net/projects/id3lib/files/id3lib/$portVersion/id3lib-$portVersion.tar.gz"
CHECKSUM_SHA256="2749cc3c0cd7280b299518b1ddf5a5bcfe2d1100614519b68702230e26c7d079"
PATCHES="id3lib-$portVersion.patchset"

ARCHITECTURES="all"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

libVersion="3.0.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	id3lib$secondaryArchSuffix = $portVersion
	lib:libid3_3.8$secondaryArchSuffix = $libVersionCompat
	"
# we only want the binaries for primary architecture
if [ -z "$secondaryArchSuffix" ]; then
PROVIDES="$PROVIDES
	cmd:id3convert
	cmd:id3cp
	cmd:id3info
	cmd:id3tag
	"
fi
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	id3lib${secondaryArchSuffix}_devel = $portVersion
	devel:libid3$secondaryArchSuffix = $libVersionCompat
	devel:libid3_3.8$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	$portName == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libiconv$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	"

PATCH()
{
	sed -i "s/iomanip.h/iomanip/" configure.in
	sed -i "s/iomanip.h/iomanip/" configure
}

BUILD()
{
	libtoolize -fci
	aclocal --force --install -I acinclude
	automake --add-missing
	autoconf
	./configure --prefix=$prefix \
		--bindir=$binDir \
		--sbindir=$binDir \
		--libdir=$libDir \
		--includedir=$includeDir \
		--datadir=$dataDir \
		--mandir=$manDir \
		--disable-static \
		--disable-dependency-tracking
	make
}

INSTALL()
{
	make install

	# we only want the binaries for primary architecture
	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir
	fi

	rm $libDir/libid3.la

	prepareInstalledDevelLibs libid3 libid3-3.8
	fixPkgconfig

	packageEntries devel \
		$developDir
}

TEST()
{
	make check
}
