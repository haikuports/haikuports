diff -aur liblo-0.26/liblo.pc.in liblo-0.26_Haiku/liblo.pc.in
--- liblo-0.26/liblo.pc.in	2008-06-02 19:10:42.012845056 -0700
+++ liblo-0.26_Haiku/liblo.pc.in	2012-05-15 16:42:17.135528448 -0700
@@ -6,5 +6,5 @@
 Name: liblo
 Version: @PACKAGE_VERSION@
 Description: A lightweight OSC server/client library
-Libs: -L${libdir} -llo -lpthread
+Libs: -L${libdir} -llo
 Cflags: -I${includedir}
diff -aur liblo-0.26/src/Makefile.am liblo-0.26_Haiku/src/Makefile.am
--- liblo-0.26/src/Makefile.am	2009-03-07 09:09:52.017825792 -0800
+++ liblo-0.26_Haiku/src/Makefile.am	2012-05-15 16:35:36.973340672 -0700
@@ -13,7 +13,7 @@
 
 liblo_la_CFLAGS = -Wall -I$(top_srcdir)
 liblo_la_SOURCES = $(SOURCE_FILES)
-liblo_la_LIBADD = -lpthread
+liblo_la_LIBADD = 
 liblo_la_LDFLAGS  = -export-dynamic -version-info @LO_SO_VERSION@
 
 noinst_PROGRAMS = testlo subtest
diff -aur liblo-0.26/src/server.c liblo-0.26_Haiku/src/server.c
--- liblo-0.26/src/server.c	2009-03-05 23:09:26.018087936 -0800
+++ liblo-0.26_Haiku/src/server.c	2012-05-15 16:31:29.817627136 -0700
@@ -958,44 +960,44 @@
 
     //inet_ntop(s->addr.ss_family, &s->addr.padding, hostname, sizeof(hostname));
     if (s->protocol == LO_UDP && s->addr_len>0) {
-	err = getnameinfo((struct sockaddr *)&s->addr, sizeof(s->addr),
-	    hostname, sizeof(hostname), portname, sizeof(portname),
-	    NI_NUMERICHOST | NI_NUMERICSERV);
-	if (err) {
-	    switch (err) {
-	    case EAI_AGAIN:
-		lo_throw(s, err, "Try again", path);
-		break;
-	    case EAI_BADFLAGS:
-		lo_throw(s, err, "Bad flags", path);
-		break;
-	    case EAI_FAIL:
-		lo_throw(s, err, "Failed", path);
-		break;
-	    case EAI_FAMILY:
-		lo_throw(s, err, "Cannot resolve address family", path);
-		break;
-	    case EAI_MEMORY:
-		lo_throw(s, err, "Out of memory", path);
-		break;
-	    case EAI_NONAME:
-		lo_throw(s, err, "Cannot resolve", path);
-		break;
+		err = getnameinfo((struct sockaddr *)&s->addr, sizeof(struct sockaddr),
+		    hostname, sizeof(hostname), portname, sizeof(portname),
+		    NI_NUMERICHOST | NI_NUMERICSERV);
+		if (err) {
+		    switch (err) {
+			    case EAI_AGAIN:
+				lo_throw(s, err, "Try again", path);
+				break;
+			    case EAI_BADFLAGS:
+				lo_throw(s, err, "Bad flags", path);
+				break;
+			    case EAI_FAIL:
+				lo_throw(s, err, "Failed", path);
+				break;
+			    case EAI_FAMILY:
+				lo_throw(s, err, "Cannot resolve address family", path);
+				break;
+			    case EAI_MEMORY:
+				lo_throw(s, err, "Out of memory", path);
+				break;
+			    case EAI_NONAME:
+				lo_throw(s, err, "Cannot resolve", path);
+				break;
 #ifndef WIN32
-	    case EAI_SYSTEM:
-		lo_throw(s, err, strerror(err), path);
-		break;
-#endif
-	    default:
-		lo_throw(s, err, "Unknown error", path);
-		break;
-	    }
+			    case EAI_SYSTEM:
+				lo_throw(s, err, strerror(err), path);
+				break;
+#endif
+			    default:
+				lo_throw(s, err, "Unknown error", path);
+				break;
+		    }
 
-	    return;
-	}
+		    return;
+		}
     } else {
-	hostname[0] = '\0';
-	portname[0] = '\0';
+		hostname[0] = '\0';
+		portname[0] = '\0';
     }
     
     
