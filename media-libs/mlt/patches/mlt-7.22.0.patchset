From 7fe65a21e6c7fa9878dba186590eb847d09de811 Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Sat, 11 Nov 2023 17:02:02 +0100
Subject: Fix Haiku support


diff --git a/src/modules/decklink/consumer_decklink.cpp b/src/modules/decklink/consumer_decklink.cpp
index d04024d..f69365c 100644
--- a/src/modules/decklink/consumer_decklink.cpp
+++ b/src/modules/decklink/consumer_decklink.cpp
@@ -651,7 +651,9 @@ protected:
             return;
 
         pthread_attr_init(&tattr);
+#ifndef __HAIKU__
         pthread_attr_setschedpolicy(&tattr, SCHED_FIFO);
+#endif
 
         if (!strcmp("max", mlt_properties_get(properties, "priority")))
             param.sched_priority = sched_get_priority_max(SCHED_FIFO) - 1;
diff --git a/src/modules/decklink/producer_decklink.cpp b/src/modules/decklink/producer_decklink.cpp
index 22be72e..8134e27 100644
--- a/src/modules/decklink/producer_decklink.cpp
+++ b/src/modules/decklink/producer_decklink.cpp
@@ -470,7 +470,9 @@ public:
                 struct sched_param param;
 
                 pthread_attr_init(&tattr);
+#ifndef __HAIKU__
                 pthread_attr_setschedpolicy(&tattr, SCHED_FIFO);
+#endif
 
                 if (!strcmp("max", mlt_properties_get(properties, "priority")))
                     param.sched_priority = sched_get_priority_max(SCHED_FIFO) - 1;
diff --git a/src/modules/plusgpl/CMakeLists.txt b/src/modules/plusgpl/CMakeLists.txt
index ebdfd89..b8a7dc6 100644
--- a/src/modules/plusgpl/CMakeLists.txt
+++ b/src/modules/plusgpl/CMakeLists.txt
@@ -21,7 +21,7 @@ target_link_libraries(mltplusgpl PRIVATE mlt m Threads::Threads)
 
 if(WIN32)
   target_link_libraries(mltplusgpl PRIVATE ws2_32)
-elseif(UNIX AND NOT APPLE AND NOT ANDROID)
+elseif(UNIX AND NOT APPLE AND NOT ANDROID AND NOT HAIKU)
   target_link_libraries(mltplusgpl PRIVATE rt)
 endif()
 
-- 
2.42.1


From 86403f244bcdda6398e025337407fafcae528463 Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Sat, 11 Nov 2023 17:22:08 +0100
Subject: Fix SDL module


diff --git a/src/modules/sdl/CMakeLists.txt b/src/modules/sdl/CMakeLists.txt
index 6128184..769591b 100644
--- a/src/modules/sdl/CMakeLists.txt
+++ b/src/modules/sdl/CMakeLists.txt
@@ -17,7 +17,7 @@ target_link_libraries(mltsdl PRIVATE mlt m Threads::Threads PkgConfig::sdl)
 
 if(APPLE)
   target_link_libraries(mltsdl PRIVATE objc "-framework Foundation")
-elseif(UNIX)
+elseif(UNIX AND NOT HAIKU)
   target_link_libraries(mltsdl PRIVATE X11)
 endif()
 
diff --git a/src/modules/sdl/consumer_sdl.c b/src/modules/sdl/consumer_sdl.c
index 98abfaa..7f1492a 100644
--- a/src/modules/sdl/consumer_sdl.c
+++ b/src/modules/sdl/consumer_sdl.c
@@ -876,7 +876,7 @@ static int consumer_get_dimensions(int *width, int *height)
 #ifndef __APPLE__
     // Get the wm structure
     if (SDL_GetWMInfo(&wm) == 1) {
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__HAIKU__)
         // Check that we have the X11 wm
         if (wm.subsystem == SDL_SYSWM_X11) {
             // Get the SDL window
diff --git a/src/modules/sdl/consumer_sdl_still.c b/src/modules/sdl/consumer_sdl_still.c
index 629c75b..0414b18 100644
--- a/src/modules/sdl/consumer_sdl_still.c
+++ b/src/modules/sdl/consumer_sdl_still.c
@@ -579,7 +579,7 @@ static int consumer_get_dimensions(int *width, int *height)
 #ifndef __APPLE__
     // Get the wm structure
     if (SDL_GetWMInfo(&wm) == 1) {
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__HAIKU__)
         // Check that we have the X11 wm
         if (wm.subsystem == SDL_SYSWM_X11) {
             // Get the SDL window
-- 
2.42.1


From 2e93fc129b9d7af02cece898bce11c456dd76d92 Mon Sep 17 00:00:00 2001
From: Begasus <begasus@gmail.com>
Date: Sun, 12 Nov 2023 08:05:00 +0100
Subject: More Haiku fixes


diff --git a/src/framework/mlt_consumer.c b/src/framework/mlt_consumer.c
index a65d7c8..cca843d 100644
--- a/src/framework/mlt_consumer.c
+++ b/src/framework/mlt_consumer.c
@@ -1174,9 +1174,11 @@ static void consumer_work_start(mlt_consumer self)
 
         priority.sched_priority = mlt_properties_get_int(MLT_CONSUMER_PROPERTIES(self), "priority");
         pthread_attr_init(&thread_attributes);
+#ifndef __HAIKU__
         pthread_attr_setschedpolicy(&thread_attributes, SCHED_OTHER);
+#endif
         pthread_attr_setschedparam(&thread_attributes, &priority);
-#if !defined(__ANDROID__) || (defined(__ANDROID__) && __ANDROID_API__ >= 28)
+#if !defined(__HAIKU__) && !defined(__ANDROID__) || (defined(__ANDROID__) && __ANDROID_API__ >= 28)
         pthread_attr_setinheritsched(&thread_attributes, PTHREAD_EXPLICIT_SCHED);
 #endif
         pthread_attr_setscope(&thread_attributes, PTHREAD_SCOPE_SYSTEM);
@@ -1754,9 +1756,11 @@ static void mlt_thread_create(mlt_consumer self, mlt_thread_function_t function)
             < 1) {
             pthread_attr_t thread_attributes;
             pthread_attr_init(&thread_attributes);
+#ifndef __HAIKU__
             pthread_attr_setschedpolicy(&thread_attributes, SCHED_OTHER);
+#endif
             pthread_attr_setschedparam(&thread_attributes, &priority);
-#if !defined(__ANDROID__) \
+#if !defined(__HAIKU__) && !defined(__ANDROID__) \
     || (defined(__ANDROID__) \
         && __ANDROID_API__ \
                >= 28) // pthread_attr_setinheritsched is not available until API level 28
diff --git a/src/framework/mlt_slices.c b/src/framework/mlt_slices.c
index 3f5b321..b036d71 100644
--- a/src/framework/mlt_slices.c
+++ b/src/framework/mlt_slices.c
@@ -199,7 +199,9 @@ static mlt_slices mlt_slices_init(int threads, int policy, int priority)
         policy = SCHED_OTHER;
     if (priority < 0)
         priority = sched_get_priority_max(policy);
+#ifndef __HAIKU__
     pthread_attr_setschedpolicy(&tattr, policy);
+#endif
     param.sched_priority = priority;
     pthread_attr_setschedparam(&tattr, &param);
 
diff --git a/src/modules/plusgpl/consumer_cbrts.c b/src/modules/plusgpl/consumer_cbrts.c
index 7cc8b88..0dc6787 100644
--- a/src/modules/plusgpl/consumer_cbrts.c
+++ b/src/modules/plusgpl/consumer_cbrts.c
@@ -913,9 +913,11 @@ static void start_output_thread(consumer_cbrts self)
         pthread_attr_t thread_attributes;
         pthread_attr_init(&thread_attributes);
         priority.sched_priority = rtprio;
+#ifndef __HAIKU__
         pthread_attr_setschedpolicy(&thread_attributes, SCHED_FIFO);
+#endif
         pthread_attr_setschedparam(&thread_attributes, &priority);
-#if !defined(__ANDROID__) || (defined(__ANDROID__) && __ANDROID_API__ >= 28)
+#if !defined(__HAIKU__) && !defined(__ANDROID__) || (defined(__ANDROID__) && __ANDROID_API__ >= 28)
         pthread_attr_setinheritsched(&thread_attributes, PTHREAD_EXPLICIT_SCHED);
 #endif
         pthread_attr_setscope(&thread_attributes, PTHREAD_SCOPE_SYSTEM);
-- 
2.42.1

