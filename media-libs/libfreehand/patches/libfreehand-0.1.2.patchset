From 04d394d25cf998cd89e4fbb5e5b79ec42c636ca4 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 2 Aug 2020 20:36:24 +0200
Subject: Build fix.


diff --git a/src/lib/FHCollector.cpp b/src/lib/FHCollector.cpp
index 874ab46..a5ab52e 100644
--- a/src/lib/FHCollector.cpp
+++ b/src/lib/FHCollector.cpp
@@ -1907,7 +1907,7 @@ void libfreehand::FHCollector::_outputDisplayText(const libfreehand::FHDisplayTe
   textObjectProps.insert("svg:width", width);
   for (int i=0; i<4; ++i) // osnola: let assume that there is no padding
   {
-    char const *(padding[])= {"fo:padding-left","fo:padding-right","fo:padding-top","fo:padding-bottom"};
+    char const *padding[]= {"fo:padding-left","fo:padding-right","fo:padding-top","fo:padding-bottom"};
     textObjectProps.insert(padding[i],0,librevenge::RVNG_POINT);
   }
   if (!FH_ALMOST_ZERO(rotation))
diff --git a/src/lib/Makefile.in b/src/lib/Makefile.in
index dd8dee3..bd196ad 100644
--- a/src/lib/Makefile.in
+++ b/src/lib/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.15 from Makefile.am.
+# Makefile.in generated by automake 1.16.2 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2014 Free Software Foundation, Inc.
+# Copyright (C) 1994-2020 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -166,7 +166,12 @@ am__v_at_0 = @
 am__v_at_1 = 
 DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
-am__depfiles_maybe = depfiles
+am__maybe_remake_depfiles = depfiles
+am__depfiles_remade = ./$(DEPDIR)/FHCollector.Plo \
+	./$(DEPDIR)/FHInternalStream.Plo ./$(DEPDIR)/FHParser.Plo \
+	./$(DEPDIR)/FHPath.Plo ./$(DEPDIR)/FHTransform.Plo \
+	./$(DEPDIR)/FreeHandDocument.Plo \
+	./$(DEPDIR)/libfreehand_utils.Plo
 am__mv = mv -f
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
@@ -468,8 +473,8 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
 	esac;
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
@@ -541,13 +546,19 @@ mostlyclean-compile:
 distclean-compile:
 	-rm -f *.tab.c
 
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHCollector.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHInternalStream.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHParser.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHPath.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHTransform.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FreeHandDocument.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfreehand_utils.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHCollector.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHInternalStream.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHParser.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHPath.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FHTransform.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FreeHandDocument.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfreehand_utils.Plo@am__quote@ # am--include-marker
+
+$(am__depfiles_remade):
+	@$(MKDIR_P) $(@D)
+	@echo '# dummy' >$@-t && $(am__mv) $@-t $@
+
+am--depfiles: $(am__depfiles_remade)
 
 .cpp.o:
 @am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@@ -628,7 +639,10 @@ cscopelist-am: $(am__tagged_files)
 distclean-tags:
 	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
 
-distdir: $(DISTFILES)
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
 	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	list='$(DISTFILES)'; \
@@ -705,7 +719,13 @@ clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
 	clean-noinstLTLIBRARIES mostlyclean-am
 
 distclean: distclean-am
-	-rm -rf ./$(DEPDIR)
+		-rm -f ./$(DEPDIR)/FHCollector.Plo
+	-rm -f ./$(DEPDIR)/FHInternalStream.Plo
+	-rm -f ./$(DEPDIR)/FHParser.Plo
+	-rm -f ./$(DEPDIR)/FHPath.Plo
+	-rm -f ./$(DEPDIR)/FHTransform.Plo
+	-rm -f ./$(DEPDIR)/FreeHandDocument.Plo
+	-rm -f ./$(DEPDIR)/libfreehand_utils.Plo
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-tags
@@ -751,7 +771,13 @@ install-ps-am:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -rf ./$(DEPDIR)
+		-rm -f ./$(DEPDIR)/FHCollector.Plo
+	-rm -f ./$(DEPDIR)/FHInternalStream.Plo
+	-rm -f ./$(DEPDIR)/FHParser.Plo
+	-rm -f ./$(DEPDIR)/FHPath.Plo
+	-rm -f ./$(DEPDIR)/FHTransform.Plo
+	-rm -f ./$(DEPDIR)/FreeHandDocument.Plo
+	-rm -f ./$(DEPDIR)/libfreehand_utils.Plo
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
@@ -772,20 +798,20 @@ uninstall-am: uninstall-libLTLIBRARIES
 
 .MAKE: all check install install-am install-strip
 
-.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
-	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
-	cscopelist-am ctags ctags-am distclean distclean-compile \
-	distclean-generic distclean-libtool distclean-tags distdir dvi \
-	dvi-am html html-am info info-am install install-am \
-	install-data install-data-am install-dvi install-dvi-am \
-	install-exec install-exec-am install-html install-html-am \
-	install-info install-info-am install-libLTLIBRARIES \
-	install-man install-pdf install-pdf-am install-ps \
-	install-ps-am install-strip installcheck installcheck-am \
-	installdirs maintainer-clean maintainer-clean-generic \
-	mostlyclean mostlyclean-compile mostlyclean-generic \
-	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
-	uninstall-am uninstall-libLTLIBRARIES
+.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
+	clean-generic clean-libLTLIBRARIES clean-libtool \
+	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am \
+	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES
 
 .PRECIOUS: Makefile
 
diff --git a/src/lib/libfreehand_utils.cpp b/src/lib/libfreehand_utils.cpp
index 439c457..32f23e0 100644
--- a/src/lib/libfreehand_utils.cpp
+++ b/src/lib/libfreehand_utils.cpp
@@ -162,7 +162,7 @@ void libfreehand::_appendUTF16(librevenge::RVNGString &text, std::vector<unsigne
   while (j < length)
   {
     UChar32 c;
-    U16_NEXT(s, j, length, c)
+    U16_NEXT(s, j, length, c);
     unsigned char outbuf[U8_MAX_LENGTH+1];
     int i = 0;
     U8_APPEND_UNSAFE(&outbuf[0], i, c);
diff --git a/src/lib/tokenhash.h b/src/lib/tokenhash.h
index 7559ba4..480e010 100644
--- a/src/lib/tokenhash.h
+++ b/src/lib/tokenhash.h
@@ -46,355 +46,355 @@ struct fhtoken
 class Perfect_Hash
 {
 private:
-  static inline unsigned int hash(const char *str, size_t len);
+  static inline unsigned int hash (const char *str, size_t len);
 public:
-  static const struct fhtoken *in_word_set(const char *str, size_t len);
+  static const struct fhtoken *in_word_set (const char *str, size_t len);
 };
 
 inline unsigned int
-Perfect_Hash::hash(const char *str, size_t len)
+Perfect_Hash::hash (const char *str, size_t len)
 {
   static const unsigned char asso_values[] =
-  {
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187,  94,  12,  10,  57,  24,
-    6,  31,   5,  29, 187, 187,   9,   6,  13,  49,
-    37, 187,  94,  44,   5,   7,  88, 187,  40, 187,
-    187, 187, 187, 187, 187, 187, 187,   6,  23,  14,
-    78,   9,   5,  28,  50,   5,  31,  96,  24,  83,
-    54,  29,  12, 187,   6,  37,   5,  60,  99,  20,
-    187,  46, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
-    187, 187, 187, 187, 187, 187
-  };
+    {
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187,  94,  12,  10,  57,  24,
+        6,  31,   5,  29, 187, 187,   9,   6,  13,  49,
+       37, 187,  94,  44,   5,   7,  88, 187,  40, 187,
+      187, 187, 187, 187, 187, 187, 187,   6,  23,  14,
+       78,   9,   5,  28,  50,   5,  31,  96,  24,  83,
+       54,  29,  12, 187,   6,  37,   5,  60,  99,  20,
+      187,  46, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
+      187, 187, 187, 187, 187, 187
+    };
   unsigned int hval = len;
 
   switch (hval)
-  {
-  default:
-    hval += asso_values[static_cast<unsigned char>(str[7])];
-  /*FALLTHROUGH*/
-  case 7:
-  case 6:
-  case 5:
-    hval += asso_values[static_cast<unsigned char>(str[4])];
-  /*FALLTHROUGH*/
-  case 4:
-    hval += asso_values[static_cast<unsigned char>(str[3])];
-  /*FALLTHROUGH*/
-  case 3:
-  case 2:
-  case 1:
-    hval += asso_values[static_cast<unsigned char>(str[0])];
-    break;
-  }
+    {
+      default:
+        hval += asso_values[static_cast<unsigned char>(str[7])];
+      /*FALLTHROUGH*/
+      case 7:
+      case 6:
+      case 5:
+        hval += asso_values[static_cast<unsigned char>(str[4])];
+      /*FALLTHROUGH*/
+      case 4:
+        hval += asso_values[static_cast<unsigned char>(str[3])];
+      /*FALLTHROUGH*/
+      case 3:
+      case 2:
+      case 1:
+        hval += asso_values[static_cast<unsigned char>(str[0])];
+        break;
+    }
   return hval;
 }
 
 static const struct fhtoken wordlist[] =
-{
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0},
+  {
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 69 "tokens.gperf"
-  {"List",FH_LIST},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
+    {"List",FH_LIST},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
 #line 118 "tokens.gperf"
-  {"TString",FH_TSTRING},
+    {"TString",FH_TSTRING},
 #line 74 "tokens.gperf"
-  {"MString",FH_MSTRING},
+    {"MString",FH_MSTRING},
 #line 130 "tokens.gperf"
-  {"UString",FH_USTRING},
+    {"UString",FH_USTRING},
 #line 116 "tokens.gperf"
-  {"TEffect",FH_TEFFECT},
-  {(char *)0, 0}, {(char *)0, 0},
+    {"TEffect",FH_TEFFECT},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 64 "tokens.gperf"
-  {"Layer",FH_LAYER},
+    {"Layer",FH_LAYER},
 #line 70 "tokens.gperf"
-  {"MDict",FH_MDICT},
-  {(char *)0, 0},
+    {"MDict",FH_MDICT},
+    {(char*)0, 0},
 #line 60 "tokens.gperf"
-  {"Halftone",FH_HALFTONE},
+    {"Halftone",FH_HALFTONE},
 #line 119 "tokens.gperf"
-  {"TabTable",FH_TABTABLE},
-  {(char *)0, 0},
+    {"TabTable",FH_TABTABLE},
+    {(char*)0, 0},
 #line 82 "tokens.gperf"
-  {"MultiBlend",FH_MULTIBLEND},
-  {(char *)0, 0},
+    {"MultiBlend",FH_MULTIBLEND},
+    {(char*)0, 0},
 #line 120 "tokens.gperf"
-  {"TaperedFill",FH_TAPEREDFILL},
+    {"TaperedFill",FH_TAPEREDFILL},
 #line 121 "tokens.gperf"
-  {"TaperedFillX",FH_TAPEREDFILLX},
+    {"TaperedFillX",FH_TAPEREDFILLX},
 #line 68 "tokens.gperf"
-  {"LinearFill",FH_LINEARFILL},
+    {"LinearFill",FH_LINEARFILL},
 #line 73 "tokens.gperf"
-  {"MQuickDict",FH_MQUICKDICT},
+    {"MQuickDict",FH_MQUICKDICT},
 #line 32 "tokens.gperf"
-  {"ContentFill",FH_CONTENTFILL},
+    {"ContentFill",FH_CONTENTFILL},
 #line 75 "tokens.gperf"
-  {"MasterPageDocMan",FH_MASTERPAGEDOCMAN},
+    {"MasterPageDocMan",FH_MASTERPAGEDOCMAN},
 #line 76 "tokens.gperf"
-  {"MasterPageElement",FH_MASTERPAGEELEMENT},
+    {"MasterPageElement",FH_MASTERPAGEELEMENT},
 #line 25 "tokens.gperf"
-  {"CharacterFill",FH_CHARACTERFILL},
+    {"CharacterFill",FH_CHARACTERFILL},
 #line 49 "tokens.gperf"
-  {"FWFeatherFilter",FH_FWFEATHERFILTER},
+    {"FWFeatherFilter",FH_FWFEATHERFILTER},
 #line 55 "tokens.gperf"
-  {"FilterAttributeHolder",FH_FILTERATTRIBUTEHOLDER},
+    {"FilterAttributeHolder",FH_FILTERATTRIBUTEHOLDER},
 #line 79 "tokens.gperf"
-  {"MasterPageSymbolClass",FH_MASTERPAGESYMBOLCLASS},
+    {"MasterPageSymbolClass",FH_MASTERPAGESYMBOLCLASS},
 #line 77 "tokens.gperf"
-  {"MasterPageLayerElement",FH_MASTERPAGELAYERELEMENT},
+    {"MasterPageLayerElement",FH_MASTERPAGELAYERELEMENT},
 #line 78 "tokens.gperf"
-  {"MasterPageLayerInstance",FH_MASTERPAGELAYERINSTANCE},
+    {"MasterPageLayerInstance",FH_MASTERPAGELAYERINSTANCE},
 #line 80 "tokens.gperf"
-  {"MasterPageSymbolInstance",FH_MASTERPAGESYMBOLINSTANCE},
+    {"MasterPageSymbolInstance",FH_MASTERPAGESYMBOLINSTANCE},
 #line 28 "tokens.gperf"
-  {"Color6",FH_COLOR6},
+    {"Color6",FH_COLOR6},
 #line 126 "tokens.gperf"
-  {"TileFill",FH_TILEFILL},
+    {"TileFill",FH_TILEFILL},
 #line 71 "tokens.gperf"
-  {"MList",FH_MLIST},
+    {"MList",FH_MLIST},
 #line 83 "tokens.gperf"
-  {"MultiColorList",FH_MULTICOLORLIST},
+    {"MultiColorList",FH_MULTICOLORLIST},
 #line 125 "tokens.gperf"
-  {"TextInPath",FH_TEXTINPATH},
+    {"TextInPath",FH_TEXTINPATH},
 #line 67 "tokens.gperf"
-  {"LineTable",FH_LINETABLE},
+    {"LineTable",FH_LINETABLE},
 #line 30 "tokens.gperf"
-  {"ConeFill",FH_CONEFILL},
+    {"ConeFill",FH_CONEFILL},
 #line 127 "tokens.gperf"
-  {"TintColor",FH_TINTCOLOR},
+    {"TintColor",FH_TINTCOLOR},
 #line 128 "tokens.gperf"
-  {"TintColor6",FH_TINTCOLOR6},
+    {"TintColor6",FH_TINTCOLOR6},
 #line 34 "tokens.gperf"
-  {"CustomProc",FH_CUSTOMPROC},
+    {"CustomProc",FH_CUSTOMPROC},
 #line 33 "tokens.gperf"
-  {"ContourFill",FH_CONTOURFILL},
+    {"ContourFill",FH_CONTOURFILL},
 #line 66 "tokens.gperf"
-  {"LinePat",FH_LINEPAT},
+    {"LinePat",FH_LINEPAT},
 #line 24 "tokens.gperf"
-  {"CalligraphicStroke",FH_CALLIGRAPHICSTROKE},
+    {"CalligraphicStroke",FH_CALLIGRAPHICSTROKE},
 #line 15 "tokens.gperf"
-  {"BasicFill",FH_BASICFILL},
+    {"BasicFill",FH_BASICFILL},
 #line 103 "tokens.gperf"
-  {"PropLst",FH_PROPLST},
+    {"PropLst",FH_PROPLST},
 #line 46 "tokens.gperf"
-  {"FHDocHeader",FH_FHDOCHEADER},
+    {"FHDocHeader",FH_FHDOCHEADER},
 #line 35 "tokens.gperf"
-  {"Data",FH_DATA},
+    {"Data",FH_DATA},
 #line 96 "tokens.gperf"
-  {"PatternFill",FH_PATTERNFILL},
+    {"PatternFill",FH_PATTERNFILL},
 #line 29 "tokens.gperf"
-  {"CompositePath",FH_COMPOSITEPATH},
+    {"CompositePath",FH_COMPOSITEPATH},
 #line 63 "tokens.gperf"
-  {"Import",FH_IMPORT},
+    {"Import",FH_IMPORT},
 #line 97 "tokens.gperf"
-  {"PatternLine",FH_PATTERNLINE},
+    {"PatternLine",FH_PATTERNLINE},
 #line 89 "tokens.gperf"
-  {"PSFill",FH_PSFILL},
+    {"PSFill",FH_PSFILL},
 #line 81 "tokens.gperf"
-  {"MpObject",FH_MPOBJECT},
+    {"MpObject",FH_MPOBJECT},
 #line 43 "tokens.gperf"
-  {"Envelope",FH_ENVELOPE},
+    {"Envelope",FH_ENVELOPE},
 #line 101 "tokens.gperf"
-  {"Procedure",FH_PROCEDURE},
+    {"Procedure",FH_PROCEDURE},
 #line 50 "tokens.gperf"
-  {"FWGlowFilter",FH_FWGLOWFILTER},
+    {"FWGlowFilter",FH_FWGLOWFILTER},
 #line 88 "tokens.gperf"
-  {"Oval",FH_OVAL},
+    {"Oval",FH_OVAL},
 #line 53 "tokens.gperf"
-  {"Figure",FH_FIGURE},
+    {"Figure",FH_FIGURE},
 #line 124 "tokens.gperf"
-  {"TextEffs",FH_TEXTEFFS},
+    {"TextEffs",FH_TEXTEFFS},
 #line 108 "tokens.gperf"
-  {"SketchFilter",FH_SKETCHFILTER},
+    {"SketchFilter",FH_SKETCHFILTER},
 #line 27 "tokens.gperf"
-  {"Collector",FH_COLLECTOR},
+    {"Collector",FH_COLLECTOR},
 #line 102 "tokens.gperf"
-  {"ProcessColor",FH_PROCESSCOLOR},
+    {"ProcessColor",FH_PROCESSCOLOR},
 #line 39 "tokens.gperf"
-  {"DuetFilter",FH_DUETFILTER},
+    {"DuetFilter",FH_DUETFILTER},
 #line 65 "tokens.gperf"
-  {"LensFill",FH_LENSFILL},
+    {"LensFill",FH_LENSFILL},
 #line 36 "tokens.gperf"
-  {"DataList",FH_DATALIST},
+    {"DataList",FH_DATALIST},
 #line 52 "tokens.gperf"
-  {"FWSharpenFilter",FH_FWSHARPENFILTER},
+    {"FWSharpenFilter",FH_FWSHARPENFILTER},
 #line 87 "tokens.gperf"
-  {"OpacityFilter",FH_OPACITYFILTER},
+    {"OpacityFilter",FH_OPACITYFILTER},
 #line 37 "tokens.gperf"
-  {"DateTime",FH_DATETIME},
+    {"DateTime",FH_DATETIME},
 #line 62 "tokens.gperf"
-  {"ImageImport",FH_IMAGEIMPORT},
+    {"ImageImport",FH_IMAGEIMPORT},
 #line 123 "tokens.gperf"
-  {"TextColumn",FH_TEXTCOLUMN},
+    {"TextColumn",FH_TEXTCOLUMN},
 #line 93 "tokens.gperf"
-  {"Path",FH_PATH},
+    {"Path",FH_PATH},
 #line 92 "tokens.gperf"
-  {"Paragraph",FH_PARAGRAPH},
+    {"Paragraph",FH_PARAGRAPH},
 #line 91 "tokens.gperf"
-  {"PantoneColor",FH_PANTONECOLOR},
+    {"PantoneColor",FH_PANTONECOLOR},
 #line 16 "tokens.gperf"
-  {"BasicLine",FH_BASICLINE},
+    {"BasicLine",FH_BASICLINE},
 #line 85 "tokens.gperf"
-  {"NewContourFill",FH_NEWCONTOURFILL},
+    {"NewContourFill",FH_NEWCONTOURFILL},
 #line 51 "tokens.gperf"
-  {"FWShadowFilter",FH_FWSHADOWFILTER},
+    {"FWShadowFilter",FH_FWSHADOWFILTER},
 #line 109 "tokens.gperf"
-  {"SpotColor",FH_SPOTCOLOR},
+    {"SpotColor",FH_SPOTCOLOR},
 #line 110 "tokens.gperf"
-  {"SpotColor6",FH_SPOTCOLOR6},
+    {"SpotColor6",FH_SPOTCOLOR6},
 #line 61 "tokens.gperf"
-  {"ImageFill",FH_IMAGEFILL},
+    {"ImageFill",FH_IMAGEFILL},
 #line 54 "tokens.gperf"
-  {"FileDescriptor",FH_FILEDESCRIPTOR},
+    {"FileDescriptor",FH_FILEDESCRIPTOR},
 #line 44 "tokens.gperf"
-  {"ExpandFilter",FH_EXPANDFILTER},
+    {"ExpandFilter",FH_EXPANDFILTER},
 #line 90 "tokens.gperf"
-  {"PSLine",FH_PSLINE},
+    {"PSLine",FH_PSLINE},
 #line 72 "tokens.gperf"
-  {"MName",FH_MNAME},
+    {"MName",FH_MNAME},
 #line 20 "tokens.gperf"
-  {"Brush",FH_BRUSH},
+    {"Brush",FH_BRUSH},
 #line 94 "tokens.gperf"
-  {"PathText",FH_PATHTEXT},
+    {"PathText",FH_PATHTEXT},
 #line 99 "tokens.gperf"
-  {"PerspectiveGrid",FH_PERSPECTIVEGRID},
+    {"PerspectiveGrid",FH_PERSPECTIVEGRID},
 #line 48 "tokens.gperf"
-  {"FWBlurFilter",FH_FWBLURFILTER},
+    {"FWBlurFilter",FH_FWBLURFILTER},
 #line 58 "tokens.gperf"
-  {"Group",FH_GROUP},
+    {"Group",FH_GROUP},
 #line 38 "tokens.gperf"
-  {"DisplayText",FH_DISPLAYTEXT},
+    {"DisplayText",FH_DISPLAYTEXT},
 #line 98 "tokens.gperf"
-  {"PerspectiveEnvelope",FH_PERSPECTIVEENVELOPE},
+    {"PerspectiveEnvelope",FH_PERSPECTIVEENVELOPE},
 #line 17 "tokens.gperf"
-  {"BendFilter",FH_BENDFILTER},
+    {"BendFilter",FH_BENDFILTER},
 #line 131 "tokens.gperf"
-  {"VDict",FH_VDICT},
+    {"VDict",FH_VDICT},
 #line 95 "tokens.gperf"
-  {"PathTextLineInfo",FH_PATHTEXTLINEINFO},
+    {"PathTextLineInfo",FH_PATHTEXTLINEINFO},
 #line 115 "tokens.gperf"
-  {"SymbolLibrary",FH_SYMBOLLIBRARY},
+    {"SymbolLibrary",FH_SYMBOLLIBRARY},
 #line 31 "tokens.gperf"
-  {"ConnectorLine",FH_CONNECTORLINE},
+    {"ConnectorLine",FH_CONNECTORLINE},
 #line 22 "tokens.gperf"
-  {"BrushStroke",FH_BRUSHSTROKE},
+    {"BrushStroke",FH_BRUSHSTROKE},
 #line 129 "tokens.gperf"
-  {"TransformFilter",FH_TRANSFORMFILTER},
+    {"TransformFilter",FH_TRANSFORMFILTER},
 #line 111 "tokens.gperf"
-  {"StylePropLst",FH_STYLEPROPLST},
+    {"StylePropLst",FH_STYLEPROPLST},
 #line 23 "tokens.gperf"
-  {"BrushTip",FH_BRUSHTIP},
+    {"BrushTip",FH_BRUSHTIP},
 #line 104 "tokens.gperf"
-  {"RadialFill",FH_RADIALFILL},
+    {"RadialFill",FH_RADIALFILL},
 #line 105 "tokens.gperf"
-  {"RadialFillX",FH_RADIALFILLX},
+    {"RadialFillX",FH_RADIALFILLX},
 #line 26 "tokens.gperf"
-  {"ClipGroup",FH_CLIPGROUP},
+    {"ClipGroup",FH_CLIPGROUP},
 #line 42 "tokens.gperf"
-  {"Element",FH_ELEMENT},
+    {"Element",FH_ELEMENT},
 #line 59 "tokens.gperf"
-  {"Guides",FH_GUIDES},
+    {"Guides",FH_GUIDES},
 #line 14 "tokens.gperf"
-  {"AttributeHolder",FH_ATTRIBUTEHOLDER},
+    {"AttributeHolder",FH_ATTRIBUTEHOLDER},
 #line 122 "tokens.gperf"
-  {"TextBlok",FH_TEXTBLOK},
+    {"TextBlok",FH_TEXTBLOK},
 #line 19 "tokens.gperf"
-  {"Block",FH_BLOCK},
+    {"Block",FH_BLOCK},
 #line 45 "tokens.gperf"
-  {"Extrusion",FH_EXTRUSION},
+    {"Extrusion",FH_EXTRUSION},
 #line 40 "tokens.gperf"
-  {"ElemList",FH_ELEMLIST},
+    {"ElemList",FH_ELEMLIST},
 #line 100 "tokens.gperf"
-  {"PolygonFigure",FH_POLYGONFIGURE},
+    {"PolygonFigure",FH_POLYGONFIGURE},
 #line 113 "tokens.gperf"
-  {"SymbolClass",FH_SYMBOLCLASS},
+    {"SymbolClass",FH_SYMBOLCLASS},
 #line 86 "tokens.gperf"
-  {"NewRadialFill",FH_NEWRADIALFILL},
+    {"NewRadialFill",FH_NEWRADIALFILL},
 #line 47 "tokens.gperf"
-  {"FWBevelFilter",FH_FWBEVELFILTER},
+    {"FWBevelFilter",FH_FWBEVELFILTER},
 #line 133 "tokens.gperf"
-  {"Xform",FH_XFORM},
+    {"Xform",FH_XFORM},
 #line 84 "tokens.gperf"
-  {"NewBlend",FH_NEWBLEND},
+    {"NewBlend",FH_NEWBLEND},
 #line 11 "tokens.gperf"
-  {"AGDFont",FH_AGDFONT},
+    {"AGDFont",FH_AGDFONT},
 #line 56 "tokens.gperf"
-  {"GradientMaskFilter",FH_GRADIENTMASKFILTER},
+    {"GradientMaskFilter",FH_GRADIENTMASKFILTER},
 #line 107 "tokens.gperf"
-  {"Rectangle",FH_RECTANGLE},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0},
+    {"Rectangle",FH_RECTANGLE},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 21 "tokens.gperf"
-  {"BrushList",FH_BRUSHLIST},
-  {(char *)0, 0}, {(char *)0, 0},
+    {"BrushList",FH_BRUSHLIST},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 106 "tokens.gperf"
-  {"RaggedFilter",FH_RAGGEDFILTER},
+    {"RaggedFilter",FH_RAGGEDFILTER},
 #line 57 "tokens.gperf"
-  {"GraphicStyle",FH_GRAPHICSTYLE},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
+    {"GraphicStyle",FH_GRAPHICSTYLE},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
 #line 117 "tokens.gperf"
-  {"TFOnPath",FH_TFONPATH},
-  {(char *)0, 0}, {(char *)0, 0},
+    {"TFOnPath",FH_TFONPATH},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 13 "tokens.gperf"
-  {"ArrowPath",FH_ARROWPATH},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0},
+    {"ArrowPath",FH_ARROWPATH},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0},
 #line 114 "tokens.gperf"
-  {"SymbolInstance",FH_SYMBOLINSTANCE},
-  {(char *)0, 0},
+    {"SymbolInstance",FH_SYMBOLINSTANCE},
+    {(char*)0, 0},
 #line 132 "tokens.gperf"
-  {"VMpObj",FH_VMPOBJ},
+    {"VMpObj",FH_VMPOBJ},
 #line 41 "tokens.gperf"
-  {"ElemPropLst",FH_ELEMPROPLST},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
+    {"ElemPropLst",FH_ELEMPROPLST},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
 #line 112 "tokens.gperf"
-  {"SwfImport",FH_SWFIMPORT},
-  {(char *)0, 0},
+    {"SwfImport",FH_SWFIMPORT},
+    {(char*)0, 0},
 #line 12 "tokens.gperf"
-  {"AGDSelection",FH_AGDSELECTION},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
-  {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0}, {(char *)0, 0},
+    {"AGDSelection",FH_AGDSELECTION},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
+    {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0}, {(char*)0, 0},
 #line 18 "tokens.gperf"
-  {"BlendObject",FH_BLENDOBJECT}
-};
+    {"BlendObject",FH_BLENDOBJECT}
+  };
 
 const struct fhtoken *
-Perfect_Hash::in_word_set(const char *str, size_t len)
+Perfect_Hash::in_word_set (const char *str, size_t len)
 {
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
-  {
-    unsigned int key = hash(str, len);
-
-    if (key <= MAX_HASH_VALUE)
     {
-      const char *s = wordlist[key].name;
+      unsigned int key = hash (str, len);
+
+      if (key <= MAX_HASH_VALUE)
+        {
+          const char *s = wordlist[key].name;
 
-      if (s && *str == *s && !strncmp(str + 1, s + 1, len - 1) && s[len] == '\0')
-        return &wordlist[key];
+          if (s && *str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
+            return &wordlist[key];
+        }
     }
-  }
   return 0;
 }
 #line 134 "tokens.gperf"
-- 
2.27.0

