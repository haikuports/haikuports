SUMMARY="Portable Standard MIDI File library"
DESCRIPTION="Portsmf is \"Port Standard MIDI File\", a cross-platform, \
C++ library for reading and writing Standard MIDI Files."
HOMEPAGE="https://codeberg.org/tenacityteam/portsmf"
COPYRIGHT="2022 Tenacity Team"
LICENSE="MIT"
REVISION="3"
SOURCE_URI="https://codeberg.org/tenacityteam/portsmf/archive/$portVersion.tar.gz"
CHECKSUM_SHA256="fe7aee61453e398aa360608fe34bc26a6af612bce987cdacbc0fc40b18e01d58"
SOURCE_DIR="portsmf"
PATCHES="portsmf-$portVersion.patchset"

libVersion="1.0.236"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	portsmf$secondaryArchSuffix = $portVersion
	lib:libportSMF$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	portsmf${secondaryArchSuffix}_devel = $portVersion
	devel:libportSMF$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	portsmf$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"

BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:ninja
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	cmake -S . -B build -G Ninja \
		$cmakeDirArgs \
		-DCMAKE_BUILD_TYPE=Release
	cmake --build build $jobArgs
}

INSTALL()
{
	cmake --install build

	prepareInstalledDevelLib libportSMF
	fixPkgconfig
	
	packageEntries devel \
		$developDir \
		$libDir/cmake
}
