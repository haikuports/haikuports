SUMMARY="The free lossless audio codec"
DESCRIPTION="FLAC stands for Free Lossless Audio Codec, an audio format \
similar to MP3, but lossless, meaning that audio is compressed in FLAC \
without any loss in quality. This is similar to how Zip works, except with \
FLAC you will get much better compression because it is designed specifically \
for audio, and you can play back compressed FLAC files in your favorite player \
(or your car or home stereo) just like you would an MP3 file."
HOMEPAGE="http://flac.sourceforge.net/"
COPYRIGHT="2001-2009 Josh Coalson
	2011-2025 Xiph.Org Foundation"
LICENSE="BSD (3-clause)
	GNU FDL v1.3
	GNU GPL v2
	GNU LGPL v2.1"
REVISION="1"
SOURCE_URI="http://downloads.xiph.org/releases/flac/flac-$portVersion.tar.xz"
CHECKSUM_SHA256="f2c1c76592a82ffff8413ba3c4a1299b6c7ab06c734dee03fd88630485c2b920"
PATCHES="flac-$portVersion.patchset"

ARCHITECTURES="all"
SECONDARY_ARCHITECTURES="x86"

libflacVersion="14.0.0"
libflacVersionCompat="$libflacVersion compat >= ${libflacVersion%%.*}"
libflacppVersion="11.0.0"
libflacppVersionCompat="$libflacppVersion compat >= ${libflacppVersion%%.*}"

PROVIDES="
	flac$secondaryArchSuffix = $portVersion compat >= 1
	lib:libFLAC$secondaryArchSuffix = $libflacVersionCompat
	lib:libFLAC++$secondaryArchSuffix = $libflacppVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libogg$secondaryArchSuffix
	lib:libstdc++$secondaryArchSuffix
	"

PROVIDES_devel="
	flac${secondaryArchSuffix}_devel = $portVersion compat >= 1
	devel:libFLAC$secondaryArchSuffix = $libflacVersionCompat
	devel:libFLAC++$secondaryArchSuffix = $libflacppVersionCompat
	"
REQUIRES_devel="
	flac$secondaryArchSuffix == $portVersion base
	devel:libogg$secondaryArchSuffix
	"

if [ -z "$secondaryArchSuffix" ]; then
	PROVIDES_tools="
		flac${secondaryArchSuffix}_tools = $portVersion compat >= 1
		cmd:flac$secondaryArchSuffix
		cmd:metaflac$secondaryArchSuffix
		"
	REQUIRES_tools="
		$REQUIRES
		flac$secondaryArchSuffix == $portVersion base
		"
fi

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libogg$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:ninja
	cmd:pkg_config$secondaryArchSuffix
	"
TEST_REQUIRES="
	cmd:awk
	cmd:cmp
	"

BUILD()
{
	if [ "$effectiveTargetArchitecture" = x86_gcc2 ]; then
		mkdir -p build
		cp /boot/system/develop/headers/c++/2.95.3/iostream.h build/
		sed -i 's/_G_HAVE_BOOL/0/g' build/iostream.h
		export CPPFLAGS="-include iostream.h"
	fi
	cmake -B build -S . -GNinja -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DBUILD_SHARED_LIBS=ON \
		-DWITH_STACK_PROTECTOR=OFF \
		-DBUILD_EXAMPLES=OFF \
		-DBUILD_TESTING=OFF

	ninja -C build $jobArgs
}

INSTALL()
{
	ninja -C build install

	install -Dm 644 src/*/*.m4 -t $dataDir/aclocal

	if [ -n "$secondaryArchSuffix" ]; then
		rm -rf $binDir $manDir
	else
		packageEntries tools \
			$binDir \
			$manDir
	fi

	prepareInstalledDevelLibs libFLAC \
		libFLAC++
	fixPkgconfig

	# devel package
	packageEntries devel \
		$dataDir/aclocal \
		$documentationDir \
		$developDir \
		$libDir/cmake
}

TEST()
{
	# 80% tests passed, 2 tests failed out of 10 (produces error for running as root)
	FLAC__TEST_LEVEL=0 ctest --test-dir build --output-on-failure
}
