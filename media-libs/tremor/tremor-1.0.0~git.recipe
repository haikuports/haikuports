SUMMARY="A fixed-point version of the Ogg Vorbis decoder (also known as libvorbisidec)"
DESCRIPTION="The Tremor Vorbis I stream and file decoder provides an \
embeddable, integer-only library [libvorbisidec] intended for decoding all \
current and future Vorbis I compliant streams. The Tremor libvorbisidec \
library exposes an API intended to be as similar as possible to the familiar \
vorbisfile library included with the open source Vorbis reference \
libraries distributed for free by Xiph.org."
HOMEPAGE="https://wiki.xiph.org/Tremor/"
COPYRIGHT="1994-2018 Xiph.Org Foundation"
LICENSE="BSD (3-clause)"
REVISION="1"
srcGitRev="4b14e2579e91e22cd5dcc63553496ef6e7c5c222"
SOURCE_URI="https://github.com/jhot/libtremor/archive/$srcGitRev.tar.gz"
CHECKSUM_SHA256="f122b4d9f00412929b407c00f19d1b713604d57fb9ba72a98f4a68e77639abd1"
SOURCE_FILENAME="tremor-$portVersion-$srcGitRev.tar.gz"
SOURCE_DIR="libtremor-$srcGitRev"
PATCHES="tremor-$portVersion.patchset"

ARCHITECTURES="x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

libVersion="1.0.3"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	tremor$secondaryArchSuffix = $portVersion
	lib:libvorbisidec$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libogg$secondaryArchSuffix
	"

PROVIDES_devel="
	tremor${secondaryArchSuffix}_devel = $portVersion
	devel:libvorbisidec$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	tremor$secondaryArchSuffix == $portVersion base
	devel:libogg$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libogg$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoreconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	autoreconf -vfi
	runConfigure ./configure
	make $jobArgs
}

INSTALL()
{
	make install

	rm -f "$libDir"/libvorbisidec*.la

	prepareInstalledDevelLib libvorbisidec
	fixPkgconfig

	# devel package
	packageEntries devel \
		"$developDir"
}

TEST()
{
	make check
}
