SUMMARY="Library to convert wmf files"
DESCRIPTION="A library for reading vector images in Microsoft's Windows Metafile Format (WMF)"
HOMEPAGE="http://wvware.sourceforge.net/libwmf.html
	https://github.com/caolanm/libwmf"
COPYRIGHT="2018-2021 CaolÃ¡n McNamara
	2000-2001 Martin Vermeer
	2001 Francis James Franklin"
LICENSE="GNU GPL v2"
REVISION="2"
srcGitRev="b175ff18b5d3a7cec1cf5c14b71c7e9c08076405"
SOURCE_URI="https://github.com/caolanm/libwmf/archive/$srcGitRev.tar.gz"
CHECKSUM_SHA256="4d734eadad4c85aa92880f5295acb1431a6864fa7a51c48d312988172cee69f4"
SOURCE_FILENAME="libwmf-$portVersion-$srcGitRev.tar.gz"
SOURCE_DIR="libwmf-$srcGitRev"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

commandBinDir=$binDir
commandSuffix=$secondaryArchSuffix
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libWMFVersion="7.1.4"
libWMFVersionCompat="$libWMFVersion compat >= ${libWMFVersion%%.*}"
libWMFLITEVersion="7.0.5"
libWMFLITEVersionCompat="$libWMFLITEVersion compat >= ${libWMFLITEVersion%%.*}"

PROVIDES="
	libwmf$secondaryArchSuffix = $portVersion
	lib:libwmf_0.2$secondaryArchSuffix = $libWMFVersionCompat
	lib:libwmflite_0.2$secondaryArchSuffix = $libWMFLITEVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libgdk_pixbuf_2.0$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	libwmf${secondaryArchSuffix}_devel = $portVersion
	cmd:libwmf_config$commandSuffix
	cmd:libwmf_fontmap$commandSuffix
	devel:libwmf$secondaryArchSuffix
	devel:libwmf_0.2$secondaryArchSuffix = $libWMFVersionCompat
	devel:libwmflite$secondaryArchSuffix
	devel:libwmflite_0.2$secondaryArchSuffix = $libWMFLITEVersionCompat
	"
REQUIRES_devel="
	libwmf$secondaryArchSuffix == $portVersion base
	devel:libbrotlidec$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgraphite2$secondaryArchSuffix
	devel:libharfbuzz$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

PROVIDES_tools="
	libwmf${secondaryArchSuffix}_tools = $portVersion
	cmd:wmf2eps$commandSuffix
	cmd:wmf2fig$commandSuffix
	cmd:wmf2gd$secondaryArcommandSuffixchSuffix
	cmd:wmf2svg$commandSuffix
	"
REQUIRES_tools="
	libwmf$secondaryArchSuffix == $portVersion base
	haiku$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libexpat$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgdk_pixbuf_2.0$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoreconf
	cmd:gcc$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage libwmf$secondaryArchSuffix \
	$libDir/libwmf-0.2.so.$libWMFVersion \
	$libDir/libwmflite-0.2.so.$libWMFLITEVersion \
	"$(getPackagePrefix tools)"/bin/wmf2eps \
	"$(getPackagePrefix tools)"/bin/wmf2fig \
	"$(getPackagePrefix tools)"/bin/wmf2gd \
	"$(getPackagePrefix tools)"/bin/wmf2svg

BUILD()
{
#	TODO, check on wether these fonts are needed or not,
#	URW fonts installs *.otf fonts in $fontsDir/otfonts
#	the ones here are *.t1 and *.afm which are simular to
#	the ones in $fontsDir/psfonts/*.afm
#	None of them provide a "fontmap"

	autoreconf -fi
	runConfigure --omit-dirs binDir ./configure \
		--bindir=$commandBinDir \
		--with-docdir=$docDir \
		--with-fontdir=$dataDir/libwmf/fonts \
		--with-xtrafontmap=$dataDir/libwmf/fonts/fontmap \
		--disable-static
#		--with-gsfontdir=$fontsDir/otfonts\
#		--with-gsfontmap=$dataDir/ghostscript/9.55.0/lib/Fontmap.GS
	make $jobArgs
}

INSTALL()
{
	make install

	find "$libDir" -name '*.la' -delete

	prepareInstalledDevelLibs \
		libwmf libwmf-0.2 libwmflite libwmflite-0.2
	fixPkgconfig

	packageEntries devel \
		$developDir \
		$commandBinDir/{libwmf-config,libwmf-fontmap}

	packageEntries tools \
		$commandBinDir
}

TEST()
{
	# nothing to do
	make check
}

