From 86d18afa40b854c69652d0cc48246fe4f6644c54 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Wed, 1 Jun 2016 12:35:16 +0200
Subject: Haiku patch


diff --git a/cmake/Modules/FindOpenShotAudio.cmake b/cmake/Modules/FindOpenShotAudio.cmake
index 720b93a..bca4aee 100644
--- a/cmake/Modules/FindOpenShotAudio.cmake
+++ b/cmake/Modules/FindOpenShotAudio.cmake
@@ -11,7 +11,8 @@ message("$ENV{LIBOPENSHOT_AUDIO_DIR}")
 find_path(LIBOPENSHOT_AUDIO_BASE_DIR JuceHeader.h
 			PATHS /usr/include/libopenshot-audio/
 			/usr/local/include/libopenshot-audio/
-			$ENV{LIBOPENSHOT_AUDIO_DIR}/include/libopenshot-audio/ )
+			$ENV{LIBOPENSHOT_AUDIO_DIR}/include/libopenshot-audio/
+			/system/develop/headers/libopenshot-audio/ )
 
 # Get a list of all header file paths
 FILE(GLOB_RECURSE JUCE_HEADER_FILES
diff --git a/cmake/Modules/FindUnitTest++.cmake b/cmake/Modules/FindUnitTest++.cmake
index 545f62a..edcc511 100644
--- a/cmake/Modules/FindUnitTest++.cmake
+++ b/cmake/Modules/FindUnitTest++.cmake
@@ -9,6 +9,7 @@ FIND_PATH(UNITTEST++_INCLUDE_DIR UnitTest++.h
     $ENV{UNITTEST_DIR}/include/unittest++
 	$ENV{UNITTEST_DIR}/src
     $ENV{UNITTEST_DIR}
+    $ENV{UNITTEST_INCLUDE_DIR}
     ~/Library/Frameworks
     /Library/Frameworks
     /usr/local/include
@@ -33,6 +34,7 @@ FIND_LIBRARY(UNITTEST++_LIBRARY
     $ENV{UNITTEST_DIR}/lib
 	$ENV{UNITTEST_DIR}/build
     $ENV{UNITTEST_DIR}
+    $ENV{UNITTEST_LIB_DIR}
     ~/Library/Frameworks
     /Library/Frameworks
     /usr/local/lib
-- 
2.12.2


From 00f64b383a1e86f3656214c8eb2459d095364a7e Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Tue, 18 Apr 2017 22:42:41 +0200
Subject: disable stacktrace printing, as it depends on libunwind.


diff --git a/src/CrashHandler.cpp b/src/CrashHandler.cpp
index e7827d0..4b05a89 100644
--- a/src/CrashHandler.cpp
+++ b/src/CrashHandler.cpp
@@ -198,6 +198,7 @@ void CrashHandler::printStackTrace(FILE *out, unsigned int max_frames)
 	SymCleanup(process);
 
 #else
+#ifndef __HAIKU__
     // Linux and Mac stack unwinding
 	// Storage array for stack trace address data
 	void* addrlist[max_frames+1];
@@ -311,10 +312,11 @@ void CrashHandler::printStackTrace(FILE *out, unsigned int max_frames)
 	// Free array
 	free(symbollist);
 #endif
+#endif
 
 	// Write stacktrace to file (if log path set)
 	ZmqLogger::Instance()->LogToFile(stack_output.str());
 
 	fprintf(out, "---- End of Stack Trace ----\n");
 	ZmqLogger::Instance()->LogToFile("---- End of Stack Trace ----\n");
-}
\ No newline at end of file
+}
-- 
2.12.2

