From fa13abc3706cfa8ea8ef130a026c5e65cfbf4eef Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Fri, 4 Jan 2019 19:45:50 +0100
Subject: Fix DT_DIR handling under Haiku


diff --git a/sys/simsys.cc b/sys/simsys.cc
index 1ba72c4..d63a62e 100644
--- a/sys/simsys.cc
+++ b/sys/simsys.cc
@@ -470,7 +470,12 @@ const char *dr_query_fontpath(int which)
 			// look for subdirectories
 			struct dirent *entry;
 			while( (entry = readdir( dir )) ) {
+#ifdef __HAIKU__
+				struct stat sp;
+				if( S_ISDIR(sp.st_mode )) {
+#else
 				if( entry->d_type == DT_DIR ) {
+#endif
 					if( ((strcmp( entry->d_name, "." )) != 0) && ((strcmp( entry->d_name, ".." )) != 0) ) {
 						j++;
 						if( subdir_offset < j ) {
-- 
2.30.2


From c29b78f02c8b0ae734a08c8d71294f067feed183 Mon Sep 17 00:00:00 2001
From: Ken Mays <kmays2000@gmail.com>
Date: Fri, 4 Jan 2019 19:45:50 +0100
Subject: Fix UINT type handling under Haiku


diff --git a/simtypes.h b/simtypes.h
index 2f687ec..9fa48aa 100644
--- a/simtypes.h
+++ b/simtypes.h
@@ -9,6 +9,7 @@
 
 #include "utils/for.h"
 #include <limits.h>
+#include <OS.h>
 
 #ifndef PATH_MAX
 #ifdef MAX_PATH
@@ -169,19 +170,25 @@ typedef unsigned short      uint16;
 #ifndef __BEOS__
 typedef   signed int        sint32;
 #ifndef NO_UINT32_TYPES
+#ifndef __HAIKU__
 typedef unsigned int        uint32;
 #endif
+#endif
 #else
 // BeOS: int!=long (even though both 32 bit)
 typedef   signed long       sint32;
 #ifndef NO_UINT32_TYPES
+#ifndef __HAIKU__
 typedef unsigned long       uint32;
 #endif
 #endif
+#endif
 typedef   signed long long  sint64;
 #ifndef NO_UINT64_TYPES
+#ifndef __HAIKU__
 typedef unsigned long long  uint64;
 #endif
+#endif
 #ifdef _MSC_VER
 #	define GCC_PACKED
 #	define GCC_ALIGN(a)
-- 
2.30.2

