SUMMARY="A HelloWorld (TM) like program"
DESCRIPTION="A program what prints HelloWorld on the stdout."
HOMEPAGE="https://github.com/gotgithub/helloworld/"
COPYRIGHT="2015 GotGitHub"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://github.com/gotgithub/helloworld/archive/v1.0.tar.gz"
CHECKSUM_SHA256="27a09d0c8b32bddda2b362421ae428302533b3bff8956d353ab8830a9867144e"
SOURCE_DIR="helloworld-1.0"
ADDITIONAL_FILES="hello.rdef.in"

ARCHITECTURES="x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86_gcc2 x86"

PROVIDES="
	helloworld$secondaryArchSuffix = $portVersion
	cmd:hello$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	"

CONFLICTS="
	helloworld$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libintl$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	"

BUILD()
{
	cd src
	echo "Build stage"

	make $jobArgs
}

INSTALL()
{
	echo "Install stage"
	cd src
	mkdir -p $binDir
	cp -a hello $binDir/hello

	echo "Post-Install stage"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	sed \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		$portDir/additional-files/hello.rdef.in > hello.rdef

	addResourcesToBinaries hello.rdef \
		$binDir/hello
}
