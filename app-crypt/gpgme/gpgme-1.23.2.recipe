SUMMARY="GnuPG Made Easy is a library for making GnuPG easier to use"
DESCRIPTION="GnuPG Made Easy (GPGME) is a library designed to make access to GnuPG \
easier for applications. It provides a High-Level Crypto API for \
encryption, decryption, signing, signature verification and key management. \
Currently it uses GnuPG as its backend but the API isn't restricted to \
this engine; in fact we have already developed a backend for CMS (S/MIME)."
HOMEPAGE="http://www.gnupg.org/gpgme.html"
COPYRIGHT="1998-2020 Free Software Foundation, Inc.
	2001-2023 g10 Code GmbH"
LICENSE="GNU GPL v2
	GNU LGPL v2.1"
REVISION="3"
SOURCE_URI="https://www.gnupg.org/ftp/gcrypt/gpgme/gpgme-$portVersion.tar.bz2"
CHECKSUM_SHA256="9499e8b1f33cccb6815527a1bc16049d35a6198a6c5fae0185f2bd561bce5224"
PATCHES="gpgme-$portVersion.patchset"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libgpgmeVersion="11.32.0"
libgpgmeppVersion="6.20.1"
libqgpgmeVersion="15.5.1"
libgpgmeVersionCompat="$libgpgmeVersion compat >= ${libgpgmeVersion%%.*}"
libgpgmeppVersionCompat="$libgpgmeppVersion compat >= ${libgpgmeppVersion%%.*}"
libqgpgmeVersionCompat="$libqgpgmeVersion compat >= ${libqgpgmeVersion%%.*}"

PROVIDES="
	gpgme$secondaryArchSuffix = $portVersion compat >= 1.17
	cmd:gpgme_json$secondaryArchSuffix = $portVersion compat >= 1.17
	cmd:gpgme_tool$secondaryArchSuffix = $portVersion compat >= 1.17
	lib:libgpgme$secondaryArchSuffix = $libgpgmeVersionCompat
	lib:libgpgmepp$secondaryArchSuffix = $libgpgmeppVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libassuan$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgpg_error$secondaryArchSuffix
	"

PROVIDES_devel="
	gpgme${secondaryArchSuffix}_devel = $portVersion compat >= 1.17
	devel:libgpgme$secondaryArchSuffix = $libgpgmeVersionCompat
	devel:libgpgmepp$secondaryArchSuffix = $libgpgmeppVersionCompat
	"
REQUIRES_devel="
	gpgme$secondaryArchSuffix == $portVersion base
	devel:libassuan$secondaryArchSuffix
	"

PROVIDES_qt5="
	gpgme${secondaryArchSuffix}_qt5 = $portVersion compat >= 1.17
	lib:libqgpgme$secondaryArchSuffix = $libqgpgmeVersionCompat
	devel:libqgpgme$secondaryArchSuffix = $libqgpgmeVersionCompat
	"
REQUIRES_qt5="
	$REQUIRES
	gpgme$secondaryArchSuffix == $portVersion base
	lib:libQt5Core$secondaryArchSuffix
	"

PROVIDES_qt6="
	gpgme${secondaryArchSuffix}_qt6 = $portVersion compat >= 1.17
	lib:libqgpgmeqt6$secondaryArchSuffix = $libqgpgmeVersionCompat
	devel:libqgpgmeqt6$secondaryArchSuffix = $libqgpgmeVersionCompat
	"
REQUIRES_qt6="
	$REQUIRES
	gpgme$secondaryArchSuffix == $portVersion base
	lib:libQt6Core$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libassuan$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgpg_error$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:autoreconf
	cmd:gcc$secondaryArchSuffix
	cmd:gpg$secondaryArchSuffix
	cmd:gpgconf$secondaryArchSuffix
	cmd:gpg_error$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:makeinfo
	cmd:msgfmt
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	autoreconf -fi

#	Building qt5 and qt6 bindings in the same source tree is not supported
	cp -r $sourceDir ../qt6

	runConfigure ./configure
	make $jobArgs

	cd ../qt6
	runConfigure ./configure --enable-languages=cpp,qt6
	make
}

INSTALL()
{
	make install

	cd ../qt6
	make install

	local develPackageName="${portName}_devel-$portFullVersion"
	local packageLinksDir=$(dirname $portPackageLinksDir)
	local assuanLinksDir="$packageLinksDir/${develPackageName}/devel~libassuan$secondaryArchSuffix/$relativeDevelopLibDir"

	# remove libtool files
	rm $libDir/lib*.la

	# fix lib path in cmake files
	sed -i "s|$libDir|$developLibDir|" \
		$libDir/cmake/Gpgmepp/GpgmeppConfig.cmake
	sed -i "s|/packages/libassuan.*/lib|$assuanLinksDir|" \
		$libDir/cmake/Gpgmepp/GpgmeppConfig.cmake

	prepareInstalledDevelLibs libgpgme \
		libgpgmepp
	fixPkgconfig

	# QT6
	packageEntries "qt6" \
		$libDir/libqgpgmeqt6* \
		$libDir/cmake/QGpgmeQt6

	# QT5
	packageEntries "qt5" \
		$libDir/libqgpgme* \
		$libDir/cmake/QGpgme

	packageEntries devel \
		$developDir \
		$libDir/cmake
}

TEST()
{
	make check
}
