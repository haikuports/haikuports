SUMMARY="Qt Cryptographic Architecture"
DESCRIPTION="QCA aims to provide a straightforward and cross-platform \
crypto API, using Qt datatypes and conventions. QCA separates the API from \
the implementation, using plugins known as Providers. The advantage of this \
model is to allow applications to avoid linking to or explicitly depending \
on any particular cryptographic library. This allows one to easily change or \
upgrade crypto implementations without even needing to recompile the \
application!"
HOMEPAGE="http://delta.affinix.com/qca/"
COPYRIGHT="2003-2015 Justin Karneges"
LICENSE="GNU LGPL v2.1"
REVISION="1"
SOURCE_URI="http://download.kde.org/stable/qca/$portVersion/qca-$portVersion.tar.xz"
CHECKSUM_SHA256="1c5b722da93d559365719226bb121c726ec3c0dc4c67dea34f1e50e4e0d14a02"
SOURCE_DIR="qca-$portVersion"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	qca_qt6$secondaryArchSuffix = $portVersion
	lib:libqca_qt6$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	ca_root_certificates
	lib:libcrypto$secondaryArchSuffix
	lib:libnspr4$secondaryArchSuffix
	lib:libnss3$secondaryArchSuffix
	lib:libnssutil3$secondaryArchSuffix
	lib:libplc4$secondaryArchSuffix
	lib:libplds4$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	lib:libQt6Core5Compat$secondaryArchSuffix
	lib:libsmime3$secondaryArchSuffix
	lib:libssl$secondaryArchSuffix
	lib:libssl3$secondaryArchSuffix
	"
REPLACES="
	qca2.3_qt6$secondaryArchSuffix
	"

PROVIDES_devel="
	qca_qt6${secondaryArchSuffix}_devel = $portVersion
	devel:libqca_qt6$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	qca_qt6$secondaryArchSuffix == $portVersion base
	"

PROVIDES_tools="
	qca_qt6${secondaryArchSuffix}_tools
	cmd:mozcerts_qt6$secondaryArchSuffix = $portVersion
	cmd:qcatool_qt6$secondaryArchSuffix = $portVersion
	"
REQUIRES_tools="
	qca_qt6$secondaryArchSuffix == $portVersion
	haiku$secondaryArchSuffix
	lib:libQt6Core$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libcrypto$secondaryArchSuffix >= 3
	devel:libsasl2$secondaryArchSuffix
	devel:libnss3$secondaryArchSuffix
	devel:libQt6Core$secondaryArchSuffix
	devel:libQt6Core5Compat$secondaryArchSuffix
	devel:libssl$secondaryArchSuffix >= 3
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:which
	"

BUILD()
{
	export QC_CERTSTORE_PATH=/system/data/ssl/CARootCertificates.pem

	cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$prefix \
		-DBUILD_WITH_QT6=ON \
		-DQCA_PLUGINS_INSTALL_DIR=$addOnsDir/Qt6 \
		-DQCA_BINARY_INSTALL_DIR=$binDir \
		-DQCA_LIBRARY_INSTALL_DIR=$libDir \
		-DQCA_INCLUDE_INSTALL_DIR=$includeDir \
		-DQCA_PRIVATE_INCLUDE_INSTALL_DIR=$includeDir \
		-DQCA_DOC_INSTALL_DIR=$docDir \
		-DQCA_MAN_INSTALL_DIR=$manDir \
		-DCMAKE_SKIP_RPATH=YES \
		-DBUILD_TESTS=1 \
		-DPKGCONFIG_INSTALL_PREFIX=$developLibDir/pkgconfig

	make -Cbuild $jobArgs
}

INSTALL()
{
	make -Cbuild install

	prepareInstalledDevelLib \
		libqca-qt6

	packageEntries tools \
		$binDir \
		$manDir

	packageEntries devel \
		$developDir \
		$libDir/cmake
}


TEST()
{
#	96% tests passed, 1 tests failed out of 25
#	FAIL!  : FileWatchUnitTest::filewatchTest() 'spy.wait(2000)' returned FALSE. ()
#	Loc: [/sources/qca-2.3.9/unittest/filewatchunittest/filewatchunittest.cpp(67)]
	QCA_PLUGIN_PATH="$sourceDir/lib/qca" ctest --test-dir build --output-on-failure
}
